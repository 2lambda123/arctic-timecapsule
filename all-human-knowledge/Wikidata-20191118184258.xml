<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.10/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.10/ http://www.mediawiki.org/xml/export-0.10.xsd" version="0.10" xml:lang="en">
  <siteinfo>
    <sitename>Wikidata</sitename>
    <dbname>wikidatawiki</dbname>
    <base>https://www.wikidata.org/wiki/Wikidata:Main_Page</base>
    <generator>MediaWiki 1.35.0-wmf.5</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2" case="first-letter">Media</namespace>
      <namespace key="-1" case="first-letter">Special</namespace>
      <namespace key="0" case="first-letter" />
      <namespace key="1" case="first-letter">Talk</namespace>
      <namespace key="2" case="first-letter">User</namespace>
      <namespace key="3" case="first-letter">User talk</namespace>
      <namespace key="4" case="first-letter">Wikidata</namespace>
      <namespace key="5" case="first-letter">Wikidata talk</namespace>
      <namespace key="6" case="first-letter">File</namespace>
      <namespace key="7" case="first-letter">File talk</namespace>
      <namespace key="8" case="first-letter">MediaWiki</namespace>
      <namespace key="9" case="first-letter">MediaWiki talk</namespace>
      <namespace key="10" case="first-letter">Template</namespace>
      <namespace key="11" case="first-letter">Template talk</namespace>
      <namespace key="12" case="first-letter">Help</namespace>
      <namespace key="13" case="first-letter">Help talk</namespace>
      <namespace key="14" case="first-letter">Category</namespace>
      <namespace key="15" case="first-letter">Category talk</namespace>
      <namespace key="120" case="first-letter">Property</namespace>
      <namespace key="121" case="first-letter">Property talk</namespace>
      <namespace key="122" case="first-letter">Query</namespace>
      <namespace key="123" case="first-letter">Query talk</namespace>
      <namespace key="146" case="first-letter">Lexeme</namespace>
      <namespace key="147" case="first-letter">Lexeme talk</namespace>
      <namespace key="640" case="first-letter">EntitySchema</namespace>
      <namespace key="641" case="first-letter">EntitySchema talk</namespace>
      <namespace key="828" case="first-letter">Module</namespace>
      <namespace key="829" case="first-letter">Module talk</namespace>
      <namespace key="1198" case="first-letter">Translations</namespace>
      <namespace key="1199" case="first-letter">Translations talk</namespace>
      <namespace key="2300" case="first-letter">Gadget</namespace>
      <namespace key="2301" case="first-letter">Gadget talk</namespace>
      <namespace key="2302" case="case-sensitive">Gadget definition</namespace>
      <namespace key="2303" case="case-sensitive">Gadget definition talk</namespace>
      <namespace key="2600" case="first-letter">Topic</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>User:Emijrp/All Human Knowledge</title>
    <ns>2</ns>
    <id>33300930</id>
    <revision>
      <id>848225399</id>
      <parentid>746676148</parentid>
      <timestamp>2019-02-01T11:28:24Z</timestamp>
      <contributor>
        <username>CommonsDelinker</username>
        <id>1609756</id>
      </contributor>
      <comment>Removing [[:c:File:Bundesarchiv_Bild_183-W0506-316,_Russland,_Kampf_um_Stalingrad,_Siegesflagge.jpg|Bundesarchiv_Bild_183-W0506-316,_Russland,_Kampf_um_Stalingrad,_Siegesflagge.jpg]], it has been deleted from Commons by [[:c:User:Krd|Krd]] because: copyvi</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="301326">{{userpage}}&lt;!--{{User:Emijrp/All human knowledge/begin}}
{{shortcut|WP:AHK}}--&gt;
&lt;gallery mode="packed-hover" heights="120px"&gt;
File:Ancientlibraryalex.jpg|The Great {{Q|Q435}} in {{Q|Q79}}
File:Naturalishistoria.jpg|''[[Q442|Natural History]]'' by {{Q|Q82778}}
File:Isidoro di siviglia, etimologie, fine VIII secolo MSII 4856 Bruxelles, Bibliotheque Royale Albert I, 20x31,50, pagina in scrittura onciale carolina.jpg|''{{Q|Q665934}}'' by {{Q|Q166876}}
File:BL Royal Vincent of Beauvais.jpg|''{{Q|Q1930407}}'' by {{Q|Q455162}}
File:Denis Diderot 111.PNG|{{Q|Q448}} contributor to ''{{Q|Q447}}''
File:EncycBrit1913.jpg|Advertisement for the {{Q|Q867541}}
File:Internet Archive Protected Petabox.jpeg|{{Q|Q461}} {{Q|Q7171593}}, designed to store one {{Q|Q79744}} (a million gigabytes) of information&lt;ref&gt;{{cite web|url=http://blog.archive.org/2012/10/26/10000000000000000-bytes-archived/|title=10,000,000,000,000,000 bytes archived!|date=October 26, 2012|work=Collections Team blog|publisher=Internet Archive|accessdate=2012-10-27|quote=On Thursday, 25 October, hundreds of Internet Archive supporters, volunteers, and staff celebrated addition of the 10,000,000,000,000,000th {{Q|Q8799}} to the Archive’s massive collections.|archiveurl=http://www.webcitation.org/6GkhcImyk|archivedate=2013-05-20|deadurl=no}}&lt;/ref&gt;
&lt;/gallery&gt;
[[File:Noahs Ark.jpg|thumb|right|Preserving ''all human knowledge'' for posterity. '''It is all-important'''.]]
[[File:Sdtpa wmf-8.jpg|thumb|right|[[meta:Wikimedia servers|Wikimedia servers]], holding {{Q|Q79741}} of text and images.&lt;ref&gt;{{cite web|url=http://meta.wikimedia.org/wiki/Mirroring_Wikimedia_project_XML_dumps|title=Mirroring Wikimedia project XML dumps|date=2013-05-20|work=|publisher=Meta-Wiki|accessdate=2013-05-20|quote=All dumps currently hosted: about 27TB and growing, as of Jan 2012.|archiveurl=http://meta.wikimedia.org/w/index.php?title=Mirroring_Wikimedia_project_XML_dumps&amp;oldid=5275446|archivedate=2013-05-20|deadurl=no}}&lt;/ref&gt;]]
&lt;!--[[File:Brno - Masaryk University Campus VI.jpg|thumb|right|{{Q|Q763586}}, Czech Republic, is mirroring&lt;ref&gt;{{cite web |url=http://ftp.fi.muni.cz/pub/wikimedia/ |title= FTP server Fakulty informatiky  |date=2013-05-20 |work= |publisher=Fakulta informatiky Masarykovy univerzity |accessdate=2013-05-20 |quote= |archiveurl=http://wayback.archive.org/web/20140216231950/http://ftp.fi.muni.cz/pub/wikimedia |archivedate=16 February 2014 |deadurl=no}}&lt;/ref&gt; [[meta:Data dumps|Wikimedia dumps]].]]--&gt;
[[File:5.25"-Diskette.jpg|thumb|right|This page, a catalogue of catalogues of all human knowledge, is only {{PAGESIZE:User:Emijrp/All Human Knowledge}} bytes in size. It can be stored on a 5¼-inch {{Q|Q5293}}.]]
[[File:Wikimedia projects edits counter 2010-04-16.png|thumb|right|The 1 billionth edit for all Wikimedia projects took place on April 16, 2010. (&lt;span class="plainlinks"&gt;[https://tools.wmflabs.org/wmcounter/ See counter]&lt;/span&gt;)]]
[[File:The Sounds of Earth - GPN-2000-001976.jpg|thumb|right|The {{Q|Q156315}} are {{Q|Q178588}} ([https://www.youtube.com/watch?v=qTpCD2Xvh_s&amp;list=PL960EB8506C0938C7 listen in YouTube]) which were included aboard both [[Q155311|Voyager spacecraft]] launched in 1977. They contain sounds and images selected to portray the diversity of life and culture on Earth, and are intended for any intelligent {{Q|Q181508}} form, or for future humans, who may find them.]]
[[File:Milky Way IR Spitzer.jpg|thumb|right|Imagine a {{Q|Q1}} in which [[Q4436084|every planet]] shares in [[Q468|the sum of all knowledge]].]]
[[File:200908261632-Special event-Knowledge as a social good and the Library of Babel.ogg|thumb|right|&lt;span class="plainlinks"&gt;''[https://wikimania2009.wikimedia.org/wiki/El_conocimiento_como_bien_social_y_la_Biblioteca_de_Babel Knowledge as a social good and the Library of Babel]'' in Wikimanía 2009. ([https://www.youtube.com/watch?v=anSA7tqrwnM Watch in YouTube])&lt;/span&gt;]]

The idea of compiling '''all human knowledge''' in a single work, although [[:en:User:Emijrp/Wikipedia Archive|not in a single place]],&lt;ref&gt;{{cite web|title=Editing will temporarily pause for a failover test|url=https://blog.wikimedia.org/2017/04/18/codfw-temporary-editing-pause/|publisher=Wikimedia Blog|date=2017-04-18|accessdate=2017-04-18}}&lt;/ref&gt; is highly seductive. In this project, we attempt to study how many articles are needed to cover the sum of all human knowledge. &lt;!-- wpenwdstats --&gt;As of September 2018, {{Q|Q328}} has {{formatnum:5716687}} articles&lt;ref&gt;{{cite web | url=https://en.wikipedia.org/wiki/Special:Statistics | title=Special:Statistics | publisher=English Wikipedia | date=2018-09-15 | accessdate=2018-09-15 | quote=Content pages: {{formatnum:5716687}}}}&lt;/ref&gt; and {{Q|Q2013}} includes {{formatnum:50228137}} items.&lt;ref&gt;{{cite web|url=https://www.wikidata.org/wiki/Special:Statistics | title=Special:Statistics | publisher=Wikidata | date=2018-09-15 | accessdate=2018-09-15 | quote=Content pages: {{formatnum:50228137}}}}&lt;/ref&gt;&lt;!-- /wpenwdstats --&gt; This page still in expansion estimates that the '''total notable articles''' figure is over '''[[#Summary|&lt;!-- ahk --&gt;{{formatnum:107081292}}&lt;!-- /ahk --&gt;]]'''. At current creation rate, 8,000 new items per day,&lt;ref&gt;{{cite web|title=Other Projects Statistics Wikidata|url=https://stats.wikimedia.org/wikispecial/EN/TablesWikipediaWIKIDATA.htm}}&lt;/ref&gt; '''Wikidata singularity''' will occur in {{Q|Q651007}}, in the same date range of {{Q|Q237525}}.&lt;ref&gt;Despite [[#New knowledge|new knowledge]] is discovered or created every year and the total estimate increases, technology improvements, broad {{Q|Q15542961}} and {{Q|Q11660}} is expected to increase the item creation rate too.&lt;/ref&gt; It will be the first time in history that all human knowledge is stored as {{Q|Q6723621}} and ready to be consumed, understood and used by computers or any device.

:"This is a work that cannot be completed except by a society of men of letters and skilled workmen, each working separately on his own part, but all bound together solely by their zeal for the best interests of the human race and a feeling of mutual good will." –{{Q|Q448}}, ''{{Q|Q447}}'' (1751–1766)

Many individuals devoted their lifes to different efforts of knowledge compilation and preservation. Some inspiring cases are {{Q|Q200890}}, a {{Q|Q936969}} that took 150,000 photographs during her lifetime primarily of people and architecture;&lt;ref&gt;{{cite web|title=Vivian Maier|url=http://www.vivianmaier.com}}&lt;/ref&gt; {{Q|Q31818556}}, who archived a copy of every sold album growing a 3 million vinyl collection;&lt;ref&gt;{{cite web|title=The Archive|url=https://vimeo.com/1546186|date=2009}}&lt;/ref&gt; {{Q|Q5358365}}, a computer scientist that preserved over 2 million {{Q|Q193162}} messages onto magnetic tapes&lt;ref&gt;{{cite web|title=Usenet Archive of UTZOO Tapes|url=https://archive.org/details/utzoo-wiseman-usenet-archive|date=2001-12-11}}&lt;/ref&gt; or {{Q|Q17612042}}, who recorded hundreds of thousands of hours of television news footage spanning 35 years.&lt;ref&gt;{{cite web|title=A Dream to Preserve TV News, on the Road to Realization... with Your Help|url=https://blog.archive.org/2013/11/22/a-dream-to-preserve-tv-news-on-the-road-to-realization-with-your-help/|date=2013-11-22}}&lt;/ref&gt;

:"Like all persons of the Library, I have traveled in my youth; I have wandered in search of a book, perhaps the [[#Summary|catalogue of catalogues]]..." –{{Q|Q909}}, ''{{Q|Q473}}'' (1941)

Before Wikipedia, there were many attemps to compile all human knowledge in a single work. Some examples sorted by date include:
{{div col|2}}
* {{Q|Q435}} (3rd century BC) in {{Q|Q79}}
* ''{{Q|Q442}}'' (AD 77–79) by {{Q|Q82778}}
* ''{{Q|Q665934}}'' (7th century) by {{Q|Q166876}}
* ''De universo'' (9th century) by {{Q|Q160441}}
* ''{{Q|Q1930407}}'' (13th century) by {{Q|Q455162}}
* ''{{Q|Q696077}}'' (1403–1408) by {{Q|Q9903}}
* ''{{Q|Q445}}'' (1545–1549) by {{Q|Q60116}}
* The &lt;span class="plainlinks"&gt;[https://en.wikipedia.org/w/index.php?title=Gottfried_Leibniz&amp;oldid=444357698#Librarian abstracting and indexing]&lt;/span&gt; project (17th century) by {{Q|Q9047}}
* ''{{Q|Q447}}'' (1751–1772) by {{Q|Q448}} and {{Q|Q153232}}
* &lt;!--''[[The Complete Compendium of Universal Knowledge]]'' (1895) by [[William Ralston Balch]], --&gt;
* {{Q|Q451}} (1910) by {{Q|Q1868}} and {{Q|Q190894}}
* ''{{Q|Q867541}}''
* And more recently {{Q|Q460}} (1993) by {{Q|Q92901}}, {{Q|Q461}} (1996) by {{Q|Q92945}} and {{Q|Q2013}} (2012)
{{div col end}}

Also, hypothetical cases exist: ''{{Q|Q468}}'' (1980) by {{Q|Q410}} in ''{{Q|Q1194705}}'', {{Q|Q31842963}} (1936–1938) by {{Q|Q42511}} and {{Q|Q471}} (1945) by {{Q|Q299595}}. Finally, there are imaginary examples too: "The Universal Library" (1901) by {{Q|Q61453}}, "The Total Library" essay and ''{{Q|Q473}}'' (1941) by {{Q|Q909}}, ''{{Q|Q468}}'' (1942) in {{Q|Q1564644}} by {{Q|Q34981}} and the {{Q|Q416171}}.

Furthermore, there are thousands of {{Q|Q166118}}, {{Q|Q7075}} and {{Q|Q33506}} all over the world preserving human knowledge in several formats: {{Q|Q571}}, {{Q|Q87167}}, {{Q|Q737498}}, {{Q|Q11032}}, {{Q|Q41298}}, sound and music {{Q|Q13557414}}, {{Q|Q34508}}, play-scripts, {{Q|Q253623}}, {{Q|Q8513}}, {{Q|Q4006}}, {{Q|Q37930}}, {{Q|Q11060274}}, {{Q|Q93184}} and more. Some of the [[Q2035852|largest ones]] are: {{Q|Q23308}} (170 million items&lt;ref name="bl_ff"&gt;{{cite web | url=http://www.bl.uk/learning/cresearch/skills/using1/usingthebritishlibrary.html | title=Using the British Library | accessdate=2015-02-24 | quote=The British Library is the UK’s national library and one of the world’s leading research libraries. Our collection of around 170 million items includes some of the most iconic treasures from a variety of cultures and includes books, manuscripts, maps, newspapers, patents and sound recordings. | archiveurl=https://web.archive.org/web/20141018015328/http://www.bl.uk/learning/cresearch/skills/using1/usingthebritishlibrary.html | archivedate=2014-10-18 | deadurl=no}}&lt;/ref&gt;), {{Q|Q131454}} (155 million items&lt;ref&gt;[http://www.loc.gov/about/generalinfo.html#2012_at_a_glance 2012 At A Glance]&lt;/ref&gt;), {{Q|Q1048694}} (43 million items&lt;ref name=rsl&gt;{{cite web |url=http://www.rsl.ru/en |title=Russian State Library |last1= |first1= |last2= |first2= |date= |work=Official library website |publisher= |accessdate=20 November 2010}}&lt;/ref&gt;), {{Q|Q477675}} (35 million items&lt;ref name="ndl"&gt;{{cite web|date=2008|url=http://www.ndl.go.jp/en/publication/annual/2008/2008trends.pdf|title=Annual Report of the National Diet Library. Trends of the past year|accessdate=2010-07-15 |archiveurl=http://www.webcitation.org/667v7EYXv|archivedate=2012-03-13}}&lt;/ref&gt;), {{Q|Q732353}} (31 million items&lt;ref&gt;{{cite web|date=2010|url=http://www.nlc.gov.cn/newen/newVisitUs/nlcrs/|title=National Library of China - Visit Us. Overview of Library Collections|accessdate=2012-09-28}}&lt;/ref&gt;) and {{Q|Q193563}} (31 million items&lt;ref&gt;{{cite web | url=http://www.bnf.fr/en/bnf/presentation_space/a.abc_of_the_collections.html#SHDC__Attribute_BlocArticle7BnF | title=BnF - ABC of the collections: N for Numerous | date=2011-06-23 | accessdate=2015-02-24 | archiveurl=http://www.webcitation.org/65oi4Cksu | archivedate=2012-02-29}}&lt;/ref&gt;).

:"There is no practical obstacle whatever now to the creation of an efficient index to all human knowledge, ideas and achievements, to the creation, that is, of a complete planetary memory for all mankind." –{{Q|Q42511}}, ''{{Q|Q470}}'' (1937)

&lt;!--This project is focused in those entities which are [[Wikipedia:Notability|notable]] and deserve an article in Wikipedia. --&gt;For completeness of sister projects, see ''[[#Sister projects|§ Sister projects]]''. For an estimate about lost knowledge, see ''[[#Destroyed knowledge|§ Destroyed knowledge]]'' and [[:en:Wikipedia:There is a deadline]].&lt;!-- There is available a userbox {{tl|User All Human Knowledge}} and a shortcut [[WP:AHK]].--&gt;

'''You are welcome to improve this page, [[Wikipedia:Be bold|be bold]]!'''
&lt;!--
[[File:Size of English Wikipedia in August 2010 (L).svg|thumb|center|650px|{{Q|Q328}} size in August 2010, if printed (15,887 MB of text). Now it is much bigger.]]
--&gt;
__TOC__
{{-}}

== Summary ==

&lt;!-- summary --&gt;{| class="wikitable sortable plainlinks"
! width="100px" | Topic
! width="150px" | Subtopic
! Wikidata
! Estimate
! Shortcuts
|-
| rowspan=8 | [[#Arts|Arts]]
|-
| &lt;li&gt;[[#Architecture|Architecture]]
{{User:Emijrp/AHKsummaryrow|wikidata=1685022|estimate=1951967}}
| [[#Aquaria|Aquaria]]{{·}} [[#Aqueducts|Aqueducts]]{{·}} [[#Bridges|Bridges]]{{·}} [[#Bullrings|Bullrings]]{{·}} [[#Castles|Castles]]{{·}} [[#Cemeteries|Cemeteries]]{{·}} [[#Fountains|Fountains]]{{·}} [[#Gates|Gates]]{{·}} [[#Horse racing venues|Horse racing venues]]{{·}} [[#Hospitals|Hospitals]]{{·}} [[#Hotels|Hotels]]{{·}} [[#Houses|Houses]]{{·}} [[#Lighthouses|Lighthouses]]{{·}} [[#Military bases|Military bases]]{{·}} [[#Movie theaters|Movie theaters]]{{·}} [[#Mines|Mines]]{{·}} [[#Observatories|Observatories]]{{·}} [[#Palaces|Palaces]]{{·}} [[#Places of worship|Places of worship]]{{·}} [[#Power stations|Power stations]]{{·}} [[#Prisons|Prisons]]{{·}} [[#Research stations|Research stations]]{{·}} [[#Reservoirs|Reservoirs]]{{·}} [[#Dams|Dams]]{{·}} [[#Schools|Schools]]{{·}} [[#Shopping malls|Shopping malls]]{{·}} [[#Skyscrapers|Skyscrapers]]{{·}} [[#Stadiums|Stadiums]]{{·}} [[#Towers|Towers]]{{·}} [[#Urbanism|Urbanism]]{{·}} [[#Theatres|Theatres]]{{·}} [[#Tunnels|Tunnels]]{{·}} [[#Universities|Universities]]{{·}} [[#Watermills|Watermills]]{{·}} [[#Weather stations|Weather stations]]{{·}} [[#Windmills|Windmills]]{{·}} [[#Zoos|Zoos]]
|-
| &lt;li&gt;[[#Monuments|Monuments]]
{{User:Emijrp/AHKsummaryrow|wikidata=1242813|estimate=2150101}}
| [[#Monuments|See table]]
|-
| &lt;li&gt;[[#Cinema and television|Cinema and television]]
{{User:Emijrp/AHKsummaryrow|wikidata=522105|estimate=2871570}}
| [[#Cinema|Cinema]]{{·}} [[#Television|Television]]{{·}} [[#Radio|Radio]]{{·}} [[#Films|Films]]{{·}} [[#Documentaries|Documentaries]]{{·}} [[#TV channels|TV channels]]{{·}} [[#TV programs|TV programs]]{{·}} [[#TV stations|TV stations]]{{·}} [[#Episodes|Episodes]]{{·}} [[#TV episodes|TV episodes]]{{·}} [[#Radio stations|Radio stations]]
|-
| &lt;li&gt;[[#Crafts|Crafts]]
{{User:Emijrp/AHKsummaryrow|wikidata=1123|estimate=2123}}
| [[#Gardening|Gardening]]{{·}} [[#Gemology|Gemology]]{{·}} [[#Jewelry|Jewelry]]{{·}} [[#Home improvement|Home improvement]]{{·}} [[#Origami|Origami]]{{·}} [[#Toys|Toys]]
|-
| &lt;li&gt;[[#Literature|Literature]]
{{User:Emijrp/AHKsummaryrow|wikidata=564710|estimate=25835351}}
| [[#Codices|Codices]]{{·}} [[#Incunabulas|Incunabulas]]{{·}} [[#Manuscripts|Manuscripts]]{{·}} [[#Speeches|Speeches]]{{·}} [[#Academic literature|Academic literature]]{{·}} [[#Bibliographies|Bibliographies]]{{·}} [[#Comics|Comics]]{{·}} [[#Dictionaries|Dictionaries]]{{·}} [[#Encyclopedias|Encyclopedias]]{{·}} [[#Fictional entities|Fictional entities]]{{·}} [[#Magazines|Magazines]]{{·}} [[#Newspapers|Newspapers]]{{·}} [[#Novels|Novels]]{{·}} [[#Poetry|Poetry]]{{·}} [[#Theatre|Theatre]]
|-
| &lt;li&gt;[[#Performing arts|Performing arts]]
{{User:Emijrp/AHKsummaryrow|wikidata=341576|estimate=2010930}}
| [[#Dance|Dance]]{{·}} [[#Music|Music]]
|-
| &lt;li&gt;[[#Visual arts|Visual arts]]
{{User:Emijrp/AHKsummaryrow|wikidata=481204|estimate=481204}}
| [[#Calligraphy|Calligraphy]]{{·}} [[#Drawing|Drawing]]{{·}} [[#Fashion|Fashion]]{{·}} [[#Painting|Painting]]{{·}} [[#Photography|Photography]]{{·}} [[#Printmaking|Printmaking]]{{·}} [[#Sculpture|Sculpture]]{{·}} [[#Textile arts|Textile arts]]
|-
| rowspan=9 | [[#Geography|Geography]]
|-
| &lt;li&gt;[[#Africa|Africa]]
{{User:Emijrp/AHKsummaryrow|wikidata=17747|estimate=85658}}
| [[#Africa|See table]]
|-
| &lt;li&gt;[[#Asia|Asia]]
{{User:Emijrp/AHKsummaryrow|wikidata=823181|estimate=1131396}}
| [[#Asia|See table]]
|-
| &lt;li&gt;[[#Europe|Europe]]
{{User:Emijrp/AHKsummaryrow|wikidata=144308|estimate=231005}}
| [[#Europe|See table]]
|-
| &lt;li&gt;[[#North America|North America]]
{{User:Emijrp/AHKsummaryrow|wikidata=15666|estimate=170902}}
| [[#North America|See table]]
|-
| &lt;li&gt;[[#South America|South America]]
{{User:Emijrp/AHKsummaryrow|wikidata=13004|estimate=16788}}
| [[#South America|See table]]
|-
| &lt;li&gt;[[#Oceania|Oceania]]
{{User:Emijrp/AHKsummaryrow|wikidata=1363|estimate=1639}}
| [[#Oceania|See table]]
|-
| &lt;li&gt;[[#Antarctica|Antarctica]]
{{User:Emijrp/AHKsummaryrow|wikidata=0|estimate=20400}}
| [[#Antarctica|See table]]
|-
| &lt;li&gt;[[#Physical geography|Physical geography]]
{{User:Emijrp/AHKsummaryrow|wikidata=1429527|estimate=3323814}}
| [[#Continents|Continents]]{{·}} [[#Canals|Canals]]{{·}} [[#Caves|Caves]]{{·}} [[#Deserts|Deserts]]{{·}} [[#Forests|Forests]]{{·}} [[#Glaciers|Glaciers]]{{·}} [[#Islands|Islands]]{{·}} [[#Lakes|Lakes]]{{·}} [[#Mountains|Mountains]]{{·}} [[#Rivers|Rivers]]{{·}} [[#Seas|Seas]]
|-
| [[#History|History]]
| &lt;li&gt;[[#History|History]]
{{User:Emijrp/AHKsummaryrow|wikidata=394357|estimate=467589}}
| [[#Disasters|Disasters]]{{·}} [[#Election|Election]]{{·}} [[#Revolutions|Revolutions]]{{·}} [[#Sites|Sites]]
|-
| [[#GLAM|GLAM]]
| &lt;li&gt;[[#GLAM|GLAM]]
{{User:Emijrp/AHKsummaryrow|wikidata=61613|estimate=130773}}
| [[#Archives|Archives]]{{·}} [[#Libraries|Libraries]]{{·}} [[#Museums|Museums]]
|-
| rowspan=7 | [[#Science|Science]]
|-
| &lt;li&gt;[[#Astronomy|Astronomy]]
{{User:Emijrp/AHKsummaryrow|wikidata=148353|estimate=13891075}}
| [[#Universes|Universes]]{{·}} [[#Voids|Voids]]{{·}} [[#Superclusters|Superclusters]]{{·}} [[#Galaxy clusters|Galaxy clusters]]{{·}} [[#Galaxies|Galaxies]]{{·}} [[#Star clusters|Star clusters]]{{·}} [[#Quasars|Quasars]]{{·}} [[#Stars|Stars]]{{·}} [[#Multiplanetary systems|Multiplanetary systems]]{{·}} [[#Exoplanets|Exoplanets]]{{·}} [[#Dwarf planets|Dwarf planets]]{{·}} [[#Free-floating planets|Free-floating planets]]{{·}} [[#Comets|Comets]]{{·}} [[#Asteroids|Asteroids]]{{·}} [[#Planet surface features|Planet surface features]]{{·}} [[#Space exploration|Space exploration]]
|-
| &lt;li&gt;[[#Biology|Biology]]
{{User:Emijrp/AHKsummaryrow|wikidata=3061427|estimate=10231860}}
| [[#Bacteria|Bacteria]]{{·}} [[#Human|Human]]{{·}} [[#Genes|Genes]]{{·}} [[#Individual animals|Individual animals]]{{·}} [[#Proteins|Proteins]]{{·}} [[#Species|Species]]{{·}} [[#Viruses|Viruses]]
|-
| &lt;li&gt;[[#Chemistry and physics|Chemistry and physics]]
{{User:Emijrp/AHKsummaryrow|wikidata=792141|estimate=6006479}}
| [[#Chemistry|Chemistry]]{{·}} [[#Physics|Physics]]
|-
| &lt;li&gt;[[#Health|Health]]
{{User:Emijrp/AHKsummaryrow|wikidata=20526|estimate=33000}}
| [[#Diseases|Diseases]]{{·}} [[#Disorders|Disorders]]{{·}} [[#Drugs|Drugs]]
|-
| &lt;li&gt;[[#Mathematics|Mathematics]]
{{User:Emijrp/AHKsummaryrow|wikidata=35811|estimate=235783}}
| [[#Areas|Areas]]{{·}} [[#Numbers|Numbers]]{{·}} [[#Prime numbers|Prime numbers]]{{·}} [[#Integer sequences|Integer sequences]]
|-
| &lt;li&gt;[[#Planetary science|Planetary science]]
{{User:Emijrp/AHKsummaryrow|wikidata=5378|estimate=451019}}
| [[#Lithostratigraphy|Lithostratigraphy]]{{·}} [[#Fossils|Fossils]]{{·}} [[#Geologic Time Scale|Geologic Time Scale]]{{·}} [[#Meteorites|Meteorites]]{{·}} [[#Meteorology|Meteorology]]{{·}} [[#Rocks types|Rocks types]]
|-
| [[#Society|Society]]
| &lt;li&gt;[[#Society|Society]]
{{User:Emijrp/AHKsummaryrow|wikidata=5338587|estimate=27795102}}
| [[#Biography|Biography]]{{·}} [[#Business|Business]]{{·}} [[#Culture|Culture]]{{·}} [[#Education|Education]]{{·}} [[#Gastronomy|Gastronomy]]{{·}} [[#Law|Law]]{{·}} [[#Language|Language]]{{·}} [[#Organizations|Organizations]]{{·}} [[#Philosophy|Philosophy]]{{·}} [[#Politics|Politics]]{{·}} [[#Religion|Religion]]{{·}} [[#Mythology|Mythology]]{{·}} [[#Sports|Sports]]
|-
| [[#Technology|Technology]]
| &lt;li&gt;[[#Technology|Technology]]
{{User:Emijrp/AHKsummaryrow|wikidata=857751|estimate=857581}}
| [[#Discoveries|Discoveries]]{{·}} [[#Inventions|Inventions]]{{·}} [[#Hardware|Hardware]]{{·}} [[#Internet|Internet]]{{·}} [[#Software|Software]]{{·}} [[#Transport|Transport]]{{·}} [[#Weapons|Weapons]]
|-
| [[#Special pages|Special pages]]
| &lt;li&gt;[[#Special pages|Special pages]]
{{User:Emijrp/AHKsummaryrow|wikidata=6696183|estimate=6696183}}
| [[#Categories|Categories]]{{·}} [[#Disambiguations|Disambiguations]]{{·}} [[#Lists|Lists]]{{·}} [[#Portals|Portals]]{{·}} [[#Templates|Templates]]
|-
{{User:Emijrp/AHKsummarytotal|wikidata=24695476|estimate=107081292}}
|}&lt;!-- /summary --&gt;
&lt;!--
This table compares coverage between Wikipedia editions using Wikidata as a central repository of "all" human knowledge.

{| class="wikitable sortable" style="font-size: 80%;"
! Site !! [[#People|People]] !! [[#Species|Species]] !! [[#Geography|Geography]] !! [[#Architecture|Architecture]] !! [[#History|History]] !! [[#Chemistry|Chemistry]] !! [[#Film|Film]] !! [[#Urbanism|Urbanism]] !! [[#Astronomy|Astronomy]] !! List !! Disamb !! Total !! Updated
|-
| {{Q|Q2013}} || 2,932,736 || 1,997,207 || 1,949,513 || 579,051 || 426,879 || 28,295 || 200,912 || 342,666 || 129,760 || 216,080 || 872,174 || 15,862,673 || [[d:Wikidata:Statistics/Wikipedia|2015-10-25]]
|-
| [[Q328|enwiki]] || 1,325,136 || 315,294 || 563,681 || 237,432 || 201,216 || 19,682 || 119,346 || 37,541 || 26,683 || 105,702 || 302,981 || 5,045,856 || [[d:Wikidata:Statistics/Wikipedia|2016-01-10]]
|-
| [[Q48183|dewiki]] || 625,741 || 44,833 || 202,233 || 90,874 || 380,177 || 8,517 || 34,306 || 18,901 || 12,805 || 63,316 || 235,680 || 2,010,767 || [[d:Wikidata:Statistics/Wikipedia|2016-10-10]]
|-
| [[Q8447|frwiki]] || 463,655 || 98,892 || 226,895 || 71,812 || 115,066 || 6,254 || 52,946 || 20,598 || 23,515 || 37,536 || 105,996 || 1 734 576 || [[d:Wikidata:Statistics/Wikipedia|2016-02-25]]
|}
--&gt;

== Arts ==

The '''{{Q|Q2018526}}''' are composed of many endeavors (or artforms) united by their employment of the human creative impulse.

:''Main articles: {{Q|Q7112797}}, {{Q|Q1277572}} and {{Q|Q3454290}}''

=== Architecture ===

'''{{Q|Q12271}}'''  (Latin ''[[wikt:architectura#Latin|architectura]]'', from the Greek [[wikt:ἀρχιτέκτων|ἀρχιτέκτων]] – arkhitekton, from [[wikt:ἀρχι-|ἀρχι-]] "chief" and [[wikt:τέκτων|τέκτων]] "builder, carpenter, mason") is both the process and product of planning, designing and construction. Architectural works, in the material form of buildings, are often perceived as cultural and political symbols and as works of art. Historical civilizations are often identified with their surviving architectural achievements.

:''Main articles: {{Q|Q7112558}} and {{Q|Q3176199}}''
:''Main categories: {{Q|Q7470404}} and {{Q|Q7470265}}''

&lt;gallery mode="packed-hover"&gt;
File:Aqueduct of Segovia 08.jpg|{{Q|Q244947}}, {{flag|Spain}} {{Q|Q29}}
File:Castle Neuschwanstein.jpg|[[Q4152|Neuschwanstein]], {{flag|Germany}} {{Q|Q183}}
File:Duomo Firenze.jpg|{{Q|Q191739}}, {{flag|Italy}} {{Q|Q38}}
File:Hoshi Ryokan.jpg|{{Q|Q1192164}}, {{flag|Japan}} {{Q|Q17}}
File:A coruna torre de hercules sunset edit.jpg|{{Q|Q245151}}, {{flag|Spain}} {{Q|Q29}}
&lt;/gallery&gt;

{| class="wikitable sortable plainlinks"
! width="100px" | Topic 
! width="200px" | Related pages
! Wikidata
! Estimate
! References 
|-
| {{Q|Q2281788}}{{anchor|Aquaria}}
| &lt;li&gt;{{Q|Q1186081}}
{{User:Emijrp/AHKrow|P31=Q2281788|wikidata=327|estimate=200}}
| According to {{Q|Q185228}} there are 200+ aquaria worldwide.&lt;ref&gt;{{cite web |url=http://vanaqua.org/ask_us/aquariumhistory.html |title=History of the Aquarium |date=2013-05-20 |work= |publisher=Vancouver Aquarium |accessdate=2013-05-20 |quote=When the Vancouver Aquarium opened in 1956, there were five aquariums in North America, of which Vancouver was the fifth. Today, there are approximately 48, only two of which are in Canada. Worldwide, the number of aquariums has grown to over 200. |archiveurl=http://web.archive.org/web/20090123080448/http://vanaqua.org/ask_us/aquariumhistory.html |archivedate=2009-01-23 |deadurl=yes}}&lt;/ref&gt;
|-
| {{Q|Q2293979}}{{anchor|Aqueducts}}
| &lt;li&gt;{{Q|Q6606059}}
{{User:Emijrp/AHKrow|P31=Q474|wikidata=675|estimate=}}
| Total number of aqueducts is unknown.
|-
| {{Q|Q12280}}{{anchor|Bridges}}
| &lt;li&gt;{{Q|Q3083358}}
{{User:Emijrp/AHKrow|P31=Q12280|wikidata=37132|estimate=}}
|  Total number of bridges is unknown. A quick estimate is one bridge per river.&lt;ref&gt;{{cite web |url=http://nationalbridges.com |title=National Bridge Inventory Database Search |date=2013-05-20 |work= |publisher=Alexander Svirsky |accessdate=2013-05-20 |quote= |archiveurl= |archivedate= |deadurl=no}}&lt;/ref&gt;&lt;ref&gt;{{cite web |url=http://www.bridgeforum.org/dir/collapse/all.html|title=Bridge Failure Database |date=2013-05-20 |work= |publisher=BridgeForum |accessdate=2013-05-20 |quote= |archiveurl=http://www.webcitation.org/68DFhSNQg |archivedate=2012-06-06 |deadurl=no}}&lt;/ref&gt;
|-
| {{Q|Q1193438}}{{anchor|Bullrings}}
| &lt;li&gt;{{Q|Q1193438}}
{{User:Emijrp/AHKrow|P31=Q1193438|wikidata=213|estimate=}}
| Total number of bullrings is unknown.
|-
| {{Q|Q23413}}{{anchor|Castles}}
| &lt;li&gt;{{Q|Q1323186}}
{{User:Emijrp/AHKrow|P31=Q23413|wikidata=23453|estimate=}}
| Total number of castles is unknown.
|-
| [[Q39614|Cemeteries]]{{anchor|Cemeteries}}
| &lt;li&gt;{{Q|Q378414}}
{{User:Emijrp/AHKrow|P31=Q39614|wikidata=108621|estimate=}}
| Total number of cemeteries is unknown.
|-
| {{Q|Q483453}}{{anchor|Fountains}}
| &lt;li&gt;[[List of fountains]]
{{User:Emijrp/AHKrow|P31=Q483453|wikidata=4689|estimate=}}
| Total number of fountains is unknown.
|-
| [[Q53060|Gates]]{{anchor|Gates}}
| &lt;li&gt;[[List of gates]]
{{User:Emijrp/AHKrow|P31=Q53060|wikidata=5715|estimate=}}
| Total number of gates is unknown.
|-
| {{Q|Q187916}}{{anchor|Horse racing venues}}
| &lt;li&gt;{{Q|Q17990767}}
{{User:Emijrp/AHKrow|P31=Q11822917|wikidata=443|estimate=}}
| Total number of horse racing venues is unknown.
|-
| {{Q|Q16917}}{{anchor|Hospitals}}
| &lt;li&gt;{{Q|Q902790}}
{{User:Emijrp/AHKrow|P31=Q16917|wikidata=11756|estimate=16500}}
| According to {{Q|Q5197806}} there are 16,500 hospitals worldwide.&lt;ref&gt;{{cite web |url=http://hospitals.webometrics.info |title=Ranking Web of World Hospitals |date=2015 |work= |publisher=Cybermetrics Lab |accessdate=2015-02-24 |quote=The new edition is built from data collected in January 2015 for more than 16 500 Hospitals websites from all over the World.}}&lt;/ref&gt;
|-
| {{Q|Q27686}}{{anchor|Hotels}}
| &lt;li&gt;{{Q|Q6623738}}
{{User:Emijrp/AHKrow|P31=Q27686|wikidata=14825|estimate=180000}}
| According to sources there are 180,000-400,000+ hotels worldwide.&lt;ref&gt;{{cite web |url=http://www.tnooz.com/2012/03/26/news/how-many-hotels-in-the-world-are-there-anyway-booking-com-keeps-adding-them/ |title=How many hotels in the world are there anyway? Booking.com keeps adding them |date=2013-05-22 |work= |publisher=Dennis Schaal |accessdate=2013-05-22 |quote=Booking.com says it offers 202,842 hotels globally. STR Global estimates that there are 187,000 hotels, offering 17.5 million guest rooms, around the globe. Other less-than-scientific guesstimates put the number of hotels around the world at around 400,000, with an additional 100,000 or so if you include B&amp;Bs and hostels etc. In a similar vein, one of the global distribution systems informally uses 500,000 as a guide to the number of hotels in the world, although this number would exclude hostels, guest houses and motels. |archiveurl=http://www.webcitation.org/6GnpKQ41m |archivedate=2013-05-22 |deadurl=no}}&lt;/ref&gt;
|-
| {{Q|Q3947}}{{anchor|Houses}}
| &lt;li&gt;[[List of houses]] ([[:Category:Houses|cat]])
{{User:Emijrp/AHKrow|P31=Q3947|wikidata=317311|estimate=}}
| Total number of notable houses is unknown.
|-
| {{Q|Q39715}}{{anchor|Lighthouses}}
| &lt;li&gt;{{Q|Q1230346}}
{{User:Emijrp/AHKrow|P31=Q39715|wikidata=7894|estimate=16300}}
| According to {{Q|Q23581832}} there are 16,300+ lighthouses worldwide.&lt;ref&gt;{{cite web |url=http://www.unc.edu/~rowlett/lighthouse/ |title=The Lighthouse Directory |date=2013-05-20 |work= |publisher=Russ Rowlett and the University of North Carolina at Chapel Hill |accessdate=2013-05-20 |quote=Welcome to the Lighthouse Directory, providing information and links for more than 16,300 of the world's lighthouses. |archiveurl=http://www.webcitation.org/6GkkfKnkt |archivedate=2013-05-20 |deadurl=no}}&lt;/ref&gt;
|-
| {{Q|Q245016}}{{anchor|Military bases}}
| &lt;li&gt;{{Q|Q3634756}}
{{User:Emijrp/AHKrow|P31=Q245016|wikidata=3603|estimate=}}
| Total number of military bases is unknown.
|-
| {{Q|Q41253}}{{anchor|Movie theaters}}
| &lt;li&gt;{{Q|Q25036879}} ([[:Category:Lists of cinemas|cat]]) 
{{User:Emijrp/AHKrow|P31=Q41253|wikidata=56212|estimate=}}
| Total number of movie theaters is unknown.
|-
| [[Q44497|Mines]]{{anchor|Mines}}
| &lt;li&gt;{{Q|Q6647097}}
{{User:Emijrp/AHKrow|P31=Q820477|wikidata=14548|estimate=}}
| Total number of mines is unknown.
|-
| [[Q62832|Observatories]]{{anchor|Observatories}}
| &lt;li&gt;{{Q|Q2344875}}
{{User:Emijrp/AHKrow|P31=Q62832|wikidata=1553|estimate=}}
| Total number of observatories is unknown.
|-
| {{Q|Q16560}}{{anchor|Palaces}}
| &lt;li&gt;{{Q|Q861564}}
{{User:Emijrp/AHKrow|P31=Q16560|wikidata=12532|estimate=}}
| Total number of palaces is unknown.
|-
| [[Q1370598|Places of worship]]{{anchor|Places of worship}}
| &lt;li&gt;{{Q|Q3634365}}
{{User:Emijrp/AHKrow|P31=Q1370598|wikidata=279437|estimate=}}
| Total number of places of worship is unknown. A quick estimate is one place of worship per settlement.

As of 2011, the Catholic Church had 3,068 churches of cathedral and co-cathedral status around the world.&lt;ref&gt;{{Q|Q1748859}}&lt;/ref&gt; Estimations of churches worldwide range from 250,000&lt;ref&gt;{{cite web|url=http://www.quora.com/Catholicism/How-many-physical-Catholic-churches-are-there-in-the-world|title=Catholicism: How many physical Catholic churches are there in the world?}}&lt;/ref&gt; to 3,700,000,&lt;ref&gt;{{cite web|url=http://wiki.answers.com/Q/How_many_churches_are_there_in_the_world|title=How many churches are there in the world?}}&lt;/ref&gt; with 450,000 only in USA.&lt;ref&gt;{{cite web|url=http://www.reddit.com/r/atheism/comments/1i4k23/fun_fact_there_are_more_churches_450000_in_the/|title=Fun Fact: There are more churches (450,000) in the USA than there are convenience stores (146,341), fast food restaurants (160,000), and hotels/motels (46,295, not counting casino hotels) combined (352,636 total).}}&lt;/ref&gt; There are 2.5 million mosques in the world.&lt;ref&gt;{{cite web|url=http://www.ask.com/question/how-many-mosques-are-there-in-the-world|title=How Many Mosques Are There in the World?|accessdate=2014-08-06}}&lt;/ref&gt;&lt;ref&gt;{{cite web|url=http://wiki.answers.com/Q/How_many_Mosques_are_there_in_the_world|title=How many Mosques are there in the world?|accessdate=2014-08-06}}&lt;/ref&gt;
|-
| {{Q|Q159719}}{{anchor|Power stations}}
| &lt;li&gt;{{Q|Q17098859}} ([[:Category:Lists of power stations|cat]])
{{User:Emijrp/AHKrow|P31=Q159719|wikidata=8618|estimate=}}
| Total number of power stations is unknown.
|-
| {{Q|Q40357}}{{anchor|Prisons}}
| &lt;li&gt;{{Q|Q6634909}}
{{User:Emijrp/AHKrow|P31=Q40357|wikidata=6186|estimate=10000}}
| Total number of prisons is unknown. According to sources, there are 4,575 prisons in the United States and 1,029 in Russia.&lt;ref&gt;{{cite web|url=http://www.salon.com/2012/10/15/us_has_more_prisoners_prisons_than_any_other_country/|title=US has more prisoners, prisons than any other country|accessdate=2014-01-18}}&lt;/ref&gt; A rough estimate is 10,000 prisons worldwide.
|-
| {{Q|Q195339}}{{anchor|Research stations}}
| &lt;li&gt;{{Q|Q15948664}}
{{User:Emijrp/AHKrow|P31=Q195339|wikidata=1119|estimate=}}
| Total number of research stations is unknown. (See {{Q|Q749622}})
|-
| {{Q|Q131681}} and {{Q|Q12323}}{{anchor|Reservoirs|Dams}}
| &lt;li&gt;{{Q|Q936881}}
{{User:Emijrp/AHKrow|P31=Q12323|wikidata=50353|estimate=40000}}
| According to {{Q|Q6052781}}, by 1997 there were 800,000 dams worldwide, 40,000 over {{convert|15|m|abbr=on}} high.&lt;ref&gt;{{cite web | url=http://ehp.niehs.nih.gov/qa/105-10focus/focus.html | title=Is it Worth a Dam? | publisher=Environmental Health Perspectives | date=1997 | accessdate=2013-05-20 | archiveurl=http://web.archive.org/web/20060517113007/http://www.ehponline.org/qa/105-10focus/focus.html | archivedate=2006-05-17 | deadurl=yes | quote=Worldwide, some 40,000 "large" dams (over 15 m high, according to the International Commission on Large Dams) and about 800,000 smaller ones have been constructed.}}&lt;/ref&gt; (See also [[User:Emijrp/Geonames/Reservoirs and dams|GeoNames database]])
|-
| {{Q|Q3914}}{{anchor|Schools}}
| &lt;li&gt;{{Q|Q736514}}
{{User:Emijrp/AHKrow|P31=Q3914|wikidata=193278|estimate=}}
| Total number of schools is unknown.
|-
| {{Q|Q11315}}{{anchor|Shopping malls}}
| &lt;li&gt;{{Q|Q6639361}}
{{User:Emijrp/AHKrow|P31=Q11315|wikidata=5220|estimate=}}
| Total number of shopping malls is unknown.
|-
| {{Q|Q11303}}{{anchor|Skyscrapers}}
| &lt;li&gt;{{Q|Q1779466}}
{{User:Emijrp/AHKrow|P31=Q11303|wikidata=4326|estimate=94000}}
| According to {{Q|Q2293454}} there are 94,000+ skyscrapers worldwide.&lt;ref&gt;{{cite web |url=http://skyscraperpage.com |title=SkyscraperPage.com |date=2013-05-20 |work= |publisher= |accessdate=2013-05-20 |quote=93,962 Structures (2013), 89,160 Structures (2012), 72,609 Structures (2010) |archiveurl=http://www.webcitation.org/6GklNaQWL |archivedate=2013-05-20 |deadurl=no}}&lt;/ref&gt;
|-
| {{Q|Q483110}}{{anchor|Stadiums}}
| &lt;li&gt;{{Q|Q2196333}}
{{User:Emijrp/AHKrow|P31=Q483110|wikidata=9969|estimate=11500}}
| According to [[World Stadiums]] there are 11,500+ stadiums worldwide. 689 in Africa, 1,200 in Asia, 286 in Central America, 4,268 in Europe, 527 in Middle East, 2,869 in North America, 284 in Oceania and 1,417 in South America.&lt;ref name="worldstadiums"&gt;{{cite web |url=http://www.worldstadiums.com/north_america/countries/united_states.shtml |title=Stadiums in the United States |date=2013-05-20 |work= |publisher=World Stadiums |accessdate=2013-05-20 |quote= |archiveurl=http://www.webcitation.org/680QBOITV |archivedate=2012-05-28 |deadurl=no}}&lt;/ref&gt;
|-
| {{Q|Q12518}}{{anchor|Towers}}
| &lt;li&gt;{{Q|Q498259}}
{{User:Emijrp/AHKrow|P31=Q12518|wikidata=20262|estimate=}}
| Total number of towers is unknown.
|-
| rowspan=3 | Urbanism{{anchor|Urbanism}}
| &lt;li&gt;{{Q|Q6636813}}
{{User:Emijrp/AHKrow|P31=Q79007|wikidata=369240|estimate=}}
| rowspan=3 | Total number of streets, squares and parks is unknown.
|-
| &lt;li&gt;[[List of squares]]
{{User:Emijrp/AHKrow|P31=Q174782|wikidata=9810|estimate=}}
|-
| &lt;li&gt;[[List of parks]]
{{User:Emijrp/AHKrow|P31=Q22698|wikidata=60697|estimate=}}
|-
| {{Q|Q11635}}{{anchor|Theatres}}
| &lt;li&gt;{{Q|Q16874658}} ([[:Category:Lists of theatres|cat]]) 
{{User:Emijrp/AHKrow|P31=Q24354|wikidata=15616|estimate=}}
| Total number of theatres is unknown.
|-
| {{Q|Q44377}}{{anchor|Tunnels}}
| &lt;li&gt;{{Q|Q3102766}}
{{User:Emijrp/AHKrow|P31=Q44377|wikidata=4492|estimate=}}
| Total number of tunnels is unknown. According to [[:es:Anexo:Túneles de España]], in Spain there are 400 road tunnels and 1700 railway tunnels.
|-
| [[Q3918|Universities]]{{anchor|Universities}}
| &lt;li&gt;{{Q|Q1846117}}
{{User:Emijrp/AHKrow|P31=Q3918|wikidata=15876|estimate=20000}}
| According to {{Q|Q1929715}} there are 20,000+ universities worldwide.&lt;ref&gt;{{cite web | url=http://www.webometrics.info | title=Ranking Web of World Universities | archiveurl=http://www.webcitation.org/68DbqsI7B | archivedate=2012-06-06 | deadurl=no}}&lt;/ref&gt;
|-
| {{Q|Q185187}}{{anchor|Watermills}}
| &lt;li&gt;{{Q|Q6645093}}
{{User:Emijrp/AHKrow|P31=Q185187|wikidata=1899|estimate=}}
| Total number of watermills is unknown.
|-
| {{Q|Q190107}}{{anchor|Weather stations}}
| &lt;li&gt;[[List of weather stations]] ([[:Category:Meteorological stations|cat]])
{{User:Emijrp/AHKrow|P31=Q190107|wikidata=915|estimate=}}
| Total number of weather stations is unknown.
|-
| {{Q|Q38720}}{{anchor|Windmills}}
| &lt;li&gt;{{Q|Q6645273}}
{{User:Emijrp/AHKrow|P31=Q38720|wikidata=4664|estimate=}}
| Total number of windmills is unknown.
|-
| {{Q|Q43501}}{{anchor|Zoos}}
| &lt;li&gt;{{Q|Q910176}}
{{User:Emijrp/AHKrow|P31=Q43501|wikidata=1543|estimate=1500}}
| According to sources there are 1,500+ zoos worldwide.&lt;ref&gt;{{cite web |url=http://www.greatbluemarble.com/Zoos.htm |title=Direct Links to Forty of the World's Great Zoos |date=2013-05-20 |work= |publisher= |accessdate=2013-05-20 |quote=It is estimated there are currently over 1,500 zoos worldwide. |archiveurl=http://www.webcitation.org/69hDyoxNV |archivedate=2012-08-05 |deadurl=no}}&lt;/ref&gt;
|-
| [[Q3634365|Building types]]
| &lt;li&gt;{{Q|Q3634365}} 
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of building types is unknown.
|-
| [[Q32880|Styles]] 
| &lt;li&gt;{{Q|Q20310888}} 
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of architectural styles is unknown.
|-
| [[Q15243186|Awards]] 
| &lt;li&gt;{{Q|Q15243186}} 
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of architecture awards is unknown.
|-
{{User:Emijrp/AHKrowtotal|wikidata=1685022|estimate=1951967}}
|}

Note: some of these items may overlap

{{for|libraries, museums, archives|#GLAM}}
{{for|transport infrastructure|#Transport}}

==== Monuments ====

A '''{{Q|Q4989906}}''' is a type of structure either explicitly created to commemorate a person or important event or which has become important to a social group as a part of their remembrance of historic times or cultural heritage, or simply as an example of historic architecture. 

:''See also: {{Q|Q2471925}}, {{Q|Q6597074}} and [[Wikipedia:WikiProject Historic sites]]''
:''See also categories: [[:Category:Heritage registers by country|Heritage registers by country]]''

&lt;gallery mode="packed-hover"&gt;
File:Theatre, Sabratha.JPG|{{Q|Q192918}}, {{flag|Libya}} {{Q|Q1016}}
File:SantaCruz-CuevaManos-P2210651b.jpg|{{Q|Q223385}}, {{flag|Argentina}} {{Q|Q414}}
File:Angkor Wat.jpg|{{Q|Q163607}}, {{flag|Cambodia}} {{Q|Q424}}
File:The Castle and Charles Bridge, Prague - 7982.jpg|{{Q|Q1085}}, {{flag|Czech Republic}} {{Q|Q213}}
File:AhuTongariki.jpg|{{Q|Q1763364}}, {{flag|Chile}} {{Q|Q298}}
&lt;/gallery&gt;

{| class="wikitable sortable plainlinks"
! width=120px | Country 
! width=300px | Related pages
! Wikidata
! Estimate
! References 
|-
| {{flag|United Nations}} [[Q1065|Earth]]
| &lt;li&gt;{{Q|Q5448659}}
{{User:Emijrp/AHKrow|P1435=Q9259|wikidata=2357|estimate=1052}}
| As of July 2016, [[Q945996|1052 sites are listed]]: 814 cultural, 203 natural, and 35 mixed properties, in 165 states parties.&lt;ref name="list"&gt;[http://whc.unesco.org/en/list//en/news/1049/en/list World Heritage List], UNESCO World Heritage Sites official sites.&lt;/ref&gt;&lt;ref name="New sites"&gt;[http://whc.unesco.org/en/news/1049 Sites in Germany and Italy bring to 19 the number of sites inscribed on the World Heritage List this year], UNESCO World Heritage Sites official sites.&lt;/ref&gt; According to the [[Q945996|sites ranked by country]], {{Q|Q38}} is home to the greatest number of World Heritage Sites with [[Q2091573|51 sites]], followed by [[Q1149287|China]] (50), [[Q1141447|Spain]] (45), [[Q250784|France]] (42), [[Q836449|Germany]] (41), [[Q1975374|India]] (35) and [[Q2421347|Mexico]] (34). UNESCO references each World Heritage Site with an identification number; however, new inscriptions often include previous sites now listed as part of larger descriptions. Consequently, the identification numbers exceed 1,200, even though there are fewer on the list.
|-
| {{flag|Albania}} {{Q|Q222}} 
| &lt;li&gt;[[Q6595608|Religious Cultural Monuments]] ([[:Category:Cultural Monuments of Albania|cat]]) 
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=200}}
| According to sources there are 200 monuments.&lt;ref&gt;{{cite web|url=http://kshk.gov.al/index.php?fq=brenda&amp;gj=gj2&amp;kid=19|title=Religious buildings with the "Culture Monument" status|publisher=Republic of Albania National Committee for Cult|language=|accessdate=October 28, 2010|archiveurl=https://web.archive.org/web/20131023055927/http://kshk.gov.al/index.php?fq=brenda&amp;gj=gj2&amp;kid=19|archivedate=2013-10-23|deadurl=yes}}&lt;/ref&gt;
|-
| {{flag|Algeria}} {{Q|Q262}} 
| &lt;li&gt;[[Q14806973|List of monuments]] ([[:fr:Liste des sites et monuments classés en Algérie|fr]]) 
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=382}}
| According to WLM database there are 382 monuments.&lt;ref name="erfgoed-stats"&gt;[[commons:Commons:Monuments database/Statistics|Commons:Monuments database/Statistics]]&lt;/ref&gt;
|-
| {{flag|Andorra}} {{Q|Q228}} 
| &lt;li&gt;[[List of monuments of Andorra|List of monuments]] ([[:ca:Llista de monuments d'Andorra|ca]]) 
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=126}}
| According to WLM database there are 126 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| {{flag|Antarctica}} {{Q|Q51}} 
| &lt;li&gt;[[Q11975454|List of monuments]] 
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=166}}
| According to WLM database there are 166 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| {{flag|Argentina}} {{Q|Q414}} 
| &lt;li&gt;[[Q1847467|List of Nat. Hist. Monuments]] ([[:Category:National Historic Monuments of Argentina|cat]]) 
{{User:Emijrp/AHKrow|P1435=Q1847467|wikidata=153|estimate=400}}
| According to WLM database there are 2,217 monuments.&lt;ref name="erfgoed-stats" /&gt; 400 are NHM.
|-
| {{flag|Armenia}} {{Q|Q399}} 
| &lt;li&gt;[[Q26884649|Cultural heritage monuments in Armenia]] ([[:commons:Commons:Lists of European Monuments/Armenia|commons]]) 
{{User:Emijrp/AHKrow|P1435=Q26884649|wikidata=18843|estimate=24254}}
| According to WLM database there are 24,254 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| {{flag|Aruba}} {{Q|Q21203}} 
| &lt;li&gt;[[Q14752770|List of monuments]] 
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=}}
| Total number of monuments is unknown.
|-
| rowspan=2 | {{flag|Australia}} {{Q|Q408}} 
| &lt;li&gt;{{Q|Q7309367}}
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=13000}}
| rowspan=2 | Total number of monuments is unknown. According to sources there are 6,000 war memorials.&lt;ref&gt;{{cite web |url=http://www.msk.id.au/memorials2/default.htm |title= War Memorials in Australia |date=2006 |work= |publisher=Michael Southwell-Keely |accessdate=2013-05-20 |quote= |archiveurl=https://web.archive.org/web/20130424133340/http://www.msk.id.au/memorials2/default.htm |archivedate=2013-04-24 |deadurl=yes}}&lt;/ref&gt;
|-
| &lt;li&gt;[[List of war memorials in Australia|War memorials]] 
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=6000}}
|-
| {{flag|Austria}} {{Q|Q40}} 
| &lt;li&gt;{{Q|Q1188447}} ([[:de:Denkmalgeschützte Objekte in Österreich|de]]) 
{{User:Emijrp/AHKrow|P1435=Q1188447|wikidata=37060|estimate=37589}}
| According to WLM database there are 37,589 monuments.&lt;ref name="erfgoed-stats" /&gt;&lt;ref&gt;{{cite web |url=http://de.wikipedia.org/wiki/Wikipedia:WikiProjekt_Denkmalpflege/%C3%96sterreich |title=Wikipedia:WikiProjekt Denkmalpflege/Österreich |date=2013-05-20 |work= |publisher=German Wikipedia |accessdate=2013-05-20 |quote=Die Gesamtzahl der denkmalgeschützten Objekte lag 2010 bei 36.363 in mehr als 2300 Gemeinden. |archiveurl=https://de.wikipedia.org/w/index.php?title=Wikipedia:WikiProjekt_Denkmalpflege/%C3%96sterreich&amp;oldid=93581038 |archivedate=2011-09-13 |deadurl=no}}&lt;/ref&gt;
|-
| {{flag|Azerbaijan}} {{Q|Q227}} 
| &lt;li&gt;[[Q20987587|List of monuments]] ([[:az:Vikipediya:Viki Abidələri Sevir/Abidələrin siyahısı|az]]) 
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=5472}}
| According to WLM database there are 5,472 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| {{flag|Belarus}} {{Q|Q184}} 
| &lt;li&gt;[[Q2079150|Cultural Properties]] 
{{User:Emijrp/AHKrow|P1435=Q2079150|wikidata=1098|estimate=4811}}
| According to sources there are 4,811 monuments.&lt;ref&gt;{{cite web |url=http://www.president.gov.by/by/press10640.html |title=Гісторыка-культурны патэнцыял Беларусі |trans_title=Historical and cultural capacity of Belarus |language=Belarusian |publisher=Official Internet Portal of the President of the Republic of Belarus |accessdate=7 May 2012|archiveurl=https://web.archive.org/web/20130208162423/http://www.president.gov.by/by/press10640.html|archivedate=2013-02-08|deadurl=yes}}&lt;/ref&gt;
|-
| {{flag|Belgium}} {{Q|Q31}} 
| &lt;li&gt;[[Q338656|Heritage registers]] ([[:nl:Categorie:Lijsten van cultureel erfgoed|nl]]) 
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=77000}}
| According to unknown sources there are 77,000 monuments.
|-
| {{flag|Bolivia}} {{Q|Q750}} 
| &lt;li&gt;[[List of monuments of Bolivia|List of monuments]] 
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=970}}
| According to WLM database there are 970 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| {{flag|Brazil}} {{Q|Q155}} 
| &lt;li&gt;[[Q18468881|List of Nat. Hist. Heritage]] ([[:pt:Categoria:Listas de patrimônio do Brasil|pt]]) 
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=1047}}
| According to unknown sources there are 1,047 monuments.
|-
| {{flag|Burma}} {{Q|Q836}} 
| &lt;li&gt;{{Q|Q8048616}} 
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=200}}
| According to sources there are 200 monuments.
|-
| {{flag|Cameroon}} {{Q|Q1009}} 
| &lt;li&gt;[[List of monuments of Cameroon|List of monuments]] 
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=100}}
| Total number of monuments is unknown.
|-
| rowspan=2 | {{flag|Canada}} {{Q|Q16}} 
| &lt;li&gt;{{Q|Q3456275}}
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=17000}}
| rowspan=2 | According to WLM database there are 12,487 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| &lt;li&gt;[[Q1568567|National Historic Sites]] 
{{User:Emijrp/AHKrow|P1435=Q1568567|wikidata=985|estimate=958}}
|-
| {{flag|Chile}} {{Q|Q298}} 
| &lt;li&gt;[[Q6974386|National Monuments]] 
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=837}}
| According to WLM database there are 837 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| rowspan=4 | {{flag|China}} {{Q|Q148}} 
| &lt;li&gt;[[Q1188574|Sites Protected (national level)]]
{{User:Emijrp/AHKrow|P1435=Q1188574|wikidata=2020|estimate=2351}}
| rowspan=4 | According to unknown sources there are 350,000+ immovable cultural properties and 10,000,000 movable. According to WLM database there are 2,283 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| &lt;li&gt;[[Q1188574|Sites Protected (provincial level)]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=}}
|-
| &lt;li&gt;[[Q1188574|Sites Protected (county level)]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=}}
|-
| &lt;li&gt;[[Historical and Cultural Sites Protected at the City Level|Sites Protected (city level)]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=}}
|-
| {{flag|Colombia}} {{Q|Q739}} 
| &lt;li&gt;[[Q25047871|National monuments]] ([[:es:Categoría:Anexo:Monumentos nacionales de Colombia|es]]) 
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=1024}}
| According to WLM database there are 1,024 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| {{flag|Croatia}} {{Q|Q224}} 
| &lt;li&gt;[[Q7309359|Register of Cultural Goods]] 
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=}}
| Total number of monuments is unknown.
|-
| rowspan=2 | {{flag|Cuba}} {{Q|Q241}} 
| &lt;li&gt;[[List of national monuments of Cuba|List of national monuments]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=180}}
| rowspan=2 | According to sources there are 200 national monuments.&lt;ref&gt;{{cite web|url=http://www.oei.es/cultura2/cuba/07.htm|title=Consejo Nacional de Patrimonio Cultural (CNPC)|archiveurl=http://www.webcitation.org/6RPC1goyK|archivedate=2014-07-28|deadurl=no}}&lt;/ref&gt;
|-
| &lt;li&gt;[[List of local monuments of Cuba|List of local monuments]] 
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=200}}
|-
| {{flag|Czech Republic}} {{Q|Q213}} 
| &lt;li&gt;[[List of national monuments of Czech Republic|National monuments]] ([[:cs:Seznam národních kulturních památek České republiky|cs]]) 
{{User:Emijrp/AHKrow|P1435=Q385405|wikidata=41963|estimate=40762}}
| According to WLM database there are 40,762 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| rowspan=2 | {{flag|Denmark}} {{Q|Q35}} 
| &lt;li&gt;[[List of Denmark national sites and monuments|National sites and monuments]] ([[:da:Fredede fortidsminder i Danmark|da]])
{{User:Emijrp/AHKrow|P1435=Q21436546|wikidata=606|estimate=165000}}
| rowspan=2 | 7,000 are shipwrecks and submarine Stone Age settlements. According to WLM database there are 31,320 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| &lt;li&gt;Buildings ([[:da:Fredede bygninger i Danmark|da]])
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=7000}}
|-
| {{flag|Egypt}} {{Q|Q79}} 
| &lt;li&gt;[[List of monuments of Egypt|List of monuments]] 
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=}}
| Total number of monuments is unknown.
|-
| {{flag|El Salvador}} {{Q|Q792}} 
| &lt;li&gt;[[List of monuments of El Salvador|List of monuments]] 
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=641}}
| According to WLM database there are 641 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| {{flag|Estonia}} {{Q|Q191}} 
| &lt;li&gt;[[List of monuments of Estonia|List of monuments]] 
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=24552}}
| According to WLM database there are 24,552 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| {{flag|France}} {{Q|Q142}} 
| &lt;li&gt;[[List of French historic monuments by comune|List of historic monuments]] ([[:fr:Liste des monuments historiques par commune|fr]]) 
{{User:Emijrp/AHKrow|P1435=Q10387575|wikidata=74385|estimate=44453}}
| More than 200,000 on the [[:fr:Base Mérimée]] and much more on other regional databases of the [[:fr:Inventaire général du patrimoine culturel]].&lt;ref&gt;{{cite web |url=http://www2.culture.gouv.fr/culture/deps/chiffres-cles2010/04-patrimoine-architecture-2010.pdf |title=Patrimoine et architecture - Chiffres clés 2010 |date=2013-05-20 |work= |publisher=Ministère de la Culture et de la Communication |accessdate=2013-05-20 |quote= |archiveurl=http://www.webcitation.org/68DZPlZxf |archivedate=2012-06-06 |deadurl=no}}&lt;/ref&gt; According to WLM database there are 44,453 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| rowspan=2 | {{flag|Germany}} {{Q|Q183}} 
| &lt;li&gt;{{Q|Q883529}}
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=112005}}
| rowspan=2 | According to WLM database there are 112,005 monuments.&lt;ref name="erfgoed-stats" /&gt; According to unknown sources there are 700,000+ monuments.
|-
| &lt;li&gt;Baudenkmal
{{User:Emijrp/AHKrow|P1435=Q811165|wikidata=119331|estimate=}}
|-
| {{flag|Ghana}} {{Q|Q117}} 
| &lt;li&gt;[[List of monuments of Ghana|List of monuments]] 
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=52}}
| According to WLM database there are 52 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| rowspan=4 | {{flag|Hong Kong}} {{Q|Q8646}} 
| &lt;li&gt;[[Q1939635|Declared monuments]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=108}}
| rowspan=4 | According to WLM database there are 108 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| &lt;li&gt;[[Q3051544|Grade I historic buildings]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=}}
|-
| &lt;li&gt;[[Q6572275|Grade II historic buildings]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=}}
|-
| &lt;li&gt;[[Q13643950|Grade III historic buildings]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=}}
|-
| {{flag|Hungary}} {{Q|Q28}} 
| &lt;li&gt;[[List of monuments of Hungary|List of monuments]] 
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=1174}}
| According to WLM database there are 1,174 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| {{flag|India}} {{Q|Q668}} 
| &lt;li&gt;[[List of monuments of India|List of monuments]]
{{User:Emijrp/AHKrow|P1435=Q17047615|wikidata=822|estimate=7459}}
| According to WLM database there are 7,459 monuments.&lt;ref name="erfgoed-stats" /&gt; [[Wikipedia:WikiProject India/Wiki Loves Monuments]]
|-
| {{flag|Indonesia}} {{Q|Q252}} 
| &lt;li&gt;[[Q4246737|Cultural Properties]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=8232}}
| According to sources there are 8,232 monuments.&lt;ref&gt;{{cite web |url=http://kppo.bappenas.go.id/files/-15-Situs-Benda%20Cagar%20Budaya%20Tidak%20Bergerak,%20Situs-BCB%20Dipelihara,%20dan%20Juru%20Pelihara%20Seluruh%20Indonesia.pdf |title=Situs/Benda Cagar Budaya Tidak Bergerak, Situs/BCB Dipelihara, dan Juru Pelihara Seluruh Indonesia |trans_title=Heritage Sites and Immovable Cultural Properties |language=Indonesian |publisher=[[:id:Badan Perencanaan Pembangunan Nasional|National Development Planning Agency]] |accessdate=6 May 2012|archiveurl=https://web.archive.org/web/20130522090649/http://kppo.bappenas.go.id/files/-15-Situs-Benda%20Cagar%20Budaya%20Tidak%20Bergerak,%20Situs-BCB%20Dipelihara,%20dan%20Juru%20Pelihara%20Seluruh%20Indonesia.pdf|archivedate=2013-05-22|deadurl=yes}}&lt;/ref&gt;
|-
| {{flag|Iran}} {{Q|Q794}} 
| &lt;li&gt;Iranian National Heritage
{{User:Emijrp/AHKrow|P1435=Q5958900|wikidata=26937|estimate=26643}}
| According to WLM database there are 26,643 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| {{flag|Ireland}} {{Q|Q22890}} 
| &lt;li&gt;[[List of monuments in Ireland|List of monuments]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=622}}
| According to WLM database there are 622 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| {{flag|Israel}} {{Q|Q801}}
| &lt;li&gt;[[List of monuments in Israel|List of monuments]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=1126}}
| According to WLM database there are 1,126 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| {{flag|Italia}} {{Q|Q38}}
| &lt;li&gt;[[List of monuments in Italy|List of monuments]] ([[:it:Progetto:Wiki Loves Monuments 2013/Monumenti|it]])
{{User:Emijrp/AHKrow|P1435=Q26971668|wikidata=34103|estimate=5143}}
| According to WLM database there are 5,143 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| {{flag|Jamaica}} {{Q|Q766}}
| &lt;li&gt;[[Q6591407|List of National Heritage Sites]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=}}
| Total number of monuments is unknown.
|-
| {{flag|Japan}} {{Q|Q17}}
| &lt;li&gt;[[Q3497079|Lists of National Treasures]]
{{User:Emijrp/AHKrow|P1435=Q1139795|wikidata=168|estimate=1079}}
| According to WLM database there are 988 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| {{flag|Jordan}} {{Q|Q810}}
| &lt;li&gt;[[List of monuments of Jordan|List of monuments]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=85}}
| According to WLM database there are 85 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| {{flag|Kenya}} {{Q|Q114}}
| &lt;li&gt;[[Q7531822|List of monuments]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=208}}
| According to WLM database there are 208 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| {{flag|Latvia}} {{Q|Q211}}
| &lt;li&gt;[[List of monuments of Latvia|List of monuments]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=7131}}
| According to sources there are 7,131 monuments.&lt;ref&gt;{{cite web | url=http://www.mantojums.lv/?cat=742&amp;lang=lv | title=Valsts aizsargājamo nekustamo kultūras pieminekļu saraksts | accessdate=2015-02-24 | archiveurl=https://web.archive.org/web/20140106165825/http://www.mantojums.lv/?cat=742&amp;lang=lv | archivedate=2014-01-06 | deadurl=yes}}&lt;/ref&gt;
|-
| {{flag|Luxembourg}} {{Q|Q32}}
| &lt;li&gt;[[List of monuments of Luxembourg|List of monuments]] ([[:lb:Lëscht vun de klasséierte Monumenter|lb]])
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=808}}
| According to WLM database there are 808 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| {{flag|Macedonia}} {{Q|Q12286325}}
| &lt;li&gt;[[List of monuments of Macedonia|List of monuments]] ([[:fr:Patrimoine culturel de la République de Macédoine|fr]])
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=12556}}
| According to unknown sources there are 12,556 monuments.
|-
| rowspan=6 | {{flag|Malta}} {{Q|Q233}}
| &lt;li&gt;Grade 1
{{User:Emijrp/AHKrow|P1435=Q19718195|wikidata=620|estimate=}}
| rowspan=6 | According to WLM database there are 115 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| &lt;li&gt;Grade 2
{{User:Emijrp/AHKrow|P1435=Q20012790|wikidata=63|estimate=}}
|-
| &lt;li&gt;Grade 3
{{User:Emijrp/AHKrow|P1435=Q20012792|wikidata=3|estimate=}}
|-
| &lt;li&gt;Class A
{{User:Emijrp/AHKrow|P1435=Q21585062|wikidata=16|estimate=}}
|-
| &lt;li&gt;Class B
{{User:Emijrp/AHKrow|P1435=Q21585095|wikidata=3|estimate=}}
|-
| &lt;li&gt;Class C
{{User:Emijrp/AHKrow|P1435=Q21585106|wikidata=0|estimate=}}
|-
| {{flag|Mexico}} {{Q|Q96}}
| &lt;li&gt;[[List of monuments of Mexico|List of monuments]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=9952}}
| According to WLM database there are 9,952 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| {{flag|Morocco}} {{Q|Q1028}}
| &lt;li&gt;[[Q5773569|Historic Monuments and Sites]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=}}
| Total number of monuments is unknown.
|-
| {{flag|Mozambique}} {{Q|Q1029}}
| &lt;li&gt;[[Q15603774|Cultural Properties]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=}}
| Total number of monuments is unknown.
|-
| {{flag|Namibia}} {{Q|Q1030}}
| &lt;li&gt;[[List of national monuments of Namibia|List of national monuments]] ([[:de:Liste der National Monuments of Namibia|de]])
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=}}
| Total number of monuments is unknown.
|-
| {{flag|Nepal}} {{Q|Q837}}
| &lt;li&gt;[[List of monuments of Nepal|List of monuments]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=2362}}
| According to WLM database there are 2,362 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| rowspan=2 | {{flag|Netherlands}} {{Q|Q55}}
| &lt;li&gt;{{Q|Q16969744}} ([[:nl:Rijksmonumenten#Plaatsen met de meeste monumenten|nl]])
{{User:Emijrp/AHKrow|P1435=Q916333|wikidata=66825|estimate=63052}}
| rowspan=2 | According to WLM database there are 63,052 monuments.&lt;ref name="erfgoed-stats" /&gt;&lt;ref&gt;{{cite web |url=http://www.cultureelerfgoed.nl/node/1830 |title=Aantal rijksmonumenten en beschermde stads- en dorpsgezichten in 2010 |date=2010-12-31 |work= |publisher= |accessdate=2013-05-20 |quote=Rijksmonumenten totaal: 52.215 (2008), 52.158 (2009), 52.151 (2010) |archiveurl=http://www.webcitation.org/67ydySipU |archivedate=2012-05-27 |deadurl=no}}&lt;/ref&gt;
|-
| &lt;li&gt;Municipal monuments ([[:nl:Gemeentelijk monument|nl]])
{{User:Emijrp/AHKrow|P1435=Q2650048|wikidata=1366|estimate=}}
|-
| {{flag|New Zealand}} {{Q|Q664}}
| &lt;li&gt;[[List of New Zealand Historic Places|New Zealand Historic Places]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=}}
| Total number of monuments is unknown.
|-
| rowspan=2 | {{flag|North Korea}} {{Q|Q423}}
| &lt;li&gt;[[Q704983|National Treasures]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=200}}
| rowspan=2 | According to wiki pages there are 200 national treasures and about 2,000 cultural assets.
|-
| &lt;li&gt;[[Q5193261|Cultural assets]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=2000}}
|-
| {{flag|Norway}} {{Q|Q20}}
| &lt;li&gt;[[List of monuments in Norway|List of monuments]] ([[:no:Lister over kulturminner i Norge|no]])
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=115000}}
| According to unknown sources there are 115,000 monuments. According to WLM database there are 16,585 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| {{flag|Pakistan}} {{Q|Q843}}
| &lt;li&gt;[[List of monuments of Pakistan|List of monuments]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=1112}}
| According to WLM database there are 1,112 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| {{flag|Panama}} {{Q|Q804}}
| &lt;li&gt;[[List of monuments in Panama|List of monuments]] ([[:es:Anexo:Monumentos Históricos de Panamá|es]])
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=220}}
| According to WLM database there are 220 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| {{flag|Paraguay}} {{Q|Q733}}
| &lt;li&gt;[[List of monuments of Paraguay|List of monuments]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=}}
| Total number of monuments is unknown.
|-
| {{flag|Philippines}} {{Q|Q928}}
| &lt;li&gt;[[List of monuments of Philippines|List of monuments]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=516}}
| According to WLM database there are 516 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| {{flag|Poland}} {{Q|Q36}}
| &lt;li&gt;[[List of monuments in Poland|List of monuments]] ([[:pl:Wikiprojekt:Wiki Lubi Zabytki/wykazy|pl]])
{{User:Emijrp/AHKrow|P1435=Q21438156|wikidata=76893|estimate=77162}}
| According to WLM database there are 77,162 monuments.&lt;ref name="erfgoed-stats" /&gt;&lt;ref name="wlmdatabase"&gt;{{cite web |url=http://commons.wikimedia.org/wiki/Commons:Monuments_database/Statistics |title=Commons:Monuments database/Statistics |date=2013-05-20 |work= |publisher=Wikimedia Commons |accessdate=2013-05-20 |quote= |archiveurl=http://commons.wikimedia.org/w/index.php?title=Commons:Monuments_database/Statistics&amp;oldid=96566181 |archivedate=2013-05-20 |deadurl=no}}&lt;/ref&gt;
|-
| rowspan=2 | {{flag|Portugal}} {{Q|Q45}}
| &lt;li&gt;[[Q908411|National monuments]] ([[:pt:Anexo:Lista de património edificado em Portugal|pt]])
{{User:Emijrp/AHKrow|P1435=Q908411|wikidata=674|estimate=}}
| rowspan=2 | According to WLM database there are 4,493 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| &lt;li&gt;Heritage sites or buildings
{{User:Emijrp/AHKrow|P1435=Q15697324|wikidata=989|estimate=4493}}
|-
| {{flag|Romania}} {{Q|Q218}}
| &lt;li&gt;[[Q6623358|List of monuments]] ([[:ro:Lista monumentelor istorice din România|ro]])
{{User:Emijrp/AHKrow|P1435=Q916620|wikidata=30203|estimate=29717}}
| According to WLM database there are 29,717 monuments.&lt;ref name="erfgoed-stats" /&gt;&lt;ref&gt;{{cite web |url=http://www.monumenteistorice.ro/legislatie/LMI/LMI2010.pdf |title=2010 List of Historical Monuments |date=2013-05-20 |work= |publisher= |accessdate=2013-05-20 |quote= |archiveurl=http://www.webcitation.org/67yiBsiiX |archivedate=2012-05-27 |deadurl=yes}}&lt;/ref&gt;
|-
| {{flag|Russia}} {{Q|Q159}}
| &lt;li&gt;{{Q|Q7382189}}
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=116884}}
| According to WLM database there are 116,884 monuments.&lt;ref name="erfgoed-stats" /&gt; Of these 42,000 are rated as national landmarks, while the rest are of regional or local significance.
|-
| {{flag|Senegal}} {{Q|Q1041}}
| &lt;li&gt;[[List of monuments of Senegal|List of monuments]] ([[:fr:Liste des monuments et sites historiques au Sénégal|fr]])
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=}}
| Total number of monuments is unknown.
|-
| rowspan=2 | {{flag|Serbia}} {{Q|Q403}}
| &lt;li&gt;{{Q|Q3370018}}
{{User:Emijrp/AHKrow|P1435=Q3323469|wikidata=280|estimate=2442}}
| rowspan=2 | According to WLM database there are 2,442 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| &lt;li&gt;{{Q|Q1843024}}
{{User:Emijrp/AHKrow|P1435=Q6906963|wikidata=1542|estimate=}}
|-
| {{flag|Sierra Leone}} {{Q|Q1044}}
| &lt;li&gt;[[Q1847457|National Monuments]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=}}
| Total number of monuments is unknown.
|-
| {{flag|Singapore}} {{Q|Q334}}
| &lt;li&gt;[[Q3862742|National Monuments]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=69}}
| According to [[Q6973045|National Heritage Board]] there are 69 national monuments.
|-
| {{flag|Slovakia}} {{Q|Q214}}
| &lt;li&gt;[[Q960335|Cultural Heritage Monuments]] ([[:de:Kategorie:Liste (Kulturdenkmale in der Slowakei)|de]])
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=14622}}
| According to WLM database there are 14,622 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| rowspan=3 | {{flag|Slovenia}} {{Q|Q215}}
| &lt;li&gt;[[List of cultural heritage sites of Slovenia|List of cultural heritage sites]]
{{User:Emijrp/AHKrow|P1435=Q18519893|wikidata=1089|estimate=21643}}
| rowspan=3 | According to sources there are 21,643 registered sites of cultural heritage, of which 8379 are protected monuments.&lt;ref&gt;{{cite web |url=http://rkd.situla.org/ |title=Register nepremične kulturne dediščine |publisher=Ministry of Culture, Republic of Slovenia |accessdate=2013-05-27}}&lt;/ref&gt;
|-
| &lt;li&gt;Monuments of National Significance
{{User:Emijrp/AHKrow|P1435=Q18363603|wikidata=120|estimate=319}}
|-
| &lt;li&gt;Monuments of Local Significance
{{User:Emijrp/AHKrow|P1435=Q18363639|wikidata=635|estimate=8006}}
|-
| {{flag|Spain}} {{Q|Q29}} 
| &lt;li&gt;[[Q6563860|Bienes de Interés Cultural]] ([[:es:Categoría:Anexos:Bienes de interés cultural en España|es]]) 
{{User:Emijrp/AHKrow|P1435=Q23712|wikidata=17461|estimate=50000}}
| According to WLM database there are 50,000+ monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| {{flag|South Africa}} {{Q|Q258}}
| &lt;li&gt;[[Q6622209|List of heritage sites]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=3936}}
| According to WLM database there are 3,936 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| rowspan=2 | {{flag|South Korea}} {{Q|Q884}}
| &lt;li&gt;[[Q486245|National Treasures]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=307}}
| rowspan=2 | According to {{Q|Q488764}} there are 307 national treasures and 526 historic sites.
|-
| &lt;li&gt;[[Q483275|Historic Sites]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=526}}
|-
| {{flag|Swaziland}} {{Q|Q1050}}
| &lt;li&gt;[[Q1394903|National Monuments]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=}}
| Total number of monuments is unknown.
|-
| rowspan=3 | {{flag|Sweden}} {{Q|Q34}}
| &lt;li&gt;[[Q328070|Listed buildings]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=2000}}
| rowspan=2 | According to WLM database there are 145,232 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| &lt;li&gt;Historical ships in Sweden
{{User:Emijrp/AHKrow|P1435=Q16501309|wikidata=137|estimate=130}}
|-
| &lt;li&gt;Monuments in Fornminnesregistret 
{{User:Emijrp/AHKrow|P1435=Q21287602|wikidata=145511|estimate=145232}}
|-
| {{flag|Switzerland}} {{Q|Q39}}
| &lt;li&gt;{{Q|Q869941}}
{{User:Emijrp/AHKrow|P1435=Q8274529|wikidata=4441|estimate=20120}}
| According to WLM database there are 20,120 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| {{flag|Thailand}} {{Q|Q869}}
| &lt;li&gt;[[List of monuments of Thailand|List of monuments]] ([[:th:หมวดหมู่:รายชื่อโบราณสถานที่ขึ้นทะเบียนโดยกรมศิลปากร|th]])
{{User:Emijrp/AHKrow|P1435=Q16438244|wikidata=679|estimate=8578}}
| According to WLM database there are 8,578 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| {{flag|Tunisia}} {{Q|Q948}}
| &lt;li&gt;[[List of monuments of Tunisia|List of monuments]] ([[:fr:Liste des monuments classés de Tunisie|fr]])
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=926}}
| According to WLM database there are 926 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| {{flag|Ukraine}} {{Q|Q212}}
| &lt;li&gt;[[List of monuments of Ukraine|List of monuments]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=75503}}
| According to WLM database there are 75,503 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| rowspan=11 | {{flag|United Kingdom}} {{Q|Q145}}
| &lt;li&gt;{{Q|Q570600}} ([[:Category:Grade I listed buildings|cat]])
{{User:Emijrp/AHKrow|P1435=Q15700818|wikidata=9877|estimate=}}
| rowspan=11 | According to WLM database there are 31,651 monuments.&lt;ref name="erfgoed-stats" /&gt; According to {{Q|Q570600}} there are 376,099 {{Q|Q570600}}.&lt;ref&gt;{{cite web |url= http://www.english-heritage.org.uk/caring/listing/listed-buildings/ |title=Listed Buildings |publisher=English Heritage |accessdate=7 June 2011}}&lt;/ref&gt;
|-
| &lt;li&gt;{{Q|Q570600}} ([[:Category:Grade II* listed buildings|cat]])
{{User:Emijrp/AHKrow|P1435=Q15700831|wikidata=23600|estimate=}}
|-
| &lt;li&gt;{{Q|Q570600}} ([[:Category:Grade II listed buildings|cat]])
{{User:Emijrp/AHKrow|P1435=Q15700834|wikidata=371067|estimate=|format=count}}
|-
| &lt;li&gt;{{Q|Q570600}} ([[:Category:Grade A listed buildings|cat]])
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=}}
|-
| &lt;li&gt;{{Q|Q570600}} ([[:Category:Grade B+ listed buildings|cat]])
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=}}
|-
| &lt;li&gt;{{Q|Q570600}} ([[:Category:Grade B1 listed buildings|cat]])
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=}}
|-
| &lt;li&gt;{{Q|Q570600}} ([[:Category:Category A listed buildings in Scotland|cat]])
{{User:Emijrp/AHKrow|P1435=Q10729054|wikidata=6694|estimate=}}
|-
| &lt;li&gt;{{Q|Q570600}} ([[:Category:Category B listed buildings in Scotland|cat]])
{{User:Emijrp/AHKrow|P1435=Q10729125|wikidata=34890|estimate=}}
|-
| &lt;li&gt;{{Q|Q570600}} ([[:Category:Category C listed buildings in Scotland|cat]])
{{User:Emijrp/AHKrow|P1435=Q10729142|wikidata=1034|estimate=}}
|-
| &lt;li&gt;{{Q|Q219538}}
{{User:Emijrp/AHKrow|P1435=Q219538|wikidata=19997|estimate=20000}}
|-
| &lt;li&gt;{{Q|Q422211}}
{{User:Emijrp/AHKrow|P1435=Q422211|wikidata=1922|estimate=}}
|-
| rowspan=3 | {{flag|United States}} {{Q|Q30}}
| &lt;li&gt;{{Q|Q3719}}
{{User:Emijrp/AHKrow|P1435=Q19558910|wikidata=60988|estimate=90111}}
| rowspan=3 | According to WLM database there are 90,111 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| &lt;li&gt;[[U.S. National Register Historic District]]
{{User:Emijrp/AHKrow|P1435=Q20856087|wikidata=0|estimate=}}
|-
| &lt;li&gt;{{Q|Q624232}}
{{User:Emijrp/AHKrow|P1435=Q624232|wikidata=2363|estimate=2450}}
|-
| {{flag|Uruguay}} {{Q|Q77}}
| &lt;li&gt;[[List of monuments of Uruguay]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=1333}}
| According to WLM database there are 1,333 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| {{flag|Venezuela}} {{Q|Q717}}
| &lt;li&gt;[[List of national monuments of Venezuela|List of national monuments]] ([[:es:Categoría:Anexo:Monumentos nacionales de Venezuela|es]])
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=7149}}
| According to WLM database there are 7,149 monuments.&lt;ref name="erfgoed-stats" /&gt;
|-
| {{flag|Zambia}} {{Q|Q953}}
| &lt;li&gt;[[Q3862738|Monuments and Historic Sites]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=3000}}
| According to [[National Heritage Conservation Commission]] there are 3,000 monuments and historic sites.
|-
| rowspan=2 | {{flag|Zimbabwe}} {{Q|Q954}}
| &lt;li&gt;[[Q17078205|National Monuments]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=169}}
| rowspan=2 | According to {{Q|Q17078205}} there are 14,000 historic sites.
|-
| &lt;li&gt;[[List of historic sites in Zimbabwe|List of historic sites]]
{{User:Emijrp/AHKrow|P1435=|wikidata=|estimate=14000}}
|-
{{User:Emijrp/AHKrowtotal|wikidata=1242813|estimate=2150101}}
|}

For more monuments figures, see [[:commons:Commons:Monuments database/Statistics|Commons:Monuments database/Statistics]]. For a map, see [https://tools.wmflabs.org/wlm-maps/ Wiki Loves Monuments map].

=== Cinema and television ===
{{anchor|Cinema|Television|Radio}}
&lt;!--[[File:BolexH16.jpg|right|thumb|This [[Q194383|16 mm]] spring-wound {{Q|Q689975}} "H16" Reflex camera is a popular entry level camera used in {{Q|Q380093}}.]]--&gt;
&lt;!--[[File:Le Voyage dans la lune.jpg|thumb|right|A shot from {{Q|Q152272}} ''{{Q|Q244971}} (A Trip to the Moon)'' (1902), an early narrative film.]]--&gt;
A '''{{Q|Q11424}}''' is a series of still or moving images. It is produced by {{Q|Q13557414}} photographic images with {{Q|Q15328}}, or by creating images using {{Q|Q11425}} techniques or {{Q|Q8317}}.  The process of {{Q|Q932586}} has developed into an {{Q|Q735}} form and [[Q1415395|industry]]. See also [[:Category:Film-related lists]].

{| class="wikitable sortable plainlinks"
! width="200px" | Topic 
! width="200px" | Related pages
! Wikidata
! Estimate
! References 
|-
| {{Q|Q11424}}{{anchor|Films}}
| &lt;li&gt;{{Q|Q623104}}
{{User:Emijrp/AHKrow|P31=Q11424|wikidata=271688|estimate=366000|format=count}}
| According to {{Q|Q37312}} there are 366,000+ feature films.&lt;ref name="imdbstats"&gt;{{cite web |url=http://www.imdb.com/stats |title=IMDb Database Statistics |date=2017-02-04 |work= |publisher=IMDb |accessdate=2017-02-04 |quote=Titles: 4,107,863 (Year Range: 1874 - 2115); People: 7,717,456 (Credits: 82,270,949) |archiveurl=http://web.archive.org/web/*/http://www.imdb.com/stats |archivedate=2017-02-04 |deadurl=no}}&lt;/ref&gt;&lt;!-- (See [[User:Emijrp/List of African films]])--&gt;
|-
| {{Q|Q93204}}{{anchor|Documentaries}}
| &lt;li&gt;{{Q|Q6617125}}
{{User:Emijrp/AHKrow|P31=Q93204|wikidata=167|estimate=162000}}
| According to IMDb there are 77,000+ documentary films and 85,000+ short.&lt;ref name="imdbstats"/&gt;
|-
| {{Q|Q2001305}}{{anchor|TV channels}}
| &lt;li&gt;{{Q|Q5147657}}
{{User:Emijrp/AHKrow|P31=Q2001305|wikidata=4996|estimate=}}
| Total number of TV channels is unknown. According to sources there are 700+ in India,&lt;ref name="indianmedia"/&gt; 7,200 in Europe as of 2009 (UE 27 + Croatia and Turkey).&lt;ref&gt;{{cite web |url=http://www.obs.coe.int/about/oea/pr/mavise_end2009.html |title=Croissance du nombre de chaînes et de plates-formes de télévision européennes malgré la crise |date=2010-01-13 |work= |publisher=Observatoire européen de l'audiovisuel |accessdate=2013-05-21 |quote=Plus de 245 nouvelles chaînes de télévision ont été lancées en Europe en 2009 ; ce qui mène à la fin de l’année 2009 à un total de 7 200 chaînes de télévision européennes. |archiveurl=http://www.webcitation.org/6GmCO5omE |archivedate=2013-05-21 |deadurl=no}}&lt;/ref&gt; Total number of defunct channels is unknown.
|-
| {{Q|Q15416}}{{anchor|TV programs}}
| &lt;li&gt;{{Q|Q2446716}}
{{User:Emijrp/AHKrow|P31=Q15416|wikidata=171993|estimate=}}
| Total number of TV programs is unknown.&lt;br/&gt;Example: {{Q|Q6597879}} contains 800+ series and miniseries.
|-
| {{Q|Q1616075}}{{anchor|TV stations}}
| &lt;li&gt;{{Q|Q5147657}}
{{User:Emijrp/AHKrow|P31=Q1616075|wikidata=7065|estimate=}}
| According to {{Q|Q128831}} there are 1,700+ television stations (and 2,100+ low power) in USA.&lt;ref name="fccstats"&gt;{{cite web | url=http://benton.org/node/65435 | title=How Many TV and Radio Stations are There? | publisher=Federal Communications Commission | date=2011 | accessdate=2013-05-21 | archiveurl=http://www.webcitation.org/68DFa5cW6 | archivedate=2012-06-06 | deadurl=no | quote=As on March 2011: 14,728 full power radio stations:  4,778 AM, 6533 FM, and 3,417 educational FM. There are 859 Low Power FM stations. 1,774 full power TV stations: 1,022 UHF commercial, 360 VHF commercial, 285 UHF educational, and 107 VHF educational. 10,595 translators and booster stations. 2,172 low power TV stations.}}&lt;/ref&gt;
|-
| {{Q|Q21191270}}{{anchor|Episodes|TV episodes}}
| &lt;li&gt;[[List of TV episodes]]
{{User:Emijrp/AHKrow|P31=Q21191270|wikidata=40752|estimate=2115000}}
| According to IMDb there are 2,115,000 TV episodes.&lt;ref name="imdbstats"/&gt;
|-
| {{Q|Q1474493}}{{anchor|Radio stations}}
| &lt;li&gt;{{Q|Q7112714}}
{{User:Emijrp/AHKrow|P31=Q14350|wikidata=24928|estimate=44000}}
| According to {{Q|Q11191}} there are 44,000 radio stations worldwide&lt;ref&gt;{{cite web |url=http://wiki.answers.com/Q/How_many_radio_stations_are_there_in_the_world |title=How many radio stations are there in the world? |date=2013-05-21 |work= |publisher=Wiki Answers |accessdate=2013-05-21 |quote=There are about 44,000 radio stations worldwide. |archiveurl=http://www.webcitation.org/6GmCx9X31 |archivedate=2013-05-21 |deadurl=no}}&lt;/ref&gt; and according to {{Q|Q128831}} 14,000+ are in USA.&lt;ref name="fccstats"/&gt;
|-
| Awards
| &lt;li&gt;[[List of television awards]]
{{User:Emijrp/AHKrow|P31=Q1407225|wikidata=516|estimate=}}
| Total number of televison awards is unknown.
|-
{{User:Emijrp/AHKrowtotal|wikidata=522105|estimate=2871570}}
|}

This section excludes [[#Biographies|biographies]].

{{for|a list of {{Q|Q166118}}|#Archives}}
&lt;!--{{Filmsbygenre}}--&gt;

=== Crafts ===
&lt;!--[[File:Swanson_Shoe_Repair_18.jpg|thumb|right|{{Q|Q22676}} are repaired by a skilled {{Q|Q6408486}}, here he evaluates a pair of shoes with a {{Q|Q852835}} watching.]]--&gt;
A '''{{Q|Q2207288}}''' is a branch of a {{Q|Q28640}} that requires some particular kind of [[Q1391344|skilled work]]. In historical sense, particularly as pertinent to the [[Q12554|Medieval history]] and earlier, the term is usually applied towards people occupied in small-scale production of [[Q28877|goods]]. See also {{Q|Q3375028}} and [[:Category:Glossaries of crafts]].

{| class="wikitable sortable plainlinks"
! Topic 
! Related pages
! Wikidata
! Estimate
! References 
|-
| {{Q|Q2207288}}
| &lt;li&gt;[[List of crafts]] ([[:Category:Crafts|cat]])
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=1000}}
| According to unknown sources there are 1,000 crafts.
|-
| {{Q|Q124946}}{{anchor|Gardening}}
| 
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of gardening articles is unknown.
|-
| {{Q|Q243330}} and {{Q|Q161439}}{{anchor|Gemology|Jewelry}}
| &lt;li&gt;{{Q|Q4432813}}
{{User:Emijrp/AHKrow|P31=Q161439|wikidata=590|estimate=}}
| Total number of jewelry articles is unknown.
|-
| {{Q|Q2789106}}{{anchor|Home improvement}}
| 
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of home improvement articles is unknown.
|-
| {{Q|Q83357}}{{anchor|Origami}}
| 
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of origami articles is unknown.
|-
| {{Q|Q11422}}{{anchor|Toys}}
| 
{{User:Emijrp/AHKrow|P31=Q11422|wikidata=533|estimate=}}
| Total number of toys is unknown.
|-
{{User:Emijrp/AHKrowtotal|wikidata=1123|estimate=2123}}
|}

=== Literature ===

'''{{Q|Q8242}}''' (from {{Q|Q397}} ''litterae''  (plural); [[Q9788|letter]]) is the {{Q|Q735}} of [[Q37260|written works]]. The word literature literally means: "things made from letters". Literature is commonly classified as having two major forms—fiction and non-fiction—and two major techniques—poetry and prose.

* An '''{{Q|Q737498}}''' is a [[Q215028|peer-reviewed]] [[Q1002697|periodical]] in which scholarship relating to a particular [[Q221173|academic discipline]] is published. Estimates suggest that around 50 million journal articles&lt;ref name="50Mjournalarticles"&gt;{{Cite journal | last1 = Jinha | first1 = A. E. | title = Article 50 million: An estimate of the number of scholarly articles in existence | doi = 10.1087/20100308 | journal = Learned Publishing | volume = 23 | issue = 3 | pages = 258–263 | year = 2010 | pmid =  | url = http://www.stratongina.net/files/50millionArifJinhaFinal.pdf| pmc = | archiveurl = http://www.webcitation.org/67sSymMQy| archivedate = 2012-05-23| deadurl = no}}&lt;/ref&gt; have been published since the first appearance of the {{Q|Q913162}} in 1665.
* An '''{{Q|Q5292}}''' is a type of {{Q|Q13136}}, a {{Q|Q1459574}} holding a summary of {{Q|Q11028}} from either [[Q1376286|all branches]] of {{Q|Q9081}} or a particular [[Q617910|branch of knowledge]].
* A '''{{Q|Q8261}}''' is a long prose narrative that describes fictional characters and events in the form of a sequential story.
* '''{{Q|Q482}}''' is a form of [[Q8242|literary]] {{Q|Q735}} in which {{Q|Q315}} is used for its [[Q35986|aesthetic]] and evocative qualities in addition to, or in lieu of, its apparent [[Q183046|meaning]]. See also {{Q|Q7112700}}.
* '''{{Q|Q11635}}''' is a collaborative form of {{Q|Q219625}} that uses live performers to present the experience of a real or imagined  event before a live audience in a specific place. See also {{Q|Q7112798}}.

&lt;gallery mode="packed-hover"&gt;
File:Old book bindings.jpg|Old book bindings at the {{Q|Q82513}} library
File:JohannesVermeer-TheAstronomer(1668).jpg|''[[Q544315|The Astronomer]]'' by {{Q|Q41264}}
File:EncycBrit1913.jpg|thumb|right|Advertisement for the 1911 ''{{Q|Q455}}'' ("The Sum of Human Knowledge"), from the May 1913 issue of ''National Geographic Magazine''
File:Bernhardt Hamlet2.jpg|{{Q|Q4605}} as {{Q|Q41567}}, in 1899
File:GilgameshTablet.jpg|The [[Q134052|Deluge]] tablet, carved in stone, of the {{Q|Q8272}} in [[Q35518|Akkadian]], circa {{Q|Q26257}}
&lt;/gallery&gt;

{| class="wikitable sortable plainlinks"
! width="100px" | Topic 
! width="250px" | Related pages
! Wikidata
! Estimate
! References 
|-
| rowspan=1 | By country and period
| &lt;li&gt;{{Q|Q257085}}&lt;li&gt;{{Q|Q6497044}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=4000}}
| Assuming 200 countries and 20 centuries, there could be 4,000 articles. See also {{Q|Q3083584}} and [[:Category:Literature lists]].
|-
| rowspan=5 | By medium
| &lt;li&gt;{{Q|Q5251635}}
{{User:Emijrp/AHKrow|P31=Q571|wikidata=129249|estimate=20000000}}
| According to {{Q|Q95}} there are 129,864,880 books (considering all editions separately).&lt;ref&gt;{{cite web |url=http://booksearch.blogspot.com.es/2010/08/books-of-world-stand-up-and-be-counted.html |title=Books of the world, stand up and be counted! All 129,864,880 of you |date=2013-05-21 |work= |publisher=Google Books |accessdate=2013-05-21 |quote=After we exclude serials, we can finally count all the books in the world. There are 129,864,880 of them. At least until Sunday. |archiveurl=http://www.webcitation.org/68DZKPL8L |archivedate=2012-06-06 |deadurl=no}}&lt;/ref&gt; Excluding non-notable books and editions of the same books it could be over 20,000,000.
|-
| &lt;li&gt;{{Q|Q4434321}}{{anchor|Codices}}
{{User:Emijrp/AHKrow|P31=Q213924|wikidata=190|estimate=}}
| Total number of codices is unknown.
|-
| &lt;li&gt;[[List of incunabulas]]{{anchor|Incunabulas}}
{{User:Emijrp/AHKrow|P31=Q216665|wikidata=40|estimate=350000}}
| According to sources there are 350,000 editions, around 1.5 million surviving copies, located in over 5,000 libraries worldwide.&lt;ref&gt;{{cite web |url=http://www.bl.uk/catalogues/istc/index.html |title=Incunabula Short Title Catalogue |date=2013-05-21 |work= |publisher= |accessdate=2013-05-21 |quote=The database records nearly every item printed from movable type before 1501, but not material printed entirely from woodblocks or engraved plates. 29,777 editions are listed as at January 8th 2008, including some 16th-century items previously assigned incorrectly to the 15th century. |archiveurl=http://www.webcitation.org/6GmDOwKm2 |archivedate=2013-05-21 |deadurl=no}}&lt;/ref&gt;&lt;ref&gt;[http://wayback.archive.org/web/20120331011215/http://www.ustc.ac.uk/cicero/search.php Universal Short Title Catalogue]&lt;/ref&gt; See also {{Q|Q634670}} (29,777) and {{Q|Q2411362}} (350,000).
|-
| &lt;li&gt;{{Q|Q6627167}}{{anchor|Manuscripts}}
{{User:Emijrp/AHKrow|P31=Q87167|wikidata=6733|estimate=}}
| Total number of manuscripts is unknown.
|-
| &lt;li&gt;{{Q|Q6640324}}{{anchor|Speeches}}
{{User:Emijrp/AHKrow|P31=Q190539|wikidata=2258|estimate=}}
| Total number of speeches is unknown. See also {{Q|Q986539}}.
|-
| rowspan=4 | {{Q|Q5246046}}{{anchor|Academic literature}}
| &lt;li&gt;{{Q|Q17006880}} ([[:Category:Lists of academic journals|cat]])
{{User:Emijrp/AHKrow|P31=Q737498|wikidata=55771|estimate=}}
| Total number of academic journals is unknown. See also [[Wikipedia:WikiProject Academic Journals/Journals cited by Wikipedia/Missing1|Journals cited by Wikipedia]].
|-
| &lt;li&gt;[[List of conference papers]]
{{User:Emijrp/AHKrow|P31=Q23927052|wikidata=5938|estimate=}}
| Total number of conference papers is unknown.
|-
| &lt;li&gt;[[List of journal articles]]
{{User:Emijrp/AHKrow|P31=Q18918145|wikidata=2268|estimate=5000000}}
| According to sources, over 50 million journal articles have been published since 1665.&lt;ref name="50Mjournalarticles" /&gt; Assuming only 10% are notable, it could be 5,000,000.

Number of records in different academic databases:
{{div col|2}}
* {{Q|Q3151598}} (11,000,000)
* {{Q|Q2990402}} (9,000,000)
* {{Q|Q5367527}} (4,100,000)
* {{Q|Q1273969}} (3,000,000)
* {{Q|Q5970536}} (2,400,000)
* {{Q|Q118398}} (1,243,375)&lt;ref&gt;{{cite web|title=arXiv.org|url=https://arxiv.org|quote=Open access to 1,243,375 e-prints in Physics, Mathematics, Computer Science, Quantitative Biology, Quantitative Finance and Statistics}}&lt;/ref&gt;
* {{Q|Q7433389}} (230,000)
{{div col end}}

See also {{Q|Q1526758}}.
|-
| &lt;li&gt;[[List of theses]]
{{User:Emijrp/AHKrow|P31=Q1266946|wikidata=6729|estimate=}}
| Total number of theses is unknown.
|-
| [[Q134995|Bibliographies]]{{anchor|Bibliographies}}
| &lt;li&gt;[[:Category:Bibliographies by writer|Bibliographies by writer]]
{{User:Emijrp/AHKrow|P31=Q1631107|wikidata=10062|estimate=}}
| Total number of bibliographies is unknown.
|-
| {{Q|Q1004}}{{anchor|Comics}}
| &lt;li&gt;{{Q|Q6646935}}
{{User:Emijrp/AHKrow|P31=Q1004|wikidata=28427|estimate=}}
| Total number of comics is unknown.
|-
| [[Q23622|Dictionaries]]{{anchor|Dictionaries}}
| &lt;li&gt;{{Q|Q6646980}}
{{User:Emijrp/AHKrow|P31=Q23622|wikidata=1374|estimate=38000}}
| According to sources, there are 38,000 dictionaries.&lt;ref&gt;[http://openlibrary.org/search?title=dictionary "Dictionary" search] on {{Q|Q1201876}}&lt;/ref&gt;
|-
| {{Q|Q5292}}{{anchor|Encyclopedias}}
| &lt;li&gt;{{Q|Q6618821}}
{{User:Emijrp/AHKrow|P31=Q5292|wikidata=1428|estimate=13000}}
| According to sources, there are 13,000 encyclopedias.&lt;ref&gt;[http://openlibrary.org/search?title=encyclopedia "Encyclopedia" search] on {{Q|Q1201876}}&lt;/ref&gt;

Some of the most complete enciclopedias are ''{{Q|Q610760}}'' (800,000 articles), ''{{Q|Q455}}'' (100,000 articles), ''{{Q|Q447}}'' (72,000 articles&lt;ref&gt;http://encyclopedie.uchicago.edu/&lt;/ref&gt;) and ''[http://wayback.archive.org/web/20120418220919/http://www.oxfordreference.com/pages/premium Oxford Reference Online]'' (1,400,000 articles).

* [[Wikipedia:WikiProject Missing encyclopedic articles]]
* [[Wikipedia:Size comparisons#Comparison of encyclopedias]]
* [[s:Portal:Reference Works]]

See more encyclopedias in [http://www.google.es/search?tbs=bks:1&amp;tbo=p&amp;q=encyclopedia&amp;num=10&amp;lr=lang_en#q=encyclopedia&amp;hl=es&amp;lr=lang_en&amp;sa=X&amp;ei=9fYyTcW7AoyL4gaT0fisCg&amp;ved=0CBsQpwUoBA&amp;source=lnt&amp;tbs=bks:1%2Clr%3Alang_1en%2Cbkv%3Af%2Ccdr%3A1%2Ccd_min%3A1%2F1%2F1000%2Ccd_max%3A31%2F12%2F1899&amp;fp=f808df3a6890de68 Google Books] and [https://archive.org/search.php?query=subject%3A%22Encyclopedias%20and%20dictionaries%22&amp;sort=-date Internet Archive].

See also {{Q|Q1376286}}, {{Q|Q617910}} and {{Q|Q2477046}}.
|-
| rowspan=3 | Fictional entities{{anchor|Fictional entities}}
| &lt;li&gt;{{Q|Q6646924}}
{{User:Emijrp/AHKrow|P31=Q95074|wikidata=72960|estimate=}}
| rowspan=3 | Total number of fictional entities is unknown.
|-
| &lt;li&gt;{{Q|Q14378313}}
{{User:Emijrp/AHKrow|P31=Q3895768|wikidata=3377|estimate=}}
|-
| &lt;li&gt;[[List of fictional events]]
{{User:Emijrp/AHKrow|P31=Q14136353|wikidata=220|estimate=}}
|-
| {{Q|Q41298}}{{anchor|Magazines}}
| &lt;li&gt;{{Q|Q6647086}}
{{User:Emijrp/AHKrow|P31=Q41298|wikidata=80031|estimate=}}
| Total number of magazines is unknown. According to sources by country:
* [[Q20984173|China]] (9,000)&lt;ref name="chinaorgcnmassmedia"&gt;[http://www.china.org.cn/english/features/Brief/193358.htm China.org.cn] - Mass Media ({{webarchive |url=http://www.webcitation.org/67vEVyWzi?url=http://www.china.org.cn/english/features/Brief/193358.htm |date=May 25, 2012 }})&lt;/ref&gt;
|-
| {{Q|Q11032}}{{anchor|Newspapers}}
| &lt;li&gt;{{Q|Q923745}}
{{User:Emijrp/AHKrow|P31=Q11032|wikidata=23255|estimate=}}
| Total number of newspapers is unknown. According to sources by country:
* [[Q1433703|India]] (72,000)&lt;ref name="indianmedia"&gt;{{cite web |url=http://businesstoday.intoday.in/story/india-in-2020-paranjoy-guha-thakurta-on-media-industry/1/21057.html |title=The wonder that is media |date=2013-05-21 |work= |publisher=Paranjoy Guha Thakurta |accessdate=2013-05-21 |quote=There are over 72,000 publications currently registered with the Registrar of Newspapers of India. At present, over 700 TV channels have been permitted by the Ministry of Information and Broadcasting to uplink or downlink from the country. |archiveurl=http://www.webcitation.org/67vE8gAH5 |archivedate=2012-05-25 |deadurl=no}}&lt;/ref&gt;
* [[Q913489|China]] (2,000)&lt;ref name="chinaorgcnmassmedia"/&gt;
|-
| {{Q|Q8261}}{{anchor|Novels}}
| &lt;li&gt;{{Q|Q5251635}}
{{User:Emijrp/AHKrow|P31=Q8261|wikidata=5975|estimate=}}
| Total number of novels is unknown.
|-
| rowspan=3 | {{Q|Q482}}{{anchor|Poetry}}
| &lt;li&gt;{{Q|Q6634073}}
{{User:Emijrp/AHKrow|P31=Q5185279|wikidata=104542|estimate=}}
| Total number of poems is unknown.
|-
| &lt;li&gt;{{Q|Q482}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of poetic forms is unknown.
|-
| &lt;li&gt;{{Q|Q253286}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of poetry groups and movements is unknown.
|-
| {{Q|Q11635}}{{anchor|Theatre}}
| &lt;li&gt;[[List of plays]]
{{User:Emijrp/AHKrow|P31=Q25379|wikidata=21429|estimate=}}
| Total number of plays is unknown.
|-
| Awards
| &lt;li&gt;{{Q|Q3414336}}
{{User:Emijrp/AHKrow|P31=Q378427|wikidata=2454|estimate=}}
| Total number of literature awards is unknown.
|-
{{User:Emijrp/AHKrowtotal|wikidata=564710|estimate=25835351}}
|}

{| class="wikitable sortable plainlinks"
|-
! rowspan="2" | Database
! colspan="2" | Estimate 
! rowspan="2" | References
|-
! Articles
! Progress 
|-
| {{Q|Q846596}} ||  || style="text-align: center;" data-sort-value=264000000 | '''?/264000000''' || Bibliographic records about books, journals and more
|-
| {{Q|Q1201876}} ||  || style="text-align: center;" data-sort-value=20000000 | '''164/20000000''' || Open Library goal is to provide a page on the web for every book ever published. They have 20 million edition records and provide access to 1.7 million scanned versions of books.&lt;br/&gt;AutoList: [https://tools.wmflabs.org/autolist/index.php?language=en&amp;project=wikipedia&amp;wdq=claim%5B648%5D%20claim%5B31%3A571,3331189%5D&amp;run=Run 164] ([[d:Q648|Q648]])
|-
| [[Harvard Bibliographic Dataset]] ||  || style="text-align: center;" data-sort-value=12000000 | '''?/12000000''' || Bibliographic records for materials held by the Harvard Library, including books, journals, manuscripts, archival materials, electronic resources, scores, audio, video and other materials&lt;ref&gt;[http://openmetadata.lib.harvard.edu/sites/default/files/Harvard_Library_Bibliographic_Dataset_Documentation.pdf Harvard Library Bibliographic Dataset Documentation] ({{webarchive |url=http://www.webcitation.org/68DZcNFG0?url=http://openmetadata.lib.harvard.edu/sites/default/files/Harvard_Library_Bibliographic_Dataset_Documentation.pdf |date=June 6, 2012 }})&lt;/ref&gt;
|-
| {{Q|Q461}} ||  || style="text-align: center;" data-sort-value=3000000 | '''?/3000000''' || E-books and texts&lt;ref&gt;[http://www.archive.org/details/texts Free Books : Download &amp; Streaming : eBooks and Texts : Internet Archive&lt;!-- Bot generated title --&gt;]&lt;/ref&gt;
|-
| {{Q|Q22673}} ||  || style="text-align: center;" data-sort-value=42000 | '''?/42000''' || E-books and documents
|}

Theatres are counted in [[#Architecture]].

This section excludes [[#Biographies|biographies]] and [[#Libraries|libraries]].

=== Performing arts ===

'''{{Q|Q184485}}''' are a form of {{Q|Q735}} in which artists use their voices and/or their bodies, often in relation to other objects, to convey artistic expression.  It is different from {{Q|Q36649}}, which is when artists use paint/canvas or various materials to create physical or static [[Q838948|art objects]]. Performing arts include several disciplines, each performed in front of a live audience.

* '''{{Q|Q11639}}''' is an {{Q|Q735}} that generally refers to [[Q79782|movement]] of the body, usually rhythmic and to music, used as a form of [[Q5373787|expression]], {{Q|Q345367}} [[Q223642|interaction]] or presented in a [[Q168796|spiritual]] or {{Q|Q35140}} setting. See also {{Q|Q6018860}} and {{Q|Q7112602}}.
* '''{{Q|Q638}}''' is an {{Q|Q735}} form whose [[Q547989|medium]] is {{Q|Q11461}} and silence. Its common elements are [[Q118819|pitch]] (which governs {{Q|Q170412}} and {{Q|Q184421}}), {{Q|Q170406}} (and its associated concepts {{Q|Q189214}}, [[Q630649|meter]], and [[Q372923|articulation]]), [[Q113558|dynamics]], and the sonic qualities of {{Q|Q176501}} and [[Q325944|texture]]. See also {{Q|Q5608977}}, {{Q|Q7112688}} and [[:Category:Music-related lists]].
&lt;!--
&lt;gallery mode="packed-hover"&gt;
File:Two dancers.jpg|thumb|right|Example of modern dance
&lt;/gallery&gt;
--&gt;
{| class="wikitable sortable plainlinks"
! width="100px" | Topic 
! width="300px" | Related pages
! Wikidata
! Estimate
! References 
|-
| rowspan=4 | {{Q|Q11639}}{{anchor|Dance}}
| &lt;li&gt;{{Q|Q1759354}} ([[:Category:Dance related lists|cat]])
{{User:Emijrp/AHKrow|P31=Q11639|wikidata=673|estimate=}}
| Total number of dances is unknown.
|-
| &lt;li&gt;{{Q|Q6710019}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of dance styles is unknown.
|-
| &lt;li&gt;[[Q17081111|List of dances by origin]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=200}}
| A quick and low estimate is one dance style per country.
|-
| &lt;li&gt;[[List of dance awards]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of dance awards is unknown.
|-
| rowspan=10 | {{Q|Q638}}{{anchor|Music}}
| &lt;li&gt;{{Q|Q1033564}}
{{User:Emijrp/AHKrow|P31=Q34379|wikidata=8120|estimate=500}}
| According to unknown sources there are 500 instruments.
|-
| &lt;li&gt;{{Q|Q1255814}}
{{User:Emijrp/AHKrow|P31=Q482994|wikidata=258627|estimate=1000000}}
| Total number of albums is over 1,000,000.

The {{Q|Q284801}} database holds information for around 1.5 million {{Q|Q34467}} (many are duplicates), {{Q|Q31181}} database contains entries for 800,000 unique albums, {{Q|Q504063}} database contains over 890,000 master releases (several versions of releases) and nearly 6.5 million unique individual versions of releases,&lt;ref name="Discogs releases"&gt;{{cite web|url=http://www.discogs.com/search|title=Discogs - search|publisher={{Q|Q504063}}|date=|accessdate=4 November 2015}}&lt;/ref&gt; {{Q|Q1132897}} project contains over 50,000 free and open albums. {{Q|Q7302817}} collection holds 3 million albums and singles.

New albums in USA: 75,000 (2010), 96,100 (2009), 106,000 (2008), 76,000 (2006)&lt;ref name="newusalbums"&gt;[http://www.billboard.com/biz/articles/news/1179201/business-matters-75000-albums-released-in-us-in-2010-down-22-from-2009 Business Matters: 75,000 Albums Released In U.S. In 2010 -- Down 22% From 2009]&lt;/ref&gt;

See also {{Q|Q13489682}}.
|-
| &lt;li&gt;{{Q|Q17099416}}
{{User:Emijrp/AHKrow|P31=Q7366|wikidata=61940|estimate=1000000}}
| According to sources there are 97 million songs.&lt;ref&gt;[http://www.digitalmusicnews.com/stories/100611supersaturation There Are 97,000,000 Songs In This World...]{{dead link|date=September 2015}}&lt;/ref&gt; Estimate of notable songs is 1,000,000.
|-
| &lt;li&gt;{{Q|Q6647122}}
{{User:Emijrp/AHKrow|P31=Q2743|wikidata=2013|estimate=}}
| Total number of musicals is unknown.
|-
| &lt;li&gt;[[List of concertos]]
{{User:Emijrp/AHKrow|P31=Q9748|wikidata=756|estimate=}}
| Total number of concertos is unknown.
|-
| &lt;li&gt;{{Q|Q16888358}}
{{User:Emijrp/AHKrow|P31=Q1344|wikidata=6659|estimate=4000}}
| Total number of operas is unknown. According to sources 3,603 operas performed between 1597 and 1940.&lt;ref&gt;[http://archive.org/details/AnnalesOfOpera1597-1940 Annales of Opera 1597-1940]&lt;/ref&gt;&lt;ref&gt;[http://listserv.bccls.org/cgi-bin/wa?A2=OPERA-L;IXc2OA;20051120165659-0500C Re: How Many Operas ARE there?] Opera-l archives&lt;/ref&gt;
|-
| &lt;li&gt;{{Q|Q3245247}}
{{User:Emijrp/AHKrow|P31=Q9734|wikidata=1071|estimate=}}
| Total number of symphonies is unknown.
|-
| &lt;li&gt;[[List of canons]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of canons is unknown.
|-
| &lt;li&gt;{{Q|Q843744}}
{{User:Emijrp/AHKrow|P31=Q188451|wikidata=1717|estimate=}}
| Total number of music styles is unknown.
|-
| &lt;li&gt;{{Q|Q48839600}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of awards is unknown.
|-
{{User:Emijrp/AHKrowtotal|wikidata=341576|estimate=2010930}}
|}

=== Visual arts ===

'''{{Q|Q36649}}''' are a form of {{Q|Q735}} in which artists use paint, canvas or various materials to create physical or static [[Q838948|art objects]].

* '''{{Q|Q12681}}''' is the design and execution of lettering with a broad tip instrument, brush, among other writing instruments.
* '''{{Q|Q93184}}''' makes use of any number of drawing instruments to mark a two-dimensional medium. See also {{Q|Q13656804}}.
* '''{{Q|Q12684}}''' is a general term for a popular style or practice, especially in clothing, foot wear, or accessories. Fashion references to anything that is the current trend in look and dress up of a person.
* '''{{Q|Q10988986}}''' are those arts and crafts that use plant, animal, or synthetic fibers to construct practical or decorative objects. See also {{Q|Q1364201}}.
* '''{{Q|Q11629}}''' is the practice of applying {{Q|Q174219}}, {{Q|Q161179}}, {{Q|Q1075}} or other medium to a {{Q|Q297895}} (support base).  The application of the medium is commonly applied to the base with a {{Q|Q614467}} but other objects can be used. See also {{Q|Q16247816}} and {{Q|Q5671946}}.
* '''{{Q|Q11633}}''' is the {{Q|Q735}}, {{Q|Q336}} and practice of creating durable {{Q|Q478798}} by recording {{Q|Q9128}} or other {{Q|Q20076678}}, either electronically by means of an {{Q|Q209121}} or chemically by means of a light-sensitive material such as {{Q|Q6293}}. See also {{Q|Q7112699}}.
* '''{{Q|Q11060274}}''' is the process of making artworks by printing, normally on paper. Printmaking normally covers only the process of creating prints with an element of originality, rather than just being a photographic reproduction of a painting.
* '''{{Q|Q11634}}''' is [[Q34929|three-dimensional]] artwork created by shaping or combining hard materials—typically [[Q12573007|stone]] such as {{Q|Q40861}}—or metal, glass, or wood. See also {{Q|Q7112723}}.

&lt;gallery mode="packed-hover"&gt;
File:Ijazah3.jpg|An [[Q12560|Ottoman]] {{Q|Q3048139}} written in [[Q13955|Arabic]] certifying competence in calligraphy, 1206 [[Q28892|AH]]/1791 {{Q|Q159791}}
File:Rembrandt-A-Lion-Lying-Down-207063 detail.jpg|Pen and wash lion by {{Q|Q5598}} in the {{Q|Q19675}}
File:Meisje met de parel.jpg|''{{Q|Q185372}}'' (1665) by {{Q|Q41264}}
File:Hokusai-fuji7.png|{{Q|Q39231}}, from the ''[[Q227494|Thirty-six Views of Mount Fuji]]'', color {{Q|Q173242}} by {{Q|Q5586}}
File:Latticed window at lacock abbey 1835.jpg|A latticed window in {{Q|Q1148460}}, England, photographed by {{Q|Q299565}} in 1835
File:Dying gaul.jpg|''{{Q|Q848790}}'', a Roman marble copy of a {{Q|Q428995}} work of the late 3rd century BCE {{Q|Q333906}}, Rome
&lt;/gallery&gt;

{| class="wikitable sortable plainlinks"
! width="150px" | Topic 
! width="300px" | Related pages
! Wikidata
! Estimate
! References 
|-
| rowspan=3 | {{Q|Q12681}}{{anchor|Calligraphy}}
| &lt;li&gt;[[:Category:Calligraphy]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of calligraphy articles is unknown.
|-
| &lt;li&gt;{{Q|Q632304}}
{{User:Emijrp/AHKrow|P31=Q17451|wikidata=797|estimate=}}
| Total number of typefaces is unknown.
|-
| &lt;li&gt;{{Q|Q6644188}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of typographic features is unknown.
|-
| rowspan=4 | {{Q|Q93184}}{{anchor|Drawing}}
| &lt;li&gt;[[List of drawings]]
{{User:Emijrp/AHKrow|P31=Q93184|wikidata=40165|estimate=}}
| Total number of drawings is unknown.
|-
| &lt;li&gt;[[List of drawing genres]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of drawing genres is unknown.
|-
| &lt;li&gt;[[List of drawing techniques]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of drawing techniques is unknown.
|-
| &lt;li&gt;[[List of drawing awards]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of drawing awards is unknown.
|-
| rowspan=2 | {{Q|Q12684}}{{anchor|Fashion}}
| &lt;li&gt;[[List of fashion styles]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of fashion styles is unknown.
|-
| &lt;li&gt;[[List of fashion awards]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of fashion awards is unknown.
|-
| rowspan=6 | {{Q|Q11629}}{{anchor|Painting}}
| &lt;li&gt;{{Q|Q5671946}}
{{User:Emijrp/AHKrow|P31=Q3305213|wikidata=362079|estimate=}}
| Total number of paintings is unknown.

According to {{Q|Q7257339}} database there are 213,000 artworks contained within the UK's national collection.&lt;ref name="BBC your paintings"&gt;{{cite web|url=http://www.bbc.co.uk/arts/yourpaintings/paintings/search|title=BBC - Your Paintings|publisher={{Q|Q9531}}|work={{Q|Q747860}}|date=|accessdate=4 November 2015}}&lt;/ref&gt;

See also [[:d:Wikidata:WikiProject sum of all paintings]]
|-
| &lt;li&gt;[[List of painting genres]]
{{User:Emijrp/AHKrow|P31=Q16743958|wikidata=47|estimate=}}
| Total number of painting genres is unknown.
|-
| &lt;li&gt;[[List of painting styles]]
{{User:Emijrp/AHKrow|P31=Q968159|wikidata=572|estimate=}}
| Total number of movements and styles is unknown.
|-
| &lt;li&gt;[[List of painting techniques]] ([[:Category:Painting techniques|cat]])
{{User:Emijrp/AHKrow|P31=Q1231896|wikidata=51|estimate=}}
| Total number of painting techniques is unknown.
|-
| &lt;li&gt;[[List of painting materials and tools]]
{{User:Emijrp/AHKrow|P31=Q3300034|wikidata=97|estimate=}}
| Total number of materials and tools is unknown.
|-
| &lt;li&gt;[[List of painting awards]] 
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of awards is unknown.
|-
| rowspan=4 | {{Q|Q11633}}{{anchor|Photography}}
| &lt;li&gt;[[List of photographs]] ([[:Category:Photographs|cat]])
{{User:Emijrp/AHKrow|P31=Q125191|wikidata=6841|estimate=}}
| Total number of photographs is unknown. See also {{Q|Q6489250}}.
|-
| &lt;li&gt;[[List of photographic styles]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of photograph styles is unknown.
|-
| &lt;li&gt;[[List of photographic techniques]] ([[:Category:Photographic techniques|cat]])
{{User:Emijrp/AHKrow|P31=Q1439691|wikidata=70|estimate=}}
| Total number of photograph techniques is unknown.
|-
| &lt;li&gt;[[List of photography awards]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of photograph awards is unknown.
|-
| rowspan=2 | {{Q|Q11060274}}{{anchor|Printmaking}}
| &lt;li&gt;[[List of printmaking techniques]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of printmaking techniques is unknown.
|-
| &lt;li&gt;[[List of printmaking awards]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of printmaking awards is unknown.
|-
| rowspan=3 | {{Q|Q11634}}{{anchor|Sculpture}}
| &lt;li&gt;[[List of sculptures]]
{{User:Emijrp/AHKrow|P31=Q860861|wikidata=70461|estimate=}}
| Total number of sculptures is unknown.
|-
| &lt;li&gt;[[List of sculpture styles]]
{{User:Emijrp/AHKrow|P31=Q18783400|wikidata=24|estimate=}}
| Total number of sculpture styles is unknown.
|-
| &lt;li&gt;[[List of sculpture awards]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of sculpture awards is unknown.
|-
| rowspan=1 | {{Q|Q10988986}}{{anchor|Textile arts}}
| &lt;li&gt;
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of textile arts articles is unknown.
|-
{{User:Emijrp/AHKrowtotal|wikidata=481204|estimate=481204}}
|}

== Geography ==

'''{{Q|Q1071}}''' is the {{Q|Q336}} that studies the lands, features, inhabitants, and phenomena of {{Q|Q2}}. This section covers every human geography settlement and every physical geography location in the world.

See also [[:Category:Geography-related lists]], [[:Category:Lists of places]], {{Q|Q1194038}}&lt;ref&gt;{{cite web | url=http://earth-info.nga.mil/gns/html/cntry_files.html | title=Complete Files of Geographic Names for Geopolitical Areas from GNS | archiveurl=http://wayback.archive.org/web/20120823004343/http://earth-info.nga.mil/gns/html/cntry_files.html | archivedate=2012-08-23 | deadurl=yes}} [[User:Emijrp/GNS]]&lt;/ref&gt; and {{Q|Q830106}}.&lt;ref&gt;{{cite web|url=http://geonames.org|title=Geonames}} [[User:Emijrp/Geonames]]&lt;/ref&gt;

&lt;gallery mode="packed-hover"&gt;
File:Imageworld-artphp3.png|Worldwide density of geotagged {{Q|Q52}} entries
File:Geonames4.png|Worldwide density of {{Q|Q830106}} entries
&lt;/gallery&gt;

=== Human geography ===

&lt;!--&lt;div style="width: 300px;float: right;"&gt;
{{divbox|radius=10px|1=grayh|2=Soundtrack for this section:|3=&lt;li&gt;[https://www.youtube.com/watch?v=Pwe-pA6TaZk Where the Hell is Matt? 2012]&lt;li&gt;[https://www.youtube.com/watch?v=zlfKdbWwruY Where the Hell is Matt? 2008]}}
&lt;/div&gt;--&gt;
[[File:OrteliusWorldMap.jpeg|thumb|200px|1570 world map by {{Q|Q232916}}.]]
'''{{Q|Q12831143}}''' is the branch of the {{Q|Q34749}} that deals with the study of people and their communities,
cultures, economies and interaction with the environment by noticing their relations with and across space and place.&lt;ref name="HGDICT"&gt;{{Cite encyclopedia|last=Johnston|first=Ron|editor1-last=Johnston|editor1-first=Ron|editor2-last=Gregory|editor2-first=Derek|editor3-last=Pratt|editor3-first=Geraldine|display-editors = 3 |editor4-last=Watts|editor4-first=Michael|title=Human Geography|encyclopedia=The Dictionary of Human Geography| pages=353–60|publisher=Blackwell|location=Oxford|year=2000}}&lt;/ref&gt; As an intellectual discipline, {{Q|Q1071}} is divided into the sub-fields of {{Q|Q52107}} and human geography, the latter concentrating upon the study of human activities, by the application of [[Q839486|qualitative]] and [[Q730675|quantitative]] research methods.

{{main|List of sovereign states|Table of administrative divisions by country|Municipality|Village}}
{{see also|Template:Articles on third-level administrative divisions of countries|Template:Articles on fourth-level administrative divisions of countries}}
{{category see also|Lists of countries|Lists by country|Bibliographies of countries or regions|Outlines of countries}}

{| class="wikitable sortable plainlinks"
! width="100px" | Topic 
! width="200px" | Related pages
! Wikidata
! Estimate
! References 
|-
| rowspan=2 | {{flag|United Nations}} [[Q1065|Earth]]
| &lt;li&gt;{{Q|Q11750}}
{{User:Emijrp/AHKrow|P31=Q3624078|wikidata=475|estimate=206}}
| Membership within the United Nations system divides 206 listed sovereign states into three categories: 193 member states, two observer states, and 11 other states.&lt;ref name="unms"&gt;{{cite web|title=United Nations Member States|url=http://www.un.org/en/members/index.shtml|publisher=United Nations|author=Press Release ORG/1469|accessdate=28 February 2011|date=3 July 2006}}&lt;/ref&gt; If we count former states ({{Q|Q2277}}, etc) we get up to 400. 
|-
| &lt;li&gt;{{Q|Q2339872}} ([[:Category:Micronations|cat]])
{{User:Emijrp/AHKrow|P31=Q188443|wikidata=125|estimate=100}}
| Notable micronations are probably over 100.
|}

==== Africa ====
[[File:Africa (orthographic projection).svg|thumb|right|200px|Africa]]
'''{{Q|Q15}}''' is the world's second-largest and second-most-populous {{Q|Q5107}}. At about 30.3 million km² (11.7 million square&amp;nbsp;miles) including adjacent islands, it covers six per cent of {{Q|Q2}}'s total surface area and 20.4 per cent of its total land area. With 1.1 billion people as of 2013, it accounts for about 15% of the world's human population. The continent is surrounded by the {{Q|Q4918}} to the north, both the {{Q|Q899}} and the {{Q|Q23406}} along the {{Q|Q36755}} to the northeast, the {{Q|Q1239}} to the southeast, and the {{Q|Q97}} to the west. The continent includes {{Q|Q1019}} and various {{Q|Q33837}}. It contains 54 [[Q1058726|fully recognized]] {{Q|Q3624078}} ([[Q6256|countries]]), nine [[Q183366|territories]] and two ''de facto'' independent [[Q199683|states with limited or no recognition]].

Africa hosts a large diversity of ethnicities, cultures and languages. In the late 19th century European countries [[Q304121|colonized most of Africa]]. Africa also varies greatly with regard to environments, economics, historical ties and government systems. However, most present states in Africa originate from a process of {{Q|Q230533}} in the 20th century.

{{main|List of sovereign states and dependent territories in Africa|List of cities in Africa}}
{{see also|Template:Articles on first-level administrative divisions of African countries|Template:Articles on second-level administrative divisions of African countries}}

&lt;gallery mode="packed-hover"&gt;
File:Lagos Island.jpg|{{Q|Q8673}}, {{flag|Nigeria}} {{Q|Q1033}}
File:View from Cairo Tower 31march2007.jpg|{{Q|Q85}}, {{flag|Egypt}} {{Q|Q79}}
File:Isbaheysiga Mosque in Mogadishu (2).jpg|{{Q|Q2449}}, {{flag|Somalia}} {{Q|Q1045}}
File:Khartoum.jpg|{{Q|Q1963}}-{{Q|Q180921}}, {{flag|Sudan}} {{Q|Q1049}}
File:NBO5.jpg|{{Q|Q3870}}, {{flag|Kenya}} {{Q|Q114}}
&lt;/gallery&gt;

{| class="wikitable sortable plainlinks"
! width="150px" | Country 
! width="300px" | Related pages
! Wikidata
! Estimate
! References 
|-
| rowspan=3 | {{flag|Algeria}} {{Q|Q262}}
| &lt;li&gt;{{Q|Q240601}}
{{User:Emijrp/AHKrow|P31=Q240601|wikidata=48|estimate=48}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q2614970}}
{{User:Emijrp/AHKrow|P31=Q2614970|wikidata=551|estimate=553}}
|-
| &lt;li&gt;{{Q|Q2989398}}
{{User:Emijrp/AHKrow|P31=Q2989398|wikidata=1551|estimate=1541}}
|-
| rowspan=3 | {{flag|Angola}} {{Q|Q916}}
| &lt;li&gt;{{Q|Q329028}}
{{User:Emijrp/AHKrow|P31=Q329028|wikidata=18|estimate=18}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q22065638}}
{{User:Emijrp/AHKrow|P31=Q378508|wikidata=566|estimate=162}}
|-
| &lt;li&gt;{{Q|Q1841580}}
{{User:Emijrp/AHKrow|P31=Q1841580|wikidata=58|estimate=559}}
|-
| rowspan=4 | {{flag|Benin}} {{Q|Q962}}
| &lt;li&gt;{{Q|Q792929}}
{{User:Emijrp/AHKrow|P31=Q792929|wikidata=12|estimate=12}}
| rowspan=4 | 
|-
| &lt;li&gt;{{Q|Q1780506}}
{{User:Emijrp/AHKrow|P31=Q1780506|wikidata=76|estimate=77}}
|-
| &lt;li&gt;{{Q|Q3623867}}
{{User:Emijrp/AHKrow|P31=Q3623867|wikidata=490|estimate=546}}
|-
| &lt;li&gt;[[Villages of Benin]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
|-
| rowspan=2 | {{flag|Botswana}} {{Q|Q963}}
| &lt;li&gt;{{Q|Q57368}}
{{User:Emijrp/AHKrow|P31=Q57368|wikidata=9|estimate=16}}
| rowspan=2 | 
|-
| &lt;li&gt;{{Q|Q58017}}
{{User:Emijrp/AHKrow|P31=Q58017|wikidata=16|estimate=19}}
|-
| rowspan=3 | {{flag|Burkina Faso}} {{Q|Q965}}
| &lt;li&gt;{{Q|Q867094}}
{{User:Emijrp/AHKrow|P31=Q867094|wikidata=13|estimate=13}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q852151}}
{{User:Emijrp/AHKrow|P31=Q852151|wikidata=45|estimate=45}}
|-
| &lt;li&gt;{{Q|Q2566190}}
{{User:Emijrp/AHKrow|P31=Q2566190|wikidata=360|estimate=351}}
|-
| rowspan=3 | {{flag|Burundi}} {{Q|Q967}}
| &lt;li&gt;{{Q|Q476075}}
{{User:Emijrp/AHKrow|P31=Q476075|wikidata=18|estimate=17}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q1577513}}
{{User:Emijrp/AHKrow|P31=Q1577513|wikidata=129|estimate=117}}
|-
| &lt;li&gt;{{Q|Q2904674}}
{{User:Emijrp/AHKrow|P31=Q2904674|wikidata=0|estimate=2639}}
|-
| rowspan=4 | {{flag|Cameroon}} {{Q|Q1009}}
| &lt;li&gt;{{Q|Q869042}}
{{User:Emijrp/AHKrow|P31=Q869042|wikidata=10|estimate=10}}
| rowspan=4 | 
|-
| &lt;li&gt;{{Q|Q2306813}}
{{User:Emijrp/AHKrow|P31=Q2306813|wikidata=58|estimate=58}}
|-
| &lt;li&gt;{{Q|Q3076994}}
{{User:Emijrp/AHKrow|P31=Q3076994|wikidata=320|estimate=300}}
|-
| &lt;li&gt;[[Subdistricts of Cameroon]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
|-
| rowspan=2 | {{flag|Cape Verde}} {{Q|Q1011}}
| &lt;li&gt;Concelhos of Cape Verde
{{User:Emijrp/AHKrow|P31=Q12712989|wikidata=22|estimate=22}}
| rowspan=2 | 
|-
| &lt;li&gt;Freguesias of Cape Verde
{{User:Emijrp/AHKrow|P31=Q12712991|wikidata=31|estimate=32}}
|-
| rowspan=3 | {{flag|Central African Republic}} {{Q|Q929}}
| &lt;li&gt;[[Q843886|Prefectures]]
{{User:Emijrp/AHKrow|P31=Q843886|wikidata=15|estimate=14}}
| rowspan=3 | 
|-
| &lt;li&gt;[[Q1911973|Sub-prefectures]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=71}}
|-
| &lt;li&gt;[[Communes of the Central African Republic|Communes]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=170}}
|-
| rowspan=4 | {{flag|Chad}} {{Q|Q657}}
| &lt;li&gt;{{Q|Q640262}}
{{User:Emijrp/AHKrow|P31=Q640262|wikidata=24|estimate=22}}
| rowspan=4 | 
|-
| &lt;li&gt;{{Q|Q2711758}}
{{User:Emijrp/AHKrow|P31=Q2711758|wikidata=64|estimate=53}}
|-
| &lt;li&gt;{{Q|Q7630629}}
{{User:Emijrp/AHKrow|P31=Q7630629|wikidata=0|estimate=348}}
|-
| &lt;li&gt;[[Rural communities of Chad]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
|-
| rowspan=3 | {{flag|Comoros}} {{Q|Q970}}
| &lt;li&gt;[[Q23387862|Mayor islands of Comoros]]
{{User:Emijrp/AHKrow|P31=Q21073990|wikidata=3|estimate=3}}
| rowspan=3 | Three islands under the control of the Comoros ({{Q|Q271797}}, {{Q|Q244978}}, {{Q|Q231324}}) have the status of autonomous islands (formerly governorates). A fourth island, Mahoré (Mayotte), is administered by France but claimed by the Comoros.
|-
| &lt;li&gt;[[Q23387862|Minor islands of Comoros]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=20}}
|-
| &lt;li&gt;[[Municipalities of Comoros]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
|-
| rowspan=4 | {{flag|Democratic Republic of the Congo}} {{Q|Q974}}
| &lt;li&gt;[[Q654140|Provinces of the D. R. Congo]]
{{User:Emijrp/AHKrow|P31=Q5283559|wikidata=21|estimate=26}}
| rowspan=4 | 
|-
| &lt;li&gt;[[Q7703797|Territories of the D. R. Congo]]
{{User:Emijrp/AHKrow|P31=Q7703797|wikidata=61|estimate=192}}
|-
| &lt;li&gt;[[Q5097099|Chiefdoms and sectors of the D. R. Congo]]
{{User:Emijrp/AHKrow|P31=Q5097099|wikidata=0|estimate=}}
|-
| &lt;li&gt;[[Q5283559|Districts of the D. R. Congo]]
{{User:Emijrp/AHKrow|P31=Q5283559|wikidata=21|estimate=26}}
|-
| rowspan=3 | {{flag|Republic of the Congo}} {{Q|Q971}}
| &lt;li&gt;{{Q|Q868893}}
{{User:Emijrp/AHKrow|P31=Q868893|wikidata=13|estimate=12}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q1958165}}
{{User:Emijrp/AHKrow|P31=Q1958165|wikidata=90|estimate=86}}
|-
| &lt;li&gt;{{Q|Q5154054}}
{{User:Emijrp/AHKrow|P31=Q5154054|wikidata=0|estimate=7}}
|-
| rowspan=5 | {{flag|Côte d'Ivoire}} {{Q|Q1008}}
| &lt;li&gt;{{Q|Q851830}}
{{User:Emijrp/AHKrow|P31=Q851830|wikidata=63|estimate=31}}
| rowspan=5 | Prior to 2011 there were over 1300 communes. In March 2012, the government abolished 1126 communes. As a result of the reorganisation, there are now 197 communes in Ivory Coast.
|-
| &lt;li&gt;{{Q|Q617807}}
{{User:Emijrp/AHKrow|P31=Q617807|wikidata=114|estimate=81}}
|-
| &lt;li&gt;{{Q|Q20981165}}
{{User:Emijrp/AHKrow|P31=Q20981165|wikidata=1|estimate=510}}
|-
| &lt;li&gt;{{Q|Q20717263}}
{{User:Emijrp/AHKrow|P31=Q20717263|wikidata=13|estimate=12}}
|-
| &lt;li&gt;{{Q|Q2679157}}
{{User:Emijrp/AHKrow|P31=Q2679157|wikidata=1011|estimate=1300}}
|-
| rowspan=2 | {{flag|Djibouti}} {{Q|Q977}}
| &lt;li&gt;{{Q|Q977}}
{{User:Emijrp/AHKrow|P31=Q1202812|wikidata=6|estimate=5}}
| rowspan=2 | 
|-
| &lt;li&gt;{{Q|Q2982272}}
{{User:Emijrp/AHKrow|P31=Q2982272|wikidata=21|estimate=11}}
|-
| rowspan=3 | {{flag|Egypt}} {{Q|Q79}}
| &lt;li&gt;{{Q|Q204910}}
{{User:Emijrp/AHKrow|P31=Q204910|wikidata=27|estimate=27}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q3312607}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=232}}
|-
| &lt;li&gt;[[Villages of Egypt]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=4617}}
|-
| rowspan=2 | {{flag|Equatorial Guinea}} {{Q|Q983}}
| &lt;li&gt;{{Q|Q867597}}
{{User:Emijrp/AHKrow|P31=Q867597|wikidata=8|estimate=7}}
| rowspan=2 | 
|-
| &lt;li&gt;[[Districts of Equatorial Guinea]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=30}}
|-
| rowspan=2 | {{flag|Eritrea}} {{Q|Q986}}
| &lt;li&gt;{{Q|Q874223}}
{{User:Emijrp/AHKrow|P31=Q874223|wikidata=6|estimate=6}}
| rowspan=2 | 
|-
| &lt;li&gt;{{Q|Q3729800}}
{{User:Emijrp/AHKrow|P31=Q3729800|wikidata=62|estimate=}}
|-
| rowspan=4 | {{flag|Ethiopia}} {{Q|Q115}}
| &lt;li&gt;{{Q|Q1057504}}
{{User:Emijrp/AHKrow|P31=Q1057504|wikidata=10|estimate=9}}
| rowspan=4 | 
|-
| &lt;li&gt;{{Q|Q219875}}
{{User:Emijrp/AHKrow|P31=Q219875|wikidata=78|estimate=68}}
|-
| &lt;li&gt;{{Q|Q690840}}
{{User:Emijrp/AHKrow|P31=Q690840|wikidata=786|estimate=770}}
|-
| &lt;li&gt;[[Kebeles of Ethiopia]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
|-
| rowspan=2 | {{flag|Gabon}} {{Q|Q1000}}
| &lt;li&gt;{{Q|Q653596}}
{{User:Emijrp/AHKrow|P31=Q653596|wikidata=9|estimate=9}}
| rowspan=2 | 
|-
| &lt;li&gt;{{Q|Q655851}}
{{User:Emijrp/AHKrow|P31=Q655851|wikidata=50|estimate=49}}
|-
| rowspan=3 | {{flag|Gambia}} {{Q|Q1005}}
| &lt;li&gt;[[Q7631093|Regions of the Gambia]]
{{User:Emijrp/AHKrow|P31=Q15646510|wikidata=7|estimate=}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q1504917}}
{{User:Emijrp/AHKrow|P31=Q1504917|wikidata=40|estimate=37}}
|-
| &lt;li&gt;Local government areas
{{User:Emijrp/AHKrow|P31=Q2054441|wikidata=7|estimate=}}
|-
| rowspan=6 | {{flag|Ghana}} {{Q|Q117}}
| &lt;li&gt;{{Q|Q1052743}}
{{User:Emijrp/AHKrow|P31=Q1052743|wikidata=10|estimate=10}}
| rowspan=6 | 
|-
| &lt;li&gt;{{Q|Q545769}}
{{User:Emijrp/AHKrow|P31=Q545769|wikidata=255|estimate=138}}
|-
| &lt;li&gt;[[Town or area councils of Ghana]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=58}}
|-
| &lt;li&gt;[[Zonal councils of Ghana]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=108}}
|-
| &lt;li&gt;[[Area councils of Ghana]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=626}}
|-
| &lt;li&gt;[[Unit committees of Ghana]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=16000}}
|-
| rowspan=4 | {{flag|Guinea}} {{Q|Q1006}}
| &lt;li&gt;{{Q|Q1067116}}
{{User:Emijrp/AHKrow|P31=Q1067116|wikidata=8|estimate=8}}
| rowspan=4 | 
|-
| &lt;li&gt;{{Q|Q1394653}}
{{User:Emijrp/AHKrow|P31=Q1394653|wikidata=33|estimate=33}}
|-
| &lt;li&gt;{{Q|Q1853398}}
{{User:Emijrp/AHKrow|P31=Q1853398|wikidata=342|estimate=303}}
|-
| &lt;li&gt;[[Urban communes of Guinea]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=38}}
|-
| rowspan=2 | {{flag|Guinea-Bissau}} {{Q|Q1007}}
| &lt;li&gt;{{Q|Q1054403}}
{{User:Emijrp/AHKrow|P31=Q1054403|wikidata=8|estimate=8}}
| rowspan=2 | 
|-
| &lt;li&gt;{{Q|Q7444736}}
{{User:Emijrp/AHKrow|P31=Q7444736|wikidata=26|estimate=37}}
|-
| rowspan=5 | {{flag|Kenya}} {{Q|Q114}}
| &lt;li&gt;{{Q|Q70252}}
{{User:Emijrp/AHKrow|P31=Q70252|wikidata=9|estimate=8}}
| rowspan=5 | 
|-
| &lt;li&gt;{{Q|Q7630574}}
{{User:Emijrp/AHKrow|P31=Q3239205|wikidata=4|estimate=46}}
|-
| &lt;li&gt;{{Q|Q4893522}}
{{User:Emijrp/AHKrow|P31=Q4893522|wikidata=0|estimate=262}}
|-
| &lt;li&gt;{{Q|Q6664846}}
{{User:Emijrp/AHKrow|P31=Q269218|wikidata=47|estimate=2427}}
|-
| &lt;li&gt;[[Sublocations of Kenya]]
{{User:Emijrp/AHKrow|P31=Q7630574|wikidata=0|estimate=6612}}
|-
| rowspan=3 | {{flag|Lesotho}} {{Q|Q1013}}
| &lt;li&gt;{{Q|Q844531}}
{{User:Emijrp/AHKrow|P31=Q844531|wikidata=10|estimate=10}}
| rowspan=3 | 
|-
| &lt;li&gt;[[Constituencies of Lesotho]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=80}}
|-
| &lt;li&gt;{{Q|Q5154936}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=129}}
|-
| rowspan=3 | {{flag|Liberia}} {{Q|Q1014}}
| &lt;li&gt;{{Q|Q874821}}
{{User:Emijrp/AHKrow|P31=Q874821|wikidata=15|estimate=15}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q2421044}}
{{User:Emijrp/AHKrow|P31=Q2421044|wikidata=113|estimate=50}}
|-
| &lt;li&gt;{{Q|Q5125825}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
|-
| rowspan=3 | {{flag|Libya}} {{Q|Q1016}}
| &lt;li&gt;{{Q|Q48242}}
{{User:Emijrp/AHKrow|P31=Q48242|wikidata=33|estimate=22}}
| rowspan=3 |
|-
| &lt;li&gt;{{Q|Q7252591}}
{{User:Emijrp/AHKrow|P31=Q7252591|wikidata=3|estimate=}}
|-
| &lt;li&gt;{{Q|Q15630943}}
{{User:Emijrp/AHKrow|P31=Q15630943|wikidata=10|estimate=}}
|-
| rowspan=5 | {{flag|Madagascar}} {{Q|Q1019}}
| &lt;li&gt;{{Q|Q864133}}
{{User:Emijrp/AHKrow|P31=Q864133|wikidata=5|estimate=6}}
| rowspan=5 |
|-
| &lt;li&gt;{{Q|Q971831}}
{{User:Emijrp/AHKrow|P31=Q971831|wikidata=22|estimate=22}}
|-
| &lt;li&gt;[[Departments of Madagascar]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=110}}
|-
| &lt;li&gt;{{Q|Q3556789}}
{{User:Emijrp/AHKrow|P31=Q3556789|wikidata=132|estimate=}}
|-
| &lt;li&gt;[[Communes of Madagascar]]
{{User:Emijrp/AHKrow|P31=Q3192808|wikidata=1261|estimate=}}
&lt;!--
|-
| &lt;li&gt;[[Firaisana of Madagascar]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=1200}}
|-
| &lt;li&gt;[[Fokontany of Madagascar]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=11000}}
--&gt;
|-
| rowspan=4 | {{flag|Malawi}} {{Q|Q1020}}
| &lt;li&gt;{{Q|Q3271886}}
{{User:Emijrp/AHKrow|P31=Q3271886|wikidata=3|estimate=3}}
| rowspan=4 |
|-
| &lt;li&gt;{{Q|Q1058387}}
{{User:Emijrp/AHKrow|P31=Q1058387|wikidata=28|estimate=28}}
|-
| &lt;li&gt;[[Traditional authorities of Malawi]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=130}}
|-
| &lt;li&gt;[[Subchiefdoms of Malawi]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=60}}
|-
| rowspan=4 | {{flag|Mali}} {{Q|Q912}}
| &lt;li&gt;{{Q|Q743074}}
{{User:Emijrp/AHKrow|P31=Q743074|wikidata=11|estimate=8}}
| rowspan=4 |
|-
| &lt;li&gt;{{Q|Q2115792}}
{{User:Emijrp/AHKrow|P31=Q2115792|wikidata=51|estimate=49}}
|-
| &lt;li&gt;{{Q|Q4796085}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=1400}}
|-
| &lt;li&gt;{{Q|Q1758856}}
{{User:Emijrp/AHKrow|P31=Q1758856|wikidata=669|estimate=703}}
|-
| rowspan=3 | {{flag|Mauritania}} {{Q|Q1025}}
| &lt;li&gt;{{Q|Q846327}}
{{User:Emijrp/AHKrow|P31=Q846327|wikidata=15|estimate=12}}
| rowspan=3 |
|-
| &lt;li&gt;{{Q|Q3263368}}
{{User:Emijrp/AHKrow|P31=Q3263368|wikidata=43|estimate=44}}
|-
| &lt;li&gt;{{Q|Q2989470}}
{{User:Emijrp/AHKrow|P31=Q2989470|wikidata=231|estimate=200}}
|-
| rowspan=2 | {{flag|Mauritius}} {{Q|Q1027}}
| &lt;li&gt;{{Q|Q1139753}}
{{User:Emijrp/AHKrow|P31=Q1139753|wikidata=9|estimate=9}}
| rowspan=2 |
|-
| &lt;li&gt;{{Q|Q399327}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=124}}
|-
| rowspan=4 | {{flag|Morocco}} {{Q|Q1028}}
| &lt;li&gt;{{Q|Q845643}}
{{User:Emijrp/AHKrow|P31=Q845643|wikidata=35|estimate=12}}
| rowspan=4 |
|-
| &lt;li&gt;{{Q|Q4115671}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=13}}
|-
| &lt;li&gt;{{Q|Q4115671}}
{{User:Emijrp/AHKrow|P31=Q15623950|wikidata=15|estimate=48}}
|-
| &lt;li&gt;{{Q|Q6629643}}
{{User:Emijrp/AHKrow|P31=Q2989400|wikidata=1554|estimate=}}
|-
| rowspan=3 | {{flag|Mozambique}} {{Q|Q1029}}
| &lt;li&gt;{{Q|Q695469}}
{{User:Emijrp/AHKrow|P31=Q695469|wikidata=11|estimate=10}}
| rowspan=3 |
|-
| &lt;li&gt;{{Q|Q2068214}}
{{User:Emijrp/AHKrow|P31=Q2068214|wikidata=144|estimate=128}}
|-
| &lt;li&gt;{{Q|Q179233}}
{{User:Emijrp/AHKrow|P31=Q179233|wikidata=20|estimate=400}}
|-
| rowspan=2 | {{flag|Namibia}} {{Q|Q1030}}
| &lt;li&gt;{{Q|Q608843}}
{{User:Emijrp/AHKrow|P31=Q608843|wikidata=14|estimate=13}}
| rowspan=2 |
|-
| &lt;li&gt;{{Q|Q1853630}}
{{User:Emijrp/AHKrow|P31=Q1853630|wikidata=127|estimate=107}}
|-
| rowspan=3 | {{flag|Niger}} {{Q|Q1032}}
| &lt;li&gt;{{Q|Q859869}}
{{User:Emijrp/AHKrow|P31=Q859869|wikidata=8|estimate=7}}
| rowspan=3 |
|-
| &lt;li&gt;{{Q|Q2914501}}
{{User:Emijrp/AHKrow|P31=Q2914501|wikidata=63|estimate=63}}
|-
| &lt;li&gt;{{Q|Q605291}}
{{User:Emijrp/AHKrow|P31=Q605291|wikidata=252|estimate=265}}
|-
| rowspan=2 | {{flag|Nigeria}} {{Q|Q1033}}
| &lt;li&gt;{{Q|Q465842}}
{{User:Emijrp/AHKrow|P31=Q465842|wikidata=46|estimate=36}}
| rowspan=2 |
|-
| &lt;li&gt;{{Q|Q1639634}}
{{User:Emijrp/AHKrow|P31=Q1639634|wikidata=750|estimate=774}}
|-
| rowspan=4 | {{flag|Rwanda}} {{Q|Q1037}}
| &lt;li&gt;{{Q|Q871217}}
{{User:Emijrp/AHKrow|P31=Q871217|wikidata=16|estimate=5}}
| rowspan=4 |
|-
| &lt;li&gt;{{Q|Q1841634}}
{{User:Emijrp/AHKrow|P31=Q1841634|wikidata=31|estimate=30}}
|-
| &lt;li&gt;[[Imirenge of Rwanda]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=410}}
|-
| &lt;li&gt;[[Utugari of Rwanda]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=9100}}
|-
| rowspan=2 | {{flag|São Tomé and Príncipe}} {{Q|Q1039}}
| &lt;li&gt;{{Q|Q1051411}}
{{User:Emijrp/AHKrow|P31=Q1051411|wikidata=2|estimate=2}}
| rowspan=2 |
|-
| &lt;li&gt;{{Q|Q911736}}
{{User:Emijrp/AHKrow|P31=Q911736|wikidata=7|estimate=7}}
|-
| rowspan=4 | {{flag|Senegal}} {{Q|Q1041}}
| &lt;li&gt;{{Q|Q847667}}
{{User:Emijrp/AHKrow|P31=Q847667|wikidata=14|estimate=14}}
| rowspan=4 |
|-
| &lt;li&gt;{{Q|Q751030}}
{{User:Emijrp/AHKrow|P31=Q751030|wikidata=45|estimate=45}}
|-
| &lt;li&gt;{{Q|Q2424478}}
{{User:Emijrp/AHKrow|P31=Q2424478|wikidata=156|estimate=103}}
|-
| &lt;li&gt;{{Q|Q369385}}
{{User:Emijrp/AHKrow|P31=Q369385|wikidata=380|estimate=340}}
|-
| rowspan=1 | {{flag|Seychelles}} {{Q|Q1042}}
| &lt;li&gt;{{Q|Q1149621}}
{{User:Emijrp/AHKrow|P31=Q1149621|wikidata=25|estimate=25}}
| rowspan=1 |
|-
| rowspan=3 | {{flag|Sierra Leone}} {{Q|Q1044}}
| &lt;li&gt;{{Q|Q1145005}}
{{User:Emijrp/AHKrow|P31=Q1145005|wikidata=4|estimate=3}}
| rowspan=3 |
|-
| &lt;li&gt;{{Q|Q1298632}}
{{User:Emijrp/AHKrow|P31=Q1298632|wikidata=14|estimate=14}}
|-
| &lt;li&gt;{{Q|Q5097104}}
{{User:Emijrp/AHKrow|P31=Q5097104|wikidata=149|estimate=149}}
|-
| rowspan=2 | {{flag|Somalia}} {{Q|Q1045}}
| &lt;li&gt;{{Q|Q878116}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=18}}
| rowspan=2 |
|-
| &lt;li&gt;{{Q|Q878116}}
{{User:Emijrp/AHKrow|P31=Q18555638|wikidata=124|estimate=75}}
|-
| rowspan=1 | {{flag|Somaliland}} {{Q|Q34754}}
| &lt;li&gt;{{Q|Q1137691}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=13}}
| rowspan=1 |
|-
| rowspan=4 | {{flag|South Africa}} {{Q|Q258}}
| &lt;li&gt;{{Q|Q191093}}
{{User:Emijrp/AHKrow|P31=Q191093|wikidata=11|estimate=9}}
| rowspan=4 |
|-
| &lt;li&gt;{{Q|Q1716280}}
{{User:Emijrp/AHKrow|P31=Q1589568|wikidata=45|estimate=52}}
|-
| &lt;li&gt;[[Local municipalities of South Africa]]
{{User:Emijrp/AHKrow|P31=Q1500352|wikidata=230|estimate=226}}
|-
| &lt;li&gt;[[Wards of South Africa]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=4277}}
|-
| rowspan=2 | {{flag|South Sudan}} {{Q|Q958}}
| &lt;li&gt;{{Q|Q496539}}
{{User:Emijrp/AHKrow|P31=Q496539|wikidata=24|estimate=10}}
| rowspan=2 |
|-
| &lt;li&gt;{{Q|Q279479}}
{{User:Emijrp/AHKrow|P31=Q279479|wikidata=32|estimate=86}}
|-
| rowspan=3 | {{flag|Sudan}} {{Q|Q1049}}
| &lt;li&gt;{{Q|Q746290}}
{{User:Emijrp/AHKrow|P31=Q746290|wikidata=18|estimate=17}}
| rowspan=3 |
|-
| &lt;li&gt;{{Q|Q505830}}
{{User:Emijrp/AHKrow|P31=Q505830|wikidata=58|estimate=133}}
|-
| &lt;li&gt;[[Villages of Sudan]]
{{User:Emijrp/AHKrow|P31=Q23827730|wikidata=199|estimate=}}
|-
| rowspan=3 | {{flag|Swaziland}} {{Q|Q1050}}
| &lt;li&gt;{{Q|Q1069042}}
{{User:Emijrp/AHKrow|P31=Q1069042|wikidata=4|estimate=4}}
| rowspan=3 |
|-
| &lt;li&gt;[[Tinkhundla of Swaziland]]
{{User:Emijrp/AHKrow|P31=Q2280192|wikidata=6|estimate=55}}
|-
| &lt;li&gt;[[Imiphakatsi of Swaziland]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=360}}
|-
| rowspan=4 | {{flag|Tanzania}} {{Q|Q924}}
| &lt;li&gt;{{Q|Q845820}}
{{User:Emijrp/AHKrow|P31=Q845820|wikidata=31|estimate=30}}
| rowspan=4 |
|-
| &lt;li&gt;{{Q|Q2409750}}
{{User:Emijrp/AHKrow|P31=Q2409750|wikidata=135|estimate=129}}
|-
| &lt;li&gt;{{Q|Q867371}}
{{User:Emijrp/AHKrow|P31=Q18691601|wikidata=1227|estimate=}}
|-
| &lt;li&gt;[[Villages of Tanzania]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
|-
| rowspan=2 | {{flag|Togo}} {{Q|Q945}}
| &lt;li&gt;{{Q|Q139228}}
{{User:Emijrp/AHKrow|P31=Q139228|wikidata=5|estimate=5}}
| rowspan=2 |
|-
| &lt;li&gt;{{Q|Q828485}}
{{User:Emijrp/AHKrow|P31=Q828485|wikidata=35|estimate=30}}
|-
| rowspan=3 | {{flag|Tunisia}} {{Q|Q948}}
| &lt;li&gt;{{Q|Q690084}}
{{User:Emijrp/AHKrow|P31=Q690084|wikidata=24|estimate=24}}
| rowspan=3 |
|-
| &lt;li&gt;{{Q|Q1184072}}
{{User:Emijrp/AHKrow|P31=Q1184072|wikidata=266|estimate=264}}
|-
| &lt;li&gt;[[Sectors of Tunisia]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=2073}}
|-
| rowspan=5 | {{flag|Uganda}} {{Q|Q1036}}
| &lt;li&gt;{{Q|Q3539870}}
{{User:Emijrp/AHKrow|P31=Q3539870|wikidata=124|estimate=111}}
| rowspan=5 |
|-
| &lt;li&gt;{{Q|Q5177124}}
{{User:Emijrp/AHKrow|P31=Q5177124|wikidata=14|estimate=146}}
|-
| &lt;li&gt;{{Q|Q7630601}}
{{User:Emijrp/AHKrow|P31=Q7630601|wikidata=15|estimate=1106}}
|-
| &lt;li&gt;{{Q|Q22683078}}
{{User:Emijrp/AHKrow|P31=Q22683078|wikidata=12|estimate=}}
|-
| &lt;li&gt;[[Villages of Uganda]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
|-
| rowspan=2 | {{flag|Zambia}} {{Q|Q953}}
| &lt;li&gt;{{Q|Q15313730}}
{{User:Emijrp/AHKrow|P31=Q15313730|wikidata=10|estimate=9}}
| rowspan=2 |
|-
| &lt;li&gt;{{Q|Q2744064}}
{{User:Emijrp/AHKrow|P31=Q2744064|wikidata=112|estimate=72}}
|-
| rowspan=3 | {{flag|Zimbabwe}} {{Q|Q954}}
| &lt;li&gt;{{Q|Q492042}}
{{User:Emijrp/AHKrow|P31=Q492042|wikidata=10|estimate=10}}
| rowspan=3 |
|-
| &lt;li&gt;{{Q|Q5283558}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=59}}
|-
| &lt;li&gt;{{Q|Q3444249}}
{{User:Emijrp/AHKrow|P31=Q3444249|wikidata=56|estimate=1200}}
|-
{{User:Emijrp/AHKrowtotal|wikidata=17747|estimate=85658}}
|}

==== Asia ====
[[File:Asia (orthographic projection).svg|thumb|right|200px|Asia]]
'''{{Q|Q48}}''' is {{Q|Q2}}'s largest and most populous {{Q|Q5107}}, located primarily in the [[Q186198|eastern]] and [[Q39061|northern]] hemispheres and sharing the continental landmass of {{Q|Q5401}} with the continent of {{Q|Q46}}. Asia covers an area of {{convert|44,579,000|km2|sqmi}}, about 30% of Earth's total land area and 8.7% of the Earth's total surface area. The continent, which has long been home to the majority of the {{Q|Q11188}},&lt;ref&gt;{{cite web|title=The World at Six Billion|url=http://www.un.org/esa/population/publications/sixbillion/sixbillion.htm|publisher=UN Population Division|archiveurl=https://web.archive.org/web/20160305042434/http://www.un.org/esa/population/publications/sixbillion/sixbillion.htm |archivedate=March 5, 2016 |deadurl=no}}, [http://web.archive.org/web/20160101220025/http://www.un.org/esa/population/publications/sixbillion/sixbilpart1.pdf Table 2]&lt;/ref&gt; was the site of many of the [[Q1207629|first civilizations]]. Asia is notable for not only its overall large size and population, but also dense and large settlements as well as vast barely populated regions within the continent of 4.4 billion people. Asia has 49 recognized states, 5 partially recognized and unrecognized states and 6 dependent territories and other territories.

Given its size and diversity, the concept of Asia—a [[Q485762|name]] dating back to {{Q|Q486761}}—may actually have more to do with {{Q|Q12831143}} than {{Q|Q52107}}.&lt;ref name=McG-H&gt;{{cite web | title=Asia | url=http://accessscience.com/abstract.aspx?id=054800&amp;referURL=http%3a%2f%2faccessscience.com%2fcontent.aspx%3fid%3d054800 | work=AccessScience | publisher=McGraw-Hill | accessdate=26 July 2011 | archivedate=27 November 2011 | archiveurl=https://web.archive.org/web/20111127141127/http://accessscience.com/abstract.aspx?id=054800&amp;referURL=http%3a%2f%2faccessscience.com%2fcontent.aspx%3fid%3d054800}}&lt;/ref&gt; Asia varies greatly across and within [[Q2001617|its regions]] with regard to ethnic groups, cultures, environments, economics, historical ties and government systems. It also has a mix of many different climates ranging from the equatorial south via the hot desert in the {{Q|Q7204}}, temperate areas in the east and the extremely continental centre to vast subarctic and polar areas in {{Q|Q5428}}.

{{main|List of sovereign states and dependent territories in Asia|List of cities in Asia}}
{{see also|Template:Articles on first-level administrative divisions of Asian countries|Template:Articles on second-level administrative divisions of Asian countries}}

&lt;gallery mode="packed-hover"&gt;
File:Vista de Ciudad Ho Chi Minh desde Bitexco Financial Tower, Vietnam, 2013-08-14, DD 13.JPG|{{Q|Q1854}}, {{flag|Vietnam}} {{Q|Q881}}
File:Victorious Fatherland Liberation War Museum and Ryugyong Hotel (11342673725).jpg|{{Q|Q18808}}, {{flag|North Korea}} {{Q|Q423}}
File:2012 Pudong.jpg|{{Q|Q8686}}, {{flag|China}} {{Q|Q148}}
File:Tehran Skyline.jpg|{{Q|Q3616}}, {{flag|Iran}} {{Q|Q794}}
File:Skyscrapers of Shinjuku 2009 January.jpg|{{Q|Q1490}}, {{flag|Japan}} {{Q|Q17}}
&lt;/gallery&gt;

{| class="wikitable sortable plainlinks"
! width="150px" | Country 
! width="300px" | Related pages
! Wikidata
! Estimate
! References 
|-
| rowspan=2 | {{flag|Afghanistan}} {{Q|Q889}}
| &lt;li&gt;{{Q|Q158683}}
{{User:Emijrp/AHKrow|P31=Q158683|wikidata=34|estimate=38}}
| rowspan=2 | 
|-
| &lt;li&gt;{{Q|Q496825}}
{{User:Emijrp/AHKrow|P31=Q496825|wikidata=432|estimate=398}}
|-
| rowspan=4 | {{flag|Armenia}} {{Q|Q399}}
| &lt;li&gt;[[Q13058055|Provinces of Armenia]]
{{User:Emijrp/AHKrow|P31=Q514860|wikidata=10|estimate=10}}
| rowspan=4 | 
|-
| &lt;li&gt;{{Q|Q5669275}}
{{User:Emijrp/AHKrow|P31=Q3685430|wikidata=906|estimate=915}}
|-
| &lt;li&gt;[[Towns of Armenia]]
{{User:Emijrp/AHKrow|P31=Q20724701|wikidata=72|estimate=}}
|-
| &lt;li&gt;[[Villages of Armenia]]
{{User:Emijrp/AHKrow|P31=Q28328984|wikidata=831|estimate=}}
|-
| rowspan=3 | {{flag|Azerbaijan}} {{Q|Q227}}
| &lt;li&gt;{{Q|Q2610712}}
{{User:Emijrp/AHKrow|P31=Q2610712|wikidata=1|estimate=}}
| rowspan=3 | 
|-
| &lt;li&gt;[[Q137413|Districts of Azerbaiyan]]
{{User:Emijrp/AHKrow|P31=Q13417250|wikidata=66|estimate=59}}
|-
| &lt;li&gt;[[Q137413|Municipalities of Azerbaijan]]
{{User:Emijrp/AHKrow|P31=Q15129871|wikidata=20|estimate=11}}
|-
| rowspan=1 | {{flag|Bahrain}} {{Q|Q398}}
| &lt;li&gt;{{Q|Q867606}}
{{User:Emijrp/AHKrow|P31=Q867606|wikidata=5|estimate=5}}
| rowspan=1 | 
|-
| rowspan=4 | {{flag|Bangladesh}} {{Q|Q902}}
| &lt;li&gt;{{Q|Q878040}}
{{User:Emijrp/AHKrow|P31=Q878040|wikidata=8|estimate=7}}
| rowspan=4 | 
|-
| &lt;li&gt;{{Q|Q152732}}
{{User:Emijrp/AHKrow|P31=Q152732|wikidata=64|estimate=64}}
|-
| &lt;li&gt;{{Q|Q620471}}
{{User:Emijrp/AHKrow|P31=Q620471|wikidata=493|estimate=500}}
|-
| &lt;li&gt;{{Q|Q3812392}}
{{User:Emijrp/AHKrow|P31=Q3812392|wikidata=4629|estimate=}}
|-
| rowspan=2 | {{flag|Bhutan}} {{Q|Q917}}
| &lt;li&gt;{{Q|Q1229776}}
{{User:Emijrp/AHKrow|P31=Q1229776|wikidata=1|estimate=20}}
| rowspan=2 | 
|-
| &lt;li&gt;{{Q|Q1352019}}
{{User:Emijrp/AHKrow|P31=Q1352019|wikidata=267|estimate=205}}
|-
| rowspan=2 | {{flag|Brunei}} {{Q|Q921}}
| &lt;li&gt;{{Q|Q50427}}
{{User:Emijrp/AHKrow|P31=Q50427|wikidata=4|estimate=4}}
| rowspan=2 | 
|-
| &lt;li&gt;{{Q|Q60047}}
{{User:Emijrp/AHKrow|P31=Q60047|wikidata=39|estimate=38}}
|-
| rowspan=3 | {{flag|Burma}} {{Q|Q836}}
| &lt;li&gt;{{Q|Q877127}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=21}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q5283500}}
{{User:Emijrp/AHKrow|P31=Q5283500|wikidata=70|estimate=67}}
|-
| &lt;li&gt;{{Q|Q7830262}}
{{User:Emijrp/AHKrow|P31=Q7830262|wikidata=286|estimate=325}}
|-
| rowspan=5 | {{flag|Cambodia}} {{Q|Q424}}
| &lt;li&gt;[[Q50201|Provinces of Cambodia]]
{{User:Emijrp/AHKrow|P31=Q7252589|wikidata=24|estimate=23}}
| rowspan=5 | 
|-
| &lt;li&gt;{{Q|Q3034011}}
{{User:Emijrp/AHKrow|P31=Q14846918|wikidata=189|estimate=171}}
|-
| &lt;li&gt;[[Municipalities of Cambodia]]
{{User:Emijrp/AHKrow|P31=Q14846916|wikidata=2|estimate=26}}
|-
| &lt;li&gt;{{Q|Q5154047}}
{{User:Emijrp/AHKrow|P31=Q5154047|wikidata=190|estimate=1621}}
|-
| &lt;li&gt;[[Villages of Cambodia]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=14073}}
|-
| rowspan=7 | {{flag|People's Republic of China}} {{Q|Q148}}
| &lt;li&gt;[[Q50231|Administrative divisions of the PRC]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| rowspan=7 | 
|-
| &lt;li&gt;Provincial level
{{User:Emijrp/AHKrow|P31=Q1615742|wikidata=23|estimate=33}}
|-
| &lt;li&gt;Prefectural level
{{User:Emijrp/AHKrow|P31=Q9316670|wikidata=343|estimate=333}}
|-
| &lt;li&gt;County level
{{User:Emijrp/AHKrow|P31=Q16755104|wikidata=2011|estimate=2858}}
|-
| &lt;li&gt;Township level
{{User:Emijrp/AHKrow|P31=Q16725943|wikidata=43622|estimate=40858}}
|-
| &lt;li&gt;Village committees
{{User:Emijrp/AHKrow|P31=Q13100073|wikidata=588510|estimate=623669}}
|-
| &lt;li&gt;Neighborhood level
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=80717}}
|-
| rowspan=2 | {{flag|Cyprus}} {{Q|Q229}}
| &lt;li&gt;{{Q|Q59136}}
{{User:Emijrp/AHKrow|P31=Q59136|wikidata=6|estimate=6}}
| rowspan=2 | 
|-
| &lt;li&gt;[[Q13217633|Municipalities of Cyprus]]
{{User:Emijrp/AHKrow|P31=Q16739079|wikidata=39|estimate=}}
|-
| rowspan=4 | {{flag|East Timor}} {{Q|Q574}}
| &lt;li&gt;{{Q|Q741821}}
{{User:Emijrp/AHKrow|P31=Q741821|wikidata=14|estimate=13}}
| rowspan=4 | 
|-
| &lt;li&gt;{{Q|Q1512109}}
{{User:Emijrp/AHKrow|P31=Q1512109|wikidata=64|estimate=65}}
|-
| &lt;li&gt;{{Q|Q13479533}} (villages)
{{User:Emijrp/AHKrow|P31=Q13479533|wikidata=0|estimate=442}}
|-
| &lt;li&gt;Aldeias of East Timor (hamlets)
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=2336}}
|-
| rowspan=3 | {{flag|Egypt}} {{Q|Q79}}
| &lt;li&gt;{{Q|Q204910}}
{{User:Emijrp/AHKrow|P31=Q204910|wikidata=27|estimate=27}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q3312607}}
{{User:Emijrp/AHKrow|P31=Q3312607|wikidata=1|estimate=232}}
|-
| &lt;li&gt;[[Municipalities of Egypt]]
{{User:Emijrp/AHKrow|P31=Q109088|wikidata=0|estimate=4617}}
|-
| rowspan=1 | {{flag|Gaza Strip}} {{Q|Q39760}}
| &lt;li&gt;{{Q|Q5589760}}
{{User:Emijrp/AHKrow|P31=Q50495|wikidata=16|estimate=5}}
| rowspan=1 | 
|-
| rowspan=2 | {{flag|Georgia}} {{Q|Q4962}}
| &lt;li&gt;[[Q244339|Administrative divisions of Georgia]]
{{User:Emijrp/AHKrow|P31=Q244339|wikidata=91|estimate=9}}
| rowspan=2 | 
|-
| &lt;li&gt;[[Q2655841|Districts of Georgia]]
{{User:Emijrp/AHKrow|P31=Q2655841|wikidata=68|estimate=67}}
|-
| rowspan=1 | {{flag|Hong Kong}} {{Q|Q8646}}
| &lt;li&gt;{{Q|Q50256}}
{{User:Emijrp/AHKrow|P31=Q50256|wikidata=18|estimate=18}}
| rowspan=1 | 
|-
| rowspan=3 | {{flag|India}} {{Q|Q668}}
| &lt;li&gt;{{Q|Q131541}}
{{User:Emijrp/AHKrow|P31=Q131541|wikidata=46|estimate=28}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q15726398}}
{{User:Emijrp/AHKrow|P31=Q1149652|wikidata=701|estimate=640}}
|-
| &lt;li&gt;Tehsils
{{User:Emijrp/AHKrow|P31=Q7694920|wikidata=109|estimate=5564}}
|-
| rowspan=4 | {{flag|Indonesia}} {{Q|Q252}}
| &lt;li&gt;{{Q|Q5098}}
{{User:Emijrp/AHKrow|P31=Q5098|wikidata=34|estimate=34}}
| rowspan=4 | 
|-
| &lt;li&gt;[[Q5653|Regencies of Indonesia]]
{{User:Emijrp/AHKrow|P31=Q3191695|wikidata=454|estimate=403}}
|-
| &lt;li&gt;[[Q5653|Cities of Indonesia]]
{{User:Emijrp/AHKrow|P31=Q3199141|wikidata=94|estimate=98}}
|-
| &lt;li&gt;{{Q|Q965568}}
{{User:Emijrp/AHKrow|P31=Q2225692|wikidata=97392|estimate=35000}}
|-
| rowspan=4 | {{flag|Iran}} {{Q|Q794}}
| &lt;li&gt;{{Q|Q1344695}}
{{User:Emijrp/AHKrow|P31=Q1344695|wikidata=32|estimate=31}}
| rowspan=4 | 
|-
| &lt;li&gt;{{Q|Q137535}}
{{User:Emijrp/AHKrow|P31=Q137535|wikidata=419|estimate=324}}
|-
| &lt;li&gt;{{Q|Q11353}}
{{User:Emijrp/AHKrow|P31=Q11353|wikidata=1032|estimate=}}
|-
| &lt;li&gt;[[Rural districts of Iran]]
{{User:Emijrp/AHKrow|P31=Q15125752|wikidata=2598|estimate=}}
|-
| rowspan=2 | {{flag|Iraq}} {{Q|Q796}}
| &lt;li&gt;{{Q|Q841753}}
{{User:Emijrp/AHKrow|P31=Q841753|wikidata=20|estimate=18}}
| rowspan=2 | 
|-
| &lt;li&gt;{{Q|Q4117798}}
{{User:Emijrp/AHKrow|P31=Q4117798|wikidata=121|estimate=111}}
|-
| rowspan=3 | {{flag|Israel}} {{Q|Q801}}
| &lt;li&gt;{{Q|Q193560}}
{{User:Emijrp/AHKrow|P31=Q193560|wikidata=7|estimate=6}}
| rowspan=3 | 
|-
| &lt;li&gt;[[Q1022469|Regional councils of Israel]]
{{User:Emijrp/AHKrow|P31=Q1022469|wikidata=55|estimate=}}
|-
| &lt;li&gt;[[Q1288520|Local councils of Israel]]
{{User:Emijrp/AHKrow|P31=Q1288520|wikidata=46|estimate=265}}
|-
| rowspan=5 | {{flag|Japan}} {{Q|Q17}}
| &lt;li&gt;{{Q|Q50337}}
{{User:Emijrp/AHKrow|P31=Q50337|wikidata=54|estimate=47}}
| rowspan=5 | 
|-
| &lt;li&gt;{{Q|Q850450}}
{{User:Emijrp/AHKrow|P31=Q850450|wikidata=24|estimate=}}
|-
| &lt;li&gt;{{Q|Q1122846}}
{{User:Emijrp/AHKrow|P31=Q1122846|wikidata=468|estimate=}}
|-
| &lt;li&gt;{{Q|Q1059478}}
{{User:Emijrp/AHKrow|P31=Q1059478|wikidata=744|estimate=}}
|-
| &lt;li&gt;{{Q|Q4174776}}
{{User:Emijrp/AHKrow|P31=Q4174776|wikidata=199|estimate=}}
|-
| rowspan=3 | {{flag|Jordan}} {{Q|Q810}}
| &lt;li&gt;{{Q|Q867567}}
{{User:Emijrp/AHKrow|P31=Q867567|wikidata=12|estimate=12}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q2892813}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=52}}
|-
| &lt;li&gt;[[Villages of Jordan]]
{{User:Emijrp/AHKrow|P31=Q23828031|wikidata=174|estimate=}}
|-
| rowspan=2 | {{flag|Kazakhstan}} {{Q|Q232}}
| &lt;li&gt;{{Q|Q836672}}
{{User:Emijrp/AHKrow|P31=Q836672|wikidata=16|estimate=14}}
| rowspan=2 | 
|-
| &lt;li&gt;{{Q|Q2643128}}
{{User:Emijrp/AHKrow|P31=Q2643128|wikidata=216|estimate=170}}
|-
| rowspan=6 | {{flag|North Korea}} {{Q|Q423}}
| &lt;li&gt;{{Q|Q15620174}}
{{User:Emijrp/AHKrow|P31=Q15620174|wikidata=9|estimate=9}}
| rowspan=6 | 
|-
| &lt;li&gt;[[Q6638047|Cities of North Korea]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
|-
| &lt;li&gt;[[Q6638047|Counties of North Korea]]
{{User:Emijrp/AHKrow|P31=Q18534049|wikidata=147|estimate=150}}
|-
| &lt;li&gt;[[Worker's districts of North Korea]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
|-
| &lt;li&gt;[[Districts of North Korea]]
{{User:Emijrp/AHKrow|P31=Q18544917|wikidata=34|estimate=}}
|-
| &lt;li&gt;[[Wards of North Korea]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
|-
| rowspan=2 | {{flag|South Korea}} {{Q|Q884}}
| &lt;li&gt;{{Q|Q4925355}}
{{User:Emijrp/AHKrow|P31=Q4925355|wikidata=13|estimate=9}}
| rowspan=2 | 
|-
| &lt;li&gt;{{Q|Q15901936}}
{{User:Emijrp/AHKrow|P31=Q15901936|wikidata=112|estimate=}}
|-
| rowspan=2 | {{flag|Kuwait}} {{Q|Q817}}
| &lt;li&gt;{{Q|Q842876}}
{{User:Emijrp/AHKrow|P31=Q842876|wikidata=6|estimate=6}}
| rowspan=2 | 
|-
| &lt;li&gt;{{Q|Q1122492}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=5}}
|-
| rowspan=2 | {{flag|Kyrgyzstan}} {{Q|Q813}}
| &lt;li&gt;{{Q|Q693039}}
{{User:Emijrp/AHKrow|P31=Q693039|wikidata=7|estimate=}}
| rowspan=2 | 
|-
| &lt;li&gt;{{Q|Q4389100}}
{{User:Emijrp/AHKrow|P31=Q4389100|wikidata=43|estimate=}}
|-
| rowspan=2 | {{flag|Laos}} {{Q|Q819}}
| &lt;li&gt;{{Q|Q15673297}}
{{User:Emijrp/AHKrow|P31=Q15673297|wikidata=18|estimate=16}}
| rowspan=2 | 
|-
| &lt;li&gt;{{Q|Q5283521}}
{{User:Emijrp/AHKrow|P31=Q5283521|wikidata=151|estimate=}}
|-
| rowspan=4 | {{flag|Lebanon}} {{Q|Q822}}
| &lt;li&gt;{{Q|Q844713}}
{{User:Emijrp/AHKrow|P31=Q844713|wikidata=8|estimate=6}}
| rowspan=4 | 
|-
| &lt;li&gt;{{Q|Q2693910}}
{{User:Emijrp/AHKrow|P31=Q2693910|wikidata=26|estimate=25}}
|-
| &lt;li&gt;{{Q|Q6936383}}
{{User:Emijrp/AHKrow|P31=Q6936383|wikidata=6|estimate=}}
|-
| &lt;li&gt;[[Villages of Lebanon]]
{{User:Emijrp/AHKrow|P31=Q23828039|wikidata=1255|estimate=}}
|-
| rowspan=4 | {{flag|Malaysia}} {{Q|Q833}}
| &lt;li&gt;{{Q|Q50464}}
{{User:Emijrp/AHKrow|P31=Q50464|wikidata=16|estimate=16}}
| rowspan=4 | 
|-
| &lt;li&gt;{{Q|Q1994931}}
{{User:Emijrp/AHKrow|P31=Q1994931|wikidata=67|estimate=139}}
|-
| &lt;li&gt;[[Subdistricts of Malaysia]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=1000}}
|-
| &lt;li&gt;[[Villages of Malaysia]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=8000}}
|-
| rowspan=3 | {{flag|Maldives}} {{Q|Q826}}
| &lt;li&gt;[[Q1151887|Islands of the Maldives]]
{{User:Emijrp/AHKrow|P31=Q15623253|wikidata=116|estimate=189}}
| rowspan=3 | 
|-
| &lt;li&gt;[[Q1151887|Atolls of the Maldives]]
{{User:Emijrp/AHKrow|P31=Q11774746|wikidata=19|estimate=19}}
|-
| &lt;li&gt;[[Q1151887|Cities of the Maldives]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=2}}
|-
| rowspan=3 | {{flag|Mongolia}} {{Q|Q711}}
| &lt;li&gt;{{Q|Q50399}}
{{User:Emijrp/AHKrow|P31=Q50399|wikidata=21|estimate=21}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q1518096}}
{{User:Emijrp/AHKrow|P31=Q1518096|wikidata=364|estimate=329}}
|-
| &lt;li&gt;[[Bags of Mongolia]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=1538}}
|-
| rowspan=3 | {{flag|Nepal}} {{Q|Q837}}
| &lt;li&gt;{{Q|Q876102}}
{{User:Emijrp/AHKrow|P31=Q876102|wikidata=14|estimate=14}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q2537537}}
{{User:Emijrp/AHKrow|P31=Q2537537|wikidata=79|estimate=75}}
|-
| &lt;li&gt;{{Q|Q30329635}}
{{User:Emijrp/AHKrow|P31=Q1530705|wikidata=3429|estimate=3913}}
|-
| rowspan=2 | {{flag|Oman}} {{Q|Q842}}
| &lt;li&gt;{{Q|Q641078}}
{{User:Emijrp/AHKrow|P31=Q641078|wikidata=12|estimate=11}}
| rowspan=2 | 
|-
| &lt;li&gt;{{Q|Q3250615}}
{{User:Emijrp/AHKrow|P31=Q3250615|wikidata=59|estimate=61}}
|-
| rowspan=5 | {{flag|Pakistan}} {{Q|Q843}}
| &lt;li&gt;[[Q270496|Provinces of Pakistan]]
{{User:Emijrp/AHKrow|P31=Q15058985|wikidata=4|estimate=4}}
| rowspan=5 | 
|-
| &lt;li&gt;{{Q|Q4814017}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=27}}
|-
| &lt;li&gt;[[Q2379075|Districts of Pakistan]]
{{User:Emijrp/AHKrow|P31=Q2379075|wikidata=135|estimate=100}}
|-
| &lt;li&gt;{{Q|Q2592651}}
{{User:Emijrp/AHKrow|P31=Q2592651|wikidata=951|estimate=6000}}
|-
| &lt;li&gt;[[Tehsils of Pakistan]]
{{User:Emijrp/AHKrow|P31=Q18670606|wikidata=135|estimate=}}
|-
| rowspan=1 | {{flag|Palestine}} {{Q|Q1176995}}
| &lt;li&gt;[[Q50495|Governorates of Palestina]]
{{User:Emijrp/AHKrow|P31=Q50495|wikidata=16|estimate=16}}
| rowspan=1 | 
|-
| rowspan=4 | {{flag|Philippines}} {{Q|Q928}}
| &lt;li&gt;{{Q|Q24698}}
{{User:Emijrp/AHKrow|P31=Q24698|wikidata=18|estimate=17}}
| rowspan=4 | 
|-
| &lt;li&gt;{{Q|Q24746}}
{{User:Emijrp/AHKrow|P31=Q24746|wikidata=83|estimate=80}}
|-
| &lt;li&gt;{{Q|Q24764}}
{{User:Emijrp/AHKrow|P31=Q24764|wikidata=1489|estimate=1491}}
|-
| &lt;li&gt;{{Q|Q61878}} of the Philippines
{{User:Emijrp/AHKrow|P31=Q61878|wikidata=2899|estimate=42028}}
|-
| rowspan=3 | {{flag|Qatar}} {{Q|Q846}}
| &lt;li&gt;{{Q|Q685320}}
{{User:Emijrp/AHKrow|P31=Q685320|wikidata=9|estimate=}}
| rowspan=3 | 
|-
| &lt;li&gt;[[Zones of Qatar]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=87}}
|-
| &lt;li&gt;[[Blocks of Qatar]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
|-
| rowspan=3 | {{flag|Russia}} {{Q|Q159}}
| &lt;li&gt;{{Q|Q43263}}
{{User:Emijrp/AHKrow|P31=Q43263|wikidata=94|estimate=}}
| rowspan=3 | Each federal subject has its own divisions
|-
| &lt;li&gt;[[Rural settlements of Russia]]
{{User:Emijrp/AHKrow|P31=Q634099|wikidata=19145|estimate=}}
|-
| &lt;li&gt;[[Urban settlements of Russia]]
{{User:Emijrp/AHKrow|P31=Q2661988|wikidata=1584|estimate=}}
|-
| rowspan=2 | {{flag|Saudi Arabia}} {{Q|Q851}}
| &lt;li&gt;{{Q|Q15728204}}
{{User:Emijrp/AHKrow|P31=Q74063|wikidata=13|estimate=13}}
| rowspan=2 | 
|-
| &lt;li&gt;{{Q|Q3247681}}
{{User:Emijrp/AHKrow|P31=Q3247681|wikidata=8|estimate=118}}
|-
| rowspan=2 | {{flag|Singapore}} {{Q|Q334}}
| &lt;li&gt;{{Q|Q2091262}}
{{User:Emijrp/AHKrow|P31=Q2091262|wikidata=5|estimate=}}
| rowspan=2 | 
|-
| &lt;li&gt;[[Q50513|Community Development Council Districts]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=5}}
|-
| rowspan=3 | {{flag|Sri Lanka}} {{Q|Q854}}
| &lt;li&gt;{{Q|Q861559}}
{{User:Emijrp/AHKrow|P31=Q861559|wikidata=10|estimate=9}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q1230110}}
{{User:Emijrp/AHKrow|P31=Q1230110|wikidata=25|estimate=25}}
|-
| &lt;li&gt;{{Q|Q1990968}}
{{User:Emijrp/AHKrow|P31=Q1990968|wikidata=306|estimate=}}
|-
| rowspan=4 | {{flag|Syria}} {{Q|Q858}}
| &lt;li&gt;{{Q|Q517351}}
{{User:Emijrp/AHKrow|P31=Q517351|wikidata=14|estimate=14}}
| rowspan=4 | 
|-
| &lt;li&gt;{{Q|Q2915776}}
{{User:Emijrp/AHKrow|P31=Q2915776|wikidata=62|estimate=64}}
|-
| &lt;li&gt;[[Subdistricts of Syria]]
{{User:Emijrp/AHKrow|P31=Q12249051|wikidata=542|estimate=206}}
|-
| &lt;li&gt;{{Q|Q6643722}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=6432}}
|-
| rowspan=4 | {{flag|Taiwan}} {{Q|Q865}}
| &lt;li&gt;{{Q|Q705296}}
{{User:Emijrp/AHKrow|P31=Q705296|wikidata=143|estimate=}}
| rowspan=4 | 
|-
| &lt;li&gt;{{Q|Q706447}}
{{User:Emijrp/AHKrow|P31=Q706447|wikidata=22|estimate=}}
|-
| &lt;li&gt;[[Urban townships of Taiwan]]
{{User:Emijrp/AHKrow|P31=Q12039044|wikidata=39|estimate=}}
|-
| &lt;li&gt;[[Rural townships of Taiwan]]
{{User:Emijrp/AHKrow|P31=Q12039539|wikidata=151|estimate=}}
|-
| rowspan=3 | {{flag|Tajikistan}} {{Q|Q863}}
| &lt;li&gt;{{Q|Q867545}}
{{User:Emijrp/AHKrow|P31=Q867545|wikidata=4|estimate=3}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q4389115}}
{{User:Emijrp/AHKrow|P31=Q7482775|wikidata=0|estimate=58}}
|-
| &lt;li&gt;{{Q|Q6148126}}
{{User:Emijrp/AHKrow|P31=Q6148126|wikidata=72|estimate=406}}
|-
| rowspan=4 | {{flag|Thailand}} {{Q|Q869}}
| &lt;li&gt;{{Q|Q50198}}
{{User:Emijrp/AHKrow|P31=Q50198|wikidata=94|estimate=76}}
| rowspan=4 | 
|-
| &lt;li&gt;{{Q|Q3245760}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=878}}
|-
| &lt;li&gt;{{Q|Q1077097}} of Thailand
{{User:Emijrp/AHKrow|P31=Q1077097|wikidata=6903|estimate=7255}}
|-
| &lt;li&gt;{{Q|Q1368879}} of Thailand
{{User:Emijrp/AHKrow|P31=Q1368879|wikidata=98|estimate=74944}}
|-
| rowspan=5 | {{flag|Turkey}} {{Q|Q43}}
| &lt;li&gt;{{Q|Q48336}}
{{User:Emijrp/AHKrow|P31=Q48336|wikidata=81|estimate=81}}
| rowspan=5 | 
|-
| &lt;li&gt;{{Q|Q30766075}}
{{User:Emijrp/AHKrow|P31=Q1147395|wikidata=1253|estimate=900}}
|-
| &lt;li&gt;{{Q|Q515483}} of Turkey
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=3200}}
|-
| &lt;li&gt;{{Q|Q1529096}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=41000}}
|-
| &lt;li&gt;[[Mahalles of Turkey]]
{{User:Emijrp/AHKrow|P31=Q17051044|wikidata=8345|estimate=}}
|-
| rowspan=2 | {{flag|Turkmenistan}} {{Q|Q874}}
| &lt;li&gt;{{Q|Q12014176}}
{{User:Emijrp/AHKrow|P31=Q17309773|wikidata=0|estimate=6}}
| rowspan=2 |
|-
| &lt;li&gt;{{Q|Q5283544}}
{{User:Emijrp/AHKrow|P31=Q5283544|wikidata=57|estimate=}}
|-
| rowspan=2 | {{flag|United Arab Emirates}} {{Q|Q878}}
| &lt;li&gt;{{Q|Q19833031}}
{{User:Emijrp/AHKrow|P31=Q19833031|wikidata=7|estimate=7}}
| rowspan=2 |
|-
| &lt;li&gt;[[Municipalities of the United Arab Emirates]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
|-
| rowspan=3 | {{flag|Uzbekistan}} {{Q|Q265}}
| &lt;li&gt;{{Q|Q842420}}
{{User:Emijrp/AHKrow|P31=Q842420|wikidata=12|estimate=12}}
| rowspan=3 |
|-
| &lt;li&gt;{{Q|Q2631599}}
{{User:Emijrp/AHKrow|P31=Q2631599|wikidata=157|estimate=170}}
|-
| &lt;li&gt;[[Mahallas of Uzbekistan]]
{{User:Emijrp/AHKrow|P31=Q7551583|wikidata=0|estimate=}}
|-
| rowspan=5 | {{flag|Vietnam}} {{Q|Q881}}
| &lt;li&gt;{{Q|Q2824648}}
{{User:Emijrp/AHKrow|P31=Q2824648|wikidata=85|estimate=58}}
| rowspan=5 |
|-
| &lt;li&gt;{{Q|Q21684322}}
{{User:Emijrp/AHKrow|P31=Q2582669|wikidata=576|estimate=548}}
|-
| &lt;li&gt;{{Q|Q5153984}}
{{User:Emijrp/AHKrow|P31=Q1070942|wikidata=1168|estimate=9000}}
|-
| &lt;li&gt;[[Wards of Vietnam]]
{{User:Emijrp/AHKrow|P31=Q687188|wikidata=2666|estimate=}}
|-
| &lt;li&gt;[[Rural communes of Vietnam]]
{{User:Emijrp/AHKrow|P31=Q2389082|wikidata=16760|estimate=}}
|-
| rowspan=4 | {{flag|Yemen}} {{Q|Q805}}
| &lt;li&gt;{{Q|Q331130}}
{{User:Emijrp/AHKrow|P31=Q331130|wikidata=21|estimate=20}}
| rowspan=4 |
|-
| &lt;li&gt;{{Q|Q6617100}}
{{User:Emijrp/AHKrow|P31=Q6617100|wikidata=344|estimate=333}}
|-
| &lt;li&gt;[[Sub-districts of Yemen]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=2210}}
|-
| &lt;li&gt;[[Villages of Yemen]]
{{User:Emijrp/AHKrow|P31=Q12225020|wikidata=1982|estimate=38284}}
|-
{{User:Emijrp/AHKrowtotal|wikidata=823181|estimate=1131396}}
|}

==== Europe ====
[[File:Europe orthographic Caucasus Urals boundary.svg|thumb|right|200px|Europe]]
'''{{Q|Q46}}''' is a {{Q|Q5107}} that comprises the westernmost part of {{Q|Q5401}}. Europe is bordered by the {{Q|Q788}} to the north, the {{Q|Q97}} to the west, and the {{Q|Q4918}} to the south. The eastern boundary with Asia is a historical and cultural construct, as there is no clear physical and geographical separation between them; Europe is generally considered as [[Q14007781|separated from Asia]] by the [[Q152005|watershed divides]] of the [[Q35600|Ural]] and {{Q|Q5477}}, the {{Q|Q80240}}, the [[Q5484|Caspian]] and [[Q166|Black]] Seas, and the waterways of the {{Q|Q1051401}}.

Europe, in particular {{Q|Q11772}}, was the birthplace of {{Q|Q478958}}. The fall of the {{Q|Q42834}}, during the {{Q|Q131192}}, marked the end of {{Q|Q41493}} and the beginning of an era known as the {{Q|Q12554}}. {{Q|Q4692}} [[Q846933|humanism]], [[Q133641|exploration]], [[Q1133779|art]], and [[Q1288583|science]] led to the {{Q|Q3281534}}. From the {{Q|Q133641}} onwards, Europe played a predominant role in global affairs. Between the 16th and 20th centuries, European powers controlled at various times the {{Q|Q828}}, most of {{Q|Q15}}, {{Q|Q538}}, and the majority of Asia.

Europe has 50 recognised states, 6 partially recognised states, 6 dependent territories and 2 special areas of internal sovereignty.

{{main|Europe|List of sovereign states and dependent territories in Europe|List of cities in Europe}}
{{see also|Template:Articles on first-level administrative divisions of European countries|Template:Articles on second-level administrative divisions of European countries|User:Physchim62/Europa}}

&lt;gallery mode="packed-hover"&gt;
&lt;/gallery&gt;

{| class="wikitable sortable plainlinks"
! width="150px" | Country 
! width="300px" | Related pages
! Wikidata
! Estimate
! References 
|-
| rowspan=5 | {{flag|Albania}} {{Q|Q222}}
| &lt;li&gt;{{Q|Q104251}}
{{User:Emijrp/AHKrow|P31=Q104251|wikidata=12|estimate=12}}
| rowspan=5 | &lt;ref&gt;{{cite web|url=http://www.statoids.com/yal.html|title=Communes of Albania}}&lt;/ref&gt;
|-
| &lt;li&gt;{{Q|Q123266}}
{{User:Emijrp/AHKrow|P31=Q123266|wikidata=36|estimate=36}}
|-
| &lt;li&gt;Communes
{{User:Emijrp/AHKrow|P31=Q1781058|wikidata=2|estimate=309}}
|-
| &lt;li&gt;{{Q|Q2008050}}
{{User:Emijrp/AHKrow|P31=Q2008050|wikidata=354|estimate=65}}
|-
| &lt;li&gt;{{Q|Q7930773}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=2834}}
|-
| rowspan=3 | {{flag|Andorra}} {{Q|Q228}}
| &lt;li&gt;{{Q|Q24279}}
{{User:Emijrp/AHKrow|P31=Q24279|wikidata=7|estimate=7}}
| rowspan=3 | 
|-
| &lt;li&gt;Quarts
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
|-
| &lt;li&gt;Veïnats
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
|-
| rowspan=5 | {{flag|Austria}} {{Q|Q40}}
| &lt;li&gt;{{Q|Q261543}}
{{User:Emijrp/AHKrow|P31=Q261543|wikidata=9|estimate=9}}
| rowspan=5 | 
|-
| &lt;li&gt;{{Q|Q871419}}
{{User:Emijrp/AHKrow|P31=Q871419|wikidata=115|estimate=84}}
|-
| &lt;li&gt;{{Q|Q262882}}
{{User:Emijrp/AHKrow|P31=Q262882|wikidata=15|estimate=15}}
|-
| &lt;li&gt;Gemeinden
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=2342}}
|-
| &lt;li&gt;Katastralgemeinden
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=7800}}
|-
| rowspan=3 | {{flag|Belarus}} {{Q|Q184}}
| &lt;li&gt;{{Q|Q209325}}
{{User:Emijrp/AHKrow|P31=Q209325|wikidata=6|estimate=6}}
| rowspan=3 | 
|-
| &lt;li&gt;Raions or districts
{{User:Emijrp/AHKrow|P31=Q2043199|wikidata=196|estimate=127}}
|-
| &lt;li&gt;Selsoviets
{{User:Emijrp/AHKrow|P31=Q15071808|wikidata=1539|estimate=1448}}
|-
| rowspan=5 | {{flag|Belgium}} {{Q|Q31}}
| &lt;li&gt;Regions of Belgium
{{User:Emijrp/AHKrow|P31=Q83057|wikidata=4|estimate=3}}
| rowspan=5 | 
|-
| &lt;li&gt;{{Q|Q83116}}
{{User:Emijrp/AHKrow|P31=Q83116|wikidata=11|estimate=10}}
|-
| &lt;li&gt;{{Q|Q91028}}
{{User:Emijrp/AHKrow|P31=Q91028|wikidata=43|estimate=43}}
|-
| &lt;li&gt;Judicial arrondissements
{{User:Emijrp/AHKrow|P31=Q94524|wikidata=20|estimate=27}}
|-
| &lt;li&gt;{{Q|Q493522}}
{{User:Emijrp/AHKrow|P31=Q493522|wikidata=2942|estimate=589}}
|-
| rowspan=2 | {{flag|Bosnia and Herzegovina}} {{Q|Q225}}
| &lt;li&gt;[[Q18279|Cantons]]
{{User:Emijrp/AHKrow|P31=Q18279|wikidata=10|estimate=10}}
| rowspan=2 | 
|-
| &lt;li&gt;Municipalities
{{User:Emijrp/AHKrow|P31=Q2706302|wikidata=236|estimate=63}}
|-
| rowspan=2 | {{flag|Bulgaria}} {{Q|Q219}}
| &lt;li&gt;{{Q|Q209824}}
{{User:Emijrp/AHKrow|P31=Q209824|wikidata=29|estimate=27}}
| rowspan=2 | 
|-
| &lt;li&gt;{{Q|Q1906268}}
{{User:Emijrp/AHKrow|P31=Q1906268|wikidata=268|estimate=264}}
|-
| rowspan=4 | {{flag|Croatia}} {{Q|Q224}}
| &lt;li&gt;{{Q|Q57053}}
{{User:Emijrp/AHKrow|P31=Q57053|wikidata=20|estimate=21}}
| rowspan=4 | 
|-
| &lt;li&gt;{{Q|Q57058}}
{{User:Emijrp/AHKrow|P31=Q57058|wikidata=936|estimate=429}}
|-
| &lt;li&gt;Local communities
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=4117}}
|-
| &lt;li&gt;Settlements
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=6749}}
|-
| {{flag|Cyprus}} {{Q|Q229}}
| 
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| See [[#Asia]]
|-
| rowspan=3 | {{flag|Czech Republic}} {{Q|Q213}}
| &lt;li&gt;{{Q|Q38911}}
{{User:Emijrp/AHKrow|P31=Q38911|wikidata=14|estimate=13}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q548611}}
{{User:Emijrp/AHKrow|P31=Q548611|wikidata=77|estimate=76}}
|-
| &lt;li&gt;Municipalities
{{User:Emijrp/AHKrow|P31=Q5153359|wikidata=6891|estimate=6252}}
|-
| rowspan=3 | {{flag|Denmark}} {{Q|Q35}}
| &lt;li&gt;{{Q|Q62326}}
{{User:Emijrp/AHKrow|P31=Q62326|wikidata=5|estimate=5}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q876730}}
{{User:Emijrp/AHKrow|P31=Q876730|wikidata=39|estimate=}}
|-
| &lt;li&gt;{{Q|Q2177636}}
{{User:Emijrp/AHKrow|P31=Q2177636|wikidata=357|estimate=98}}
|-
| rowspan=2 | {{flag|Estonia}} {{Q|Q191}}
| &lt;li&gt;{{Q|Q189672}}
{{User:Emijrp/AHKrow|P31=Q189672|wikidata=15|estimate=15}}
| rowspan=2 | 33 of them being urban and 193 rural
|-
| &lt;li&gt;{{Q|Q612229}}
{{User:Emijrp/AHKrow|P31=Q612229|wikidata=344|estimate=226}}
|-
| rowspan=4 | {{flag|Finland}} {{Q|Q33}}
| &lt;li&gt;{{Q|Q2586717}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=6}}
| rowspan=4 | 
|-
| &lt;li&gt;{{Q|Q193512}}
{{User:Emijrp/AHKrow|P31=Q193512|wikidata=19|estimate=19}}
|-
| &lt;li&gt;{{Q|Q762882}}
{{User:Emijrp/AHKrow|P31=Q762882|wikidata=75|estimate=72}}
|-
| &lt;li&gt;{{Q|Q856076}}
{{User:Emijrp/AHKrow|P31=Q856076|wikidata=2807|estimate=342}}
|-
| rowspan=5 | {{flag|France}} {{Q|Q142}}
| &lt;li&gt;{{Q|Q36784}}
{{User:Emijrp/AHKrow|P31=Q36784|wikidata=41|estimate=22}}
| rowspan=5 | 
|-
| &lt;li&gt;{{Q|Q6465}}
{{User:Emijrp/AHKrow|P31=Q6465|wikidata=193|estimate=101}}
|-
| &lt;li&gt;{{Q|Q194203}}
{{User:Emijrp/AHKrow|P31=Q194203|wikidata=442|estimate=342}}
|-
| &lt;li&gt;{{Q|Q184188}}
{{User:Emijrp/AHKrow|P31=Q184188|wikidata=4744|estimate=4032}}
|-
| &lt;li&gt;{{Q|Q484170}}
{{User:Emijrp/AHKrow|P31=Q484170|wikidata=39153|estimate=36680}}
|-
| rowspan=3 | {{flag|Germany}} {{Q|Q183}}
| &lt;li&gt;{{Q|Q22721}}
{{User:Emijrp/AHKrow|P31=Q22721|wikidata=86|estimate=22}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q106658}}
{{User:Emijrp/AHKrow|P31=Q106658|wikidata=658|estimate=403}}
|-
| &lt;li&gt;{{Q|Q262166}}
{{User:Emijrp/AHKrow|P31=Q262166|wikidata=12778|estimate=12300}}
|-
| rowspan=2 | {{flag|Greece}} {{Q|Q41}}
| &lt;li&gt;{{Q|Q207299}}
{{User:Emijrp/AHKrow|P31=Q207299|wikidata=13|estimate=13}}
| rowspan=2 | 
|-
| &lt;li&gt;{{Q|Q1349648}}
{{User:Emijrp/AHKrow|P31=Q1349648|wikidata=329|estimate=325}}
|-
| rowspan=5 | {{flag|Hungary}} {{Q|Q28}}
| &lt;li&gt;{{Q|Q254450}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=173}}
| rowspan=5 | 
|-
| &lt;li&gt;{{Q|Q715398}}
{{User:Emijrp/AHKrow|P31=Q715398|wikidata=159|estimate=}}
|-
| &lt;li&gt;{{Q|Q188604}}
{{User:Emijrp/AHKrow|P31=Q188604|wikidata=20|estimate=19}}
|-
| &lt;li&gt;{{Q|Q1162835}}
{{User:Emijrp/AHKrow|P31=Q1162835|wikidata=218|estimate=}}
|-
| &lt;li&gt;{{Q|Q181731}}
{{User:Emijrp/AHKrow|P31=Q1162835|wikidata=218|estimate=}}
|-
| rowspan=4 | {{flag|Iceland}} {{Q|Q189}}
| &lt;li&gt;{{Q|Q842100}}
{{User:Emijrp/AHKrow|P31=Q842100|wikidata=8|estimate=8}}
| rowspan=4 | 
|-
| &lt;li&gt;{{Q|Q1515437}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=6}}
|-
| &lt;li&gt;{{Q|Q156246}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=23}}
|-
| &lt;li&gt;{{Q|Q955655}}
{{User:Emijrp/AHKrow|P31=Q955655|wikidata=85|estimate=50}}
|-
| rowspan=2 | {{flag|Ireland}} {{Q|Q22890}}
| &lt;li&gt;{{Q|Q179872}}
{{User:Emijrp/AHKrow|P31=Q179872|wikidata=30|estimate=32}}
| rowspan=2 | 
|-
| &lt;li&gt;[[Townlands of Ireland]]
{{User:Emijrp/AHKrow|P31=Q2151232|wikidata=1122|estimate=}}
|-
| rowspan=4 | {{flag|Italy}} {{Q|Q38}}
| &lt;li&gt;{{Q|Q16110}}
{{User:Emijrp/AHKrow|P31=Q16110|wikidata=20|estimate=20}}
| rowspan=4 |
|-
| &lt;li&gt;{{Q|Q15089}}
{{User:Emijrp/AHKrow|P31=Q15089|wikidata=112|estimate=110}}
|-
| &lt;li&gt;{{Q|Q747074}}
{{User:Emijrp/AHKrow|P31=Q747074|wikidata=16059|estimate=8092}}
|-
| &lt;li&gt;Fractions 
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=37000}}
|-
| rowspan=3 | {{flag|Latvia}} {{Q|Q211}}
| &lt;li&gt;{{Q|Q840019}}
{{User:Emijrp/AHKrow|P31=Q840019|wikidata=44|estimate=}}
| rowspan=3 | 
|-
| &lt;li&gt;[[Parishes of Latvia]]
{{User:Emijrp/AHKrow|P31=Q2577184|wikidata=644|estimate=}}
|-
| &lt;li&gt;{{Q|Q750277}}
{{User:Emijrp/AHKrow|P31=Q3345345|wikidata=112|estimate=}}
|-
| rowspan=1 | {{flag|Liechtenstein}} {{Q|Q347}}
| &lt;li&gt;{{Q|Q203300}}
{{User:Emijrp/AHKrow|P31=Q203300|wikidata=11|estimate=11}}
| rowspan=1 | 
|-
| rowspan=3 | {{flag|Lithuania}} {{Q|Q37}}
| &lt;li&gt;{{Q|Q273789}}
{{User:Emijrp/AHKrow|P31=Q273789|wikidata=10|estimate=10}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q1363145}}
{{User:Emijrp/AHKrow|P31=Q1363145|wikidata=66|estimate=60}}
|-
| &lt;li&gt;{{Q|Q2298305}}
{{User:Emijrp/AHKrow|P31=Q2298305|wikidata=612|estimate=500}}
|-
| rowspan=3 | {{flag|Luxembourg}} {{Q|Q32}}
| &lt;li&gt;{{Q|Q216888}}
{{User:Emijrp/AHKrow|P31=Q216888|wikidata=4|estimate=3}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q1146429}}
{{User:Emijrp/AHKrow|P31=Q1146429|wikidata=12|estimate=12}}
|-
| &lt;li&gt;{{Q|Q2919801}}
{{User:Emijrp/AHKrow|P31=Q2919801|wikidata=118|estimate=106}}
|-
| rowspan=2 | {{flag|Republic of Macedonia}} {{Q|Q221}}
| &lt;li&gt;[[Q1416863|Statistical regions]]
{{User:Emijrp/AHKrow|P31=Q1416863|wikidata=2|estimate=8}}
| rowspan=2 | 
|-
| &lt;li&gt;[[Q646793|Municipalities]]
{{User:Emijrp/AHKrow|P31=Q646793|wikidata=91|estimate=123}}
|-
| rowspan=2 | {{flag|Malta}} {{Q|Q233}}
| &lt;li&gt;{{Q|Q7309296}}
{{User:Emijrp/AHKrow|P31=Q7309296|wikidata=7|estimate=}}
| rowspan=2 | 
|-
| &lt;li&gt;{{Q|Q719592}}
{{User:Emijrp/AHKrow|P31=Q719592|wikidata=69|estimate=68}}
|-
| rowspan=3 | {{flag|Moldova}} {{Q|Q217}}
| &lt;li&gt;{{Q|Q542797}}
{{User:Emijrp/AHKrow|P31=Q15068450|wikidata=32|estimate=}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q15068469}}
{{User:Emijrp/AHKrow|P31=Q15068469|wikidata=1|estimate=}}
|-
| &lt;li&gt;[[Communes of Moldavia]]
{{User:Emijrp/AHKrow|P31=Q4229812|wikidata=413|estimate=}}
|-
| rowspan=2 | {{flag|Montenegro}} {{Q|Q236}}
| &lt;li&gt;{{Q|Q838549}}
{{User:Emijrp/AHKrow|P31=Q838549|wikidata=33|estimate=21}}
| rowspan=2 | 
|-
| &lt;li&gt;Populated places
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=1256}}
|-
| rowspan=2 | {{flag|Netherlands}} {{Q|Q55}}
| &lt;li&gt;{{Q|Q134390}}
{{User:Emijrp/AHKrow|P31=Q134390|wikidata=12|estimate=12}}
| rowspan=2 | 
|-
| &lt;li&gt;[[Q752132|Municipalities]]
{{User:Emijrp/AHKrow|P31=Q2039348|wikidata=990|estimate=415}}
|-
| rowspan=3 | {{flag|Norway}} {{Q|Q20}}
| &lt;li&gt;{{Q|Q369639}}
{{User:Emijrp/AHKrow|P31=Q369639|wikidata=6|estimate=}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q192299}}
{{User:Emijrp/AHKrow|P31=Q192299|wikidata=20|estimate=20}}
|-
| &lt;li&gt;{{Q|Q5803752}}
{{User:Emijrp/AHKrow|P31=Q755707|wikidata=2921|estimate=430}}
|-
| rowspan=4 | {{flag|Poland}} {{Q|Q36}}
| &lt;li&gt;{{Q|Q150093}}
{{User:Emijrp/AHKrow|P31=Q150093|wikidata=134|estimate=16}}
| rowspan=4 | [http://www.stat.gov.pl/broker/access/prefile/listPreFiles.jspa;jsessionid=E47AB3C167885126EBF11E07EB969B45 TERYT database] (all kinds of settlements) contains more than 100,000 entries (settlements, etc) and over 200,000 streets.
|-
| &lt;li&gt;{{Q|Q2229749}}
{{User:Emijrp/AHKrow|P31=Q247073|wikidata=391|estimate=379}}
|-
| &lt;li&gt;{{Q|Q1840233}}
{{User:Emijrp/AHKrow|P31=Q3504085|wikidata=1564|estimate=2478}}
|-
| &lt;li&gt;Rural
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=40000}}
|-
| rowspan=3 | {{flag|Portugal}} {{Q|Q45}}
| &lt;li&gt;{{Q|Q3032141}}
{{User:Emijrp/AHKrow|P31=Q3032141|wikidata=0|estimate=}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q13217644}}
{{User:Emijrp/AHKrow|P31=Q13217644|wikidata=317|estimate=308}}
|-
| &lt;li&gt;{{Q|Q950055}}
{{User:Emijrp/AHKrow|P31=Q1131296|wikidata=5304|estimate=4261}}
|-
| rowspan=4 | {{flag|Romania}} {{Q|Q218}}
| &lt;li&gt;{{Q|Q6453413}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=41}}
| rowspan=4 | 
|-
| &lt;li&gt;{{Q|Q640364}}
{{User:Emijrp/AHKrow|P31=Q640364|wikidata=103|estimate=}}
|-
| &lt;li&gt;{{Q|Q659103}}
{{User:Emijrp/AHKrow|P31=Q659103|wikidata=2861|estimate=2856}}
|-
| &lt;li&gt;Villages of Romania
{{User:Emijrp/AHKrow|P31=Q16858213|wikidata=217|estimate=12955}}
|-
| rowspan=1 | {{flag|San Marino}} {{Q|Q238}}
| &lt;li&gt;{{Q|Q14292916}}
{{User:Emijrp/AHKrow|P31=Q14292916|wikidata=10|estimate=9}}
| rowspan=1 | 
|-
| rowspan=2 | {{flag|Serbia}} {{Q|Q403}}
| &lt;li&gt;{{Q|Q648681}}
{{User:Emijrp/AHKrow|P31=Q648681|wikidata=28|estimate=29}}
| rowspan=2 | 
|-
| &lt;li&gt;[[Q783930|Municipalities of Serbia]]
{{User:Emijrp/AHKrow|P31=Q783930|wikidata=402|estimate=150}}
|-
| rowspan=3 | {{flag|Slovakia}} {{Q|Q214}}
| &lt;li&gt;{{Q|Q15057583}}
{{User:Emijrp/AHKrow|P31=Q15057583|wikidata=8|estimate=}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q2264478}}
{{User:Emijrp/AHKrow|P31=Q2264478|wikidata=80|estimate=}}
|-
| &lt;li&gt;[[Q1852886|Municipalities and towns]]
{{User:Emijrp/AHKrow|P31=Q6784672|wikidata=2886|estimate=2891}}
|-
| rowspan=2 | {{flag|Slovenia}} {{Q|Q215}}
| &lt;li&gt;{{Q|Q328584}}
{{User:Emijrp/AHKrow|P31=Q328584|wikidata=292|estimate=212}}
| rowspan=2 | &lt;ref&gt;{{cite book |url=http://www.stat.si/letopis/2011/MP/02-11.pdf |chapter=Upravna in druge členitve ozemlja RS |language=Slovene, English |trans_chapter=Administrative and Other Territorial Breakdowns of the Republic of Slovenia |title=Statistični letopis Republike Slovenije |trans_title=Statistical Yearbook of the Republic of Slovenia |year=2011 |publisher=Statistical Office of the Republic of Slovenia |issn=1318-5403}}&lt;/ref&gt;
|-
| &lt;li&gt;[[Q497161|Cities and towns]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=67}}
|-
| rowspan=6 | {{flag|Spain}} {{Q|Q29}}
| &lt;li&gt;{{Q|Q10742}}
{{User:Emijrp/AHKrow|P31=Q10742|wikidata=17|estimate=17}}
| rowspan=6 | Links to articles and redirects: [[User:Emijrp/Municipalities of Spain]].
|-
| &lt;li&gt;Autonomous cities
{{User:Emijrp/AHKrow|P31=Q17352050|wikidata=0|estimate=2}}
|-
| &lt;li&gt;{{Q|Q162620}}
{{User:Emijrp/AHKrow|P31=Q162620|wikidata=63|estimate=50}}
|-
| &lt;li&gt;{{Q|Q1345234}}
{{User:Emijrp/AHKrow|P31=Q1345234|wikidata=405|estimate=}}
|-
| &lt;li&gt;{{Q|Q189098}}
{{User:Emijrp/AHKrow|P31=Q2074737|wikidata=8270|estimate=8112}}
|-
| &lt;li&gt;[[List of parishes of Spain]]
{{User:Emijrp/AHKrow|P31=Q3333265|wikidata=35|estimate=}}
|-
| rowspan=3 | {{flag|Sweden}} {{Q|Q34}}
| &lt;li&gt;{{Q|Q200547}}
{{User:Emijrp/AHKrow|P31=Q200547|wikidata=59|estimate=21}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q1328114}}
{{User:Emijrp/AHKrow|P31=Q127448|wikidata=3113|estimate=290}}
|-
| &lt;li&gt;Parishes of Sweden
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
|-
| rowspan=3 | {{flag|Switzerland}} {{Q|Q39}}
| &lt;li&gt;{{Q|Q23058}}
{{User:Emijrp/AHKrow|P31=Q23058|wikidata=30|estimate=26}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q662914}}
{{User:Emijrp/AHKrow|P31=Q662914|wikidata=210|estimate=}}
|-
| &lt;li&gt;[[Q689212|Municipalities of Switzerland]] 
{{User:Emijrp/AHKrow|P31=Q70208|wikidata=4625|estimate=2551}}
|-
| {{flag|Turkey}} {{Q|Q43}} ||  || style="text-align: center;" |  || See [[#Asia]]
|-
| rowspan=3 | {{flag|Ukraine}} {{Q|Q212}}
| &lt;li&gt;{{Q|Q1267632}}
{{User:Emijrp/AHKrow|P31=Q1267632|wikidata=503|estimate=490}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q3565075}}
{{User:Emijrp/AHKrow|P31=Q3565075|wikidata=56|estimate=111}}
|-
| &lt;li&gt;[[Q7216840|Urban-type settlements of Ukraine]] 
{{User:Emijrp/AHKrow|P31=Q7216840|wikidata=867|estimate=886}}
|-
| rowspan=2 | {{flag|United Kingdom}} {{Q|Q145}}
| &lt;li&gt;{{Q|Q171809}}
{{User:Emijrp/AHKrow|P31=Q171809|wikidata=64|estimate=}}
| rowspan=2 | 
|-
| &lt;li&gt;{{Q|Q1115575}}
{{User:Emijrp/AHKrow|P31=Q1115575|wikidata=11223|estimate=10479}}
|-
{{User:Emijrp/AHKrowtotal|wikidata=144308|estimate=231005}}
|}

==== North America ====
[[File:Location North America.svg|thumb|right|200px|North America]]
'''{{Q|Q49}}''' is a {{Q|Q5107}} entirely within the {{Q|Q39061}} and almost all within the {{Q|Q181982}}. It can also be considered a northern {{Q|Q855697}} of the {{Q|Q828}}. It is bordered to the north by the {{Q|Q788}}, to the east by the {{Q|Q97}}, to the west and south by the {{Q|Q98}}, and to the southeast by {{Q|Q18}} and the {{Q|Q1247}}.

North America has 23 sovereign states, 11 dependent territories and 16 other areas.

{{main|List of sovereign states and dependent territories in North America|List of cities in North America}}
{{see also|Template:Articles on first-level administrative divisions of North American countries|Template:Articles on second-level administrative divisions of North American countries}}

&lt;gallery mode="packed-hover"&gt;
&lt;/gallery&gt;

{| class="wikitable sortable plainlinks"
! width="150px" | Country 
! width="300px" | Related pages
! Wikidata
! Estimate
! References 
|-
| rowspan=1 | {{flag|Antigua and Barbuda}} {{Q|Q781}}
| &lt;li&gt;[[Q1647142|Parishes and dependencies]]
{{User:Emijrp/AHKrow|P31=Q1647142|wikidata=6|estimate=8}}
| rowspan=1 |
|-
| rowspan=2 | {{flag|Bahamas}} {{Q|Q778}}
| &lt;li&gt;[[Q1230132|Districts in the Bahamas]]
{{User:Emijrp/AHKrow|P31=Q1230132|wikidata=33|estimate=32}}
| rowspan=2 | 
|-
| &lt;li&gt;[[Townships in the Bahamas]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=42}}
|-
| rowspan=1 | {{flag|Barbados}} {{Q|Q244}}
| &lt;li&gt;{{Q|Q1631888}}
{{User:Emijrp/AHKrow|P31=Q1631888|wikidata=11|estimate=11}}
| rowspan=1 | 
|-
| rowspan=3 | {{flag|Belize}} {{Q|Q242}}
| &lt;li&gt;{{Q|Q765865}}
{{User:Emijrp/AHKrow|P31=Q765865|wikidata=6|estimate=6}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q5163951}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=31}}
|-
| &lt;li&gt;[[Local councils of Belize]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=180}}
|-
| rowspan=2 | {{flag|Canada}} {{Q|Q16}}
| &lt;li&gt;{{Q|Q2879}}
{{User:Emijrp/AHKrow|P31=Q2879|wikidata=14|estimate=10}}
| rowspan=2 | 
|-
| &lt;li&gt;{{Q|Q3788231}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=3700}}
|-
| rowspan=3 | {{flag|Costa Rica}} {{Q|Q800}}
| &lt;li&gt;{{Q|Q1075520}}
{{User:Emijrp/AHKrow|P31=Q1075520|wikidata=7|estimate=7}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q953822}}
{{User:Emijrp/AHKrow|P31=Q953822|wikidata=81|estimate=81}}
|-
| &lt;li&gt;{{Q|Q2292572}}
{{User:Emijrp/AHKrow|P31=Q2292572|wikidata=478|estimate=421}}
|-
| rowspan=2 | {{flag|Cuba}} {{Q|Q241}}
| &lt;li&gt;{{Q|Q115291}}
{{User:Emijrp/AHKrow|P31=Q115291|wikidata=18|estimate=15}}
| rowspan=2 | 
|-
| &lt;li&gt;{{Q|Q558330}}
{{User:Emijrp/AHKrow|P31=Q558330|wikidata=168|estimate=169}}
|-
| rowspan=1 | {{flag|Dominica}} {{Q|Q784}}
| &lt;li&gt;{{Q|Q1405085}}
{{User:Emijrp/AHKrow|P31=Q1405085|wikidata=10|estimate=10}}
| rowspan=1 | 
|-
| rowspan=2 | {{flag|Dominican Republic}} {{Q|Q786}}
| &lt;li&gt;{{Q|Q913337}}
{{User:Emijrp/AHKrow|P31=Q913337|wikidata=31|estimate=31}}
| rowspan=2 | 
|-
| &lt;li&gt;[[Q6005581|Municipalities of the Dominican Republic]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=156}}
|-
| rowspan=2 | {{flag|El Salvador}} {{Q|Q792}}
| &lt;li&gt;{{Q|Q475214}}
{{User:Emijrp/AHKrow|P31=Q475214|wikidata=14|estimate=14}}
| rowspan=2 | 
|-
| &lt;li&gt;{{Q|Q3556889}}
{{User:Emijrp/AHKrow|P31=Q3556889|wikidata=264|estimate=262}}
|-
| rowspan=1 | {{flag|Grenada}} {{Q|Q769}}
| &lt;li&gt;{{Q|Q531645}}
{{User:Emijrp/AHKrow|P31=Q531645|wikidata=6|estimate=6}}
| rowspan=1 | 
|-
| rowspan=2 | {{flag|Guatemala}} {{Q|Q774}}
| &lt;li&gt;{{Q|Q27448}}
{{User:Emijrp/AHKrow|P31=Q27448|wikidata=23|estimate=22}}
| rowspan=2 | 
|-
| &lt;li&gt;{{Q|Q1872284}}
{{User:Emijrp/AHKrow|P31=Q1872284|wikidata=339|estimate=334}}
|-
| rowspan=3 | {{flag|Haiti}} {{Q|Q790}}
| &lt;li&gt;{{Q|Q62127}}
{{User:Emijrp/AHKrow|P31=Q62127|wikidata=10|estimate=10}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q1665357}}
{{User:Emijrp/AHKrow|P31=Q1665357|wikidata=43|estimate=42}}
|-
| &lt;li&gt;{{Q|Q3685462}}
{{User:Emijrp/AHKrow|P31=Q3685462|wikidata=146|estimate=140}}
|-
| rowspan=2 | {{flag|Honduras}} {{Q|Q783}}
| &lt;li&gt;{{Q|Q728145}}
{{User:Emijrp/AHKrow|P31=Q728145|wikidata=19|estimate=18}}
| rowspan=2 | 
|-
| &lt;li&gt;{{Q|Q2602693}}
{{User:Emijrp/AHKrow|P31=Q2602693|wikidata=28|estimate=299}}
|-
| rowspan=1 | {{flag|Jamaica}} {{Q|Q766}}
| &lt;li&gt;{{Q|Q936955}}
{{User:Emijrp/AHKrow|P31=Q936955|wikidata=14|estimate=14}}
| rowspan=1 | 
|-
| rowspan=2 | {{flag|Mexico}} {{Q|Q96}}
| &lt;li&gt;{{Q|Q15149663}}
{{User:Emijrp/AHKrow|P31=Q15149663|wikidata=32|estimate=31}}
| rowspan=2 | 
|-
| &lt;li&gt;{{Q|Q1952852}}
{{User:Emijrp/AHKrow|P31=Q1952852|wikidata=2229|estimate=2438}}
|-
| rowspan=2 | {{flag|Nicaragua}} {{Q|Q811}}
| &lt;li&gt;{{Q|Q822715}}
{{User:Emijrp/AHKrow|P31=Q822715|wikidata=16|estimate=15}}
| rowspan=2 | 
|-
| &lt;li&gt;{{Q|Q318727}}
{{User:Emijrp/AHKrow|P31=Q318727|wikidata=90|estimate=153}}
|-
| rowspan=3 | {{flag|Panama}} {{Q|Q804}}
| &lt;li&gt;{{Q|Q1382893}}
{{User:Emijrp/AHKrow|P31=Q1382893|wikidata=10|estimate=9}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q3710488}}
{{User:Emijrp/AHKrow|P31=Q3710488|wikidata=78|estimate=50}}
|-
| &lt;li&gt;{{Q|Q3685463}}
{{User:Emijrp/AHKrow|P31=Q3685463|wikidata=632|estimate=}}
|-
| rowspan=1 | {{flag|St. Kitts and Nevis}} {{Q|Q763}}
| &lt;li&gt;{{Q|Q1750854}}
{{User:Emijrp/AHKrow|P31=Q1750854|wikidata=14|estimate=14}}
| rowspan=1 | 
|-
| rowspan=1 | {{flag|St. Lucia}} {{Q|Q760}}
| &lt;li&gt;{{Q|Q1753792}}
{{User:Emijrp/AHKrow|P31=Q1753792|wikidata=14|estimate=11}}
| rowspan=1 | 
|-
| rowspan=1 | {{flag|St. Vincent and the Grenadines}} {{Q|Q757}}
| &lt;li&gt;{{Q|Q1870831}}
{{User:Emijrp/AHKrow|P31=Q1870831|wikidata=6|estimate=6}}
| rowspan=1 | 
|-
| rowspan=1 | {{flag|Trinidad and Tobago}} {{Q|Q754}}
| &lt;li&gt;[[Q1996198|Regional corporations and municipalities]]
{{User:Emijrp/AHKrow|P31=Q1996198|wikidata=0|estimate=9}}
| rowspan=1 | 
|-
| rowspan=4 | {{flag|United States}} {{Q|Q30}}
| &lt;li&gt;{{Q|Q1682357}}
{{User:Emijrp/AHKrow|P31=Q35657|wikidata=65|estimate=62}}
| rowspan=4 | 
|-
| &lt;li&gt;{{Q|Q6018662}}
{{User:Emijrp/AHKrow|P31=Q47168|wikidata=3125|estimate=6372}}
|-
| &lt;li&gt;{{Q|Q2481479}}
{{User:Emijrp/AHKrow|P31=Q15127012|wikidata=6906|estimate=147410}}
|-
| &lt;li&gt;{{Q|Q13751836}} 
{{User:Emijrp/AHKrow|P31=Q17166756|wikidata=680|estimate=7619}}
|-
{{User:Emijrp/AHKrowtotal|wikidata=15666|estimate=170902}}
|}

==== South America ====
[[File:South America (orthographic projection).svg|thumb|right|200px|South America]]
'''{{Q|Q18}}''' is a {{Q|Q5107}} located in the {{Q|Q181982}}, mostly in the {{Q|Q41228}}, with a relatively small portion in the {{Q|Q39061}}. It is bordered on the west by the {{Q|Q98}} and on the north and east by the {{Q|Q97}}; {{Q|Q49}} and the {{Q|Q1247}} lie to the northwest.

Most of the population lives near the continent's western or eastern coasts while the interior and the [[Q1507|far south]] are sparsely populated. The geography of western South America is dominated by the {{Q|Q5456}} mountains; in contrast, the eastern part contains both highland regions and large lowlands where rivers such as the [[Q3783|Amazon]], {{Q|Q131792}}, and [[Q127892|Paraná]] flow. Most of the continent lies in the {{Q|Q42530}}.

The continent's cultural and ethnic outlook has its origin with the interaction of [[Q36747|indigenous peoples]] with European conquerors and immigrants and, more locally, with African slaves. Given a long [[Q184716|history of colonialism]], the overwhelming majority of South Americans speak [[Q5146|Portuguese]] or [[Q1321|Spanish]], and societies and states commonly reflect [[Q478958|Western traditions]].

South America has 13 sovereign states, 2 dependent territories and 1 integral territories of states outside of South America.

{{main|List of sovereign states and dependent territories in South America|List of cities in South America}}
{{see also|Template:Articles on first-level administrative divisions of South American countries|Template:Articles on second-level administrative divisions of South American countries}}

&lt;gallery mode="packed-hover"&gt;
&lt;/gallery&gt;

{| class="wikitable sortable plainlinks"
! width="150px" | Country 
! width="300px" | Related pages
! Wikidata
! Estimate
! References 
|-
| rowspan=3 | {{flag|Argentina}} {{Q|Q414}}
| &lt;li&gt;{{Q|Q44753}}
{{User:Emijrp/AHKrow|P31=Q44753|wikidata=23|estimate=}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q952274}}
{{User:Emijrp/AHKrow|P31=Q952274|wikidata=598|estimate=}}
|-
| &lt;li&gt;{{Q|Q3243765}} 
{{User:Emijrp/AHKrow|P31=Q3243765|wikidata=77|estimate=}}
|-
| rowspan=4 | {{flag|Bolivia}} {{Q|Q750}}
| &lt;li&gt;{{Q|Q250050}}
{{User:Emijrp/AHKrow|P31=Q250050|wikidata=10|estimate=9}}
| rowspan=4 | 
|-
| &lt;li&gt;{{Q|Q1062593}}
{{User:Emijrp/AHKrow|P31=Q1062593|wikidata=112|estimate=112}}
|-
| &lt;li&gt;{{Q|Q1062710}}
{{User:Emijrp/AHKrow|P31=Q1062710|wikidata=322|estimate=314}}
|-
| &lt;li&gt;{{Q|Q824650}}
{{User:Emijrp/AHKrow|P31=Q824650|wikidata=103|estimate=1374}}
|-
| rowspan=2 | {{flag|Brazil}} {{Q|Q155}}
| &lt;li&gt;{{Q|Q485258}}
{{User:Emijrp/AHKrow|P31=Q485258|wikidata=39|estimate=26}}
| rowspan=2 | 
|-
| &lt;li&gt;{{Q|Q3184121}}
{{User:Emijrp/AHKrow|P31=Q3184121|wikidata=5569|estimate=5564}}
|-
| rowspan=3 | {{flag|Chile}} {{Q|Q298}}
| &lt;li&gt;{{Q|Q590080}}
{{User:Emijrp/AHKrow|P31=Q590080|wikidata=16|estimate=15}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q1153408}}
{{User:Emijrp/AHKrow|P31=Q1153408|wikidata=57|estimate=54}}
|-
| &lt;li&gt;{{Q|Q1840161}}
{{User:Emijrp/AHKrow|P31=Q1840161|wikidata=346|estimate=346}}
|-
| rowspan=3 | {{flag|Colombia}} {{Q|Q739}}
| &lt;li&gt;{{Q|Q215655}}
{{User:Emijrp/AHKrow|P31=Q215655|wikidata=33|estimate=32}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q2555896}}
{{User:Emijrp/AHKrow|P31=Q2555896|wikidata=1106|estimate=1119}}
|-
| &lt;li&gt;{{Q|Q5172823}}
{{User:Emijrp/AHKrow|P31=Q5172823|wikidata=128|estimate=2000}}
|-
| rowspan=3 | {{flag|Ecuador}} {{Q|Q736}}
| &lt;li&gt;{{Q|Q719987}}
{{User:Emijrp/AHKrow|P31=Q719987|wikidata=24|estimate=24}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q1724017}}
{{User:Emijrp/AHKrow|P31=Q1724017|wikidata=219|estimate=226}}
|-
| &lt;li&gt;{{Q|Q2579179}}
{{User:Emijrp/AHKrow|P31=Q2579179|wikidata=121|estimate=1000}}
|-
| rowspan=2 | {{flag|Guyana}} {{Q|Q734}}
| &lt;li&gt;{{Q|Q2087773}}
{{User:Emijrp/AHKrow|P31=Q2087773|wikidata=11|estimate=10}}
| rowspan=2 | 
|-
| &lt;li&gt;{{Q|Q3075872}}
{{User:Emijrp/AHKrow|P31=Q3075872|wikidata=0|estimate=27}}
|-
| {{flag|Panama}} {{Q|Q804}} ||  ||  ||  || See [[#North America]]
|-
| rowspan=2 | {{flag|Paraguay}} {{Q|Q733}}
| &lt;li&gt;{{Q|Q815068}}
{{User:Emijrp/AHKrow|P31=Q815068|wikidata=19|estimate=17}}
| rowspan=2 | 
|-
| &lt;li&gt;{{Q|Q917092}}
{{User:Emijrp/AHKrow|P31=Q917092|wikidata=238|estimate=230}}
|-
| rowspan=3 | {{flag|Peru}} {{Q|Q419}}
| &lt;li&gt;{{Q|Q861184}}
{{User:Emijrp/AHKrow|P31=Q861184|wikidata=26|estimate=25}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q509686}}
{{User:Emijrp/AHKrow|P31=Q509686|wikidata=202|estimate=195}}
|-
| &lt;li&gt;{{Q|Q2179958}}
{{User:Emijrp/AHKrow|P31=Q2179958|wikidata=1884|estimate=1833}}
|-
| rowspan=2 | {{flag|Suriname}} {{Q|Q730}}
| &lt;li&gt;{{Q|Q1649296}}
{{User:Emijrp/AHKrow|P31=Q1649296|wikidata=12|estimate=10}}
| rowspan=2 | 
|-
| &lt;li&gt;{{Q|Q1539014}}
{{User:Emijrp/AHKrow|P31=Q1539014|wikidata=63|estimate=62}}
|-
| {{flag|Trinidad and Tobago}} {{Q|Q754}} ||  ||  ||  || See [[#North America]]
|-
| rowspan=2 | {{flag|Uruguay}} {{Q|Q77}}
| &lt;li&gt;{{Q|Q56059}}
{{User:Emijrp/AHKrow|P31=Q56059|wikidata=19|estimate=19}}
| rowspan=2 | 
|-
| &lt;li&gt;{{Q|Q3685434}}
{{User:Emijrp/AHKrow|P31=Q3685434|wikidata=61|estimate=89}}
|-
| rowspan=3 | {{flag|Venezuela}} {{Q|Q717}}
| &lt;li&gt;{{Q|Q501094}}
{{User:Emijrp/AHKrow|P31=Q501094|wikidata=24|estimate=23}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q3327920}}
{{User:Emijrp/AHKrow|P31=Q3327920|wikidata=477|estimate=335}}
|-
| &lt;li&gt;{{Q|Q6063801}} 
{{User:Emijrp/AHKrow|P31=Q6063801|wikidata=1065|estimate=1000}}
|-
{{User:Emijrp/AHKrowtotal|wikidata=13004|estimate=16788}}
|}

==== Oceania ====
[[File:Oceania (orthographic projection).svg|thumb|right|200px|Oceania]]
'''{{Q|Q538}}''' is a {{Q|Q82794}} centred on the [[Q844857|islands of the tropical Pacific Ocean]]. The term was coined as ''Océanie'' circa 1812 by geographer {{Q|Q980235}}. The history of Oceania in the medieval period was synonymous with the history of the indigenous peoples of Australasia, Micronesia, Melanesia, Polynesia. The arrival of European settlers in subsequent centuries resulted in a significant alteration in the social and political landscape of Oceania.

Opinions of what constitutes Oceania range from its three {{Q|Q7631958}} of {{Q|Q37394}}, {{Q|Q3359409}}, and {{Q|Q35942}} to, more broadly, the entire insular region between {{Q|Q11708}} and the {{Q|Q828}}, including {{Q|Q45256}} and the {{Q|Q208643}}.

Oceania has 14 sovereign states, 2 states not members of the United Nations and 26 other territories.

{{main|List of sovereign states and dependent territories in Oceania|List of cities in Oceania}}
{{see also|Template:Articles on first-level administrative divisions of Oceanian countries|Template:Articles on second-level administrative divisions of Oceanian countries}}

&lt;gallery mode="packed-hover"&gt;
&lt;/gallery&gt;

{| class="wikitable sortable plainlinks"
! width="150px" | Country 
! width="300px" | Related pages
! Wikidata
! Estimate
! References 
|-
| rowspan=2 | {{flag|Australia}} {{Q|Q408}}
| &lt;li&gt;{{Q|Q178712}}
{{User:Emijrp/AHKrow|P31=Q178712|wikidata=20|estimate=16}}
| rowspan=2 | 
|-
| &lt;li&gt;{{Q|Q18481123}} 
{{User:Emijrp/AHKrow|P31=Q1867183|wikidata=1132|estimate=564}}
|-
| rowspan=1 | {{flag|Cook Islands}} {{Q|Q26988}}
| &lt;li&gt;[[Q26988|Administrative subdivisions]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=10}}
| rowspan=1 | 
|-
| {{flag|East Timor}} {{Q|Q574}} ||  ||  ||  || See [[#Asia]]
|-
| rowspan=2 | {{flag|Fiji}} {{Q|Q712}}
| &lt;li&gt;[[Q1062445|Divisions of Fiji]]
{{User:Emijrp/AHKrow|P31=Q15646524|wikidata=4|estimate=4}}
| rowspan=2 | Links to articles and redirects: [[User:Emijrp/Provinces of Fiji]].
|-
| &lt;li&gt;{{Q|Q3064474}}
{{User:Emijrp/AHKrow|P31=Q3064474|wikidata=14|estimate=14}}
|-
| rowspan=1 | {{flag|Kiribati}} {{Q|Q710}}
| &lt;li&gt;{{Q|Q924986}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| rowspan=1 | 21 inhabited islands have their own council. 6 districts until independence.
|-
| rowspan=1 | {{flag|Marshall Islands}} {{Q|Q709}}
| &lt;li&gt;{{Q|Q700016}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=24}}
| rowspan=1 |
|-
| rowspan=3 | {{flag|Nauru}} {{Q|Q697}}
| &lt;li&gt;Administrative districts of Nauru
{{User:Emijrp/AHKrow|P31=Q319796|wikidata=14|estimate=14}}
| rowspan=3 | 
|-
| &lt;li&gt;Electoral constituencies of Nauru
{{User:Emijrp/AHKrow|P31=Q2712218|wikidata=8|estimate=8}}
|-
| &lt;li&gt;{{Q|Q898053}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=169}}
|-
| rowspan=3 | {{flag|New Zealand}} {{Q|Q664}}
| &lt;li&gt;{{Q|Q216712}}
{{User:Emijrp/AHKrow|P31=Q216712|wikidata=16|estimate=16}}
| rowspan=3 | See [[Q6621291|former territorial authorities]].
|-
| &lt;li&gt;[[City councils of New Zealand]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=13}}
|-
| &lt;li&gt;[[District councils of New Zealand]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=53}}
|-
| rowspan=1 | {{flag|Niue}} {{Q|Q34020}}
| &lt;li&gt;{{Q|Q2283963}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=14}}
| rowspan=1 | 
|-
| rowspan=1 | {{flag|Palau}} {{Q|Q695}}
| &lt;li&gt;{{Q|Q1044181}}
{{User:Emijrp/AHKrow|P31=Q1044181|wikidata=16|estimate=16}}
| rowspan=1 | 
|-
| rowspan=3 | {{flag|Papua New Guinea}} {{Q|Q691}}
| &lt;li&gt;{{Q|Q1053630}}
{{User:Emijrp/AHKrow|P31=Q1053630|wikidata=21|estimate=18}}
| rowspan=3 | Links to articles and redirects:&lt;li&gt;[[User:Emijrp/List of cities and towns in Papua New Guinea]]&lt;li&gt;[[User:Emijrp/Provinces of Papua New Guinea]].
|-
| &lt;li&gt;Autonomous region
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=1}}
|-
| &lt;li&gt;{{Q|Q3032144}} 
{{User:Emijrp/AHKrow|P31=Q3032144|wikidata=97|estimate=}}
|-
| rowspan=3 | {{flag|Samoa}} {{Q|Q683}}
| &lt;li&gt;{{Q|Q1070167}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=11}}
| rowspan=3 | 
|-
| &lt;li&gt;[[Electoral districts of Samoa]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=41}}
|-
| &lt;li&gt;[[Villages of Samoa]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=265}}
|-
| rowspan=1 | {{flag|Solomon Islands}} {{Q|Q685}}
| &lt;li&gt;{{Q|Q1025116}}
{{User:Emijrp/AHKrow|P31=Q1025116|wikidata=10|estimate=10}}
| rowspan=1 | 
|-
| rowspan=3 | {{flag|Tonga}} {{Q|Q678}}
| &lt;li&gt;{{Q|Q1344042}}
{{User:Emijrp/AHKrow|P31=Q20740204|wikidata=5|estimate=5}}
| rowspan=3 | [http://www.pmo.gov.to/tongastats/pdf/cen06_latestResult(21Dec07)Preliminary.pdf]{{dead link|date=September 2015}} [http://www.geohive.com/cntry/tonga.aspx]
|-
| &lt;li&gt;{{Q|Q1344042}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=23}}
|-
| &lt;li&gt;{{Q|Q502914}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
|-
| rowspan=2 | {{flag|Tuvalu}} {{Q|Q672}}
| &lt;li&gt;{{Q|Q128913}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=9}}
| rowspan=2 | 
|-
| &lt;li&gt;Island and islets
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=124}}
|-
| rowspan=3 | {{flag|Vanuatu}} {{Q|Q686}}
| &lt;li&gt;{{Q|Q847299}}
{{User:Emijrp/AHKrow|P31=Q847299|wikidata=6|estimate=6}}
| rowspan=3 | 
|-
| &lt;li&gt;Island regions
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=11}}
|-
| &lt;li&gt;{{Q|Q1863073}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=83}}
|-
{{User:Emijrp/AHKrowtotal|wikidata=1363|estimate=1639}}
|}

==== Antarctica ====
[[File:Antarctica (orthographic projection).svg|thumb|right|200px|Antarctica]]
'''{{Q|Q51}}''' is {{Q|Q2}}'s southernmost {{Q|Q5107}}. It contains the geographic {{Q|Q933}} and is situated in the {{Q|Q1555938}} region of the {{Q|Q41228}}, almost entirely south of the {{Q|Q182657}}, and is surrounded by the {{Q|Q7354}}.
{{main|Antarctic field camps|Research stations in Antarctica|Territorial claims in Antarctica}}

&lt;gallery mode="packed-hover"&gt;
&lt;/gallery&gt;

{| class="wikitable sortable plainlinks"
! width="150px" | Country 
! width="300px" | Related pages
! Wikidata
! Estimate
! References 
|-
| rowspan=4 | {{flag|Antarctica}} {{Q|Q51}}
| &lt;li&gt;{{Q|Q4771007}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=100}}
| &lt;ref&gt;Numbers vary from year to year and not all may be notable.&lt;/ref&gt;
|-
| &lt;li&gt;{{Q|Q749622}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=200}}
| &lt;ref&gt;Around 100 permanent stations (including summer-only camps) in 2014; perhaps as many again have been operated but since closed down.&lt;/ref&gt;
|-
| &lt;li&gt;Antarctic programs and expeditions
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=100}}
| &lt;ref&gt;Up to 50 national programs plus other notable expeditions.&lt;/ref&gt;
|-
| &lt;li&gt;Named locations in Antarctica
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=20000}}
| &lt;ref&gt;There are [https://www1.data.antarctica.gov.au/aadc/gaz/scar/ 19,254] identified locations/physical features in the SCAR Composite Gazetteer as of early 2015. Allowing for a small rate of increase, 20,000 is a reasonable estimate.&lt;/ref&gt;
|-
{{User:Emijrp/AHKrowtotal|wikidata=0|estimate=20400}}
|}

&lt;!-- table of territorial claims commented out, as this isn't really a very useful way to divide things. three overlap, and a large chunk of the continent is not covered by any of the ten claims
{| class="wikitable sortable"
! rowspan="2" | Territory
! colspan="2" | Estimate 
! rowspan="2" | References
|-
! Articles
! Progress 
|-
| {{Q|Q165783}} || ? || style="text-align: center;" data-sort-value=0 | '''?/?''' || 
|-
| {{Q|Q203073}} || ? || style="text-align: center;" data-sort-value=0 | '''?/?''' || 
|-
| {{Q|Q184319}} || ? || style="text-align: center;" data-sort-value=0 | '''?/?''' || 
|-
| {{Q|Q202780}} || ? || style="text-align: center;" data-sort-value=0 | '''?/?''' || 
|-
| {{Q|Q178994}} || ? || style="text-align: center;" data-sort-value=0 | '''?/?''' || 
|-
| {{Q|Q189999}} || ? || style="text-align: center;" data-sort-value=0 | '''?/?''' || 
|-
| {{Q|Q3626}} || ? || style="text-align: center;" data-sort-value=0 | '''?/?''' || 
|-
| {{Q|Q646243}} || ? || style="text-align: center;" data-sort-value=0 | '''?/?''' || 
|-
| {{Q|Q745767}} || ? || style="text-align: center;" data-sort-value=0 | '''?/?''' || 
|}

--&gt;

=== Physical geography ===

'''{{Q|Q52107}}''' is that branch of natural science which deals with the study of processes and patterns in the natural environment like the atmosphere, hydrosphere, biosphere, and geosphere, as opposed to the cultural or built environment, the domain of human geography.

* '''{{Q|Q12284}}''' and '''navigations''' are human-made [[Q1210950|channels]] for water conveyance (supply), or to service {{Q|Q155930}} {{Q|Q42889}}.
* A '''{{Q|Q35509}}''' or '''cavern''' is a natural underground space large enough for a human to enter.
* A '''{{Q|Q8514}}''' is a {{Q|Q107425}} or {{Q|Q82794}} that receives an extremely low amount of [[Q25257|precipitation]], less than enough to support growth of most plants.
* A '''{{Q|Q4421}}''', also referred to as a '''wood''' or the '''woods''', is an area with a high density of {{Q|Q10884}}.
* A '''{{Q|Q35666}}''' is a large persistent body of {{Q|Q23392}} that forms where the accumulation of {{Q|Q7561}} exceeds its {{Q|Q322177}} (melting and [[Q131800|sublimation]]) over many years, often centuries.
* An '''{{Q|Q23442}}''' is any piece of [[Q5107|sub-continental]] land that is surrounded by {{Q|Q283}}.
* A '''{{Q|Q23397}}''' is a body of relatively still fresh or salt {{Q|Q283}} of considerable size, localized in a [[Q190429|basin]], that is surrounded by land.
* A '''{{Q|Q8502}}''' is a large {{Q|Q271669}} that stretches above the surrounding land in a limited area usually in the form of a peak.
* A '''{{Q|Q4022}}'''  is a natural {{Q|Q355304}}, usually {{Q|Q102192}}, flowing towards an {{Q|Q9430}},  a {{Q|Q23397}},  a {{Q|Q165}}, or another river. There are 17 [[Q2977071|countries without rivers]].
* A '''{{Q|Q165}}''' generally refers to a large [[Q15324|body]] of salt water.

&lt;gallery mode="packed-hover" heights=100px&gt;
File:Alter Strom.jpg|The Alter Strom, in the sea resort of {{Q|Q311849}}, Germany
File:Lechuguilla Cave Pearlsian Gulf.jpg|{{Q|Q387771}}, {{Q|Q1522}}
File:Rub al Khali 002.JPG|{{Q|Q25391}} in the {{Q|Q229269}} ("Empty quarter") of {{Q|Q851}}
File:Swiss National Park 131.JPG||A [[Q132825|conifer forest]] in the {{Q|Q25220}} ([[Q83397|National Park]])
File:Baltoro glacier from air.jpg|The {{Q|Q805806}} in the {{Q|Q5469}}, {{Q|Q43100}}, Northern {{Q|Q843}}
File:Island near Fiji.jpg|A small {{Q|Q712}} island
File:Oeschinen.jpg|{{Q|Q14533}} in the {{Q|Q25220}}
|Mount Fuji with a {{Q|Q164338}} and {{Q|Q871991}} blossoms in the foreground
File:Nile03(js).jpg|Dhows on the {{Q|Q3392}}
File:Waves lajolla.jpg|The sea at {{Q|Q840668}}
&lt;/gallery&gt;

{| class="wikitable sortable plainlinks"
! width="150px" | Topic 
! width="300px" | Related pages
! Wikidata
! Estimate
! References 
|-
| rowspan=2 | {{Q|Q5107}}{{anchor|Continents}}
| &lt;li&gt;{{Q|Q5107}}
{{User:Emijrp/AHKrow|P31=Q5107|wikidata=43|estimate=7}}
| rowspan=2 | 
|-
| &lt;li&gt;{{Q|Q1989414}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=10}}
|-
| {{Q|Q12284}}{{anchor|Canals}}
| &lt;li&gt;{{Q|Q1371197}} ([[:Category:Lists of canals|cat]])
{{User:Emijrp/AHKrow|P31=Q12284|wikidata=49350|estimate=}}
| Total number of canals is unknown.
|-
| {{Q|Q35509}}{{anchor|Caves}}
| &lt;li&gt;{{Q|Q1420799}}
{{User:Emijrp/AHKrow|P31=Q35509|wikidata=7230|estimate=2400}}
| [[World Caves Database]] includes 2,424 caves deeper than 300m (total height) or longer than 3km.&lt;ref&gt;{{cite web |url=http://www-sop.inria.fr/agos/sis/DB/countries.html |title=Caves of the world |date=2013-05-26 |work= |publisher= |accessdate=2013-05-26 |quote= Number of caves = 2424; Caves deeper than 300m = 1075; Caves longer than 3kms = 1628 |archiveurl=http://www.webcitation.org/6GtsJQQrw |archivedate=2013-05-26 |deadurl=no}}&lt;/ref&gt;

* [[:pl:Ojcowski Park Narodowy]] - over 400 caves (sometimes very small, it includes caves no longer than 2m) on area of 21,46 km²
|-
| rowspan=2 | {{Q|Q8514}}{{anchor|Deserts}}
| &lt;li&gt;{{Q|Q593814}}
{{User:Emijrp/AHKrow|P31=Q8514|wikidata=2638|estimate=}}
| Total number of deserts is unknown.
|-
| &lt;li&gt;[[List of oases]]
{{User:Emijrp/AHKrow|P31=Q43742|wikidata=130|estimate=}}
| Total number of oases is unknown.
|-
| {{Q|Q4421}}{{anchor|Forests}}
| &lt;li&gt;{{Q|Q6647005}} ([[:Category:Lists of forests|cat]])
{{User:Emijrp/AHKrow|P31=Q4421|wikidata=25654|estimate=}}
| Total number of forests is unknown.
|-
| {{Q|Q35666}}{{anchor|Glaciers}}
| &lt;li&gt;{{Q|Q3273934}}
{{User:Emijrp/AHKrow|P31=Q35666|wikidata=7444|estimate=100000}}
| Total number of glaciers is unknown. According to sources by country:
{{div col|1}}
* [[List of glaciers in Kyrgyzstan|Kyrgyzstan]] (8,000)&lt;ref&gt;{{cite web | url=http://www.advantour.com/kyrgyzstan/glaciers.htm | title=Kyrgyzstan Glaciers | archiveurl=http://www.webcitation.org/6IhRlgRqQ | archivedate=2013-08-07 | deadurl=no | quote=Glaciers, (8000 of them – one source says 8208), and permanent snow cover some 8100 square kilometers - about 30% of the total land area of the Kyrgyz Republic. The glaciers themselves cover about 4% of the surface area of the country.}}&lt;/ref&gt;
* [[List of glaciers in Alaska|United States]] (100,000)&lt;ref&gt;{{cite web | url=http://www.adn.com/2011/06/18/1923654/how-many-alaska-glaciers-no-easy.html | title=How many Alaska glaciers? No easy answer | accessdate=2014-07-27 | quote=Not long ago, a glaciologist wrote that the number of glaciers in Alaska "is estimated at (greater than) 100,000." That fuzzy number, perhaps written in passive voice for a reason, might be correct. But it depends upon how you count. | archiveurl=http://www.webcitation.org/6RNK5Bwg7 | archivedate=2014-07-27 | deadurl=no}}&lt;/ref&gt;&lt;ref&gt;{{cite web | url=http://www.library.state.ak.us/asp/alaska_glaciers.html | title=Alaska's Glaciers | archiveurl=http://www.webcitation.org/6IhRyozjG | archivedate=2013-08-07 | deadurl=no | quote=745 Feature records have been selected from GNIS.}}&lt;/ref&gt;
{{div col end}}
|-
| rowspan=3 | {{Q|Q23442}}{{anchor|Islands}}
| &lt;li&gt;{{Q|Q994758}} ([[:Category:Lists of islands|cat]])
{{User:Emijrp/AHKrow|P31=Q23442|wikidata=150879|estimate=100000}}
| Total number of islands is unknown. According to sources are approximately 45,000 tropical islands.&lt;ref&gt;{{Q|Q23442}}&lt;/ref&gt;
|-
| &lt;li&gt;{{Q|Q162602}}
{{User:Emijrp/AHKrow|P31=Q162602|wikidata=939|estimate=}}
| Total number of islands in rivers is unknown.
|-
| &lt;li&gt;{{Q|Q863974}}
{{User:Emijrp/AHKrow|P31=Q863974|wikidata=42|estimate=}}
| Total number of islands in lakes is unknown.
|-
| {{Q|Q23397}}{{anchor|Lakes}}
| &lt;li&gt;{{Q|Q1976216}} ([[:Category:Lists of lakes|cat]])
{{User:Emijrp/AHKrow|P31=Q23397|wikidata=253012|estimate=1000000}}
| Total number of lakes is unknown.&lt;ref&gt;{{cite web | url=http://www.funtrivia.com/askft/Question5761.html | title=Which country has the most lakes?}}&lt;/ref&gt; According to sources by country:
{{div col|2}}
* [[List of lakes in Belarus|Belarus]] (11,000)&lt;ref name="belaruswater"&gt;{{cite web | url=http://www.development.by/belarus/ | title=Belarus Overview | archiveurl=http://www.webcitation.org/6IiUCBR5X | archivedate=2013-08-08 | deadurl=no | quote=There are more than 20,000 rivers and creeks and about 11,000 lakes in Belarus.}}&lt;/ref&gt;
* [[Q1663823|Canada]] (31,752)&lt;ref&gt;{{cite web | url=http://atlas.nrcan.gc.ca/site/english/learningresources/facts/lakes.html | title=The Atlas of Canada | archiveurl=http://wayback.archive.org/web/20120415102959/http://atlas.nrcan.gc.ca/site/english/learningresources/facts/lakes.html | archivedate=2012-04-15 | deadurl=yes | quote=31,752+larger than 3 km² (2-3 million in total)}}&lt;/ref&gt;
* [[Q1635673|Estonia]] (1,000)&lt;ref name="estoniawater" /&gt;
* [[Q1539871|Finland]] (187,888)&lt;ref&gt;{{cite web | url=http://www.ymparisto.fi/default.asp?node=12335&amp;lan=en | title=Lakes in Finland | archiveurl=http://www.webcitation.org/6Ggcra2BV | archivedate=2013-05-17 | deadurl=no | quote=There are 187,888 lakes in Finland. Lake is here defined as a body of standing water larger than 5 ares (500 m2). 56,000 over 10,000 m²}}&lt;/ref&gt;
* [[Q1413579|Iceland]] (67)
* [[List of lakes of Latvia|Latvia]] (3,000)&lt;ref name="latviawater" /&gt;
* [[Q1754043|Lithuania]] (3,000)&lt;ref name="lithuaniawater" /&gt;
* [[Q1851175|New Zealand]] (229)&lt;ref&gt;41 lakes &gt;10 km² (1000 ha), 229 lakes &gt;0.5 km² (50 ha), 3820 lakes &gt;0.01 km² (1 ha)&lt;/ref&gt;
* [[Q933156|Norway]] (450,000)
* [[Q1338455|Russia]] (???)
* [[Q393373|Sweden]] (150,000)&lt;ref&gt;Data available for 150,000, only 75,000 with name, 57,000 in [[:sv:Kategori:Listor över Sveriges insjöar]]&lt;/ref&gt;
* [[Q3250681|United States]] (???)&lt;ref&gt;{{Q|Q858874}} alone contains more than 2,000 lakes.&lt;/ref&gt;
{{div col end}}
|-
| rowspan=3 | {{Q|Q8502}}{{anchor|Mountains}}
| &lt;li&gt;{{Q|Q11985041}} ([[:Category:Lists of mountains|cat]])
{{User:Emijrp/AHKrow|P31=Q8502|wikidata=489978|estimate=1000000}}
| rowspan=2 | Total number of mountains is unknown. [[Mountains Mount]] includes info over 100,000 mountains.&lt;ref&gt;{{cite web |url=http://www.mountainsmounts.com |title=Mountains Mount |date=2012-05-30 |work= |publisher= |accessdate=2013-05-26 |quote= |archiveurl=http://wayback.archive.org/web/20120530104621/http://www.mountainsmounts.com/ |archivedate=2012-05-30 |deadurl=yes}}&lt;/ref&gt; According to sources [[Q6629394|by elevation]]:
{{div col|2}}
* [[Q185552|Above 8,000 m]] (14)
* Above 7,000 m (???)
* Above 6,000 m (???)
* Above 5,000 m (???)
{{div col end}}
|-
| &lt;li&gt;{{Q|Q1156053}}
{{User:Emijrp/AHKrow|P31=Q46831|wikidata=40975|estimate=}}
|-
| &lt;li&gt;{{Q|Q954526}}
{{User:Emijrp/AHKrow|P31=Q8072|wikidata=1829|estimate=1500}}
| According to sources there are over 1,500 volcanoes worldwide.&lt;ref&gt;{{cite web | url=http://www.volcanodiscovery.com/volcanoes/faq/how_many_volcanoes.html | title=How many volcanoes are there in the world? | archiveurl=http://www.webcitation.org/67vAwTCPF | archivedate=2012-05-25 | deadurl=no}}&lt;/ref&gt;
|-
| {{Q|Q4022}}{{anchor|Rivers}}
| &lt;li&gt;{{Q|Q2880825}} ([[:Category:Lists of rivers|cat]])
{{User:Emijrp/AHKrow|P31=Q4022|wikidata=398892|estimate=1000000}}
| Total number of rivers is unknown. According to sources, there are 146,000+ in Africa&lt;ref&gt;{{cite web | url=http://www.fao.org/docrep/008/a0118e/a0118e07.htm | title=Cartographic river drainage databases | archiveurl=http://www.webcitation.org/6Ghy4zX15 | archivedate=2013-05-18 | deadurl=no}}&lt;/ref&gt; and 104,000+ in Europe.&lt;ref&gt;{{cite web|url=http://www.clickgreen.org.uk/analysis/general-analysis/123752-more-than-half-of-europe%5Cs-rivers-fail-ecological-targets,-report-finds.html|title=More than half of Europe's rivers fail ecological targets, report finds}}&lt;/ref&gt; According to sources by country:
{{div col|2}}
* [[Q14208915|Azerbaijan]] (8,359)&lt;ref&gt;According to unknown sources there are 8,188 rivers less than 25 km, only 24 rivers over 100 km.&lt;/ref&gt;
* [[Q3248880|Bangladesh]] (700)&lt;ref&gt;{{cite web|url=http://countrystudies.us/bangladesh/25.htm|title=River Systems}}&lt;/ref&gt;
* [[Q1279790|Belarus]] (20,000)&lt;ref name="belaruswater" /&gt;
* [[Q2704807|Brazil]] (25,000)&lt;ref&gt;{{cite web|url=http://www.fao.org/fishery/countrysector/naso_brazil/en|title=National Aquaculture Sector Overview - Brazil}}&lt;/ref&gt;
* [[Q26808|China]] (20,000)&lt;ref&gt;{{cite web|url=http://www.fao.org/nr/water/espim/country/china/print1.stm|title=China - Geography and population|publisher=FAO}}&lt;/ref&gt;&lt;ref&gt;{{cite web|url=http://www.theatlantic.com/china/archive/2013/04/28-000-rivers-disappeared-in-china-what-happened/275365/|title=28,000 Rivers Disappeared in China: What Happened?}}&lt;/ref&gt;
* [[Q3249215|El Salvador]] (300)&lt;ref&gt;{{cite web|url=http://countrystudies.us/el-salvador/18.htm|title=El Salvador - Physical Features}}&lt;/ref&gt;
* [[Q1328197|Estonia]] (7,000)&lt;ref name="estoniawater"&gt;{{cite web|url=http://www.wwoof.ee/index.php?page=about-estonia&amp;hl=en_US|title=About Estonia}}&lt;/ref&gt;
* [[Q6636627|Georgia]] (26,000)&lt;ref&gt;{{cite web|url=http://www.aen.ge/index.php?page=hydro|title=HYDRO ENERGY}}&lt;/ref&gt;
* [[Q3244058|Guatemala]] (3,000)&lt;ref&gt;{{cite web|url=http://fivas.org/fivas/vedlegg/Power-to-the-people_FIVAS_2010.pdf|title=Hydropower, indigenous peoples’ rights and popular resistance in Guatemala}}{{dead link|date=September 2015}}&lt;/ref&gt;
* [[Q12858930|Kyrgyzstan]] (25,000)&lt;ref&gt;{{cite web|url=http://caresd.net/iwp/water.html|title=Water and hydropower Resources of the Kyrgyz Republic}}&lt;/ref&gt;&lt;ref&gt;{{cite web | url=http://www.welcome.kg/ru/kyrgyzstan/nature/wot/ | title=Воды | archiveurl=http://www.webcitation.org/6GhcI8wOB | archivedate=2013-05-18 | deadurl=no | quote= 2,044 over 10 km}}&lt;/ref&gt;
* [[Q543716|Latvia]] (12,000)&lt;ref name="latviawater"&gt;{{cite web|url=http://www.blbc.lv/business/business-environment|title=Latvia - General information Geography}}&lt;/ref&gt;
* [[Q1927499|Lithuania]] (22,000)&lt;ref name="lithuaniawater"&gt;{{cite web|url=http://www.lietuva.lt/en/about_lithuania/geography_climate|title=Lithuania - Geography &amp; Climate}}&lt;/ref&gt;
* [[Q3461098|Nepal]] (6,000)&lt;ref&gt;{{cite web | url=http://www.nepalrivers.org.np/Article/the-karnali-river-article.php | title=Nepal River Conservation Trust | archiveurl=http://wayback.archive.org/web/20120305094920/http://www.nepalrivers.org.np/Article/the-karnali-river-article.php | archivedate=2012-03-05 | deadurl=yes | quote=The latest data shows that Nepal has got over 6000 rivers and streams which have got hydropower potential.}}&lt;/ref&gt;
* [[Q3248510|Panama]] (500)&lt;ref&gt;{{cite web | url=http://countrystudies.us/panama/24.htm | title=Panama - Geography | quote=Nearly 500 rivers lace Panama's rugged landscape. Mostly unnavigable, many originate as swift highland streams, meander in valleys, and form coastal deltas.}}&lt;/ref&gt;
* [[Q691200|Romania]] (4,000)&lt;ref&gt;{{cite web | url=http://www.fao.org/docrep/009/t0798e/T0798E09.htm | title=Inland fisheries of Europe | quote=In addition to the dominating Danube, Romania has over 4,000 rivers having watersheds larger than 10 km2 and a total length exceeding 60,000 km.}}&lt;/ref&gt;
* [[Q1139013|Russia]] (120,000)&lt;ref&gt;{{cite web | url=http://kids.britannica.com/comptons/article-207540/Russia | title=Russia:: Rivers and Lakes | quote=Among its 100,000 rivers, Russia contains some of the world's longest. Four of the country's five longest rivers—the Ob-Irtysh, Amur, Lena, and Yenisey—are in Siberia.}}&lt;/ref&gt;&lt;ref&gt;{{cite web | url=http://www.fao.org/docrep/W6240E/w6240e16.htm | title=Russia - Water report | quote=There are 120,000 rivers over 10 km long. Their total length within the Russian Federation equals 2.3 million km | archiveurl=http://www.webcitation.org/6Kx8rpNPc | archivedate=2013-11-07 | deadurl=no}}&lt;/ref&gt;
* [[Q1145079|Spain]] (1,800)&lt;ref&gt;{{cite web | url=http://countrystudies.us/spain/31.htm | title=Spain - Rivers | quote=Of the roughly 1,800 rivers and streams in Spain, only the Tagus is more than 960 kilometers long; all but 90 extend less than 96 kilometers.}}&lt;/ref&gt;
* [[Q2066017|Ukraine]] (71,000)&lt;ref&gt;{{cite web | url=http://www.fao.org/fi/oldsite/FCP/en/UKR/profile.htm | title=FAO Fishery Country Profile - UKRAINE | quote=Ukraine has about 71,000 rivers, with a total length of 248,000 km. Among them, 3,212 rivers have a length of more than 10 km and total 73,700 km in length.}}&lt;/ref&gt;
* [[Q1863493|United States]] (250,000)&lt;ref&gt;{{cite web|url=http://www.americanrivers.org/library/river-facts/river-facts.html|title=River Facts|archiveurl=http://web.archive.org/web/20110807132400/http://www.americanrivers.org/library/river-facts/river-facts.html|archivedate=2011-08-07}})&lt;/ref&gt;&lt;ref&gt;{{cite web|url=https://en.wikipedia.org/w/index.php?title=Wikipedia_talk:WikiProject_Rivers&amp;oldid=470687140#Estimate|title=Wikipedia talk:WikiProject Rivers|quote=2,000,000+ including small streams}}&lt;/ref&gt;
* [[Q3249667|Venezuela]] (1,000)&lt;ref&gt;{{cite web | url=http://countrystudies.us/venezuela/10.htm | title=Venezuela - Rivers | quote=The Orinoco is by far the most important of the more than 1,000 rivers in the country.}}&lt;/ref&gt;
{{div col end}}
|-
| rowspan=3 | {{Q|Q165}}{{anchor|Seas}}
| &lt;li&gt;{{Q|Q229088}}
{{User:Emijrp/AHKrow|P31=Q165|wikidata=432|estimate=150}}
| rowspan=3 | 
|-
| &lt;li&gt;{{Q|Q9430}}
{{User:Emijrp/AHKrow|P31=Q9430|wikidata=34|estimate=5}}
|-
| &lt;li&gt;{{Q|Q17096077}}
{{User:Emijrp/AHKrow|P31=Q11802343|wikidata=26|estimate=14}}
|-
{{User:Emijrp/AHKrowtotal|wikidata=1429527|estimate=3323814}}
|}

== History ==

'''{{Q|Q309}}''' (from [[Q9129|Greek]] {{lang|el|''ἱστορία''}} - ''historia'', meaning "inquiry, knowledge acquired by investigation") is the discovery, collection, organization, and presentation of information about past events. See also {{Q|Q7112655}}.

* A '''{{Q|Q45382}}''', also known as a coup, a putsch, or an overthrow, is the sudden deposition of a government, usually by a small group of the existing state establishment—typically the military—to depose the extant government and replace it with another body, civil or military.
* A '''{{Q|Q3839081}}''' is a natural or man-made (or technological) hazard resulting in an event of substantial extent causing significant physical damage or destruction, loss of life, or drastic change to the environment. See also {{Q|Q1251957}} and {{Q|Q6616806}}.
* An '''{{Q|Q40231}}''' is a formal decision-making process by which a population chooses an individual to hold public office. Elections have been the usual mechanism by which modern representative democracy has operated since the 17th century. Elections may fill offices in the legislature, sometimes in the executive and judiciary, and for regional and local government.
* '''{{Q|Q192781}}''' is a {{Q|Q80083}} [[Q221173|discipline]] within the scope of [[Q309|general historical]] recording of [[Q198|armed conflict]] in the [[Q200325|history of humanity]], and its impact on the societies, their cultures, economies and changing [[Q7163|intra]] and {{Q|Q166542}}. [[WP:MHA#Statistics]] has over 127,000 articles as of this listing.
* A '''{{Q|Q10931}}''' (from the Latin revolutio, "a turn around") is a fundamental change in power or organizational structures that takes place in a relatively short period of time. 

&lt;gallery mode="packed-hover"&gt;
File:Gyzis 006 (Ηistoria).jpeg|Historia (Allegory of History) by {{Q|Q472237}} (1892)
File:2004-tsunami.jpg|Taken at {{Q|Q375819}}, {{Q|Q236769}}, {{Q|Q869}}, during the {{Q|Q130754}}
File:Election MG 3455.JPG|A {{Q|Q577947}}
|{{Q|Q15180}} soldier waving the {{Q|Q16666904}} over the central plaza of [[Q38789|Stalingrad]] in 1943
File:Eugène Delacroix - La liberté guidant le peuple.jpg|''{{Q|Q29530}}'' in {{Q|Q6534}}, painting by {{Q|Q33477}}
&lt;/gallery&gt;

{| class="wikitable sortable plainlinks"
! width="100px" | Topic 
! width="300px" | Related pages
! Wikidata
! Estimate
! References 
|-
| {{Q|Q1}}
| &lt;li&gt;{{Q|Q136407}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| See also {{Q|Q386638}}.
|-
| {{Q|Q2}}
| &lt;li&gt;{{Q|Q1040736}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| See also {{Q|Q43521}}
|-
| rowspan=5 | By country and period
| &lt;li&gt;{{Q|Q6457238}}
{{User:Emijrp/AHKrow|P31=Q18340514|wikidata=129889|estimate=200000}}
| rowspan=5 | Assuming [[:Category:Years by country|200 countries and 1,000 years]], there could be 200,000 articles. See also {{Q|Q17004260}}, {{Q|Q5774825}}, [[:Category:Year lists]] and {{Q|Q1287739}}.
|-
| &lt;li&gt;{{Q|Q11879744}}
{{User:Emijrp/AHKrow|P31=Q577|wikidata=7071|estimate=10000}}
|-
| &lt;li&gt;{{Q|Q196828}}
{{User:Emijrp/AHKrow|P31=Q39911|wikidata=706|estimate=1000}}
|-
| &lt;li&gt;{{Q|Q27305}}
{{User:Emijrp/AHKrow|P31=Q578|wikidata=177|estimate=100}}
|-
| &lt;li&gt;{{Q|Q768541}}
{{User:Emijrp/AHKrow|P31=Q36507|wikidata=75|estimate=50}}
|-
| rowspan=1 | By format
| &lt;li&gt;{{Q|Q131000}}
{{User:Emijrp/AHKrow|P31=Q186117|wikidata=2227|estimate=}}
| rowspan=1 | Total number of timelines is unknown. See also {{Q|Q7806483}}.
|-
| By topic
| &lt;li&gt;[[:Category:History by topic]]&lt;li&gt;[[:Category:History-related lists]]
{{User:Emijrp/AHKrow|P31=Q17524420|wikidata=134566|estimate=}}
| Total number of topics is unknown.
|-
| {{Q|Q45382}}
| &lt;li&gt;[[Q6614420|Coups d'état and coup attempts]]
{{User:Emijrp/AHKrow|P31=Q45382|wikidata=286|estimate=}}
| Total number of coups d'état is unknown.
|-
| rowspan=9 | {{Q|Q3839081}} ([[Q8065|natural]]){{anchor|Disasters}}
| &lt;li&gt;{{Q|Q214872}}
{{User:Emijrp/AHKrow|P31=Q7944|wikidata=1779|estimate=}}
| Total number of earthquakes is unknown.
|-
| &lt;li&gt;{{Q|Q4254860}}
{{User:Emijrp/AHKrow|P31=Q44512|wikidata=101|estimate=}}
| Total number of epidemics is unknown.
|-
| &lt;li&gt;{{Q|Q2967170}}
{{User:Emijrp/AHKrow|P31=Q168983|wikidata=714|estimate=}}
| Total number of fires is unknown.
|-
| &lt;li&gt;{{Q|Q6620530}}
{{User:Emijrp/AHKrow|P31=Q8068|wikidata=429|estimate=}}
| Total number of floods is unknown.
|-
| &lt;li&gt;{{Q|Q6624917}}
{{User:Emijrp/AHKrow|P31=Q167903|wikidata=64|estimate=}}
| Total number of landslides is unknown.
|-
| &lt;li&gt;[[Q5947690|List of tornadoes]]
{{User:Emijrp/AHKrow|P31=Q8081|wikidata=116|estimate=}}
| Total number of tornadoes is unknown.
|-
| &lt;li&gt;[[Q5947690|List of tornado outbreaks]]
{{User:Emijrp/AHKrow|P31=Q2696963|wikidata=191|estimate=}}
| Total number of tornado outbreaks is unknown.
|-
| &lt;li&gt;{{Q|Q47103}}
{{User:Emijrp/AHKrow|P31=Q8070|wikidata=9|estimate=}}
| Total number of tsunamis is unknown.
|-
| &lt;li&gt;{{Q|Q13762161}}
{{User:Emijrp/AHKrow|P31=Q7692360|wikidata=72|estimate=}}
| Total number of volcanic eruptions is unknown.
|-
| rowspan=11 | {{Q|Q3839081}} ([[Q2920615|man-made]])
| &lt;li&gt;{{Q|Q4217245}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of airship accidents is unknown.
|-
| &lt;li&gt;{{Q|Q354069}}
{{User:Emijrp/AHKrow|P31=Q3002150|wikidata=231|estimate=}}
| Total number of accidents involving commercial aircraft is unknown.
|-
| &lt;li&gt;{{Q|Q2478941}}
{{User:Emijrp/AHKrow|P31=Q168247|wikidata=64|estimate=}}
| Total number of famines is unknown.
|-
| &lt;li&gt;{{Q|Q627843}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of industrial disasters is unknown.
|-
| &lt;li&gt;{{Q|Q1519988}}
{{User:Emijrp/AHKrow|P31=Q2620513|wikidata=127|estimate=}}
| Total number of maritime disasters is unknown.
|-
| &lt;li&gt;{{Q|Q1620824}}
{{User:Emijrp/AHKrow|P31=Q1620824|wikidata=27|estimate=}}
| Total number of nuclear accidents is unknown.
|-
|  &lt;li&gt;{{Q|Q1687478}}
{{User:Emijrp/AHKrow|P31=Q220187|wikidata=68|estimate=}}
| Total number of oil spills is unknown.
|-
| &lt;li&gt;{{Q|Q6636773}}
{{User:Emijrp/AHKrow|P31=Q9687|wikidata=248|estimate=}}
| Total number of road accidents is unknown.
|-
| &lt;li&gt;{{Q|Q4434495}}
{{User:Emijrp/AHKrow|P31=Q1078765|wikidata=1106|estimate=}}
| Total number of rail accidents is unknown.
|-
| &lt;li&gt;&lt;li&gt;[[Q603630|Spaceflight-related accidents and incidents]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of spaceflight-related accidents is unknown.
|-
| &lt;li&gt;[[Q21921605|Structural failures and collapses]]
{{User:Emijrp/AHKrow|P31=Q1309431|wikidata=65|estimate=}}
| Total number of structural failures is unknown.
|-
| rowspan=1 | {{Q|Q40231}}{{anchor|Election}}
| &lt;li&gt;{{Q|Q3317799}}
{{User:Emijrp/AHKrow|P31=Q40231|wikidata=29233|estimate=}}
| Total number of elections is unknown.
|-
| rowspan=4 | {{Q|Q192781}}
| &lt;li&gt;{{Q|Q1127651}}
{{User:Emijrp/AHKrow|P31=Q178561|wikidata=12588|estimate=}}
| Total number of battles is unknown.
|-
| &lt;li&gt;{{Q|Q13583360}} 
{{User:Emijrp/AHKrow|P31=Q198|wikidata=13773|estimate=}}
| Total number of wars is unknown.
|-
| &lt;li&gt;{{Q|Q394073}} 
{{User:Emijrp/AHKrow|P31=Q131569|wikidata=2829|estimate=}}
| Total number of treaties is unknown.
|-
| &lt;li&gt;[[:Category:Naval ships]]
{{User:Emijrp/AHKrow|P31=Q3114762|wikidata=10110|estimate=}}
| Total number of warships is unknown.
|-
| rowspan=2 | {{Q|Q10931}} and {{Q|Q124734}}{{anchor|Revolutions}}
| &lt;li&gt;{{Q|Q142330}}
{{User:Emijrp/AHKrow|P31=Q10931|wikidata=72|estimate=}}
| Total number of revolutions and rebellions is unknown. See also {{Q|Q17005524}}.
|-
| &lt;li&gt;{{Q|Q6641569}}
{{User:Emijrp/AHKrow|P31=Q49776|wikidata=409|estimate=}}
| Total number of strikes is unknown.
|-
| rowspan=2 | Sites{{anchor|Sites}}
| &lt;li&gt;{{Q|Q351639}}
{{User:Emijrp/AHKrow|P31=Q839954|wikidata=39504|estimate=}}
| Total number of archaeological sites.
|-
| &lt;li&gt;[[List of ruins]]
{{User:Emijrp/AHKrow|P31=Q109607|wikidata=5431|estimate=}}
| Total number of ruins is unknown.
|-
{{User:Emijrp/AHKrowtotal|wikidata=394357|estimate=467589}}
|}

== GLAM ==
'''{{Q|Q1180327}}''' is an acronym for "galleries, libraries, archives, and museums", although other versions of the acronym exist, such as LAM, which incorporates only libraries, archives, and museums. More generally, GLAMs are publicly funded, publicly accountable institutions collecting {{Q|Q210272}} materials.

* An '''{{Q|Q166118}}''' is an accumulation of historical records, or the physical place they are located. Archives contain primary source documents that have accumulated over the course of an individual or organization's lifetime, and are kept to show the function of that person or organization.

* A '''{{Q|Q7075}}''' is an organized collection of information resources made accessible to a defined community for reference or borrowing. It provides physical or digital access to material, and may be a physical building or room, or a virtual space, or both.

* A '''{{Q|Q33506}}''' is an institution that cares for (conserves) a collection of artifacts and other objects of scientific, artistic, cultural, or historical importance and makes them available for public viewing through exhibits that may be permanent or temporary.

&lt;gallery mode="packed-hover"&gt;
File:LOC Main Reading Room Highsmith.jpg|Main reading room at the {{Q|Q131454}}
File:Fondos archivo.jpg|Shelved record boxes of an archive
File:Museo del Prado 2016 (25185969599).jpg|{{Q|Q160112}} in Spain
File:Melk - Abbey - Library.jpg|Library at {{Q|Q660082}} in Austria
File:Louvre at night centered.jpg|thumb|right|The [[Q19675|Louvre Museum]] in {{Q|Q90}}, one of the largest and most famous museums in the world
&lt;/gallery&gt;

{| class="wikitable sortable plainlinks"
! width="100px" | Topic 
! width="200px" | Related pages
! Wikidata
! Estimate
! References 
|-
| {{Q|Q166118}}{{anchor|Archives}}
| &lt;li&gt;{{Q|Q1862534}} ([[:Category:Archives by country|cat]])
{{User:Emijrp/AHKrow|P31=Q166118|wikidata=3773|estimate=}}
| Total number of archives is unknown. According to sources by country:
{{div col|2}}
* [[Q6343165|Spain]] (34,000)&lt;ref&gt;{{cite web | url=http://censoarchivos.mcu.es/CensoGuia/contenido.htm | title=Censo-Guía de Archivos de España e Iberoamérica | archiveurl=http://www.webcitation.org/6Ih8CrB5V | archivedate=2013-08-07 | deadurl=no}}&lt;/ref&gt;
* [[Q16962928|United Kingdom]] (2,389)&lt;ref name="ukglam" /&gt;
{{div col end}}

See also {{Q|Q22816}}, {{Q|Q6619839}} and {{Q|Q16154975}}.
|-
| [[Q7075|Libraries]]{{anchor|Libraries}}
| &lt;li&gt;{{Q|Q4740571}} ([[:Category:Libraries by country|cat]])
{{User:Emijrp/AHKrow|P31=Q7075|wikidata=18446|estimate=72000}}
| According to OCLC, there are 72,000+ libraries in 170 countries.&lt;ref&gt;{{cite web | url=http://www.oclc.org/multimedia/2011/files/emearc/Jay_Jordan_EMEARC2011.pdf | title=OCLC President’s Report | archiveurl=http://www.webcitation.org/68wzCbnDp | archivedate=2013-08-07 | deadurl=no}}&lt;/ref&gt; According to sources by country:
{{div col|3}}
* [[List of libraries in Burundi|Burundi]] (60)&lt;ref&gt;{{cite web | url=http://www.nationsencyclopedia.com/Africa/Burundi-LIBRARIES-AND-MUSEUMS.html | title=Burundi - Libraries and museums | quote=There are 60 public libraries in Burundi, with the largest in and around the capital. Libraries in Bujumbura include the Public Library, which has 27,000 volumes; the library of the University of Burundi, with 192,000 volumes; and a specialized collection at the Department of Geology and Mines. The French Cultural Center in Bujumbura holds 33,000 volumes.}}&lt;/ref&gt;
* [[List of libraries in Canada|Canada]] (4,154)&lt;ref&gt;{{cite web | url=http://wiki.answers.com/Q/How_many_libraries_are_in_Canada | title=How many libraries are in Canada? | archiveurl=http://www.webcitation.org/6Ih9eAQUj | archivedate=2013-08-07 | deadurl=no}}&lt;/ref&gt;
* [[List of libraries in Croatia|Croatia]] (232)&lt;ref&gt;{{cite web | url=http://www.nationsencyclopedia.com/Europe/Croatia-LIBRARIES-AND-MUSEUMS.html | title=Croatia - Libraries and museums | quote=In 1995, the country reported having 232 public libraries with a combined collection of 4.6 million volumes.}}&lt;/ref&gt;
* [[Q20715817|Cuba]] (400)&lt;ref&gt;{{cite web|url=http://www.granma.cu/multimedia/imagenes/6552|title=Cuba cuenta con más de 400 bibliotecas públicas en todo el territorio nacional, incluidas las situadas en las montañas}}&lt;/ref&gt;
* [[List of libraries in the Czech Republic|Czech Republic]] (6,245)&lt;ref&gt;{{cite web | url=http://www.nationsencyclopedia.com/Europe/Czech-Republic-LIBRARIES-AND-MUSEUMS.html | title=Czech Republic - Libraries and museums | quote=In 1997, the Czech Republic had 6,245 public libraries with 53.7 million volumes and 1.4 million registered users.}}&lt;/ref&gt;
* [[List of libraries in Denmark|Denmark]] (250)&lt;ref&gt;{{cite web | url=http://www.nationsencyclopedia.com/Europe/Denmark-LIBRARIES-AND-MUSEUMS.html | title=Denmark - Libraries and museums | quote=As of 2002, there were 250 free public libraries throughout the country with 892 points of service. That year, the public libraries had a total of more than 31.4 million volumes.}}&lt;/ref&gt;
* [[List of libraries in Finland|Finland]] (1,471)&lt;ref&gt;{{cite web | url=http://www.nationsencyclopedia.com/Europe/Finland-LIBRARIES-AND-MUSEUMS.html | title=Finland - Libraries and museums | quote=There are about 400 research and university libraries in Finland, most of which are small. In 1997 there were 436 central public libraries and 1,202 branch libraries.}}&lt;/ref&gt;&lt;ref name="finlandcordis"&gt;{{cite web | url=http://cordis.europa.eu/libraries/en/nfp/finland.html | title=Report on the situation of libraries, museums and archive | archiveurl=http://www.webcitation.org/6Ih7YZPWq | archivedate=2013-08-07 | deadurl=no | quote=In Finland there were 439 public libraries having 1006 branches and 370 research libraries with 465 branches in 1996. The total number of library units was 1471. The total number of museums in Finland is 280, of which 139 are cultural history museums, 71 special museums, 55 art museums and 17 natural history museums.}}&lt;/ref&gt;
* [[List of libraries in France|France]] (1,620)&lt;ref name="francenations"&gt;{{cite web | url=http://www.nationsencyclopedia.com/Europe/France-LIBRARIES-AND-MUSEUMS.html | title=France - Libraries and museums | quote=In 1997 there were 1,620 central public libraries with a combined total of more than 89.8 million volumes. There are more than 1,000 museums in France.}}&lt;/ref&gt;&lt;ref&gt;{{cite web | url=http://www.fyifrance.com | title=FYI France}}&lt;/ref&gt;
* [[Q1861967|Germany]] (6,313)&lt;ref name="germanynations"&gt;{{cite web | url=http://www.nationsencyclopedia.com/Europe/Germany-LIBRARIES-AND-MUSEUMS.html | title=Germany - Libraries and museums | quote=As of 1997, Germany had 6,313 public libraries with 149 million volumes in total. Germany has more than 4,500 state, municipal, association, private, residential, castle, palace, and church and cathedral treasures museums, which annually attract over 100 million visitors.}}&lt;/ref&gt;
* [[List of libraries in Greece|Greece]] (672)&lt;ref&gt;{{cite web | url=http://www.nationsencyclopedia.com/Europe/Greece-LIBRARIES-AND-MUSEUMS.html | title=Greece - Libraries and museums | quote=In 1997, there were 672 public libraries with a total of 9.1 million volumes}}&lt;/ref&gt;
* [[List of libraries in Hungary|Hungary]] (3,518)&lt;ref name="hungarynations"&gt;{{cite web | url=http://www.nationsencyclopedia.com/Europe/Hungary-LIBRARIES-AND-MUSEUMS.html | title=Hungary - Libraries and museums | quote=As of 1997, there were 3,518 regional public libraries located throughout the country. There were over 500 museums (about 70 in Budapest) and many zoological and botanical gardens.}}&lt;/ref&gt;
* [[List of libraries in Iceland|Iceland]] (187)&lt;ref name="icelandnations"&gt;{{cite web | url=http://www.nationsencyclopedia.com/Europe/Iceland-LIBRARIES-AND-MUSEUMS.html | title=Iceland - Libraries and museums | quote=There were a total of 187 public libraries with combined holdings of 1.9 million volumes in 1997. Iceland has more than 50 museums.}}&lt;/ref&gt;
* [[List of libraries in Latvia|Latvia]] (998)&lt;ref&gt;{{cite web | url=http://www.nationsencyclopedia.com/Europe/Latvia-LIBRARIES-AND-MUSEUMS.html | title=Latvia - Libraries and museums | quote=In 1997, the country counted 998 public libraries housing 14.9 million volumes.}}&lt;/ref&gt;
* [[List of libraries in Lithuania|Lithuania]] (1,478)&lt;ref&gt;{{cite web | url=http://www.nationsencyclopedia.com/Europe/Lithuania-LIBRARIES-AND-MUSEUMS.html | title=Lithuania - Libraries and museums | quote=In 1997, there were 1,478 public libraries in the country.}}&lt;/ref&gt;
* [[List of libraries in Morocco|Morocco]] (18)&lt;ref name="morocconations"&gt;{{cite web | url=http://www.nationsencyclopedia.com/Africa/Morocco-LIBRARIES-AND-MUSEUMS.html | title=Morocco - Libraries and museums | quote=Of the 18 public libraries in Morocco, the largest is in Casablanca, with almost 360,000 volumes.}}&lt;/ref&gt;
* [[Q6625369|Netherlands]] (579)&lt;ref&gt;{{cite web | url=http://www.nationsencyclopedia.com/Europe/Netherlands-LIBRARIES-AND-MUSEUMS.html | title=Netherlands - Libraries and museums | quote=In 1997 there were 579 main public libraries with a combined collection of 41.5 million books.}}&lt;/ref&gt;
* [[List of libraries in North Korea|North Korea]] (200)&lt;ref&gt;{{cite web | url=http://www.nationsencyclopedia.com/Asia-and-Oceania/Korea-Democratic-People-s-Republic-of-DPRK-LIBRARIES-AND-MUSEUMS.html | title=Korea, Democratic People's Republic of (DPRK) - Libraries and museums | quote=The DPRK has more than 200 public libraries, the largest being the Grand People's Study House in P'yongyang, with 20 million volumes.}}&lt;/ref&gt;
* [[List of libraries in Norway|Norway]] (1,108)&lt;ref&gt;{{cite web | url=http://www.nationsencyclopedia.com/Europe/Norway-LIBRARIES-AND-MUSEUMS.html | title=Norway - Libraries and museums | quote=Norway's 1,108 public libraries had 20.5 million volumes in 1997.}}&lt;/ref&gt;
* [[List of libraries in Panama|Panama]] (40)&lt;ref&gt;{{cite web | url=http://www.nationsencyclopedia.com/Americas/Panama-LIBRARIES-AND-MUSEUMS.html | title=Panama - Libraries and museums | quote=There are more than 40 other public libraries and branches.}}&lt;/ref&gt;
* [[List of libraries in Peru|Peru]] (200)&lt;ref name="perunations"&gt;{{cite web | url=http://www.nationsencyclopedia.com/Americas/Peru-LIBRARIES-AND-MUSEUMS.html | title=Peru - Libraries and museums | quote=There are nearly 200 public libraries in Peru, the largest of them in Callao, Arequipa, and Lima. More than 250 public and private museums.}}&lt;/ref&gt;
* [[List of libraries in Poland|Poland]] (9,230)&lt;ref name="polandnations"&gt;{{cite web | url=http://www.nationsencyclopedia.com/Europe/Poland-LIBRARIES-AND-MUSEUMS.html | title=Poland - Libraries and museums | quote=In 1997 there were 9,230 public libraries, jointly holding almost 135 million volumes. Of the more than 500 museums in Poland...}}&lt;/ref&gt;
* [[List of libraries in Portugal|Portugal]] (168)&lt;ref name="portugalnations"&gt;{{cite web | url=http://www.nationsencyclopedia.com/Europe/Portugal-LIBRARIES-AND-MUSEUMS.html | title=Portugal - Libraries and museums | quote=In 1997 the country had 168 public libraries with 4.8 million volumes. There are some 300 museums in Portugal.}}&lt;/ref&gt;
* [[List of libraries in Romania|Romania]] (2,950)&lt;ref name="romanianations"&gt;{{cite web | url=http://www.nationsencyclopedia.com/Europe/Romania-LIBRARIES-AND-MUSEUMS.html | title=Romania - Libraries and museums | quote=In 1997, the country had over 2,950 public libraries holding a total collection of 50.5 million volumes. Romania has some 400 museums.}}&lt;/ref&gt;
* [[List of libraries in Russia|Russia]] (50,032)&lt;ref name="russianations"&gt;{{cite web | url=http://www.nationsencyclopedia.com/Europe/Russia-LIBRARIES-AND-MUSEUMS.html | title=Russia - Libraries and museums | quote=In 1995, the country counted 50,032 public libraries, holding in total 983.4 million volumes. Russia has over 1,000 museums.}}&lt;/ref&gt;
* [[List of libraries in Sweden|Sweden]] (324)&lt;ref name="swedennations"&gt;{{cite web | url=http://www.nationsencyclopedia.com/Europe/Sweden-LIBRARIES-AND-MUSEUMS.html | title=Sweden - Libraries and museums | quote=In 1997, Sweden had 324 public libraries. Sweden has about 200 museums.}}&lt;/ref&gt;
* [[List of libraries in Tanzania|Tanzania]] (16)&lt;ref&gt;{{cite web | url=http://www.nationsencyclopedia.com/Africa/Tanzania-LIBRARIES-AND-MUSEUMS.html | title=Tanzania - Libraries and museums | quote=The Tanzania Library Service was established in 1964. It maintains the National Central Library in Dar es Salaam (656,000 volumes), 16 public libraries, school library service, and a rural extension service.}}&lt;/ref&gt;
* [[List of libraries in Tunisia|Tunisia]] (200)&lt;ref&gt;{{cite web | url=http://www.nationsencyclopedia.com/Africa/Tunisia-LIBRARIES-AND-MUSEUMS.html | title=Tunisia - Libraries and museums | quote=The collections of Tunisia's approximately 250 public libraries hold over 2.7 million volumes.}}&lt;/ref&gt;
* [[List of libraries in Ukraine|Ukraine]] (21,857)&lt;ref&gt;{{cite web | url=http://www.nationsencyclopedia.com/Europe/Ukraine-LIBRARIES-AND-MUSEUMS.html | title=Ukraine - Libraries and museums | quote=In 1995, there were reported to be 21,857 public libraries operating in Ukraine with an overall stock of 336.7 million books.}}&lt;/ref&gt;
* [[List of libraries in the United Kingdom|United Kingdom]] (5,500)&lt;ref name="ukglam"&gt;{{cite web|url=http://www.lboro.ac.uk/microsites/infosci/lisu/lampost10/inst10.html|title=Libraries, Archives, Museums and Publishing Online Statistics Tables|archiveurl=http://www.webcitation.org/6Ih8uUvQo|archivedate=2013-08-07|deadurl=no}}&lt;/ref&gt;
* [[List of libraries in the United States|United States]] (139,000)&lt;ref&gt;{{cite web | url=http://www.librarycopyrightalliance.org/bm~doc/lca-sopa-8nov11.pdf | title=Library Copyright Alliance | archiveurl=http://www.webcitation.org/67sUGbrT2 | archivedate=2012-05-23 | deadurl=no}}&lt;/ref&gt;
* [[List of libraries in Zimbabwe|Zimbabwe]] (76)&lt;ref&gt;{{cite web | url=http://www.nationsencyclopedia.com/Africa/Zimbabwe-LIBRARIES-AND-MUSEUMS.html | title=Zimbabwe - Libraries and museums | quote=There were more than 150,000 registered public library users using 76 public libraries holding 1.1 million volumes in 1989. In 1990, 100,000 people visited Zimbabwe's 11 museums.}}&lt;/ref&gt;
{{div col end}}

According to sources by size:

* {{Q|Q23308}} (150,000,000 items)&lt;ref&gt;Books, manuscripts, journals, newspapers, magazines, sound and music recordings, videos, play-scripts, patents, databases, maps, stamps, prints, drawings. 14 million are books, 3 million recordings. See also {{Q|Q4970294}}.&lt;/ref&gt;
* {{Q|Q131626}} (137,000,000 items)&lt;ref&gt;{{cite web|title = About the Smithsonian|url=http://www.si.edu/about/|archiveurl=http://www.webcitation.org/68Dc49yEu|archivedate=2012-06-06|deadurl=no}}&lt;/ref&gt;
* {{Q|Q131454}} (32,000,000 items)&lt;ref&gt;{{cite web | url=http://yro.slashdot.org/story/12/01/23/1725231/carl-malamud-answers-goading-the-government-to-make-public-data-public | title=Carl Malamud Answers: Goading the Government To Make Public Data Public | archiveurl=http://www.webcitation.org/68DcC8RlI | archivedate=2012-06-06 | deadurl=no}}&lt;/ref&gt;

See also {{Q|Q22809}}, {{Q|Q6643095}}, {{Q|Q18947300}}, {{Q|Q22774}} and {{Q|Q1795458}}.
|-
| {{Q|Q33506}}{{anchor|Museums}}
| &lt;li&gt;{{Q|Q17079082}} ([[:Category:Museums by country|cat]])
{{User:Emijrp/AHKrow|P31=Q33506|wikidata=39394|estimate=55000}}
| According to [[The World Museum Community]], there are 55,000+ museums in 202 countries.&lt;ref&gt;{{cite web | url=http://icom.museum/resources/frequently-asked-questions/ | title=Frequently Asked Questions | publisher=The World Museum Community | archiveurl=http://www.webcitation.org/6IhHkPHDe | archivedate=2013-08-07 | deadurl=no}}&lt;/ref&gt; About 17,673 museums in Europe, based on 2003 and 2008 figures.&lt;ref&gt;{{cite web | url=http://ec.europa.eu/information_society/activities/digital_libraries/doc/refgroup/annexes/digiti_report.pdf | title=The Cost of Digitising Europe's Cultural Heritage | quote=There are approximately 17,673 museums in Europe, based on figures submitted between 2003 and 2008 | archiveurl=http://www.webcitation.org/6L05FCome | archivedate=2013-11-09 | deadurl=no }}&lt;/ref&gt; According to sources by country:
{{div col|3}}
* [[Q2801640|Australia]] (1,019)&lt;ref&gt;{{cite web | url=http://www.abs.gov.au/ausstats/abs@.nsf/Previousproducts/4172.0Feature%20Article32010?opendocument&amp;tabname=Summary&amp;prodno=4172.0&amp;issue=2010&amp;num=&amp;view= | title=Arts and Culture in Australia: A Statistical Overview, 2010 | quote=According to Museums, Australia, 2007-08 (cat. no. 8560.0) there were 1,019 museums operating from 1,276 locations in Australia at the end of June 2008. These locations included 768 social history museums, 425 historic properties and sites, and 83 other museums.}}&lt;/ref&gt;
* [[Q4261200|Canada]] (2,400)&lt;ref&gt;{{cite web | url=http://wayback.archive.org/web/20140305085626/http://pch.gc.ca/eng/1373476498303/1373476746145 | title=Interesting Facts About Canadian Museums | quote=Canada has more than 2,400 museums, which have more than 24,000 paid employees and 55,000 volunteers, and receive nearly 54 million visits annually.}}&lt;/ref&gt;
* [[Q6629759|Cuba]] ([[User:Emijrp/List of museums in Cuba|???]])
* [[Q6629776|Finland]] (280)&lt;ref name="finlandcordis" /&gt;
* [[Q1825298|France]] (1,000)&lt;ref name="francenations" /&gt;
* [[Q504480|Germany]] (4,000)&lt;ref&gt;{{cite web | url=http://www.germany.travel/en/towns-cities-culture/museums/museums.html | title=Museums in Germany – where history and culture are brought to life | quote=The 4,000 or so museums in Germany serve as worlds of discovery and use exciting concepts to explore art and history, technology and architecture, literature and the natural world. | archiveurl=http://www.webcitation.org/6IhHptEBZ | archivedate=2013-08-07 | deadurl=no}}&lt;/ref&gt;&lt;ref name="germanynations"/&gt;
* [[Q1847312|Hungary]] (500)&lt;ref name="hungarynations" /&gt;
* [[Q1847287|Iceland]] (50)&lt;ref name="icelandnations" /&gt;
* [[Q3244293|Morocco]] (11)&lt;ref name="morocconations" /&gt;
* [[Q6629878|Pakistan]] (27)&lt;ref&gt;{{cite web | url=http://www.localyte.com/info/64329--Pakistan--How-many-museums-in-Pakistan | title=How many museums in Pakistan? }}&lt;/ref&gt;
* [[Q3252552|Peru]] (250)&lt;ref name="perunations" /&gt;
* [[Q6636257|Poland]] (500)&lt;ref name="polandnations" /&gt;
* [[Q3252551|Portugal]] (300)&lt;ref name="portugalnations" /&gt;
* [[Q3252601|Romania]] (400)&lt;ref name="romanianations" /&gt;
* [[Q2534883|Russia]] (1,000)&lt;ref name="russianations" /&gt;
* [[Q2376689|Spain]] (1,400)&lt;ref&gt;{{cite web | url=http://www.spain.info/en/conoce/museo/ | title=Visit museums in Spain}}&lt;/ref&gt;
* [[Q2155513|Sweden]] (200)&lt;ref name="swedennations" /&gt;
* [[Q634267|United Kingdom]] (2,500)&lt;ref name="ukglam" /&gt;&lt;ref&gt;{{cite web | url=http://www.museumsassociation.org/about/frequently-asked-questions | title=Frequently asked questions | publisher=Museums Association | quote=It is estimated that there are about 2,500 museums in the UK, depending on what you include. Over 1,800 museums have been accredited by the Museums, Libraries and Archives Council (MLA). | archiveurl=http://www.webcitation.org/6IhI6wftF | archivedate=2013-08-07 | deadurl=no}}&lt;/ref&gt;
* [[Q1432639|United States]] (17,500)&lt;ref&gt;{{cite web | url=http://www.aam-us.org/aboutmuseums/abc.cfm#how_many | title=How many museums are there in the United States? | publisher=American Association of Museums | archiveurl=http://www.webcitation.org/693Qzdy15 | archivedate=2012-07-10 | deadurl=no}}&lt;/ref&gt;
{{div col end}}

According to sources by size:
* {{Q|Q160236}} (2,000,000 items)
* {{Q|Q653433}} (110,000 items)
* {{Q|Q19675}} (30,000 items)&lt;ref&gt;{{cite web | url=http://cartelen.louvre.fr/cartelen/visite?srv=crt_frm_rs&amp;langue=en&amp;initCritere=true | title=Atlas database | publisher=Louvre museum | archiveurl=http://www.webcitation.org/68DcI05Nz | archivedate=2012-06-06 | deadurl=no}}&lt;/ref&gt;

See also {{Q|Q1847499}}.
|-
{{User:Emijrp/AHKrowtotal|wikidata=61613|estimate=130773}}
|}

{{for|books and publications|#Literature}}
&lt;!--* [[Q13515696|Repositories]]: ?&lt;ref&gt;{{cite web | url=http://repositories.webometrics.info | title=Ranking web of repositories}}&lt;/ref&gt;--&gt;

{{World topic|title=Lists of archives worldwide|prefix=List of archives in}}
{{World topic|title=List of national archives worldwide|prefix=National Archives of}}
{{World topic|title=Lists of libraries worldwide|prefix=List of libraries in}}
{{World topic|title=List of national libraries worldwide|prefix=National Library of}}
{{World topic|title=Lists of museums worldwide|prefix=List of museums in}}
{{World topic|title=List of national museums worldwide|prefix=National Museum of}}
&lt;!--
See also
* {{Q|Q22702}} and {{Q|Q6608028}}

Bibliography
:''For resources about damaged heritage, see [[User:Emijrp/Damaged heritage#Resources]].''
* Africa Research Central: [http://web.archive.org/web/20080829001128/http://www.africa-research.org/templates/results_all.cfm] [http://web.archive.org/web/20081007040116/http://www.africa-research.org/res.html]
* African Higher Education Institutions: http://africa.isp.msu.edu/AUP/search-form.htm
* African Libraries and Archives: http://library.stanford.edu/depts/ssrg/africa/libaf.html
* https://sites.google.com/site/africaandalbion/home/archives-and-museums-in-africa
* International Council of African Museums: http://www.africom.museum/museums/museums.html ({{webarchive |url=https://web.archive.org/web/20120216085545/http://www.africom.museum/museums/museums.html |date=February 16, 2012 }})
* Major Libraries in Africa: http://www.uneca.org/Library/Library_associations.htm
* [http://www.inasp.info/file/b1b457c23fabf55f06e591b27254acc1/book-public-libraries-in-africa.html Public Libraries in Africa: A Report and Annotated Bibliography]
* {{Q|Q262}}: [http://www.nationsencyclopedia.com/Africa/Algeria-LIBRARIES-AND-MUSEUMS.html], [http://www.world66.com/africa/algeria], [http://www.university-directory.eu/Algeria/Algeria-Universities.html], [http://www.museum.com/ja/museum/id=23551&amp;show=9&amp;country=DZ], [[:fr:Catégorie:Musée algérien]]
* {{Q|Q21203}}: [http://www.webcitation.org/64ActJXAA]
* Bibliotecacivallero: http://sites.google.com/site/bibliotecacivallero/
* Bishop Library Index: http://members.multimania.co.uk/kbishoplib/
* Censura a los libros y las bibliotecas durante el Proceso de Reorganización Nacional: http://www.filo.uba.ar/contenidos/secretarias/seube/revistaespacios/PDF/38/38.13.pdf ({{webarchive |url=http://www.webcitation.org/64GaoJcNZ?url=http://www.filo.uba.ar/contenidos/secretarias/seube/revistaespacios/PDF/38/38.13.pdf |date=December 28, 2011 }})
* Country Studies, Federal Research Division, Library of Congress: http://lcweb2.loc.gov/frd/cs/cshome.html
* Directorios Internacionales: http://exlibris.usal.es/bibesp/inter/index.htm
* Europeana: http://www.europeana.eu
* ICArchives: http://www.ica.org/
* Libcat: A Guide to Library Resources on the Internet: http://www.librarysites.info/other-libraries.htm
* Libdex: http://www.libdex.com/country.html
* Library directories Dmoz: http://www.dmoz.org/Reference/Libraries/Directories/
* Libweb: http://lists.webjunction.org/libweb/
* lib-web-cats: http://www.librarytechnology.org/libwebcats/ ([http://www.librarytechnology.org/libraries.pl?Type=National national])
* Memórias de Africa e do Oriente: http://memoria-africa.ua.pt/introduction/tabid/83/language/pt-PT/Default.aspx
* Museum.com: http://www.museum.com/jb/show_maps?action=1&amp;show=0
* Nations Encyclopedia: [http://www.nationsencyclopedia.com/Africa/index.html Museums and archives] in Africa
* Online repositories: http://repositories.webometrics.info
* Penrose Press: [http://www.penrose-press.com/schools.idd] [http://www.penrose-press.com/libraries.idd] [http://www.penrose-press.com/museums.idd]
* Ranking Web of World Repositories: http://repositories.webometrics.info
* Repositories of Primary Sources: http://www.uiweb.uidaho.edu/special-collections/Other.Repositories.html
* SIMBAS: [http://www.sibmas.org/idpac/africa/index.html International Directory of Performing Arts Collections and Institutions]
* UNESCO Archives Portal: http://www.unesco-ci.org/cgi-bin/portals/archives/page.cgi?d=1
* University directory worldwide: http://www.university-directory.eu/Universities-directory.html
* U.S. Restitution of Nazi-Looted Cultural Treasures to the USSR, 1945-1959: http://www.archives.gov.ua/Eng/NB/USRestitution.php ({{webarchive |url=http://www.webcitation.org/64JYLL3La?url=http://www.archives.gov.ua/Eng/NB/USRestitution.php |date=December 30, 2011 }})
* World66 Travel Guide: http://www.world66.com
* World Encyclopedia of Library and Information Services: http://books.google.es/books?id=HSFu99FCJwQC&amp;printsec=frontcover
* [http://www.worlib.org/ World Libraries]
* http://www.collectionsaustralia.net/pima/
* http://www.booksforwallsproject.org/2010/05/antarcticas-library-and-walking-in.html
* {{Q|Q29}}: [http://www.nationsencyclopedia.com/Europe/Spain-LIBRARIES-AND-MUSEUMS.html], [http://www.juntadeandalucia.es/cultura/web/areas/biblioteca/directorio_centros?nombreDirectorio=&amp;tipos_plain=BIBL,CCDD&amp;provinciaDirectorio=&amp;municipio=&amp;x=24&amp;y=12], [http://www.mcu.es/bibliotecas/MC/CBPE/CatalogosCCAA.html]
* {{Q|Q796}}: [https://eprints.soas.ac.uk/7245/1/Masters_Thesis.pdf], [http://www.ideals.illinois.edu/bitstream/handle/2142/3697/AlTikriti553.pdf?sequence=2], [http://www.nationsencyclopedia.com/Asia-and-Oceania/Iraq-LIBRARIES-AND-MUSEUMS.html]
* Libraries of Asia Pacific Directory: http://www.nla.gov.au/apps/lapsdir?action=LapsBrowse
* Angola: [http://www.nationsencyclopedia.com/Africa/Angola-LIBRARIES-AND-MUSEUMS.html], [http://www.museum.com/jb/show_results?action=1&amp;country=AO&amp;continent=1&amp;map=1]

--&gt;

== Science ==
{{main|Science|Outline of science}}
'''{{Q|Q336}}''' &amp;ndash; systematic effort of acquiring knowledge&amp;mdash;through observation and experimentation coupled with logic and reasoning to find out what can be proved or not proved&amp;mdash;and the knowledge thus acquired. The word "science" comes from the Latin word "scientia" meaning {{Q|Q9081}}.

=== Astronomy ===
&lt;!--&lt;div style="width: 300px;float: right;"&gt;
{{divbox|radius=10px|1=grayh|2=Soundtrack for this section:|3=&lt;li&gt;[https://www.youtube.com/watch?v=rwnpXll_A_E The Neptune's sounds]}}
&lt;/div&gt;--&gt;
'''{{Q|Q333}}''' is a {{Q|Q7991}} that deals with the study of [[Q6999|celestial objects]] (such as {{Q|Q523}}, {{Q|Q634}}, {{Q|Q3559}}, {{Q|Q42372}}, {{Q|Q168845}} and [[Q318|galaxies]]) and [[Q483247|phenomena]] that originate outside the {{Q|Q3230}} (such as the [[Q15605|cosmic background radiation]]). It is concerned with the evolution, {{Q|Q413}}, {{Q|Q2329}}, {{Q|Q25261}}, and [[Q79782|motion]] of celestial objects, as well as the [[Q18346|formation and development of the universe]].

'''{{Q|Q180046}}''' is the {{Q|Q211051}} and {{Q|Q6502154}} of {{Q|Q4169}} by means of {{Q|Q211485}}. Physical {{Q|Q6502154}} of space is conducted both by {{Q|Q752783}} and by  {{Q|Q1378139}}.

{{main|Outline of astronomy|List of astronomical catalogues}}
{{category see also|Astronomy lists|Lists of astronomical objects|Lists of stars by constellation}}

&lt;gallery mode="packed-hover"&gt;
File:Ilc 9yr moll4096.png|{{Q|Q221392}}
File:Starsinthesky.jpg|A {{Q|Q523}}-forming region in the {{Q|Q49957}}, an {{Q|Q190397}}.
File:Merging galaxies NGC 4676 (captured by the Hubble Space Telescope).jpg|{{Q|Q211449}} in the process of [[Q644507|colliding and merging]]
File:Sputnik asm.jpg|{{Q|Q80811}}, the first artificial satellite to orbit Earth.
File:Pale Blue Dot.png|{{Q|Q2}} seen by {{Q|Q155257}} from 6 billion kilometers as a "{{Q|Q474472}}" (the blueish-white speck in the brown band to the right)
&lt;/gallery&gt;

{| class="wikitable sortable plainlinks"
! width="100px" | Topic 
! width="300px" | Related pages
! Wikidata
! Estimate
! References 
|-
| {{Q|Q1}}{{anchor|Universes}}
| &lt;li&gt;{{Q|Q221392}}
{{User:Emijrp/AHKrow|P31=Q1|wikidata=0|estimate=1}}
| According to the {{Q|Q3327819}} hypothesis, there could be more than 1 universe, but it hasn't been demostrated yet.
|-
| [[Q845371|Voids]]{{anchor|Voids}}
| &lt;li&gt;{{Q|Q6644855}}
{{User:Emijrp/AHKrow|P31=Q845371|wikidata=7|estimate=}}
| Total number of voids is unknown.
|-
| {{Q|Q27521}}{{anchor|Superclusters}}
| &lt;li&gt;{{Q|Q27521}}
{{User:Emijrp/AHKrow|P31=Q27521|wikidata=59|estimate=}}
| Total number of superclusters is unknown.
|-
| {{Q|Q204107}}{{anchor|Galaxy clusters}}
| &lt;li&gt;{{Q|Q27438}}
{{User:Emijrp/AHKrow|P31=Q204107|wikidata=167|estimate=}}
| Total number of galaxy clusters is unknown.
|-
| [[Q318|Galaxies]]{{anchor|Galaxies}}
| &lt;li&gt;{{Q|Q829956}}
{{User:Emijrp/AHKrow|P31=Q318|wikidata=11184|estimate=12500000}}
| According to sources, there are 125,000,000,000 galaxies.&lt;ref&gt;[http://imagine.gsfc.nasa.gov/docs/ask_astro/answers/021127a.html Ask an Astrophysicist - How many galaxies are there?] ({{webarchive |url=http://www.webcitation.org/67ydKJ7Xc?url=http://imagine.gsfc.nasa.gov/docs/ask_astro/answers/021127a.html |date=May 27, 2012 }})&lt;/ref&gt; Assuming there are data for 10% of them, and making lists of 1,000 galaxies, we would need 12,500,000 lists.
|-
| {{Q|Q168845}}{{anchor|Star clusters}}
| &lt;li&gt;[[Q1841855|List of globular]] and [[Q6631694|open clusters]]
{{User:Emijrp/AHKrow|P31=Q168845|wikidata=987|estimate=10000}}
| According to astronomical catalogues, there are over 10,000 star clusters and nebulae:
* {{Q|Q741672}} (5386)
* {{Q|Q14530}} (100)
* {{Q|Q14534}} (7840)
|-
| {{Q|Q83373}}{{anchor|Quasars}}
| &lt;li&gt;{{Q|Q2984458}}
{{User:Emijrp/AHKrow|P31=Q83373|wikidata=78|estimate=47853}}
| According to sources, there are 47,853 quasars.&lt;ref&gt;{{cite web|title=How many quasars are there?|url=https://spacemath.gsfc.nasa.gov/Calculus/6Page107.pdf|quote=The combined quasar density is  0.63 + 1.53 = 1.16 quasars/deg2, so over the entire sky, there are about 1.16 x 41,253 = 47,853 quasars in this magnitude range.}}&lt;/ref&gt;
|-
| {{Q|Q523}}{{anchor|Stars}}
| &lt;li&gt;{{Q|Q841175}}
{{User:Emijrp/AHKrow|P31=Q523|wikidata=24111|estimate=1000000}}
| According to {{Q|Q143003}}, there are 20,000,000 stars with apparent magnitudes of 6 to 15, and 945,592,683 stars out to magnitude 21. Making lists of 1,000 stars, we would need 1,000,000 lists.
|-
| [[Multiplanetary system]]s{{anchor|Multiplanetary systems}}
| &lt;li&gt;{{Q|Q14606370}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=603}}
| According to sources, there are [[Q14606370|603 multiplanetary systems]].
|-
| {{Q|Q44559}}{{anchor|Exoplanets}}
| &lt;li&gt;{{Q|Q1863380}}
{{User:Emijrp/AHKrow|P31=Q44559|wikidata=3062|estimate=3560}}
| According to sources, there are [[Q1863380|3,560 exoplanets]].
|-
| {{Q|Q2199}}{{anchor|Dwarf planets}}
| &lt;li&gt;{{Q|Q244288}}
{{User:Emijrp/AHKrow|P31=Q2199|wikidata=5|estimate=10000}}
| &lt;ref&gt;{{cite web|title=|url=http://wayback.archive.org/web/20141113225430/http://pluto.jhuapl.edu/overview/piPerspective.php?page=piPerspective_08_24_2012 The PI's Perspective|quote=Today we know of more than a dozen dwarf planets in the solar system [and] it is estimated that the ultimate number of dwarf planets we will discover in the Kuiper Belt and beyond may well exceed 10,000.}}&lt;/ref&gt;
|-
| {{Q|Q167910}}{{anchor|Free-floating planets}}
| &lt;li&gt;[[List of free-floating planets]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of free-floating planets is unknown.&lt;ref&gt;[http://www.astronomy.com/en/News-Observing/News/2011/05/Free-floating%20planets%20may%20be%20more%20common%20than%20stars.aspx Free-floating planets may be more common than stars] ({{webarchive |url=http://www.webcitation.org/68DbevEXv?url=http://www.astronomy.com/en/News-Observing/News/2011/05/Free-floating%20planets%20may%20be%20more%20common%20than%20stars.aspx |date=June 6, 2012 }})&lt;/ref&gt;
|-
| {{Q|Q3559}}{{anchor|Comets}}
| &lt;li&gt;{{Q|Q37554}}
{{User:Emijrp/AHKrow|P31=Q3559|wikidata=1130|estimate=}}
| Total number of comets is unknown.
|-
| {{Q|Q3863}}{{anchor|Asteroids}}
| &lt;li&gt;{{Q|Q37651}}
{{User:Emijrp/AHKrow|P31=Q3863|wikidata=103355|estimate=310376}}
| As of December 2011, there are 310,376 numbered minor planets, and about as many yet unnumbered. Only some 16,000 minor planets have been given names.
|-
| rowspan=5 | [[:Category:Surface features of bodies of the Solar System|Planet surface features]]{{anchor|Planet surface features}}
| &lt;li&gt;{{Q|Q791776}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| rowspan=5 | Total number of planet surface features is unknown.

Hundreds of thousands of craters in Mars, only 1,000 with names. See also {{Q|Q2013545}}, {{Q|Q604072}}, {{Q|Q35666}} and {{Q|Q1399713}}.
|-
| &lt;li&gt;{{Q|Q497546}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
|-
| &lt;li&gt;{{Q|Q1846349}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
|-
| &lt;li&gt;{{Q|Q1094115}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
|-
| &lt;li&gt;{{Q|Q665010}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
|-
| rowspan=6 | {{Q|Q180046}}{{anchor|Space exploration}}
| &lt;li&gt;{{Q|Q1129350}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=250}}
| According to sources, there have been 250 human spaceflights.
|-
| &lt;li&gt;[[:Category:Lists of satellites]]
{{User:Emijrp/AHKrow|P31=Q26540|wikidata=3930|estimate=6800}}
| According to sources, there are 6,800 artificial satellites.&lt;ref&gt;[http://nssdc.gsfc.nasa.gov/nmc/spacecraftSearch.do Spacecraft Query Results]&lt;/ref&gt;
|-
| &lt;li&gt;{{Q|Q22991}}
{{User:Emijrp/AHKrow|P31=Q17505024|wikidata=35|estimate=}}
| Total number of space agencies is unknown.
|-
| &lt;li&gt;{{Q|Q672801}}
{{User:Emijrp/AHKrow|P31=Q26529|wikidata=223|estimate=}}
| Total number of space probes is unknown.
|-
| &lt;li&gt;{{Q|Q6640255}}
{{User:Emijrp/AHKrow|P31=Q25956|wikidata=20|estimate=6}}
| According to sources, there have existed 6 space stations.
|-
| &lt;li&gt;{{Q|Q1527884}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=5}}
| According to sources, there are 5 artificial objects escaping from the Solar System.
|-
{{User:Emijrp/AHKrowtotal|wikidata=148353|estimate=13891075}}
|}

=== Biology ===

'''{{Q|Q420}}''' is a {{Q|Q7991}} concerned with the study of {{Q|Q3}} and living {{Q|Q7239}}, including their structure, function, growth, origin, evolution, distribution, and taxonomy. See also [[:Category:Biology lists]].

* The '''{{Q|Q23852}}''' is the entire structure of a {{Q|Q5}} {{Q|Q7239}}, and consists of a [[Q3409626|head]], {{Q|Q9633}}, {{Q|Q160695}}, two {{Q|Q43471}} and two [[Q6027402|legs]]. By the time the human reaches {{Q|Q80994}}, the body consists of close to 100 [[Q1191085|trillion]] [[Q7868|cells]],&lt;ref name=Greg_Roza&gt;[http://books.google.com/books?id=vhO8Ia2ik7oC&amp;dq=human+body+cells+trillion&amp;source=gbs_navlinks_s Page 21] Inside the human body: using scientific and exponential notation. Author: Greg Roza. Edition: Illustrated. Publisher: The Rosen Publishing Group, 2007. {{ISBN|1-4042-3362-8}}, {{ISBN|978-1-4042-3362-1}}. Length: 32pages&lt;/ref&gt; the basic unit of {{Q|Q3}}. These cells are [[Q803888|organised biologically]] to eventually form the whole body.
* A '''{{Q|Q7432}}''' is one of the basic units of {{Q|Q8269924}} and a {{Q|Q427626}}. A species is often defined as a group of {{Q|Q7239}} capable of {{Q|Q42621}} and [[Q11990|producing]] {{Q|Q964401}} {{Q|Q239526}}. While in many cases this definition is adequate, the difficulty of defining species is known as the {{Q|Q2984250}}.

&lt;gallery mode="packed-hover"&gt;
File:Ruwenpflanzen.jpg|thumb|right|Plants in the {{Q|Q106540}}, {{Q|Q1036}}
File:Carcar.jpg|thumb|right|{{Q|Q25418}}
File:Anterior view of human female and male, with labels.jpg|{{Q|Q23852}} features
&lt;/gallery&gt;

{| class="wikitable sortable plainlinks"
! width="100px" | Topic 
! width="300px" | Related pages
! Wikidata
! Estimate
! References 
|-
| rowspan=2 | {{Q|Q10876}}{{anchor|Bacteria}}
| &lt;li&gt;{{Q|Q6607050}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of bacteria genera is unknown.
|-
| &lt;li&gt;[[List of bacteria species]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=1000000}}
| Total number of bacteria species ranges between 100,000 and 10,000,000.&lt;ref&gt;{{cite web |url=http://www.newscientist.com/blog/shortsharpscience/2008/06/counting-in-bacterial-world.html |title=Counting in a bacterial world  |date=2008-06-10 |work= |publisher=Short Sharp Science |accessdate=2013-05-23 |quote=An informal survey of 24 microbiologists at a conference in Spain last year tried to reach a consensus. Two people guessed that the Earth was home to between 10,000 and 100,000 species of bacteria; another five said between 100,000 and 1,000,000; while nine microbiologists put the put the upper limit at ten million species; eight guessed there were even more. |archiveurl=http://wayback.archive.org/web/20121015185451/http://www.newscientist.com/blog/shortsharpscience/2008/06/counting-in-bacterial-world.html |archivedate=2012-10-15 |deadurl=no}}&lt;/ref&gt;
|-
| rowspan=1 | {{Q|Q5}}{{anchor|Human}}
| &lt;li&gt;{{Q|Q17098763}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=1000}}
| 850 [[Q756697|muscles]], 206 [[Q16368|bones]].
|-
| {{Q|Q7187}}{{anchor|Genes}}
| &lt;li&gt;{{Q|Q973963}}
{{User:Emijrp/AHKrow|P31=Q7187|wikidata=|estimate=}}
| Total number of genes is unknown. According to sources, there are [[Q973963|85,000 human genes]].&lt;ref&gt;[http://www.nsti.org/procs/MSM2002/1/T11.02 The Number of Human Genes and Proteins] ({{webarchive |url=http://www.webcitation.org/68PXocTCK?url=http://www.nsti.org/procs/MSM2002/1/T11.02 |date=June 14, 2012 }})&lt;/ref&gt;
|-
| Individual animals{{anchor|Individual animals}}
| &lt;li&gt;[[:Category:Lists of individual animals]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of notable individual animals is unknown.
|-
| {{Q|Q8054}}{{anchor|Proteins}}
| &lt;li&gt;{{Q|Q1072654}}
{{User:Emijrp/AHKrow|P31=Q8054|wikidata=524860|estimate=}}
| Total number of proteins is unknown. According to sources, there are [[List of human proteins|200,000 human proteins]].&lt;ref&gt;[http://www.askabiologist.org.uk/answers/viewtopic.php?id=1221 Number of genes and proteins in the body] ({{webarchive |url=http://www.webcitation.org/68PXsrOAX?url=http://www.askabiologist.org.uk/answers/viewtopic.php?id%3D1221 |date=June 14, 2012 }})&lt;/ref&gt;
|-
| rowspan=16 | {{Q|Q7432}}{{anchor|Species}}
| &lt;li&gt;{{Q|Q6647230}}
{{User:Emijrp/AHKrow|P31=Q16521|wikidata=2536567|estimate=8700000|format=count}}
| rowspan=16 | According to sources, there are 1,552,319 animalia species.&lt;ref name="zootaxa"&gt;{{cite web |url=http://www.mapress.com/zootaxa/list/2011/3148.html |title=Animal biodiversity: An outline of higher-level classification and survey of taxonomic richness |date=2013-05-26 |work= |publisher=ZOOTAXA |accessdate=2013-05-26 |quote= |archiveurl=http://www.webcitation.org/6GtqtnEhr |archivedate=2013-05-26 |deadurl=no}}&lt;/ref&gt;

Recent studies indicate there are [[Q6647230|8,700,000 species]] with an error of ±1,300,000 (6,500,000 land species, 2,200,000 marine species). Only 1,233,500 species (14%) have been described though.&lt;ref&gt;[http://www.rtve.es/noticias/20110823/calculo-mas-preciso-historia-cifra-87-millones-especies-habitan-tierra/456588.shtml El cálculo más preciso de la historia cifra las especies que viven en la Tierra en 8,7 millones] {{es}}&lt;/ref&gt;

Other estimates range between 2 and 100 million species. (See also [[Wikipedia:WikiProject Missing encyclopedic articles/Global Names Index]])

More than 99 percent of all species, amounting to over five billion species,&lt;ref name="Book-Biology"&gt;{{cite book |editor1=Kunin, W.E. |editor2=Gaston, Kevin |title=The Biology of Rarity: Causes and consequences of rare—common differences 
|url=https://books.google.com/books?id=4LHnCAAAQBAJ&amp;pg=PA110&amp;lpg=PA110&amp;dq#v=onepage&amp;q&amp;f=false|date=31 December 1996 |ISBN=978-0412633805 |accessdate=26 May 2015 }}&lt;/ref&gt; that ever lived on Earth are estimated to be [[Q6646992|extinct]].&lt;ref name="StearnsStearns2000"&gt;{{cite book |last=Stearns |first=Beverly Peterson |last2=Stearns |first2=S. C. |last3=Stearns |first3=Stephen C. |title=Watching, from the Edge of Extinction |url=https://books.google.com/books?id=0BHeC-tXIB4C&amp;q=99%20percent#v=onepage&amp;q=99%20percent&amp;f=false |year=2000 |publisher={{Q|Q255147}} |isbn=978-0-300-08469-6|page=preface x |accessdate=30 May 2017 }}&lt;/ref&gt;&lt;ref name="NYT-20141108-MJN"&gt;{{cite news |last=Novacek |first=Michael J. |title=Prehistory’s Brilliant Future |url=http://www.nytimes.com/2014/11/09/opinion/sunday/prehistorys-brilliant-future.html |date=8 November 2014 |work={{Q|Q9684}} |accessdate=2014-12-25 }}&lt;/ref&gt;&lt;ref name="Newman"&gt;Newman, Mark. [http://arxiv.org/abs/adap-org/9702003 ''A model of mass extinction'']. 1997. Journal of Theoretical Biology 189: 235–252&lt;/ref&gt;

Projects counting species:
* {{Q|Q4729658}} (???)&lt;ref&gt;On-going project to catalog all species on Earth by 2025, by {{Q|Q568907}}&lt;/ref&gt;
* {{Q|Q38840}} (1,404,038)&lt;ref&gt;{{cite web|title=|url=http://wayback.archive.org/web/20120618223324/http://www.catalogueoflife.org/services/res/2011AC_26July.zip|quote=Species for all kingdoms as of May 2012, with coverage of 74% of the estimated 1.9 million species known to science}}&lt;/ref&gt;
* [[Tara Research Vessel]] (1,000,000)&lt;ref&gt;[http://www.huffingtonpost.co.uk/2012/09/26/tara-research-vessel-discovers-one-million-new-species_n_1915814.html Tara Research Vessel Discovers One Million New Species Of Microscopic Sea Life (PICTURES)]&lt;/ref&gt;
* {{Q|Q976978}} (1,400,000)

See also {{Q|Q4393023}}.
|-
| &lt;li&gt;[[List of animalia species]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=1552319|exclude=yes}}
|-
| &lt;li&gt;[[List of arthropoda species]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=1242040|exclude=yes}}
|-
| &lt;li&gt;[[List of insecta species]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=1020007|exclude=yes}}
|-
| &lt;li&gt;[[List of coleoptera species]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=387100|exclude=yes}}
|-
| &lt;li&gt;[[List of diptera species]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=159294|exclude=yes}}
|-
| &lt;li&gt;[[List of lepidoptera species]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=157424|exclude=yes}}
|-
| &lt;li&gt;[[List of chelicerata species]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=113894|exclude=yes}}
|-
| &lt;li&gt;[[List of arachnida species]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=112201|exclude=yes}} 
|-
| &lt;li&gt;[[List of crustacea species]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=66914|exclude=yes}}
|-
| &lt;li&gt;[[List of acari species]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=54617|exclude=yes}}
|-
| &lt;li&gt;[[List of araneae species]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=43579|exclude=yes}}
|-
| &lt;li&gt;[[List of nematoda species]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=24783|exclude=yes}}
|-
| &lt;li&gt;[[List of orthoptera species]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=24276|exclude=yes}}
|-
| &lt;li&gt;[[List of trilobita species]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=19606|exclude=yes}}
|-
| &lt;li&gt;[[List of myriapoda species]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=11885|exclude=yes}}
|-
| rowspan=2 | {{Q|Q808}}{{anchor|Viruses}}
| &lt;li&gt;{{Q|Q4436492}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of genera of viruses is unknown.
|-
| &lt;li&gt;{{Q|Q1655985}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=6000}}
| According to sources, there are over 6,000 viruses.&lt;ref name="virusesspecies"&gt;{{cite web |url=http://www.ncbi.nlm.nih.gov/pmc/articles/PMC1208960/ |title=International Committee on Taxonomy of Viruses and the 3,142 unassigned species |date=2005-08-16 |work= |publisher=C.M. Fauquet and D. Fargette | doi=10.1186/1743-422X-2-64 |accessdate=2013-05-23 |quote=The book lists more than 6,000 viruses classified in 1,950 species and in more than 391 different higher taxa. However, GenBank contains a staggering additional 3,142 "species" unaccounted for by the ICTV report. |archiveurl= |archivedate= |deadurl=no}}&lt;/ref&gt;
|-
{{User:Emijrp/AHKrowtotal|wikidata=3061427|estimate=10231860}}
|}

{{for|zoos and aquaria|#Architecture}}

=== Chemistry and physics ===
{{anchor|Chemistry|Physics}}
&lt;!--
[[File:Chemicals in flasks.jpg|thumb|right|Chemicals in flasks.]]
[[File:CollageFisica.jpg|thumb|right|Various examples of physical phenomena.]]
--&gt;
'''{{Q|Q2329}}''' is the {{Q|Q336}} of {{Q|Q35758}}, especially its {{Q|Q36534}}, but also its composition, structure and properties. See also [[:Category:Chemistry lists]].

'''{{Q|Q413}}''' is a {{Q|Q7991}} that involves the study of {{Q|Q35758}}. See also {{Q|Q386115}}, {{Q|Q2427913}} and [[:Category:Physics-related lists]].

{| class="wikitable sortable plainlinks"
! width="100px" | Topic 
! width="300px" | Related pages
! Wikidata
! Estimate
! References 
|-
| rowspan=3 | {{Q|Q2329}}
| &lt;li&gt;{{Q|Q6102450}}
{{User:Emijrp/AHKrow|P31=Q11344|wikidata=206|estimate=118}}
| According to sources, there are 118 chemical elements.
|-
| &lt;li&gt;{{Q|Q1342638}} 
{{User:Emijrp/AHKrow|P31=Q11173|wikidata=783570|estimate=6000000}}
| According to [[Q102507|CAS database]], there are 60 million chemical compounds&lt;ref&gt;{{cite web|title=|url=http://www.cas.org/newsevents/releases/60millionth052011.html}}&lt;/ref&gt; (with a growth of 10 million in less than two years). Assuming 10% is notable. See also [[Q375765|List of minerals]].
|-
| &lt;li&gt;{{Q|Q1781269}}
{{User:Emijrp/AHKrow|P31=Q36534|wikidata=1339|estimate=}}
| Total number of chemical reactions is unknown.
|-
| rowspan=2 | {{Q|Q413}}
| &lt;li&gt;{{Q|Q783766}}
{{User:Emijrp/AHKrow|P31=Q1621273|wikidata=2022|estimate=}}
| Total number of particles is unknown.
|-
| &lt;li&gt;{{Q|Q3834452}}
{{User:Emijrp/AHKrow|P31=Q108149|wikidata=5004|estimate=3000}}
| According to sources, there are 3,000 nuclides.&lt;ref name="Live Chart of Nuclides"&gt;{{cite web|title=Live Chart of Nuclides|url=http://www-nds.iaea.org/relnsd/vcharthtml/VChartHTML.html|publisher=nds.iaea.org}}&lt;/ref&gt;
|-
{{User:Emijrp/AHKrowtotal|wikidata=792141|estimate=6006479}}
|}

=== Health ===
&lt;!--[[File:The Anatomy Lesson.jpg|thumb|right|''{{Q|Q661378}}''  by {{Q|Q5598}}]]--&gt;
'''{{Q|Q12147}}''' is the level of functional or metabolic efficiency of a living being. In {{Q|Q5}}, it is the general condition of a {{Q|Q215627}}'s mind and body, usually meaning to be free from {{Q|Q12136}}, {{Q|Q193078}} or {{Q|Q81938}}. See also [[:Category:Health-related lists]].

{| class="wikitable sortable plainlinks"
! width="100px" | Topic 
! width="300px" | Related pages
! Wikidata
! Estimate
! References 
|-
| {{Q|Q12136}}{{anchor|Diseases}}
| &lt;li&gt;{{Q|Q860973}}
{{User:Emijrp/AHKrow|P31=Q12136|wikidata=17717|estimate=12000}}
| According to sources, there are 12,000 diseases.&lt;ref&gt;[http://www.ncbi.nlm.nih.gov/pmc/articles/PMC1361216/ Measuring Diagnoses: ICD Code Accuracy]&lt;/ref&gt; See also [[:Category:Animal diseases]] and {{Q|Q6647163}}.
|-
| {{Q|Q441265}}{{anchor|Disorders}}
| &lt;li&gt;{{Q|Q6616923}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of disorders is unknown.
|-
| {{Q|Q8386}}{{anchor|Drugs}}
| &lt;li&gt;{{Q|Q3241427}}
{{User:Emijrp/AHKrow|P31=Q8386|wikidata=2809|estimate=21000}}
| According to sources, there are 21,000 drugs.&lt;ref&gt;{{cite web|title=How many drug targets are there?|url=http://www.nature.com/nrd/journal/v5/n12/full/nrd2199.html|quote=1,357 unique drugs: 1,204 are 'small-molecule drugs' and 166 are 'biological' drugs}}&lt;/ref&gt;
|-
{{User:Emijrp/AHKrowtotal|wikidata=20526|estimate=33000}}
|}

Hospitals are counted in [[User:Emijrp/All human knowledge#Architecture|#Architecture]].

=== Mathematics ===
&lt;!--[[File:Euclid.jpg|thumb |{{Q|Q8747}}, Greek mathematician, 3rd century BC, as imagined by {{Q|Q5597}} in this detail from ''{{Q|Q186953}}''.]]--&gt;
'''{{Q|Q395}}''' (from [[Q9129|Greek]] μάθημα ''máthēma'' "knowledge, study, learning") is the study of {{Q|Q309314}}, {{Q|Q107}}, {{Q|Q6671777}}, and [[Q149972|change]]. See also {{Q|Q3610632}} and {{Q|Q3240104}}.

{| class="wikitable sortable plainlinks"
! width="100px" | Topic 
! width="300px" | Related pages
! Wikidata
! Estimate
! References 
|-
| [[Q1936384|Areas]]{{anchor|Areas}}
| &lt;li&gt;{{Q|Q1936384}}
{{User:Emijrp/AHKrow|P31=Q1936384|wikidata=111|estimate=}}
| 
|-
| {{Q|Q11563}}{{anchor|Numbers}}
| &lt;li&gt;{{Q|Q540917}}
{{User:Emijrp/AHKrow|P31=Q11563|wikidata=34245|estimate=}}
| According to maths, there are ℵ&lt;sub&gt;0&lt;/sub&gt; integers and even more reals.
|-
| {{Q|Q49008}}{{anchor|Prime numbers}}
| &lt;li&gt;{{Q|Q225987}}
{{User:Emijrp/AHKrow|P31=Q49008|wikidata=1427|estimate=}}
| According to maths, there are ℵ&lt;sub&gt;0&lt;/sub&gt; prime numbers.
|-
| {{Q|Q2297602}}{{anchor|Integer sequences}}
| &lt;li&gt;[[List of integer sequences]]
{{User:Emijrp/AHKrow|P31=Q2297602|wikidata=28|estimate=200000}}
| According to sources, there are over 200,000 integer sequences.&lt;ref&gt;[http://oeis.org/wiki/Welcome#Description_of_OEIS_entries_.28or.2C_What_is_the_Next_Term.3F.29 Approximate number of entries] in the {{Q|Q728415}}&lt;/ref&gt;
|-
{{User:Emijrp/AHKrowtotal|wikidata=35811|estimate=235783}}
|}

=== Planetary science ===
&lt;!--[[File:Atlantic hurricane tracks.jpg|thumb|300px|right|Tracks of all known Atlantic tropical cyclones from 1851 to 2005]]--&gt;
'''Earth and {{Q|Q104499}}''' are the sciences that study the material and dynamics of Earth and other celestial bodies.

'''{{Q|Q25261}}''' is the {{Q|Q849359}} scientific study of the {{Q|Q8104}}. See also {{Q|Q3254425}}.

{| class="wikitable sortable plainlinks"
! width="100px" | Topic 
! width="300px" | Related pages
! Wikidata
! Estimate
! References 
|-
| {{Q|Q856124}}{{anchor|Lithostratigraphy}}
| &lt;li&gt;[[Lithostratigraphic units]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=100000}}
| Total number of lithostratigraphic units is unknown.
|-
| {{Q|Q40614}}{{anchor|Fossils}}
| &lt;li&gt;{{Q|Q40614}}
{{User:Emijrp/AHKrow|P31=Q40614|wikidata=177|estimate=300000}}
| According to sources, there are 300,000 fossils.&lt;ref name="Paleobiology Database"&gt;{{cite web|title=Paleobiology Database|url=http://paleodb.org/}}&lt;/ref&gt;
|-
| {{Q|Q43521}}{{anchor|Geologic Time Scale}}
| &lt;li&gt;[[Q1310230|Global Boundary Stratotype Sections]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of geologic time scales is unknown.
|-
| {{Q|Q60186}}{{anchor|Meteorites}}
| &lt;li&gt;[[List of meteorites]]
{{User:Emijrp/AHKrow|P31=Q60186|wikidata=673|estimate=50000}}
| According to sources, there are 50,000 meteorites.&lt;ref name=MBD&gt;{{cite web|title=Meteoritical Bulletin Database|url=http://www.lpi.usra.edu/meteor/}}&lt;/ref&gt;
|-
| rowspan=3 | {{Q|Q25261}}{{anchor|Meteorology}}
| &lt;li&gt;{{Q|Q1329451}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of meteorological phenomena is unknown.
|-
| &lt;li&gt;{{Q|Q6645141}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of weather instruments is unknown.
|-
| &lt;li&gt;Seasons
{{User:Emijrp/AHKrow|P31=Q27491541|wikidata=519|estimate=}}
| See also {{Q|Q953484}} and {{Q|Q16147685}}.
|-
| [[Q8063|Rocks types]]{{anchor|Rocks types}}
| &lt;li&gt;{{Q|Q918774}}
{{User:Emijrp/AHKrow|P31=Q8063|wikidata=4009|estimate=500}}
| According to sources, there are 500 rock types.
|-
{{User:Emijrp/AHKrowtotal|wikidata=5378|estimate=451019}}
|}

== Society ==

A '''{{Q|Q8425}}''' is a group of people [[Q223642|related]] to each other through persistent relations, or a large social grouping sharing the same geographical or virtual territory, subject to the same political authority and dominant cultural expectations. See also {{Q|Q2975338}} and [[:Category:Society-related lists]].

* A '''{{Q|Q36279}}''' is a detailed description of a person's life. It involves more than just the basic facts like education, work, relationships, and death; it portrays a person's experience of these life events.
* A '''{{Q|Q4830453}}''' is an {{Q|Q43229}} involved in the {{Q|Q601401}} of [[Q28877|goods]], [[Q7406919|services]], or both to {{Q|Q22855}}. See also {{Q|Q1817462}}.
* '''{{Q|Q11042}}''' is the range of human phenomena that cannot be attributed to genetic inheritance.
* '''{{Q|Q8434}}''' is the process of facilitating learning, or the acquisition of knowledge, skills, values, beliefs, and habits.
* '''{{Q|Q171141}}''' is the art or science of food {{Q|Q213449}}. See also {{Q|Q48769813}} and {{Q|Q1497296}}.
* '''{{Q|Q7748}}''' is a {{Q|Q58778}} of rules and guidelines which are enforced through {{Q|Q345367}} {{Q|Q178706}} to govern behavior, wherever possible. See also {{Q|Q7112677}} and {{Q|Q6018916}}.
* '''{{Q|Q315}}''' may refer either to the specifically {{Q|Q5}} capacity for acquiring and using complex systems of {{Q|Q11024}}, or to a specific instance of such a system of complex communication. The scientific study of language in any of its senses is called {{Q|Q8162}}. See also {{Q|Q7112675}}.
* An '''{{Q|Q43229}}''' is a social entity that has a collective goal and is linked to an external environment.
* '''{{Q|Q5891}}''' is the study of general and fundamental problems, such as those connected with [[Q44325|existence]], [[Q9471|knowledge]], values, reason, [[Q23407|mind]], and language. See also {{Q|Q6120329}} and {{Q|Q668827}}.
* '''{{Q|Q7163}}''' is the art or science of influencing people on a civic, or individual level, when there are more than two people involved. See also {{Q|Q2392281}}, {{Q|Q7112705}} and {{Q|Q4898333}}.
* '''{{Q|Q9174}}''' is a collection of {{Q|Q5193417}}, {{Q|Q34394}}, and {{Q|Q49447}} that establishes symbols that relate humanity to {{Q|Q168796}} and, sometimes, to moral values. See also [[:Category:Religion-related lists]].
* '''{{Q|Q349}}''' are all forms of [[Q476300|competitive]] {{Q|Q219067}} which, through casual or organised participation, aim to use, maintain or improve physical fitness and provide {{Q|Q173799}} to participants. A '''game''' is structured [[Q1150958|playing]], usually undertaken for {{Q|Q8}} and sometimes used as an {{Q|Q8434}} tool.

&lt;gallery mode="packed-hover"&gt;
File:Akha cropped hires.JPG|An adult human male and female
File:Produits régionaux - photo CPPR.jpg|Fine food, the principal study of {{Q|Q171141}}
File:JMR-Memphis1.jpg|{{Q|Q1102307}} is the symbol of the judiciary
File:Lakhovsky Conversation.jpg|{{Q|Q694914}}, ''The Conversation'' (circa 1935)
&lt;!--File:David - The Death of Socrates.jpg|''{{Q|Q1752990}}'' by {{Q|Q83155}} (1787)--&gt;
File:Puertadelsol2011.jpg|The {{Q|Q427163}} square in Madrid during the {{Q|Q735377}}
File:RELIGIONES.png|Religious symbols in clock-wise order: {{Q|Q9268}}, {{Q|Q5043}}, {{Q|Q432}}, {{Q|Q22679}}, {{Q|Q9089}}, {{Q|Q9598}}, {{Q|Q748}}, {{Q|Q9316}}, [[Q1258217|Rodnoveri]], {{Q|Q263031}}, {{Q|Q5693683}}, [[Q2260961|Semitic pagan]], {{Q|Q59774}}, {{Q|Q1081042}}, [[Q1539307|Hellenic pagan]], [[Q2254859|Roman pagan]]
File:Youth-soccer-indiana.jpg|Sport in {{Q|Q276258}}
&lt;/gallery&gt;

{| class="wikitable sortable plainlinks"
! width="100px" | Topic 
! width="300px" | Related pages
! Wikidata
! Estimate
! References 
|-
| rowspan=1 | {{Q|Q36279}}{{anchor|Biography}}
| &lt;li&gt;{{Q|Q845648}} ([[:Category:Lists of people|cat]])
{{User:Emijrp/AHKrow|P31=Q5|wikidata=4521574|estimate=17000000|format=count}}
| rowspan=1 | [[File:Human gender gap.png|thumb|right|150px|5:1 gender gap.]]
Total number of notable biographies is unknown. As of March 2017, Wikidata includes &lt;!-- wdbiomale --&gt;{{formatnum:2653023}}&lt;!-- /wdbiomale --&gt; male biographies and [[User:Emijrp/All Human Knowledge/Women|&lt;!-- wdbiofemale --&gt;{{formatnum:530490}}&lt;!-- /wdbiofemale --&gt; female]] biographies.&lt;ref&gt;[https://query.wikidata.org/#SELECT%20%3Fgender%20%28COUNT%28%3Fitem%29%20AS%20%3Fcount%29%0AWHERE%20%7B%0A%09%3Fitem%20wdt%3AP31%20wd%3AQ5.%0A%20%20%20%20%3Fitem%20wdt%3AP21%20%3Fgender.%0A%7D%0AGROUP%20BY%20%3Fgender%0AORDER%20BY%20DESC%28%3Fcount%29 Biographies by gender] in Wikidata&lt;/ref&gt; That is a [[Q17002416|gender ratio]] of 5:1. {{As of|2017|03}} English Wikipedia contains [[User:WP 1.0 bot/Tables/Project/Biography|1,486,208 biographies]].

We could assume that in an average city with a population of 100,000 inhabitants there are 100 notable people: artists, scientists, writers, politicians, sportspeople and [[:Category:People by occupation|many more]]. Setting a notability rate of 1000:1. If the {{Q|Q11188}} is about 7,000,000,000, we would have 7,000,000,000/1,000 = 7,000,000 notable biographies of living people (BLP). Given the fact that there are about 360,000 births per day&lt;ref&gt;{{cite web|title=World Birth and Death Rates|url=http://www.ecology.com/birth-death-rates/}}&lt;/ref&gt;&lt;ref name="worldometers"&gt;{{cite web|title=Worldometers - real time world statistics|url=http://www.worldometers.info}}&lt;/ref&gt; this means about 360 notable people are born each day.

But we have to [[User:Emijrp/Systemic bias/Contemporary bias|look into the past centuries]] too. The number of people who have ever been born is around 100,000,000,000.&lt;ref&gt;[http://www.prb.org/Articles/2002/HowManyPeopleHaveEverLivedonEarth.aspx How Many People Have Ever Lived on Earth?] ({{webarchive |url=http://www.webcitation.org/68DcfH1ST?url=http://www.prb.org/Articles/2002/HowManyPeopleHaveEverLivedonEarth.aspx |date=June 6, 2012 }})&lt;/ref&gt; This gives us an estimate of 10,000,000 notable biographies (excluding the 7,000,000 BLP). So, a rough estimate is over 17,000,000 notable biographies.

Lists of [[Q6647160|people by occupation]] ([[:Category:Lists of people by occupation|cat]]) and [[Q3277033|nationality]] are desirable too. According to Wikidata, there are over 4,300 occupations (over 2,500 with an English label).&lt;ref&gt;[https://query.wikidata.org/#SELECT%20DISTINCT%20%3Fitem%20%3FitemLabel%0AWHERE%20%7B%0A%09%3Fitem%20wdt%3AP31%20wd%3AQ28640.%0A%20%20%20%20%3Fitem%20rdfs%3Alabel%20%3Flabel.%0A%20%20%20%20FILTER%28LANG%28%3Flabel%29%20%3D%20%22en%22%29.%0A%20%20%20%20SERVICE%20wikibase%3Alabel%20%7B%20bd%3AserviceParam%20wikibase%3Alanguage%20%22en%22%20.%20%7D%0A%7D%0AORDER%20BY%20%3FitemLabel Occupations] in Wikidata&lt;/ref&gt; See also [[:Category:Obsolete occupations]].
|-
| {{Q|Q4830453}}{{anchor|Business}}
| &lt;li&gt;{{Q|Q20310940}}
{{User:Emijrp/AHKrow|P31=Q4830453|wikidata=264714|estimate=}}
| Total number of bussiness is unknown.
|-
| rowspan=5 | {{Q|Q11042}}{{anchor|Culture}}
| &lt;li&gt;[[List of cultures]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of cultures is unknown.
|-
| &lt;li&gt;{{Q|Q672979}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of uncontacted peoples is unknown.
|-
| &lt;li&gt;{{Q|Q483910}} ([[:Category:Lists of flags|cat]])
{{User:Emijrp/AHKrow|P31=Q14660|wikidata=7483|estimate=}}
| Total number of flags is unknown.
|-
| &lt;li&gt;{{Q|Q6642029}} ([[:Category:Lists of symbols|cat]])
{{User:Emijrp/AHKrow|P31=Q80071|wikidata=153746|estimate=}}
| Total number of symbols is unknown.
|-
| &lt;li&gt;{{Q|Q858338}} ([[:Category:Currency lists|cat]])
{{User:Emijrp/AHKrow|P31=Q8142|wikidata=1182|estimate=}}
| Total number of currencies is unknown.
|-
| {{Q|Q8434}}{{anchor|Education}}
| &lt;li&gt;[[Q5341232|Educational theories]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| 
|-
| rowspan=6 | {{Q|Q171141}}{{anchor|Gastronomy}}
| &lt;li&gt;{{Q|Q3248954}}
{{User:Emijrp/AHKrow|P31=Q1968435|wikidata=241|estimate=}}
| 
|-
| &lt;li&gt;{{Q|Q15964630}}
{{User:Emijrp/AHKrow|P31=Q746549|wikidata=330|estimate=}}
| Total number of dishes is unknown.
|-
| &lt;li&gt;{{Q|Q17065192}}
{{User:Emijrp/AHKrow|P31=Q40050|wikidata=6089|estimate=}}
| Total number of beverages is unknown.
|-
| &lt;li&gt;{{Q|Q1455981}}
{{User:Emijrp/AHKrow|P31=Q10943|wikidata=20|estimate=}}
| According to the [[Guide to Cheeses of the World]], there are 1200 cheeses.&lt;ref&gt;Roland Barthelemy and Arnaud Sperat-Czar: Guide to Cheeses of the World: 1200 Cheeses of the World. Hachette Food &amp; Wine, 2006, ISBN-13: 978-1844301515.&lt;/ref&gt;
|-
| &lt;li&gt;{{Q|Q493703}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=7500}}
| According to sources, there are 7,500+ cultivars.&lt;ref name="Elzebroek"&gt;{{cite book|last=Elzebroek|first=A.T.G.|author2=Wind, K. |title=Guide to Cultivated Plants|publisher=CAB International|location=Wallingford|year=2008|page=27|isbn=1-84593-356-7|url=http://books.google.co.uk/books?id=YvU1XnUVxFQC&amp;lpg=PT39&amp;dq=apple%20cultivars%207%2C500&amp;pg=PT39#v=onepage&amp;q=&amp;f=false}}&lt;/ref&gt;
|-
| &lt;li&gt;[[List of gastronomy awards]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| 
|-
| rowspan=5 | {{Q|Q7748}}{{anchor|Law}}
| &lt;li&gt;{{Q|Q2478386}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=200}}
| See also {{Q|Q460995}}.
|-
| &lt;li&gt;{{Q|Q16995508}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| 
|-
| &lt;li&gt;{{Q|Q394073}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=500}}
| According to sources, there are 507 international treaties.&lt;ref&gt;{{cite web|url=http://treaties.un.org/pages/DB.aspx?path=DB/MTDSGStatus/pageIntro_en.xml|title=United Nations Treaty Collection}}&lt;/ref&gt;
|-
| &lt;li&gt;{{Q|Q8458}}&lt;li&gt;By [[:Category:Human rights by issue‎|issue]]&lt;li&gt;By [[:Category:Human rights by region‎|country]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| 
|-
| &lt;li&gt;[[List of licenses]]
{{User:Emijrp/AHKrow|P31=Q79719|wikidata=346|estimate=}}
| See also {{Q|Q6639723}} and {{Q|Q6621354}}.
|-
| rowspan=6 | {{Q|Q315}}{{anchor|Language}}
| &lt;li&gt;{{Q|Q3183574}}
{{User:Emijrp/AHKrow|P31=Q34770|wikidata=13425|estimate=6900}}
| According to sources, there are 6,900 languages.&lt;ref name="baines"&gt;{{cite web|url=http://web.ebscohost.com.ezproxy.kwantlen.ca:2080/ehost/pdfviewer/pdfviewer?sid=74c5b7a2-ba74-40f4-98b8-b5b324ad421e%40sessionmgr111&amp;vid=1&amp;hid=110|title =A Future of Fewer Words|author=Lawrence Baines|date=2012|accessdate=4 April 2012| quote=K. David Harrison, author of "When Languages Die", estimates 6,900 or so languages are spoken on the planet and that more than half of these languages are likely to become extinct over the next century.}}&lt;/ref&gt;

{{Q|Q1550475}} is a permanent archive 1,500 languages (13,000 microscopic pages of text) in a contemporary version of the historic {{Q|Q48584}} to last from 2000 to 12,000 AD.

See also {{Q|Q33683}}, {{Q|Q175050}} and {{Q|Q33683}}. And [[:wiktionary:Category:All languages]] for words in all languages.
|-
| &lt;li&gt;[[:Category:Animal communication]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| 
|-
| &lt;li&gt;{{Q|Q2421041}} and {{Q|Q2421041}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| 
|-
| &lt;li&gt;{{Q|Q19845720}}
{{User:Emijrp/AHKrow|P31=Q8192|wikidata=739|estimate=3866}}
| According to sources, there are 3,866 writing systems.&lt;ref&gt;{{cite web|title=How many languages in the world are unwritten?|url=https://www.ethnologue.com/enterprise-faq/how-many-languages-world-are-unwritten-0|quote=The exact number of unwritten languages is hard to determine. Ethnologue (20th edition) has data to indicate that of the currently listed 7,099 living languages, 3,866 have a developed writing system. We don't always know, however, if the existing writing systems are widely used. That is, while an alphabet may exist there may not be very many people who are literate and actually using the alphabet. The remaining 3,233 are likely unwritten.}}&lt;/ref&gt; See also {{Q|Q6613445}} and {{Q|Q1156875}}.
|-
| &lt;li&gt;{{Q|Q293618}}/{{Q|Q2667406}}/{{Q|Q80071}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| 
|-
| &lt;li&gt;{{Q|Q17156280}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| 
|-
| rowspan=2 | {{Q|Q43229}}{{anchor|Organizations}}
| &lt;li&gt;[[List of organizations]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| 
|-
| &lt;li&gt;[[List of non-governmental organizations]]
{{User:Emijrp/AHKrow|P31=Q79913|wikidata=43170|estimate=10000000}}
| Total number of non-governmental organizations is unknown.

According to sources by country:
* [[Q55640418|India]] (3,300,000)&lt;ref&gt;{{cite web|title=India: More NGOs, than schools and health centres|work=OneWorld.net|date=July 7, 2010|url=http://southasia.oneworld.net/todaysheadlines/india-more-ngos-than-schools-and-health-centres|accessdate=2011-10-07}}&lt;/ref&gt;&lt;ref&gt;{{cite news
|title=First official estimate: An NGO for every 400 people in India|work=The Indian Express|date=July 7, 2010|url=http://www.indianexpress.com/news/first-official-estimate-an-ngo-for-every-400-people-in-india/643302/}}&lt;/ref&gt;
* [[List of non-governmental organizations in Russia|Russia]] (277,000)&lt;ref&gt;{{cite news|title=Hobbled NGOs wary of Medvedev|date=May 7, 2008|work=Chicago Tribune|url=http://articles.chicagotribune.com/2008-05-07/news/0805060608_1_civil-society-russian-authorities-russian-president-vladimir-putin}}&lt;/ref&gt;
* [[List of non-governmental organizations in the United States|United States]] (1,500,000)&lt;ref&gt;[http://www.humanrights.gov/2012/01/12/fact-sheet-non-governmental-organizations-ngos-in-the-united-states/ Fact Sheet: Non-Governmental Organizations (NGOs) in the United States]&lt;/ref&gt;
|-
| rowspan=1 | {{Q|Q5891}}{{anchor|Philosophy}}
| &lt;li&gt;{{Q|Q1743282}} ([[:Category:Philosophy by period|by period]], [[:Category:Philosophy by field|by field]], [[:Category:Philosophy by region|by region]])
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of philosophies is unknown. See also {{Q|Q3248569}} and [[:Category:Philosophy-related lists]].&lt;!--{{Philosophy topics}}--&gt;
|-
| rowspan=3 | {{Q|Q7163}}{{anchor|Politics}}
| &lt;li&gt;{{Q|Q750139}}
{{User:Emijrp/AHKrow|P31=Q14934048|wikidata=465|estimate=}}
| Total number of political ideologies is unknown.
|-
| &lt;li&gt;{{Q|Q11025641}}
{{User:Emijrp/AHKrow|P31=Q7278|wikidata=17568|estimate=}}
| Total number of political parties is unknown.
|-
| &lt;li&gt;[[List of demonstrations]]
{{User:Emijrp/AHKrow|P31=Q175331|wikidata=644|estimate=}}
| Total number of demonstrations is unknown.
|-
| rowspan=3 | {{Q|Q9174}}{{anchor|Religion|Mythology}}
| &lt;li&gt;{{Q|Q329442}}
{{User:Emijrp/AHKrow|P31=Q9174|wikidata=5157|estimate=4200}}
| According to sources, there are 4,200 religions.&lt;ref&gt;{{cite web |url=http://www.adherents.com |title=Adherents.com |date=2013-05-23 |work= |publisher= |accessdate=2013-05-24 |quote=Adherents.com is a growing collection of over 43,870 adherent statistics and religious geography citations: references to published membership/adherent statistics and congregation statistics for over 4,200 religions, churches, denominations, religious bodies, faith groups, tribes, cultures, movements, ultimate concerns, etc. |archiveurl=http://www.webcitation.org/6GqniTzRf |archivedate=2013-05-24 |deadurl=no}}&lt;/ref&gt;

[[:pl:Encyklopedia Katolicka]] has over 40,000 definitions (it includes things like [[Fire in religion]]).
|-
| &lt;li&gt;{{Q|Q21013762}}
{{User:Emijrp/AHKrow|P31=Q9134|wikidata=69|estimate=}}
| Total number of mythologies is unknown.
|-
| &lt;li&gt;{{Q|Q6614537}}
{{User:Emijrp/AHKrow|P31=Q215304|wikidata=9|estimate=}}
| Total number of creation myths is unknown.
|-
| rowspan=5 | {{Q|Q349}}{{anchor|Sports}}
| &lt;li&gt;{{Q|Q212664}}
{{User:Emijrp/AHKrow|P31=Q31629|wikidata=2436|estimate=}}
| According to sourcers, there are over 8,000 indigeneous sports and sporting games.&lt;ref&gt;[http://www.sportencyclopedia.com/index.php?mod=book How many sports are there in the world?] ({{webarchive |url=https://web.archive.org/web/20100723160638/http://www.sportencyclopedia.com/index.php?mod=book |date=July 23, 2010 }})&lt;/ref&gt;

{{for|virtual games|#Videogames}}
|-
| &lt;li&gt;[[List of professional sports teams]]
{{User:Emijrp/AHKrow|P31=Q847017|wikidata=73977|estimate=}}
|-
| &lt;li&gt;[[List of sports leagues]]
{{User:Emijrp/AHKrow|P31=Q27020041|wikidata=183657|estimate=}}
|-
| &lt;li&gt;{{Q|Q180524}}
{{User:Emijrp/AHKrow|P31=Q11417|wikidata=60|estimate=}}
|-
| &lt;li&gt;{{Q|Q6647024}}
{{User:Emijrp/AHKrow|P31=Q11410|wikidata=41486|estimate=58900}}
| According to {{Q|Q887528}}, there are over 58,900 games.&lt;ref&gt;[http://boardgamegeek.com/browse/boardgame/page/1 Board Game Geek] ({{webarchive |url=http://www.webcitation.org/68DcQWLM6?url=http://boardgamegeek.com/browse/boardgame/page/1 |date=June 6, 2012 }})&lt;/ref&gt;
|-
{{User:Emijrp/AHKrowtotal|wikidata=5338587|estimate=27795102}}
|}

== Technology ==

'''{{Q|Q11016}}''' is the making, modification, usage, and knowledge of {{Q|Q39546}}, {{Q|Q11019}}, techniques, {{Q|Q2207288}}, {{Q|Q58778}}, methods of organization, in order to solve a problem, improve a preexisting solution to a problem, achieve a goal or perform a specific function. It can also refer to the collection of such tools, machinery, modifications, arrangements and procedures. Technologies significantly affect human as well as other animal species' ability to control and adapt to their natural environments. See also [[:Category:Technology-related lists]].

* A '''{{Q|Q253623}}''' is a form of {{Q|Q131257}}. It consists of a set of {{Q|Q1146011}} granted by a {{Q|Q3624078}} to an inventor or their assignee for a limited period of time, in exchange for the public disclosure of the {{Q|Q18119757}}.
* '''{{Q|Q7397}}''' is a collection of {{Q|Q40056}} and related {{Q|Q42848}} that provide the instructions for telling a {{Q|Q68}} what to do and how to do it. A '''{{Q|Q7889}}''' is an {{Q|Q2249149}} that involves human interaction with a {{Q|Q47146}} to generate visual feedback on a [[Q34508|video device]].
* '''{{Q|Q7590}}''' or transportation is the movement of people, animals and [[Q319224|goods]] from one location to another. {{Q|Q334166}} include [[Q765633|air]], [[Q3565868|rail]], [[Q516739|road]], [[Q155930|water]], [[Q1054650|cable]], [[Q725864|pipeline]], and [[Q5916|space]]. The field can be divided into {{Q|Q121359}}, {{Q|Q42889}}, and [[Q336119|operations]]. Transport is important since it enables trade between peoples, which in turn establishes civilizations. See also [[:Category:Transport lists]].
* A '''{{Q|Q728}}''' is a {{Q|Q39546}} or instrument used in order to inflict damage or harm.
* A '''{{Q|Q35127}}''' is a set of related {{Q|Q36774}} containing {{Q|Q1260632}}, including [[Q1149626|text]], {{Q|Q34508}}, {{Q|Q638}}, [[Q11461|audio]], {{Q|Q478798}}, etc.

&lt;gallery mode="packed-hover"&gt;
File:Astronaut-EVA.jpg|By the mid 20th century, humans had achieved a mastery of technology sufficient to [[Q180046|explore space]]
File:HuC6260A 01.jpg|A Japanese manufactured microprocessor]]
File:Internet map 1024 - transparent, inverted.png|An {{Q|Q4166282}} visualization of {{Q|Q75}} [[Q22725|routing paths]]
File:Hwscreen.png|{{Q|Q1353509}}, a free video game, similar to [[Q7903060|Worms]]
File:BW Fjord an Glameyer Stack 2007-12-15.JPG|People walking in front of the {{Q|Q15276}} ''[[Q4836856|BW]] Fjord''
File:Replica catapult.jpg|Replica of a [[Q7178704|medieval catapult]]
&lt;/gallery&gt;

{| class="wikitable sortable plainlinks"
! width="100px" | Topic 
! width="300px" | Related pages
! Wikidata
! Estimate
! References 
|-
| rowspan=2 | [[Q211051|Discoveries]]{{anchor|Discoveries}}
| &lt;li&gt;{{Q|Q16000474}}
{{User:Emijrp/AHKrow|P31=Q753297|wikidata=17|estimate=}}
| rowspan=2 | Redundant as all invented and discovered by humans are in other tables? See also [[:Category:Lists of inventions or discoveries]].

Patents databases:
* {{Q|Q1050583}} (70,000,000)
* {{Q|Q1141991}} (???)&lt;ref&gt;In 2005, it received 427,078 patent applications, 11,386 utility model applications, 39,254 design applications, and 125,807 trademark applications; it registered 122,944 patents, 10,573 utility model rights, 32,633 design rights, and 97,939 trademark rights in the same year.&lt;/ref&gt;
* {{Q|Q1459541}} (7,950,000)

|-
| &lt;li&gt;{{Q|Q1088283}}{{anchor|Inventions}}
{{User:Emijrp/AHKrow|P31=Q18119757|wikidata=10|estimate=}}
|-
| rowspan=2 | {{Q|Q294550}}{{anchor|Hardware}}
| &lt;li&gt;{{Q|Q337670}}
{{User:Emijrp/AHKrow|P31=Q5297|wikidata=107|estimate=}}
| Total number of microprocessors is unknown. See also [[:Category:Lists of computer hardware]].
|-
| &lt;li&gt;{{Q|Q1506558}}
{{User:Emijrp/AHKrow|P31=Q165678|wikidata=133|estimate=}}
| Total number of microcontrollers is unknown.
|-
| rowspan=5 | {{Q|Q75}}{{anchor|Internet}}
| &lt;li&gt;{{Q|Q6647268}}
{{User:Emijrp/AHKrow|P31=Q35127|wikidata=14740|estimate=}}
| According to sources, there are 420,000,000-600,000,000 websites.&lt;ref&gt;[http://wayback.archive.org/web/20150629001532/http://people.lis.illinois.edu/~wrayward/otlet/otletpage.htm Rayward's Otlet Page: Paul Otlet and Documentation]&lt;/ref&gt;&lt;ref&gt;[http://news.netcraft.com/archives/category/web-server-survey/ September 2015 Web Server Survey]&lt;/ref&gt; We could assume only 100,000 are notable. {{Q|Q230051}} offers a list of 1,000,000 most visited websites&lt;ref&gt;[http://www.alexa.com/topsites Alexa Top 500 Global Sites] ([http://s3.amazonaws.com/alexa-static/top-1m.csv.zip Top 1,000,000 Sites])&lt;/ref&gt; See also {{Q|Q6645154}}.
|-
| &lt;li&gt;{{Q|Q3055357}} 
{{User:Emijrp/AHKrow|P31=Q171|wikidata=1152|estimate=}}
| According to [[WikiApiary]], there are 25,000 wikis.&lt;ref&gt;[https://wikiapiary.com/wiki/Main_Page WikiApiary]&lt;/ref&gt; Probably only 1,000 are notable.
|-
| &lt;li&gt;{{Q|Q17049216}}
{{User:Emijrp/AHKrow|P31=Q657881|wikidata=18|estimate=}}
| Total number of newsgroups is unknown.
|-
| &lt;li&gt;{{Q|Q6644830}}
{{User:Emijrp/AHKrow|P31=Q210980|wikidata=210|estimate=}}
| Total number of virtual communities.
|-
| &lt;li&gt;[[List of Internet awards]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of Internet awards.
|-
| rowspan=8 | {{Q|Q7397}}{{anchor|Software}}
| &lt;li&gt;[[List of application software|Application software]] ([[:Category:Lists of software|cat]])
{{User:Emijrp/AHKrow|P31=Q166142|wikidata=39940|estimate=}}
| Total number of application software is unknown. According to repositories:
* [[Q368215|App Store]] (550,000)&lt;ref name="25Billion"&gt;{{cite web|publisher=MacRumors|title=App Store's 25 Billionth Download Comes From China with 'Where's My Water? Free'|url=http://www.macrumors.com/2012/03/05/app-stores-25-billionth-download-comes-from-china-with-wheres-my-water-free/|archiveurl=http://www.webcitation.org/68DaUnwBX|archivedate=2012-06-06|deadurl=no}}&lt;/ref&gt;
* {{Q|Q79576}} (500,000)&lt;ref name="Google Play About To Pass 15 Billion App Downloads"&gt;{{cite web |url=http://techcrunch.com/2012/05/07/google-play-about-to-pass-15-billion-downloads-pssht-it-did-that-weeks-ago/ |title=Google Play About To Pass 15 Billion App Downloads? Pssht! It Did That Weeks Ago |date=7 May 2012 |publisher={{Q|Q1022366}} |accessdate=22 May 2012|archiveurl=http://www.webcitation.org/68DaHJIRw|archivedate=2012-06-06|deadurl=no}}&lt;/ref&gt;
* {{Q|Q70029}} (30,000)
|-
| &lt;li&gt;[[Q914874|File formats]] ([[:Category:Lists of file formats|cat]])
{{User:Emijrp/AHKrow|P31=Q235557|wikidata=3397|estimate=}}
| Total number of file formats is unknown.
|-
| &lt;li&gt;[[List of free software repositories|Free software repositories]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of free software repositories is unknown.
|-
| &lt;li&gt;[[Q1763936|Malware, viruses, trojans]]
{{User:Emijrp/AHKrow|P31=Q14001|wikidata=111|estimate=}}
| According to sources, there are over 1,000,000 computer viruses.&lt;ref&gt;Darren Pauli, [http://www.pcworld.com/article/144181/viruses_expected_to_hit_1_million_this_year.html Viruses Expected to Hit 1 Million This Year], Computerworld-Australia, Apr 6, 2008. ({{webarchive |url=http://www.webcitation.org/68DabKhWC?url=https://www.pcworld.com/article/144181/viruses_expected_to_hit_1_million_this_year.html |date=June 6, 2012 }})&lt;/ref&gt;
|-
| &lt;li&gt;[[Q11707952|Programming languages]] ([[:Category:Lists of computer languages|cat]])
{{User:Emijrp/AHKrow|P31=Q9143|wikidata=2170|estimate=2000}}
| According to sources, there are over 2,000 programming languages.&lt;ref&gt;[http://www.cs.man.ac.uk/~pjj/cs1001/software/node3.html Computer Languages] ({{webarchive |url=http://www.webcitation.org/67yDzUGV6?url=http://www.cs.man.ac.uk/%7Epjj/cs1001/software/node3.html |date=May 27, 2012 }})&lt;/ref&gt;
|-
| &lt;li&gt;[[List of software awards|Software awards]]
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of software awards is unknown.
|-
| &lt;li&gt;{{Q|Q1137743}} ([[:Category:Video game lists by platform|cat]])
{{User:Emijrp/AHKrow|P31=Q7889|wikidata=36006|estimate=}}
| According to [[Mobygame]] there are 65,000+ commercial games (66,410 referenced games and 1,375 free games).&lt;ref&gt;[http://www.mobygames.com/moby_stats MobyStats] at [[Mobygame]] ({{webarchive |url=http://www.webcitation.org/68DbQezgb?url=https://www.mobygames.com/moby_stats |date=June 6, 2012 }})&lt;/ref&gt;&lt;ref&gt;[http://www.mobygames.com/attribute/sheet/attributeId,116/p,3/ Business Model : Freeware / Free-to-play / Public Domain] at [[Mobygame]]&lt;/ref&gt; According to Fupa there are 50,000+ free [[List of flash games|flash games]] ([[:Category:Flash games|cat]]).&lt;ref&gt;[http://www.fupa.com/ Fupa Games]&lt;/ref&gt;
|-
| &lt;li&gt;{{Q|Q6644634}}
{{User:Emijrp/AHKrow|P31=|wikidata=|estimate=}}
| Total number of video game awards is unknown.
|-
| rowspan=9 | {{Q|Q7590}}{{anchor|Transport}}
| &lt;li&gt;Infrastructure
{{User:Emijrp/AHKrow|P31=Q376799|wikidata=679624|estimate=}}
| Total number of transport infrastructure is unknown.
|-
| &lt;li&gt;{{Q|Q844436}}
{{User:Emijrp/AHKrow|P31=Q1248784|wikidata=25152|estimate=43982|exclude=yes}}
| According to sources, there are 43,982 airports.&lt;ref&gt;[http://chartsbin.com/view/1395 Total Number of Airports by Country] on ChartsBin (2010 data)&lt;/ref&gt;
|-
| &lt;li&gt;[[List of bus stations]]
{{User:Emijrp/AHKrow|P31=Q494829|wikidata=1235|estimate=|exclude=yes}}
| Total number of bus stations is unknown.
|-
| &lt;li&gt;[[List of parkings]]
{{User:Emijrp/AHKrow|P31=Q267917|wikidata=2|estimate=|exclude=yes}}
| Total number of parkings is unknown.
|-
| &lt;li&gt;{{Q|Q3253435}}
{{User:Emijrp/AHKrow|P31=Q55488|wikidata=102266|estimate=|exclude=yes}}
| Total number of railway stations is unknown.
|-
| &lt;li&gt;{{Q|Q6636813}}
{{User:Emijrp/AHKrow|P31=Q34442|wikidata=440896|estimate=36118087|exclude=yes}}
| According to the CIA World Factbook, there are 36,118,087 roads in the world&lt;ref&gt;{{Cite web|url=https://www.cia.gov/library/publications/the-world-factbook/rankorder/2085rank.html|title=The World Factbook — COUNTRY COMPARISON :: ROADWAYS|last=|first=|date=|website=www.cia.gov|language=en|archive-url=|archive-date=|dead-url=|access-date=2017-08-23}}&lt;/ref&gt;&lt;ref&gt;[http://www.referenceforbusiness.com/industries/Construction/Bridge-Tunnel-Elevated-Highway-Construction.html SIC 1622: BRIDGE, TUNNEL, AND ELEVATED HIGHWAY CONSTRUCTION] - Of the more than 600,000 bridges in the United States, 45 percent are under the financial jurisdiction of state governments, and 38 percent are controlled by county authorities.&lt;/ref&gt;
|-
| &lt;li&gt;{{Q|Q1423267}}
{{User:Emijrp/AHKrow|P31=Q15310171|wikidata=78|estimate=|exclude=yes}}
| Total number of seaports is unknown.
|-
| &lt;li&gt;[[List of subway stations]]
{{User:Emijrp/AHKrow|P31=Q928830|wikidata=10413|estimate=|exclude=yes}}
| Total number of subway stations is unknown.
|-
| &lt;li&gt;{{Q|Q42889}}
{{User:Emijrp/AHKrow|P31=Q42889|wikidata=74468|estimate=}}
| Total number of vehicles is unknown.
|-
| rowspan=2 | {{Q|Q728}}{{anchor|Weapons}}
| &lt;li&gt;{{Q|Q6497479}}
{{User:Emijrp/AHKrow|P31=Q728|wikidata=4849|estimate=}}
| Total number of weapons is unknown.
|-
| &lt;li&gt;[[List of ammunition]]
{{User:Emijrp/AHKrow|P31=Q185785|wikidata=799|estimate=}}
| Total number of ammunition is unknown.
|-
{{User:Emijrp/AHKrowtotal|wikidata=857751|estimate=857581}}
|}

== Special pages ==

{| class="wikitable sortable plainlinks"
! width="100px" | Topic 
! width="300px" | Related pages
! Wikidata
! Estimate
! References 
|-
| [[Wikipedia:Categorization|Categories]]{{anchor|Categories}}
| &lt;li&gt;[[:Category:Contents]]
{{User:Emijrp/AHKrow|P31=Q4167836|wikidata=4189718|estimate=}}
| Total number of required categories is unknown.
|-
| [[Wikipedia:Disambiguation|Disambiguations]]{{anchor|Disambiguations}}
| &lt;li&gt;[[:Category:Disambiguation pages]]
{{User:Emijrp/AHKrow|P31=Q4167410|wikidata=1279410|estimate=}}
| Total number of required disambiguation pages is unknown.
|-
| [[Wikipedia:Lists|Lists]]{{anchor|Lists}}
| &lt;li&gt;[[:Category:Lists]]
{{User:Emijrp/AHKrow|P31=Q13406463|wikidata=304345|estimate=}}
| Total number of required lists is unknown.
|-
| [[Wikipedia:Portals|Portals]]{{anchor|Portals}}
| &lt;li&gt;[[:Category:Portals]]
{{User:Emijrp/AHKrow|P31=Q4663903|wikidata=8728|estimate=}}
| Total number of required portals is unknown.
|-
| [[Wikipedia:Templates|Templates]]{{anchor|Templates}}
| &lt;li&gt;[[:Category:Wikipedia templates]]
{{User:Emijrp/AHKrow|P31=Q11266439|wikidata=913982|estimate=}}
| Total number of required template pages is unknown.
|-
{{User:Emijrp/AHKrowtotal|wikidata=6696183|estimate=6696183}}
|}

== Further knowledge ==
Some '''further knowledge''' and estimates.

=== Destroyed knowledge ===
{{anchor|Destroyed|destroyed}}
[[File:Evstafiev-bosnia-cello.jpg|thumb|right|A cello player in the destroyed [[Q22780|National Library of Bosnia and Herzegovina]], Sarajevo.]]

Practically every day, distinct forms of {{Q|Q9081}} are lost forever and no copies are available. When a {{Q|Q8065}} hits a region or a [[Q280998|war breaks out]], {{Q|Q7075}}, {{Q|Q166118}}, {{Q|Q33506}}, {{Q|Q4989906}} and other artifacts of heritage, valuable buildings, [[Q216665|incunabula]] and unique objects are destroyed or face the threat of destruction. These events usually remove pieces of human knowledge and sometimes entire cultures.

Furthermore, hundreds of websites are closed every day on the {{Q|Q75}}. [[:Category:Web archiving initiatives|Web archiving initiatives]] like {{Q|Q461}} or {{Q|Q1511162}} and volunteers groups like {{Q|Q4787261}} save copies of some of them, but much others [[Q632897|are lost forever]].

'''[[Wikipedia:There is a deadline|There ''is'' a deadline]]. This is a battle against time.'''

See also {{Q|Q22702}} ([[Q6608028|incidents]]), [[Q3243741|lost films]], [[:Category:Lost objects|lost objects]], {{Q|Q1585442}} ([[:Category:Lost works|cat]]), {{Q|Q4140840}}, {{Q|Q22774}} ([[Q22785|WWII]]), the {{Q|Q325}} and {{Q|Q574456}}. And finally {{Q|Q203237}} ([[User:Emijrp/Deletionism|deletionism]]).

=== Knowledge organization ===
{{anchor|Ontologies|ontologies}}
{{main|Authority control|Ontology (information science)|Branches of science|Knowledge organization|Information science|Library catalog|Library science|Library classification|Upper ontology}}
[[File:ENC SYSTEME FIGURE.jpeg|right|200px|thumb|The original "figurative system of human knowledge" tree, in French.]]

* {{Q|Q48460}}
* {{Q|Q5447999}} (the tree of Diderot and d'Alembert)
* {{Q|Q621080}}
* {{Q|Q243350}}
* {{Q|Q54919}}

{{clear}}

=== Lists of missing articles ===
{{main|Wikipedia:Articles for creation|Wikipedia:WikiProject Missing encyclopedic articles|Wikipedia:WikiProject Intertranswiki}}
{{see also|Wikipedia:Requested articles|Wikipedia:Requested lists|Wikipedia:Requested pictures|Wikipedia:Requested recordings|Wikipedia:Articles for creation/Redirects|Wikipedia:Requested templates|Wikipedia:Templates with red links}}
{{see also category|Wikipedia missing topics|Wikipedia red link lists}}

Many users compile huge lists of missing encyclopedic and notable articles to be developed ([http://en.wikipedia.org/w/index.php?title=Special%3ASearch&amp;profile=advanced&amp;search=intitle%3Amissing+articles&amp;fulltext=Search&amp;ns2=1&amp;redirs=1&amp;profile=advanced search results for intitle:missing articles]). If you have any list plenty of red links, please add yourself:

{{div col|3}}
* [[User:Agne27/French wine project]]
* [[User:Calliopejen1/Morocco]]
* [[User:Dominic/Chile politics]]
* [[User:Dsp13/Redlinks]]
* [[User:Emijrp/Outlines]]
* [[User:Gobonobo/Gender Gap red list]]
* [[User:Ham/250 paintings]]
* [[User:Ipigott/Sandbox3|User:Ipigott/French painters]]
* [[User:JackofOz/Redlinks]]
* [[User:Magnus Manske/Baker's Biographical Dictionary of Musicians (A – D)|Baker's Biographical Dictionary of Musicians (A – D)]]
* [[User:Magnus Manske/Women in science]]
* [[User:T. Anthony/Women in Red]]
* [[User:Yupik/Redlinks/Indigenous Women]]
* [[Wikipedia:List of missing Africa topics]]
* [[Wikipedia:WikiProject Missing encyclopedic articles/Skysmith's list of missing articles|Skysmith's list of missing articles]]
* [[Wikipedia:WikiProject Missing encyclopedic articles/Thompson-Reuters most cited scientists]]
{{div col end}}

See [[Wikipedia:WikiProject Missing encyclopedic articles/Progress|progress]] for [[Wikipedia:WikiProject Missing encyclopedic articles|WikiProject Missing encyclopedic articles]].

{{clear}}

=== New knowledge ===

These are some estimations of '''new knowledge''' generated every year:

* New [[#Music|albums]] in US: 75,000 (2010), 96,100 (2009), 106,000 (2008), 76,000 (2006)&lt;ref name="newusalbums" /&gt;
* New [[#Literature|books]] globally: 2.2 million approx&lt;ref&gt;{{cite web | url=https://en.wikipedia.org/wiki/Books_published_per_country_per_year | title=Books published per country per year | publisher=Wikipedia | accessdate=2013-12-30}}&lt;/ref&gt; (See {{Q|Q4943302}})
* New notable persons, people in office, etc.
* New events: some recurring (elections, awards, sports competitions, etc.), some spontaneous (disasters, wars, etc.)
* New scientific discoveries: species, astronomical objects (planets, stars, solar systems, asteroids, comets), particles, mathematical principles, etc.
* New inventions
* New institutions, campaigns, and organizations
* New social trends, cultural movements, theories, philosophies, and perspectives
* New discoveries of human and natural history: pre-history of the universe, decoding of old languages (e.g. {{Q|Q30972}} and {{Q|Q190102}}), archaeological discovery of artifacts and manuscripts, fossils of extinct species, geological insight into the Earth's formation, etc.
* ''Please, add more''

{{clear}}

=== Preservation ===

Wikimedia projects aims to compile all human knowledge, they are focused in the quantity and quality of the contents, but what about preservation? How are we going to preserve all the knowledge for the future generations? There are several organizations working on the preservation of information and weak heritage, some of them are the following:

* {{Q|Q461}}
* {{Q|Q568907}}
** {{Q|Q4729658}}
** {{Q|Q1550475}}

=== Sister projects ===
{{anchor|Wikibooks|Commons|Wikinews|Wikiquote|Wikisource|Wikispecies|Wikiversity|Wikidata|Wiktionary|Wikivoyage}}
Sections aboved are focused in those entities which are notable for Wikipedia. Sister projects include the following ones.

* TODO: stats by sister project, langs, wikidata sitelinks, structure data for commons, wikidata wiktionary lemmas, etc, the future!

&lt;gallery mode="packed-hover"&gt;
File:Wikimedia logo family 2013.svg
File:Geolocated images in Wikimedia Commons 2015-01-07.png|5.3M geolocated images in {{Q|Q565}}. As you can see, some areas coverage is highly biased
&lt;/gallery&gt;

{| class="wikitable sortable plainlinks"
! Topic 
! Related pages
|-
| {{icon+link|Wikibooks|Wikibooks}}
| &lt;li&gt;Textbooks for every course at every level of study
&lt;li&gt;Childrens' books for an introduction to every branch of knowledge (Wikijunior)
|-
| {{icon+link|Commons|Wikimedia Commons}}
| &lt;li&gt;Hundred images of every municipality in the world?
&lt;li&gt;See {{Q|Q1503119}} (http://www.geograph.org.uk) project which aims to collect geographically representative photographs and information for every square kilometre of Great Britain and Ireland
&lt;li&gt;{{Q|Q2}} land surface area is 148,940,000 km&lt;sup&gt;2&lt;/sup&gt; (minimum 1 image per km&lt;sup&gt;2&lt;/sup&gt;?)
&lt;li&gt;Images, sounds and videos for every animal [[#Species|species]]. Imagine a category with sounds for every bird species
|-
| {{icon+link|Wikinews|Wikinews}}
| &lt;li&gt;Local and national news?
|-
| {{icon+link|Wikiquote|Wikiquote}}
| &lt;li&gt;quotes by all biographies? (1 page per biography)
&lt;li&gt;quotes on all basic topics
&lt;li&gt;quotes from every major piece of literature
|-
| {{icon+link|Wikisource|Wikisource}}
| &lt;li&gt;every book in public domain? (in Wikisource every page is a book page). {{Q|Q461}} hosts about 3 million public domain books.&lt;ref&gt;[http://www.archive.org/details/texts Ebook and Texts Archive]&lt;/ref&gt;
&lt;li&gt;every law, public proclamation, etc
&lt;li&gt;every speech, letter to the editor
&lt;li&gt;every newspaper
&lt;li&gt;pamphlets, magazines, zines
|-
| {{icon+link|Wikispecies|Wikispecies}}
| &lt;li&gt;range between 2 to 100 million (see [[#Biology]])
|-
| {{icon+link|Wikiversity|Wikiversity}}
| &lt;li&gt;courses for every knowledge branch
|-
| {{icon+link|Wiktionary|Wiktionary}}
| &lt;li&gt;All [[Q18514|lemmas]] of all languages? The Spanish [[Q675538|DRAE]] has 80,000 lemmas* over 500 languages would be 40 million providing Spanish case is typical.
&lt;li&gt;All {{Q|Q184511}}? [http://www.casadellibro.com/libro-diccionario-de-dichos-y-frases-hechas/9788467025019/1133312 this] dictionary has 5000+ Spanish idioms. Again 5000*500 = 2,500 000 idioms if Spanish case is typical.
|-
| {{icon+link|Wikivoyage|Wikivoyage}}
| &lt;li&gt;Guides to every place (en.voy: A "place" is somewhere you can sleep)
&lt;li&gt;Phrasebooks for every (majority?) language
|}

=== Some examples ===
{{anchor|Examples|examples}}
If you don't think that there are still millions of missing topics, here you have some odd examples. Add yours!

{{Div col|cols=3}}
* [[Coin Compendium]]
* [[Cotton production in Samarkand Province]]
* [[Economic development in Caracas]]
* [[Fire in religion]]
* [[Rice production in Mandalay District]]
* [[Scientific properties of Andromeda]]
{{Div col end}}

{{clear}}

=== Special:Newpages ===
{{main|Special:Newpages}}
{{Special:Newpages/5}}

== References ==
{{reflist|2}}

== Bibliography ==

;Academia
* Mehdi, Mohamad et al. (2016). Excavating the mother lode of human-generated text: A systematic review of research that uses the Wikipedia corpus
* Nielsen, Finn (2010). [http://img.readtiger.com/wkp/en/Finn_%C3%85rup_Nielsen_-_Wikipedia_is_not_the_sum_of_all_human_knowledge_-_Wikimania_2010.pdf Wikipedia is not the sum of all human knowledge: do we need a wiki for open data?]
* Nielsen, Finn et al. (2017). [https://arxiv.org/pdf/1703.04222.pdf Scholia and scientometrics with Wikidata]

;Documentaries
* [[Q218022|Resnais, Alain]] (1956). ''{{Q|Q3535834}}''. ([https://www.youtube.com/watch?v=i0RVSZ_yDjs Available online])
* Deepspeed media (2013). ''Internet Archive''. ([https://www.youtube.com/watch?v=ec_-fgy3EGY Available online])
* Haak, Bregtje van der (2014). ''[[Digital Amnesia]]''. ([https://archive.org/details/DigitalAmnesiaDocumentary Available online])
* [[Q3086539|Levie, Françoise]] (2002). ''{{Q|Q55465498}}''. ([https://www.youtube.com/watch?v=L9jgnU3V944 Available online])
* [[Q936815|Moledo, Leonardo]] (2009). ''El conocimiento como bien social y la Biblioteca de Babel''. ([https://www.youtube.com/watch?v=eDZ6vxpom8o Available online])

;Essays
* [http://history-computer.com/Library/WorldBrain.pdf World Brain: The Idea of a Permanent World Encyclopaedia] ({{webarchive|url=http://www.webcitation.org/6rfIXAYFr?url=http://history-computer.com/Library/WorldBrain.pdf|date=July 2, 2017}})
* [http://pavlopoulos.wordpress.com/2009/10/18/lasswitz-and-borges-indexing-the-library-of-everything/ Lasswitz and Borges: Indexing the Library of Everything] ({{webarchive |url=http://www.webcitation.org/69lG77xS5?url=http://pavlopoulos.wordpress.com/2009/10/18/lasswitz-and-borges-indexing-the-library-of-everything/ |date=August 8, 2012 }})
* [http://baroqueetfatigue.wordpress.com/2011/03/11/quun-milliard-darticles-sepanouissent/ Qu’un milliard d’articles s’épanouissent] ({{webarchive |url=http://www.webcitation.org/6BhXDEXgZ?url=http://baroqueetfatigue.wordpress.com/2011/03/11/quun-milliard-darticles-sepanouissent/ |date=October 26, 2012 }})
* [http://wikitrekk.blogspot.fr/2012/11/ou-sarretera-wikipedia.html Où s'arrêtera Wikipédia?] ({{webarchive |url=http://www.webcitation.org/6G61ir250?url=http://wikitrekk.blogspot.fr/2012/11/ou-sarretera-wikipedia.html |date=April 23, 2013 }})

;News
* [http://www.theatlantic.com/technology/archive/2012/10/surmounting-the-insurmountable-wikipedia-is-nearing-completion-in-a-sense/264111/ Surmounting the Insurmountable: Wikipedia Is Nearing Completion, in a Sense] (The Atlantic) ({{webarchive |url=http://www.webcitation.org/6RNILt1k5?url=http://www.theatlantic.com/technology/archive/2012/10/surmounting-the-insurmountable-wikipedia-is-nearing-completion-in-a-sense/264111/ |date=July 27, 2014 }})
* [http://news.slashdot.org/story/12/10/26/1335241/wikipedia-is-nearing-completion Wikipedia Is Nearing "Completion"] (Slashdot) ({{webarchive |url=http://www.webcitation.org/6RNIWuQJg?url=http://news.slashdot.org/story/12/10/26/1335241/wikipedia-is-nearing-completion |date=July 27, 2014 }})
* [http://www.telegraph.co.uk/technology/wikipedia/11969459/Wikipedias-5-million-articles-still-cover-less-than-5-per-cent-of-all-human-knowledge.html Wikipedia's 5 million articles still cover less than 5 per cent of all human knowledge] ({{webarchive |url=http://www.webcitation.org/6dECLVFNK?url=http://www.telegraph.co.uk/technology/wikipedia/11969459/Wikipedias-5-million-articles-still-cover-less-than-5-per-cent-of-all-human-knowledge.html |date=November 22, 2015 }})

;Other
* [http://slashdot.org/story/13/07/03/196210/ask-slashdot-permanent-preservation-of-human-knowledge Ask Slashdot: Permanent Preservation of Human Knowledge?] ({{webarchive |url=http://www.webcitation.org/6RNIakwwB?url=http://slashdot.org/story/13/07/03/196210/ask-slashdot-permanent-preservation-of-human-knowledge |date=July 27, 2014 }})
* [http://www.oii.ox.ac.uk/research/projects/?id=128 Does Wikipedia represent ‘the sum of all human knowledge’? Examining the geographical scope of a peer-produced encyclopedia]
* [http://cii.oii.ox.ac.uk/can-we-count-the-sum-of-all-human-knowledge/ Can we count the sum of all human knowledge?]

== See also ==

{{div col|cols=2}}
* {{Q|Q221173}}
* {{Q|Q9081}}, {{Q|Q5292}}, {{Q|Q23622}} and {{Q|Q8513}}
* {{Q|Q16387}}, {{Q|Q199655}} and {{Q|Q380313}}
* {{Q|Q1929761}}, {{Q|Q48473}}, {{Q|Q2465832}}, {{Q|Q221173}}, and {{Q|Q2495568}}
* {{Q|Q5447999}}
* {{Q|Q243350}}
* {{Q|Q5375738}} and {{Q|Q470}}
* {{Q|Q2754911}}
* {{Q|Q27639554}}

* [[:en:Portal:Contents]], [[:en:Portal:Contents/Lists|Lists]], [[:en:Portal:Contents/Outlines|Outlines]], [[:en:Portal:Contents/Portals|Portals]], [[:en:Portal:Contents/Categories|Categories]], [[:en:Portal:Contents/Glossaries|Glossaries]], [[:en:Portal:Contents/Indexes|Indexes]]
* {{Q|Q957}}, [[:en:Category:Lists of lists]], {{Q|Q14615401}}
* {{Q|Q1795458}}
* {{Q|Q6631673}}
* {{Q|Q2477046}}
* {{Q|Q1443770}}
* [[Wikipedia:List of online reference desks]]

* [[meta:List of Wikipedias]] and [[meta:List of Wikimedia projects by size]]
* [[meta:Botopedia]] and [[meta:Mass content adding]]

;Essays
* [[Wikipedia:There is a deadline]]
* [[v:User:KYPark/Encyclopaedism/Timeline]]
* [[:en:User:Alan Liefting/Essays/The sum of all human knowledge]]
* [[:en:User:Dr. Blofeld/Stub and development philosophy]]
* [[:en:User:Facing the Sky/Wikipedia is not done]]
* [[:en:User:Piotrus/Wikipedia interwiki and specialized knowledge test]]
* [[:en:User:Emijrp/Wikipedia Archive]]
* [[:en:User:Emijrp/Systemic bias]]
* [[:en:User:Emijrp/Deletionism]]
* [[:en:Wikipedia: The sum of human knowledge]]

* [[:en:Wikipedia:Not paper]] and [[:en:Wikipedia:Preserve]]
* [[:en:Wikipedia:Wikipedia is failing]] and [[:en:Wikipedia:Wikipedia is succeeding]]
* [[:en:Wikipedia:Evaluating Wikipedia as an encyclopedia]]
* [[:en:Wikipedia:Expert retention]]
* [[:en:Wikipedia:Size comparisons]]
* [[:en:Wikipedia:Wikipedia Signpost/2008-08-11/Growth study]]
* [[:en:Wikipedia:All high schools can be notable]]
* [[:en:Wikipedia:Modelling Wikipedia's growth]]
* [[:en:Wikipedia:Modelling Wikipedia extended growth]]
* [[:en:Category:Reference works in the public domain]]

;Users creating articles massively ([[Special:Newpages]]):
* [[:en:Wikipedia:List of Wikipedians by article count]]
* [[:en:User:Bryan/List of users by pages created]]
* [http://en.wikipedia.org/w/index.php?title=Encyclop%C3%A9distes&amp;oldid=403079689#Number_of_articles Encyclopédistes#Number of articles]

;WikiProjects
* [[:en:Wikipedia:WikiProject Missing encyclopedic articles]]
{{div col end}}

== External links ==
&lt;!--
Please, only links discussing the topic "all human knowledge". Include any links to databases or lists in the sections above. Publications and documentaries in Bibliography section. Thanks.
--&gt;
* [https://tools.wmflabs.org/wmcounter/ Wikimedia projects edits counter]
* [https://www.wikidata.org Wikidata project] and its [https://query.wikidata.org query service]
* [http://prezi.com/szjdvdbtl0j_/is-wikipedia-done/ Is Wikipedia Done?] – Answer: No.
* {{Q|Q203237}} and [[wikia:speedydeletion:Speedy deletion Wiki|Speedy deletion Wiki]]
&lt;!--
Counters offline
* [http://www.oclc.org/worldcat/newgrow.htm Watch WorldCat Grow] – Total number of holdings in libraries worldwide
* [http://statusboard.archive.org/ Live at the Internet Archive] – This page shows scanned books from the Internet Archive
--&gt;
{{User:Emijrp/All human knowledge/end}}&lt;!--
:''Discuss about this topic and help with estimations on the {{Q|Q300885}} IRC channel: &lt;span class="plainlinks"&gt;'''[http://webchat.freenode.net/?channels=allhumanknowledge&amp;uio=d4 #allhumanknowledge]'''&lt;/span&gt;.''--&gt;&lt;!--{{Brainstorming}}--&gt;&lt;!--{{Project missing articles}}--&gt;

[[Category:Wikidata statistics]]</text>
      <sha1>ai82blaa96y1bknssnj2ldasjzalxf7</sha1>
    </revision>
  </page>
  <page>
    <title>User:Emijrp/AHKrow</title>
    <ns>2</ns>
    <id>33301031</id>
    <revision>
      <id>512941438</id>
      <timestamp>2017-07-04T06:43:53Z</timestamp>
      <contributor>
        <username>Emijrp</username>
        <id>4147</id>
      </contributor>
      <comment>Created page with "| style="text-align: center;" data-sort-value={{{wikidata|}}} | &lt;!-- --&gt;{{#if:{{{P31|}}}|'''[{{#switch:{{{format|}}} |count=https://query.wikidata.org/#SELECT%20%28COUNT%28%3F..."</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="2142">| style="text-align: center;" data-sort-value={{{wikidata|}}} | &lt;!--
--&gt;{{#if:{{{P31|}}}|'''[{{#switch:{{{format|}}}
|count=https://query.wikidata.org/#SELECT%20%28COUNT%28%3Fitem%29%20AS%20%3Fcount%29%20%23%20%3FitemLabel%0AWHERE%20{%0A%20%20%3Fitem%20wdt%3AP31%2Fwdt%3AP279*%20wd%3A{{{P31|}}}.%0A%20%20SERVICE%20wikibase%3Alabel%20{%20bd%3AserviceParam%20wikibase%3Alanguage%20%22en%22%20}%0A}%0A
|#default=https://query.wikidata.org/#SELECT%20%3Fitem%20%3FitemLabel%0AWHERE%20{%0A%20%20%3Fitem%20wdt%3AP31%2Fwdt%3AP279*%20wd%3A{{{P31|}}}.%0A%20%20SERVICE%20wikibase%3Alabel%20{%20bd%3AserviceParam%20wikibase%3Alanguage%20%22en%22%20}%0A}%0A
}} {{formatnum:{{{wikidata|}}}}}]'''|&lt;!--
--&gt;{{#if:{{{P1435|}}}|'''[{{#switch:{{{format|}}}
|count=https://query.wikidata.org/#SELECT%20%28COUNT%28%3Fitem%29%20AS%20%3Fcount%29%20%23%20%3FitemLabel%0AWHERE%20%7B%0A%20%20%3Fitem%20wdt%3AP1435%20wd%3A{{{P1435}}}.%0A%20%20SERVICE%20wikibase%3Alabel%20%7B%20bd%3AserviceParam%20wikibase%3Alanguage%20%22en%22%20%7D%0A%7D%0A
|#default=https://query.wikidata.org/#SELECT%20%3Fitem%20%3FitemLabel%0AWHERE%20%7B%0A%20%20%3Fitem%20wdt%3AP1435%20wd%3A{{{P1435}}}.%0A%20%20SERVICE%20wikibase%3Alabel%20%7B%20bd%3AserviceParam%20wikibase%3Alanguage%20%22en%22%20%7D%0A%7D%0A
}} {{formatnum:{{{wikidata|}}}}}]'''|-}}}}
| style="text-align: center;{{#if:{{{estimate|}}}|padding: 10px 0px 0px 0px;}}" data-sort-value={{#if:{{{estimate|}}}|{{{estimate}}}|{{#if:{{{wikidata|}}}|{{{wikidata}}}|0}}}} | {{#if:{{{estimate|}}}|&lt;div style="margin: 0px 5px 0px 5px;"&gt;{{formatnum:{{{estimate|}}}}}&lt;/div&gt;&lt;div style="position: relative; background-color:gold; width: {{#if:{{{wikidata|}}}|{{#ifexpr:{{{wikidata}}}&gt;={{{estimate}}}|100|{{#expr:floor({{{wikidata}}}/({{{estimate}}}/100))}}}}|0}}%;height: 10px;font-size: 50%;" title="{{#if:{{{wikidata|}}}|{{#ifexpr:{{{wikidata}}}&gt;{{{estimate}}}|&amp;gt;100|{{#expr:floor({{{wikidata}}}/({{{estimate}}}/100))}}}}|0}}% in Wikidata"&gt;{{#if:{{{wikidata|}}}|{{#ifexpr:{{{wikidata}}}&gt;{{{estimate}}}|&gt;100|{{#expr:floor({{{wikidata}}}/({{{estimate}}}/100))}}}}|0}}%&lt;/div&gt;|{{#if:{{{wikidata|}}}|{{grey|{{formatnum:{{{wikidata}}}}}}}|-}}}}</text>
      <sha1>leqvu2tn934jlg4hewz0bzyj6fj2k7h</sha1>
    </revision>
  </page>
  <page>
    <title>User:Emijrp/AHKrowtotal</title>
    <ns>2</ns>
    <id>33301022</id>
    <revision>
      <id>512941328</id>
      <timestamp>2017-07-04T06:43:34Z</timestamp>
      <contributor>
        <username>Emijrp</username>
        <id>4147</id>
      </contributor>
      <comment>Created page with "! colspan=2 | Total !! {{#if:{{{wikidata|}}}|{{formatnum:{{{wikidata}}}}}|Unknown}} !! {{#if:{{{estimate|}}}|{{formatnum:{{{estimate}}}}}|Unknown}} !!"</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="150">! colspan=2 | Total !! {{#if:{{{wikidata|}}}|{{formatnum:{{{wikidata}}}}}|Unknown}} !! {{#if:{{{estimate|}}}|{{formatnum:{{{estimate}}}}}|Unknown}} !!</text>
      <sha1>dtmia1396d82jr0v6mis089by87dobe</sha1>
    </revision>
  </page>
  <page>
    <title>User:Emijrp/AHKsummaryrow</title>
    <ns>2</ns>
    <id>33300975</id>
    <revision>
      <id>512940729</id>
      <timestamp>2017-07-04T06:41:45Z</timestamp>
      <contributor>
        <username>Emijrp</username>
        <id>4147</id>
      </contributor>
      <comment>Created page with "| style="text-align: center;" data-sort-value={{{wikidata|}}} | {{formatnum:{{{wikidata|}}}}} | style="text-align: center;{{#if:{{{estimate|}}}|padding: 10px 0px 0px 0px;}}" d..."</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="934">| style="text-align: center;" data-sort-value={{{wikidata|}}} | {{formatnum:{{{wikidata|}}}}}
| style="text-align: center;{{#if:{{{estimate|}}}|padding: 10px 0px 0px 0px;}}" data-sort-value={{#if:{{{estimate|}}}|{{{estimate}}}|{{#if:{{{wikidata|}}}|{{{wikidata}}}|0}}}} | {{#if:{{{estimate|}}}|&lt;div style="margin: 0px 5px 0px 5px;"&gt;{{formatnum:{{{estimate|}}}}}&lt;/div&gt;&lt;div style="position: relative; background-color:gold; width: {{#if:{{{wikidata|}}}|{{#ifexpr:{{{wikidata}}}&gt;={{{estimate}}}|100|{{#expr:floor({{{wikidata}}}/({{{estimate}}}/100))}}}}|0}}%;height: 10px;font-size: 50%;" title="{{#if:{{{wikidata|}}}|{{#ifexpr:{{{wikidata}}}&gt;{{{estimate}}}|&amp;gt;100|{{#expr:floor({{{wikidata}}}/({{{estimate}}}/100))}}}}|0}}% in Wikidata"&gt;{{#if:{{{wikidata|}}}|{{#ifexpr:{{{wikidata}}}&gt;{{{estimate}}}|&gt;100|{{#expr:floor({{{wikidata}}}/({{{estimate}}}/100))}}}}|0}}%&lt;/div&gt;|{{#if:{{{wikidata|}}}|{{grey|{{formatnum:{{{wikidata}}}}}}}|-}}}}</text>
      <sha1>6rks7y8q1zpxbb69uzqs3autjiltqh4</sha1>
    </revision>
  </page>
  <page>
    <title>User:Emijrp/AHKsummarytotal</title>
    <ns>2</ns>
    <id>33300983</id>
    <revision>
      <id>512940809</id>
      <timestamp>2017-07-04T06:42:00Z</timestamp>
      <contributor>
        <username>Emijrp</username>
        <id>4147</id>
      </contributor>
      <comment>Created page with "! colspan=2 | Total !! {{#if:{{{wikidata|}}}|{{formatnum:{{{wikidata}}}}}|Unknown}} !! {{#if:{{{estimate|}}}|{{formatnum:{{{estimate}}}}}|Unknown}} !!"</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="150">! colspan=2 | Total !! {{#if:{{{wikidata|}}}|{{formatnum:{{{wikidata}}}}}|Unknown}} !! {{#if:{{{estimate|}}}|{{formatnum:{{{estimate}}}}}|Unknown}} !!</text>
      <sha1>dtmia1396d82jr0v6mis089by87dobe</sha1>
    </revision>
  </page>
  <page>
    <title>User:Emijrp/All Human Knowledge/end</title>
    <ns>2</ns>
    <id>33301106</id>
    <revision>
      <id>512942408</id>
      <parentid>512942338</parentid>
      <timestamp>2017-07-04T06:46:31Z</timestamp>
      <contributor>
        <username>Emijrp</username>
        <id>4147</id>
      </contributor>
      <minor/>
      <comment>Emijrp moved page [[User:Emijrp/All human knowledge/end]] to [[User:Emijrp/All Human Knowledge/end]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="919">{{anchor|ahknavbox}}{{Navbox
| name  = User:Emijrp/All Human Knowledge/end
| title = [[User:Emijrp/All Human Knowledge|All Human Knowledge]]
| listclass = hlist
| state = expanded 

| group1 = 
| list1 = 
* [[User:Emijrp/All Human Knowledge#Arts|Arts]]
* [[User:Emijrp/All Human Knowledge#Geography|Geography]]
* [[User:Emijrp/All Human Knowledge#History|History]]
* [[User:Emijrp/All Human Knowledge#GLAM|GLAM]]
* [[User:Emijrp/All Human Knowledge#Science|Science]]
* [[User:Emijrp/All Human Knowledge#Society|Society]]
* [[User:Emijrp/All Human Knowledge#Technology|Technology]]

| group2 =
| list2 = 
* [[User:Emijrp/All Human Knowledge#Summary|Summary]]
* [[User:Emijrp/All Human Knowledge#Further_knowledge|Further knowledge]]
* [[:en:Wikipedia:There is a deadline|There is a deadline]]
* [[:en:User:Emijrp/Wikipedia Archive|Wikipedia Archive]]
* [[:en:User:Emijrp/Wikipedia to the Moon|Wikipedia to the Moon]]

}}</text>
      <sha1>1edesj3tver33zhihelbras24wlvh5s</sha1>
    </revision>
  </page>
  <page>
    <title>User:Emijrp/All human knowledge/end</title>
    <ns>2</ns>
    <id>33301114</id>
    <redirect title="User:Emijrp/All Human Knowledge/end" />
    <revision>
      <id>512942409</id>
      <timestamp>2017-07-04T06:46:31Z</timestamp>
      <contributor>
        <username>Emijrp</username>
        <id>4147</id>
      </contributor>
      <comment>Emijrp moved page [[User:Emijrp/All human knowledge/end]] to [[User:Emijrp/All Human Knowledge/end]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="49">#REDIRECT [[User:Emijrp/All Human Knowledge/end]]</text>
      <sha1>scs09kehvusyuk8q1ah9psozisc1v5l</sha1>
    </revision>
  </page>
  <page>
    <title>Template:-</title>
    <ns>10</ns>
    <id>1559239</id>
    <revision>
      <id>375032320</id>
      <parentid>21976435</parentid>
      <timestamp>2016-09-10T09:35:11Z</timestamp>
      <contributor>
        <username>Great Brightstar</username>
        <id>20682</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="91">&lt;div style="clear:{{{1|both}}}; height: 1em"&gt;&lt;/div&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>232p90ss1grhgedj88lffcueqchg7b4</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Anchor</title>
    <ns>10</ns>
    <id>8324</id>
    <revision>
      <id>64898320</id>
      <parentid>64898296</parentid>
      <timestamp>2013-08-10T00:24:47Z</timestamp>
      <contributor>
        <username>Jasper Deng</username>
        <id>3724</id>
      </contributor>
      <minor/>
      <comment>Protected "[[Template:Anchor]]": Widely used template ([Edit=Allow only autoconfirmed users] (indefinite) [Move=Allow only autoconfirmed users] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="85">&lt;onlyinclude&gt;&lt;span id="{{{1|{{{anchor}}}}}}"&gt;&lt;/span&gt;&lt;/onlyinclude&gt;

{{documentation}}</text>
      <sha1>d6obxu0pzquv22fx2wdpkt8x8dlsk7j</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Cite book</title>
    <ns>10</ns>
    <id>19187495</id>
    <revision>
      <id>152772521</id>
      <parentid>152772518</parentid>
      <timestamp>2014-08-24T05:21:44Z</timestamp>
      <contributor>
        <username>Zolo</username>
        <id>4610</id>
      </contributor>
      <minor/>
      <comment>171 revisions imported from [[:en:Template:Cite book]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="123">&lt;includeonly&gt;{{#invoke:citation/CS1|citation
|CitationClass=book
}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>hq4yscm08hccl43rjw83qi7egacgxec</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Cite web</title>
    <ns>10</ns>
    <id>27869791</id>
    <revision>
      <id>357861538</id>
      <timestamp>2016-07-17T06:21:26Z</timestamp>
      <contributor>
        <username>Jura1</username>
        <id>609373</id>
      </contributor>
      <comment>[[w:Template:Cite web]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="122">&lt;includeonly&gt;{{#invoke:citation/CS1|citation
|CitationClass=web
}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>rcgmbcxu7hvs583g1f3rzz4c4dkizda</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Clear</title>
    <ns>10</ns>
    <id>12131100</id>
    <revision>
      <id>665474881</id>
      <parentid>91992232</parentid>
      <timestamp>2018-04-14T18:59:12Z</timestamp>
      <contributor>
        <username>Dataeast0000001</username>
        <id>2952466</id>
      </contributor>
      <comment>move onlyinclude to noinclude</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="79">&lt;div style="clear:{{{1|both}}};"&gt;&lt;/div&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>5aa2j06l3n3husy1g6jggf6oznzocau</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Column-count</title>
    <ns>10</ns>
    <id>11907323</id>
    <revision>
      <id>22324804</id>
      <parentid>22324796</parentid>
      <timestamp>2013-04-07T17:33:28Z</timestamp>
      <contributor>
        <username>Razr Nation</username>
        <id>72278</id>
      </contributor>
      <minor/>
      <comment>4 revisions from [[:en:Template:Column-count]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="231">&lt;includeonly&gt;-moz-column-count: {{{1|2}}}; -webkit-column-count: {{{1|2}}}; column-count: {{{1|2}}};&lt;/includeonly&gt;&lt;noinclude&gt;

&lt;!-- ADD CATEGORIES AND INTERWIKIS TO THE /doc PAGE, NOT HERE, THANKS --&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>k5fgrdnkgqlsuhvfbng1yutmo23zaj5</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Div col</title>
    <ns>10</ns>
    <id>11907304</id>
    <revision>
      <id>22324739</id>
      <parentid>22324737</parentid>
      <timestamp>2013-04-07T17:33:24Z</timestamp>
      <contributor>
        <username>Razr Nation</username>
        <id>72278</id>
      </contributor>
      <minor/>
      <comment>42 revisions from [[:en:Template:Div col]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="572">&lt;includeonly&gt;&lt;div class="&lt;!--
 --&gt;{{#if: {{{colwidth|{{{2|}}}}}}
    | column-width
    | column-count column-count-{{{cols|{{{1|2}}}}}} }}" style="&lt;!--
 --&gt;{{#if: {{{colwidth|{{{2|}}}}}}
    | {{column-width|{{{colwidth|{{{2}}}}}}}}
    | {{column-count|{{{cols|{{{1|2}}}}}}}} }} &lt;!--
 --&gt;{{#if: {{{rules|}}}
    | {{#ifeq:{{{rules}}}|yes
      | {{column-rule}}
      | {{column-rule|{{{rules}}}}} }} }} &lt;!--
 --&gt;{{#ifeq: {{{small|}}}|yes
    | font-size:90%; }} &lt;!--
 --&gt;{{#if: {{{style|}}}
    | {{{style}}} }}"&gt;&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>2smmtob0dcw51wh0pexb3yo6441ewa1</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Div col end</title>
    <ns>10</ns>
    <id>11907365</id>
    <revision>
      <id>22325146</id>
      <parentid>22325138</parentid>
      <timestamp>2013-04-07T17:33:53Z</timestamp>
      <contributor>
        <username>Razr Nation</username>
        <id>72278</id>
      </contributor>
      <minor/>
      <comment>13 revisions from [[:en:Template:Div col end]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="97">&lt;includeonly&gt;&lt;/div&gt;&lt;/includeonly&gt;&lt;noinclude&gt;

{{Documentation|Template:Div col/doc}}
&lt;/noinclude&gt;</text>
      <sha1>6rokxfsahdtec2gb0rdg8etqqekkg5x</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Flag</title>
    <ns>10</ns>
    <id>17952122</id>
    <revision>
      <id>985929629</id>
      <parentid>985926826</parentid>
      <timestamp>2019-07-25T12:37:16Z</timestamp>
      <contributor>
        <username>Jay D. Easy</username>
        <id>2953216</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="3348">[[File:Flag of {{#switch:{{{1}}}
|AFG=Afghanistan
|AIA=Anguilla
|ALB=Albania
|ALG=Algeria
|AND=Andorra
|ANG=Angola
|ANT=Netherlands Antilles
|ARG=Argentina
|ARM=Armenia
|ARU=Aruba
|ASA=American Samoa
|ATG=Antigua and Barbuda
|AUS=Australia
|AUT=Austria
|AZE=Azerbaijan
|BAH=Bahamas
|BAN=Bangladesh
|BDI=Burundi
|BEL=Belgium
|BEN=Benin
|BER=Bermuda
|BFA=Burkina Faso
|BHR=Bahrain
|BHU=Bhutan
|BIH=Bosnia and Herzegovina
|BLR=Belarus
|BLZ=Belize
|BOL=Bolivia
|BOT=Botswana
|BRA=Brazil
|BRB=Barbados
|BRU=Brunei
|BUL=Bulgaria
|CAM=Cambodia
|CAN=Canada
|CAT=Catalonia
|CAY=Cayman Islands
|CGO=Congo
|CHA=Chad
|CHI=Chile
|CHN=China
|CIV=Ivory Coast
|CMR=Cameroon
|COD=Congo DR
|COK=Cook Islands
|COL=Colombia
|COM=Comoros
|CPV=Cape Verde
|CRC=Costa Rica
|CRO=Croatia
|CTA=Central African Republic
|CUB=Cuba
|CYP=Cyprus
|CYPN=Turkish Republic of Northern Cyprus
|CZE=Czech Republic
|DEN=Denmark
|DEU=Germany
|DJI=Djibouti
|DMA=Dominica
|DNK=Denmark
|DOM=Dominican Republic
|ECU=Ecuador
|EGY=Egypt
|ENG=England
|EQG=Equatorial Guinea
|ERI=Eritrea
|ESP=Spain
|EST=Estonia
|ETH=Ethiopia
|EUR=Europe
|FIJ=Fiji
|FIN=Finland
|FRA=France
|FRO=Faroe Islands
|GAB=Gabon
|GAM=Gambia
|GBR=United Kingdom
|GEO=Georgia
|GER=Germany
|GHA=Ghana
|GNB=Guinea-Bissau
|GRE=Greece
|GRN=Grenada
|GUA=Guatemala
|GUI=Guinea
|GUM=Guam
|GUY=Guyana
|HAI=Haiti
|HKG=Hong Kong
|HON=Honduras
|HUN=Hungary
|IDN=Indonesia
|IND=India
|IRL=Ireland
|IRN=Iran
|IRQ=Iraq
|ISL=Iceland
|ISR=Israel
|ITA=Italy
|JAM=Jamaica
|JPN=Japan
|JOR=Jordan
|KAZ=Kazakhstan
|KEN=Kenya
|KGZ=Kyrgyzstan
|KOR=South Korea
|KSA=Saudi Arabia
|KUW=Kuwait
|LAO=Laos
|LBR=Liberia
|LBY=Libya
|LCA=Saint Lucia
|LES=Lesotho
|LIB=Lebanon
|LIE=Liechtenstein
|LTU=Lithuania
|LUX=Luxembourg
|LVA=Latvia
|MAC=Macau
|MAD=Madagascar
|MAR=Morocco
|MAS=Malaysia
|MCO=Monaco
|MDA=Moldova
|MDV=Maldives
|MEX=Mexico
|MGL=Mongolia
|MKD=Macedonia
|MLI=Mali
|MLT=Malta
|MNE=Montenegro
|MOZ=Mozambique
|MRI=Mauritius
|MSR=Montserrat
|MTN=Mauritania
|MWI=Malawi
|MYA=Myanmar
|NAM=Namibia
|NCA=Nicaragua
|NCL=New Caledonia
|NED=Netherlands
|NEP=Nepal
|NGA=Nigeria
|NIG=Niger
|NIR=Northern Ireland
|NLD=Netherlands
|NOR=Norway
|NZL=New Zealand
|OMA=Oman
|PAK=Pakistan
|PAN=Panama
|PAR=Paraguay
|PER=Peru
|PHI=Philippines
|PLE=Palestine
|PNG=Papua New Guinea
|POL=Poland
|POR=Portugal
|PRK=North Korea
|PUR=Puerto Rico
|QAT=Qatar
|ROU=Romania
|RSA=South Africa
|RUS=Russia
|RWA=Rwanda
|SAM=Samoa
|SCO=Scotland
|SEN=Senegal
|SEY=Seychelles
|SIN=Singapore
|SKN=Saint Kitts and Nevis
|SLE=Sierra Leone
|SLV=El Salvador
|SMR=San Marino
|SOL=Solomon Islands
|SOM=Somalia
|SRB=Serbia
|SRI=Sri Lanka
|STP=São Tomé and Príncipe
|SUD=Sudan
|SUI=Switzerland
|SUR=Suriname
|SVK=Slovakia
|SVN=Slovenia
|SWE=Sweden
|SWZ=Swaziland
|SYR=Syria
|TAH=Tahiti
|TAN=Tanzania
|TCA=Turks and Caicos Islands
|TGA=Tonga
|THA=Thailand
|TJK=Tajikistan
|TKM=Turkmenistan
|TLS=Timor-Leste
|TOG=Togo
|TPE=Chinese Taipei
|TRI=Trinidad and Tobago
|TUN=Tunisia
|TUR=Turkey
|TWN=Taiwan
|UAE=United Arab Emirates
|UGA=Uganda
|UKR=Ukraine
|URU=Uruguay
|USA=United States
|UZB=Uzbekistan
|VAN=Vanuatu
|VAT=the Vatican City
|VEN=Venezuela
|VGB=British Virgin Islands
|VIE=Vietnam
|VIN=Saint Vincent and the Grenadines
|VIR=United States Virgin Islands
|WAL=Wales
|XKS=Kosovo
|YEM=Yemen
|ZAM=Zambia
|ZIM=Zimbabwe
|#default={{{1|Country}}}
}}.svg|border|{{{2|20px}}}|link=]]</text>
      <sha1>flyld6uwbb8u1txoo1y31sdt7l1i405</sha1>
    </revision>
  </page>
  <page>
    <title>Template:For</title>
    <ns>10</ns>
    <id>33405</id>
    <revision>
      <id>466832</id>
      <parentid>417778</parentid>
      <timestamp>2012-11-16T06:39:47Z</timestamp>
      <contributor>
        <username>Koavf</username>
        <id>7083</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="302">{{Hatnote|For {{#if:{{{1|}}}|{{{1}}}|other uses}}, see [[:{{{2|{{PAGENAME}} (disambiguation)}}}]]{{#if:{{{3|}}}|{{#if:{{{4|}}}|, [[:{{{3}}}]], {{#if:{{{5|}}}|[[:{{{4}}}]], and [[:{{{5}}}]]|and [[:{{{4}}}]]}}|&amp;#32;and [[:{{{3}}}]]}}}}.}}&lt;noinclude&gt;

{{Documentation}}

[[Category:Templates]]&lt;/noinclude&gt;</text>
      <sha1>34se6mnkokxn09xh6y41bcz2sp2o59f</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Grey</title>
    <ns>10</ns>
    <id>16501191</id>
    <revision>
      <id>68626260</id>
      <parentid>68626224</parentid>
      <timestamp>2013-09-06T02:35:07Z</timestamp>
      <contributor>
        <username>Sven Manguard</username>
        <id>6965</id>
      </contributor>
      <minor/>
      <comment>Sven Manguard moved page [[Template:Grey/Template:Grey]] to [[Template:Grey]] without leaving a redirect: :S</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="151">&lt;span style="color:gray"&gt;{{{1}}}&lt;/span&gt;&lt;noinclude&gt;

&lt;!-- Add categories and interwikis to the /doc subpage, not here! --&gt;
{{Documentation}}&lt;/noinclude&gt;</text>
      <sha1>0se1essniolp1jxmajbn58fwfmjy6un</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Hatnote</title>
    <ns>10</ns>
    <id>33408</id>
    <revision>
      <id>647173290</id>
      <parentid>515440059</parentid>
      <timestamp>2018-03-10T10:00:36Z</timestamp>
      <contributor>
        <username>Mbch331</username>
        <id>69441</id>
      </contributor>
      <minor/>
      <comment>37 revisions imported from [[:en:Template:Hatnote]]: https://www.wikidata.org/w/index.php?title=Wikidata:Administrators%27_noticeboard&amp;oldid=647164909#Request_to_import_template:Cite_Q_from_ENWP</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="121">&lt;div class="dablink"&gt;{{{1}}}&lt;/div&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;&lt;noinclude&gt;[[Category:Templates]]&lt;/noinclude&gt;</text>
      <sha1>djyabi7ij7pticf355ftm6d0o25eslj</sha1>
    </revision>
  </page>
  <page>
    <title>Template:ISBN</title>
    <ns>10</ns>
    <id>29795685</id>
    <revision>
      <id>423113784</id>
      <timestamp>2017-01-01T02:39:04Z</timestamp>
      <contributor>
        <username>Koavf</username>
        <id>7083</id>
      </contributor>
      <comment>Created page with "&lt;includeonly&gt;[[Special:BookSources/{{{1}}}|ISBN {{{1}}}]]{{#invoke:check isxn|check_isbn|{{{1}}}|error=&amp;nbsp;&lt;span class="error" style="font-size:88%"&gt;Invalid&amp;nbsp;ISBN&lt;/span&gt;..."</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="283">&lt;includeonly&gt;[[Special:BookSources/{{{1}}}|ISBN {{{1}}}]]{{#invoke:check isxn|check_isbn|{{{1}}}|error=&amp;nbsp;&lt;span class="error" style="font-size:88%"&gt;Invalid&amp;nbsp;ISBN&lt;/span&gt;{{main other|[[Category:Pages with ISBN errors]]}}}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>nb4by702emf53emjmyuqzlgtbvqf5ex</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Label</title>
    <ns>10</ns>
    <id>14107058</id>
    <revision>
      <id>806967276</id>
      <parentid>799012710</parentid>
      <timestamp>2018-12-07T18:02:55Z</timestamp>
      <contributor>
        <username>Jarekt</username>
        <id>1274</id>
      </contributor>
      <comment>add "show_id" parameter; add link_type='wikidata talk' option</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="285">{{#if:{{{item|{{{1|}}} }}}|
  {{#invoke:Wikidata label|getLabel
    |item={{{item|{{{1|}}} }}}
    |lang={{{lang|{{{2|{{int:lang}} }}} }}}
    |link={{{link|-}}}
    |capitalization={{{capitalization|none}}}
    |show_id={{{show_id|}}}
  }} 
}}&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>cmqftjimeceqsuvawr9ckl20p3uf8q8</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Lang</title>
    <ns>10</ns>
    <id>14505</id>
    <revision>
      <id>73104084</id>
      <parentid>6194533</parentid>
      <timestamp>2013-09-28T14:37:52Z</timestamp>
      <contributor>
        <username>Multichill</username>
        <id>72353</id>
      </contributor>
      <minor/>
      <comment>Protected "[[Template:Lang]]": Widely used template ([Edit=Allow only autoconfirmed users] (indefinite) [Move=Allow only autoconfirmed users] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="142">&lt;span lang="{{{1}}}" class="description {{{1}}}"&gt;{{{2}}}&lt;/span&gt;&lt;noinclude&gt;
{{Documentation}}

[[Category:Localisation templates]]
&lt;/noinclude&gt;</text>
      <sha1>ht7apgfvvm8vmomgdrj1y0tw2xoluru</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Main other</title>
    <ns>10</ns>
    <id>52468</id>
    <revision>
      <id>489155</id>
      <parentid>457989</parentid>
      <timestamp>2012-11-18T18:53:24Z</timestamp>
      <contributor>
        <username>Koavf</username>
        <id>7083</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="362">{{#switch:
  &lt;!--If no or empty "demospace" parameter then detect namespace--&gt;
  {{#if:{{{demospace|}}} 
  | {{lc: {{{demospace}}} }}    &lt;!--Use lower case "demospace"--&gt;
  | {{#ifeq:{{NAMESPACE}}|{{ns:0}}
    | main
    | other
    }} 
  }}
| main     = {{{1|}}}
| other
| #default = {{{2|}}}
}}&lt;noinclude&gt;

{{documentation}}
[[Category:Templates]]
&lt;/noinclude&gt;</text>
      <sha1>a5q6twt6qzw79w4yeu84xcg1ge08pun</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Navbar/styles.css</title>
    <ns>10</ns>
    <id>64417873</id>
    <revision>
      <id>966431905</id>
      <parentid>966431814</parentid>
      <timestamp>2019-06-21T18:13:44Z</timestamp>
      <contributor>
        <username>Ladsgroup</username>
        <id>28859</id>
      </contributor>
      <minor/>
      <comment>Protected "[[Template:Navbar/styles.css]]": High traffic page ([Edit=Allow only administrators] (indefinite) [Move=Allow only administrators] (indefinite))</comment>
      <model>sanitized-css</model>
      <format>text/css</format>
      <text xml:space="preserve" bytes="545">/* Default styling for Navbar template */
.navbar {
	display: inline;
	font-size: 88%;
	font-weight: normal;
}
.navbar ul {
	display: inline;
	white-space: nowrap;
}
.navbar li {
	word-spacing: -0.125em;
}
.navbar.mini li span {
	font-variant: small-caps;
}
/* Navbar styling when nested in infobox and navbox */
.infobox .navbar {
	font-size: 100%;
}
.navbox .navbar {
	display: block;
	font-size: 100%;
}
.navbox-title .navbar {
	/* @noflip */
	float: left;
	/* @noflip */
	text-align: left;
	/* @noflip */
	margin-right: 0.5em;
	width: 6em;
}</text>
      <sha1>g4b9y8knhsi17u93iongm04f436c3rx</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Navbox</title>
    <ns>10</ns>
    <id>17265897</id>
    <revision>
      <id>967831154</id>
      <parentid>966431047</parentid>
      <timestamp>2019-06-23T23:40:42Z</timestamp>
      <contributor>
        <username>Tacsipacsi</username>
        <id>33956</id>
      </contributor>
      <comment>Undid revision 966431047 by [[Special:Contributions/Ladsgroup|Ladsgroup]] ([[User talk:Ladsgroup|talk]]): this should be loaded from the module, not the template, as other templates may use the module directly</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="154">&lt;includeonly&gt;{{#invoke:Navbox|navbox}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation}}
&lt;!-- Add categories and interwikis to the /doc sub-page --&gt;
&lt;/noinclude&gt;</text>
      <sha1>95llp90hipqxnysa5us23r6x9sjluio</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Navbox/styles.css</title>
    <ns>10</ns>
    <id>64417867</id>
    <revision>
      <id>966431178</id>
      <parentid>966430604</parentid>
      <timestamp>2019-06-21T18:12:25Z</timestamp>
      <contributor>
        <username>Ladsgroup</username>
        <id>28859</id>
      </contributor>
      <minor/>
      <comment>Protected "[[Template:Navbox/styles.css]]": High traffic page ([Edit=Allow only administrators] (indefinite) [Move=Allow only administrators] (indefinite))</comment>
      <model>sanitized-css</model>
      <format>text/css</format>
      <text xml:space="preserve" bytes="1754">
/* Default style for navigation boxes */
/* Revision of import is //en.wikipedia.org/w/index.php?title=MediaWiki:Common.css&amp;oldid=588108879 */
.navbox {                     /* Navbox container style */
	border: 1px solid #a2a9b1;
	width: 100%;
	margin: auto;
	clear: both;
	font-size: 88%;
	text-align: center;
	padding: 1px;
}
.navbox-inner,
.navbox-subgroup {
	width: 100%;
}
.navbox-group,
.navbox-title,
.navbox-abovebelow {
	padding: 0.25em 1em;      /* Title, group and above/below styles */
	line-height: 1.5em;
	text-align: center;
}
th.navbox-group {             /* Group style */
	white-space: nowrap;
	/* @noflip */
	text-align: right;
}
.navbox,
.navbox-subgroup {
	background: #fdfdfd;      /* Background color */
}
.navbox-list {
	line-height: 1.8em;
	border-color: #fdfdfd;    /* Must match background color */
}
.navbox th,
.navbox-title {
	background: #ccccff;      /* Level 1 color */
}
.navbox-abovebelow,
th.navbox-group,
.navbox-subgroup .navbox-title {
	background: #ddddff;      /* Level 2 color */
}
.navbox-subgroup .navbox-group,
.navbox-subgroup .navbox-abovebelow {
	background: #e6e6ff;      /* Level 3 color */
}
.navbox-even {
	background: #f7f7f7;      /* Even row striping */
}
.navbox-odd {
	background: transparent;  /* Odd row striping */
}
table.navbox + table.navbox {  /* Single pixel border between adjacent navboxes */
	margin-top: -1px;          /* (doesn't work for IE6, but that's okay)       */
}
.navbox .hlist td dl,
.navbox .hlist td ol,
.navbox .hlist td ul,
.navbox td.hlist dl,
.navbox td.hlist ol,
.navbox td.hlist ul {
	padding: 0.125em 0;       /* Adjust hlist padding in navboxes */
}
ol + table.navbox,
ul + table.navbox {
	margin-top: 0.5em;        /* Prevent lists from clinging to navboxes */
}</text>
      <sha1>98jqgfayutsabcax9q9a8qr6c8r8x7x</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Ombox</title>
    <ns>10</ns>
    <id>39726</id>
    <revision>
      <id>966416066</id>
      <parentid>94713822</parentid>
      <timestamp>2019-06-21T17:44:12Z</timestamp>
      <contributor>
        <username>Ladsgroup</username>
        <id>28859</id>
      </contributor>
      <comment>Use [[mw:TemplateStyles]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="186">&lt;templatestyles src="Ombox/styles.css"/&gt;{{#invoke:Message box|ombox}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>6mntu6sj1tqp9a6aflu01i3n7kun1yw</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Ombox/styles.css</title>
    <ns>10</ns>
    <id>64417562</id>
    <revision>
      <id>966415833</id>
      <parentid>966415754</parentid>
      <timestamp>2019-06-21T17:43:44Z</timestamp>
      <contributor>
        <username>Ladsgroup</username>
        <id>28859</id>
      </contributor>
      <minor/>
      <comment>Protected "[[Template:Ombox/styles.css]]": High traffic page ([Edit=Allow only administrators] (indefinite) [Move=Allow only administrators] (indefinite))</comment>
      <model>sanitized-css</model>
      <format>text/css</format>
      <text xml:space="preserve" bytes="694">/* Other pages message box styles */
table.ombox {
	margin: 4px 10%;
	border-collapse: collapse;
	border: 1px solid #a2a9b1;       /* Default "notice" gray */
	background: #f8f9fa;
}

table.ombox-notice {
	border: 1px solid #a2a9b1;       /* Gray */
}
table.ombox-speedy {
	border: 2px solid #b22222;    /* Red */
	background: #fee;             /* Pink */
}
table.ombox-delete {
	border: 2px solid #b22222;    /* Red */
}
table.ombox-content {
	border: 1px solid #f28500;    /* Orange */
}
table.ombox-style {
	border: 1px solid #f4c430;    /* Yellow */
}
table.ombox-move {
	border: 1px solid #9932cc;    /* Purple */
}
table.ombox-protection {
	border: 2px solid #bba;       /* Gray-gold */
}</text>
      <sha1>fmjyvfhsnj0pwpvszd7twyjc6yzehsn</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Q</title>
    <ns>10</ns>
    <id>14832698</id>
    <revision>
      <id>806970746</id>
      <parentid>800664505</parentid>
      <timestamp>2018-12-07T18:10:48Z</timestamp>
      <contributor>
        <username>Jarekt</username>
        <id>1274</id>
      </contributor>
      <comment>simplify</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="563">{{label|{{{1|}}}|capitalization={{{capitalization|}}} |show_id=1 |link=wikidata}}&lt;noinclude&gt;{{documentation}}
&lt;templatedata&gt;
{
	"params": {
		"1": {
			"label": {
				"fr": "item",
				"en": "item"
			},
			"description": {
				"fr": "l'item à afficher",
				"en": "the item to show"
			},
			"type": "wiki-page-name",
			"required": true,
			"suggested": true
		}
	},
	"description": {
		"en": "Displays an item label in user language and a link to its wikipage",
		"fr": "Affiche le le label et un lien vers la page d'un item"
	}
}
&lt;/templatedata&gt;
&lt;/noinclude&gt;</text>
      <sha1>hhp6zxplb4l5a8fxjnj9afu8in5jr4v</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Reflist</title>
    <ns>10</ns>
    <id>15117330</id>
    <revision>
      <id>50354815</id>
      <timestamp>2013-06-13T06:00:13Z</timestamp>
      <contributor>
        <username>GZWDer</username>
        <id>175070</id>
      </contributor>
      <comment>Created page with "&lt;div class="reflist &lt;!--  --&gt;{{#if: {{{1|}}}     | {{#iferror: {{#ifexpr: {{{1|1}}} &gt; 1 }}       | references-column-width        | references-column-count references-column-c..."</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="767">&lt;div class="reflist &lt;!--
 --&gt;{{#if: {{{1|}}}
    | {{#iferror: {{#ifexpr: {{{1|1}}} &gt; 1 }}
      | references-column-width 
      | references-column-count references-column-count-{{#if:1|{{{1}}}}} }}
    | {{#if: {{{colwidth|}}}
      | references-column-width }} }}" style="&lt;!--
 --&gt;{{#if: {{{1|}}}
    | {{#iferror: {{#ifexpr: {{{1|1}}} &gt; 1 }}
      | {{column-width|{{#if:1|{{{1}}}}}}}
      | {{column-count|{{#if:1|{{{1}}}}}}} }}
    | {{#if: {{{colwidth|}}}
      | {{column-width|{{{colwidth}}}}} }} }} list-style-type: &lt;!--
 --&gt;{{{liststyle|{{#switch: {{{group|}}}
    | upper-alpha
    | upper-roman
    | lower-alpha
    | lower-greek
    | lower-roman = {{{group}}}
    | #default = decimal}}}}};"&gt;
{{#tag:references|{{{refs|}}}|group={{{group|}}}}}&lt;/div&gt;</text>
      <sha1>a4ffeshkpm0ro8i4qlr6cu448vctoma</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Rellink</title>
    <ns>10</ns>
    <id>9023589</id>
    <revision>
      <id>17335641</id>
      <parentid>17335638</parentid>
      <timestamp>2013-03-31T03:40:39Z</timestamp>
      <contributor>
        <username>PinkAmpersand</username>
        <id>72907</id>
      </contributor>
      <minor/>
      <comment>5 revisions from [[:en:Template:Rellink]]: needed for [[Template:See also]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="140">&lt;div class="rellink{{#if:{{{extraclasses|}}}|&lt;nowiki&gt; &lt;/nowiki&gt;{{{extraclasses}}}}}"&gt;{{{1}}}&lt;/div&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>2324mokuqb4rybkh0qre9oyyqesbdvb</sha1>
    </revision>
  </page>
  <page>
    <title>Template:See also</title>
    <ns>10</ns>
    <id>9023514</id>
    <revision>
      <id>17335339</id>
      <parentid>17335337</parentid>
      <timestamp>2013-03-31T03:39:40Z</timestamp>
      <contributor>
        <username>PinkAmpersand</username>
        <id>72907</id>
      </contributor>
      <minor/>
      <comment>77 revisions from [[:en:Template:See also]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="2165">{{rellink|extraclasses=boilerplate seealso|{{{altphrase|See also}}}: {{#if:{{{1&lt;includeonly&gt;|&lt;/includeonly&gt;}}} |&lt;!--then:--&gt;[[:{{{1}}}{{#if:{{{label 1|{{{l1|}}}}}}|{{!}}{{{label 1|{{{l1}}}}}}}}]] |&lt;!--else:--&gt;'''Error: [[Template:See also|Template must be given at least one article name]]'''
}}{{#if:{{{2|}}}|{{#if:{{{3|}}}|, |&amp;nbsp;and }} [[:{{{2}}}{{#if:{{{label 2|{{{l2|}}}}}}|{{!}}{{{label 2|{{{l2}}}}}}}}]]
}}{{#if:{{{3|}}}|{{#if:{{{4|}}}|, |,&amp;nbsp;and }} [[:{{{3}}}{{#if:{{{label 3|{{{l3|}}}}}}|{{!}}{{{label 3|{{{l3}}}}}}}}]]
}}{{#if:{{{4|}}}|{{#if:{{{5|}}}|, |,&amp;nbsp;and }} [[:{{{4}}}{{#if:{{{label 4|{{{l4|}}}}}}|{{!}}{{{label 4|{{{l4}}}}}}}}]]
}}{{#if:{{{5|}}}|{{#if:{{{6|}}}|, |,&amp;nbsp;and }} [[:{{{5}}}{{#if:{{{label 5|{{{l5|}}}}}}|{{!}}{{{label 5|{{{l5}}}}}}}}]]
}}{{#if:{{{6|}}}|{{#if:{{{7|}}}|, |,&amp;nbsp;and }} [[:{{{6}}}{{#if:{{{label 6|{{{l6|}}}}}}|{{!}}{{{label 6|{{{l6}}}}}}}}]]
}}{{#if:{{{7|}}}|{{#if:{{{8|}}}|, |,&amp;nbsp;and }} [[:{{{7}}}{{#if:{{{label 7|{{{l7|}}}}}}|{{!}}{{{label 7|{{{l7}}}}}}}}]]
}}{{#if:{{{8|}}}|{{#if:{{{9|}}}|, |,&amp;nbsp;and }} [[:{{{8}}}{{#if:{{{label 8|{{{l8|}}}}}}|{{!}}{{{label 8|{{{l8}}}}}}}}]]
}}{{#if:{{{9|}}}|{{#if:{{{10|}}}|, |,&amp;nbsp;and }} [[:{{{9}}}{{#if:{{{label 9|{{{l9|}}}}}}|{{!}}{{{label 9|{{{l9}}}}}}}}]]
}}{{#if:{{{10|}}}|{{#if:{{{11|}}}|, |,&amp;nbsp;and }} [[:{{{10}}}{{#if:{{{label 10|{{{l10|}}}}}}|{{!}}{{{label 10|{{{l10}}}}}}}}]]
}}{{#if:{{{11|}}}|{{#if:{{{12|}}}|, |,&amp;nbsp;and }} [[:{{{11}}}{{#if:{{{label 11|{{{l11|}}}}}}|{{!}}{{{label 11|{{{l11}}}}}}}}]]
}}{{#if:{{{12|}}}|{{#if:{{{13|}}}|, |,&amp;nbsp;and }} [[:{{{12}}}{{#if:{{{label 12|{{{l12|}}}}}}|{{!}}{{{label 12|{{{l12}}}}}}}}]]
}}{{#if:{{{13|}}}|{{#if:{{{14|}}}|, |,&amp;nbsp;and }} [[:{{{13}}}{{#if:{{{label 13|{{{l13|}}}}}}|{{!}}{{{label 13|{{{l13}}}}}}}}]]
}}{{#if:{{{14|}}}|{{#if:{{{15|}}}|, |,&amp;nbsp;and }} [[:{{{14}}}{{#if:{{{label 14|{{{l14|}}}}}}|{{!}}{{{label 14|{{{l14}}}}}}}}]]
}}{{#if:{{{15|}}}|,&amp;nbsp;and [[:{{{15}}}{{#if:{{{label 15|{{{l15|}}} }}}|{{!}}{{{label 15|{{{l15|}}} }}} }}]]
}}{{#if:{{{16|}}}| &amp;mdash; '''&lt;br/&gt;Error: [[Template:See also|Too many links specified (maximum is 15)]]'''
}}}}&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>eot43r3pz980m26b40oh5jiriw1nfm0</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Userpage</title>
    <ns>10</ns>
    <id>13504</id>
    <revision>
      <id>422743542</id>
      <parentid>43303671</parentid>
      <timestamp>2016-12-30T21:39:51Z</timestamp>
      <contributor>
        <username>Rzuwig</username>
        <id>22642</id>
      </contributor>
      <minor/>
      <comment>Protected "[[Template:Userpage]]": High traffic page ([Edit=Allow only autoconfirmed users] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="218">{{Userpage/text/{{#ifexist:Template:Userpage/text/{{int:lang}}|{{int:lang}}|en}}}}&lt;noinclude&gt;
== See also ==
* [[Template:Userpage/text]] — translatable texts for this template
[[Category:User templates]]&lt;/noinclude&gt;</text>
      <sha1>ejp3ipwifvrc1aaruadxxg5zsoofge6</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Userpage/text/en</title>
    <ns>10</ns>
    <id>14851132</id>
    <revision>
      <id>314925141</id>
      <parentid>74029048</parentid>
      <timestamp>2016-03-23T17:16:18Z</timestamp>
      <contributor>
        <username>FuzzyBot</username>
        <id>8429</id>
      </contributor>
      <comment>Importing a new version from external source</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="938">&lt;noinclude&gt;&lt;languages/&gt;&lt;/noinclude&gt;{{ombox
 | style = width:100%; margin-left:0; margin-right:0; border:1px solid #ffc9c9; background-color:#FFFFF3; box-shadow:none; &lt;!--direction: {{Dir|{{{lang|}}}}} currently that does not work--&gt;
 | image = none
 | imageright = [[File:{{{file|Wikidata-logo.svg}}}|60px|alt=|link=|Wikidata]]
 | textstyle = text-align:center; font-size:85%;
 | text = '''This is a Wikidata user page.'''&lt;br /&gt;
If you find this page on any site other than Wikidata (www.wikidata.org), you are viewing a mirror site. Be aware that the page may be outdated, and that the user this page belongs to may have no personal affiliation with any site other than Wikidata itself. The original page is located at &lt;span class="plainlinks"&gt;[https://www.wikidata.org/wiki/{{FULLPAGENAMEE}} https://www.wikidata.org/wiki/{{FULLPAGENAMEE}}]&lt;/span&gt;.
}}&lt;noinclude&gt;{{#ifeq:{{PAGENAME}}|Userpage/text|[[Category:Subtemplates]]}}&lt;/noinclude&gt;</text>
      <sha1>7dneigcrpvsiyqx7o88wbcvpr3skno6</sha1>
    </revision>
  </page>
  <page>
    <title>Template:·</title>
    <ns>10</ns>
    <id>2284</id>
    <revision>
      <id>746672</id>
      <parentid>746607</parentid>
      <timestamp>2012-12-01T14:33:21Z</timestamp>
      <contributor>
        <username>Bene*</username>
        <id>1467</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for "[[Template:·]]": Highly used template (‎[edit=autoconfirmed] (indefinite) ‎[move=autoconfirmed] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="163">&lt;includeonly&gt;&lt;span style="font-weight:bold;"&gt;&amp;nbsp;·&lt;/span&gt; &lt;/includeonly&gt;&lt;noinclude&gt;{{documentation}}
[[Category:Formatting and function templates]]
&lt;/noinclude&gt;</text>
      <sha1>6df7b45n3jmpxg3xxfdb4aj21btw31x</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Arguments</title>
    <ns>828</ns>
    <id>20078637</id>
    <revision>
      <id>831428501</id>
      <parentid>647173593</parentid>
      <timestamp>2019-01-10T09:15:05Z</timestamp>
      <contributor>
        <username>Pasleim</username>
        <id>148056</id>
      </contributor>
      <comment>update from enwiki</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="10054">-- This module provides easy processing of arguments passed to Scribunto from
-- #invoke. It is intended for use by other Lua modules, and should not be
-- called from #invoke directly.

local libraryUtil = require('libraryUtil')
local checkType = libraryUtil.checkType

local arguments = {}

-- Generate four different tidyVal functions, so that we don't have to check the
-- options every time we call it.

local function tidyValDefault(key, val)
	if type(val) == 'string' then
		val = val:match('^%s*(.-)%s*$')
		if val == '' then
			return nil
		else
			return val
		end
	else
		return val
	end
end

local function tidyValTrimOnly(key, val)
	if type(val) == 'string' then
		return val:match('^%s*(.-)%s*$')
	else
		return val
	end
end

local function tidyValRemoveBlanksOnly(key, val)
	if type(val) == 'string' then
		if val:find('%S') then
			return val
		else
			return nil
		end
	else
		return val
	end
end

local function tidyValNoChange(key, val)
	return val
end

local function matchesTitle(given, title)
	local tp = type( given )
	return (tp == 'string' or tp == 'number') and mw.title.new( given ).prefixedText == title
end

local translate_mt = { __index = function(t, k) return k end }

function arguments.getArgs(frame, options)
	checkType('getArgs', 1, frame, 'table', true)
	checkType('getArgs', 2, options, 'table', true)
	frame = frame or {}
	options = options or {}

	--[[
	-- Set up argument translation.
	--]]
	options.translate = options.translate or {}
	if getmetatable(options.translate) == nil then
		setmetatable(options.translate, translate_mt)
	end
	if options.backtranslate == nil then
		options.backtranslate = {}
		for k,v in pairs(options.translate) do
			options.backtranslate[v] = k
		end
	end
	if options.backtranslate and getmetatable(options.backtranslate) == nil then
		setmetatable(options.backtranslate, {
			__index = function(t, k)
				if options.translate[k] ~= k then
					return nil
				else
					return k
				end
			end
		})
	end

	--[[
	-- Get the argument tables. If we were passed a valid frame object, get the
	-- frame arguments (fargs) and the parent frame arguments (pargs), depending
	-- on the options set and on the parent frame's availability. If we weren't
	-- passed a valid frame object, we are being called from another Lua module
	-- or from the debug console, so assume that we were passed a table of args
	-- directly, and assign it to a new variable (luaArgs).
	--]]
	local fargs, pargs, luaArgs
	if type(frame.args) == 'table' and type(frame.getParent) == 'function' then
		if options.wrappers then
			--[[
			-- The wrappers option makes Module:Arguments look up arguments in
			-- either the frame argument table or the parent argument table, but
			-- not both. This means that users can use either the #invoke syntax
			-- or a wrapper template without the loss of performance associated
			-- with looking arguments up in both the frame and the parent frame.
			-- Module:Arguments will look up arguments in the parent frame
			-- if it finds the parent frame's title in options.wrapper;
			-- otherwise it will look up arguments in the frame object passed
			-- to getArgs.
			--]]
			local parent = frame:getParent()
			if not parent then
				fargs = frame.args
			else
				local title = parent:getTitle():gsub('/sandbox$', '')
				local found = false
				if matchesTitle(options.wrappers, title) then
					found = true
				elseif type(options.wrappers) == 'table' then
					for _,v in pairs(options.wrappers) do
						if matchesTitle(v, title) then
							found = true
							break
						end
					end
				end

				-- We test for false specifically here so that nil (the default) acts like true.
				if found or options.frameOnly == false then
					pargs = parent.args
				end
				if not found or options.parentOnly == false then
					fargs = frame.args
				end
			end
		else
			-- options.wrapper isn't set, so check the other options.
			if not options.parentOnly then
				fargs = frame.args
			end
			if not options.frameOnly then
				local parent = frame:getParent()
				pargs = parent and parent.args or nil
			end
		end
		if options.parentFirst then
			fargs, pargs = pargs, fargs
		end
	else
		luaArgs = frame
	end

	-- Set the order of precedence of the argument tables. If the variables are
	-- nil, nothing will be added to the table, which is how we avoid clashes
	-- between the frame/parent args and the Lua args.
	local argTables = {fargs}
	argTables[#argTables + 1] = pargs
	argTables[#argTables + 1] = luaArgs

	--[[
	-- Generate the tidyVal function. If it has been specified by the user, we
	-- use that; if not, we choose one of four functions depending on the
	-- options chosen. This is so that we don't have to call the options table
	-- every time the function is called.
	--]]
	local tidyVal = options.valueFunc
	if tidyVal then
		if type(tidyVal) ~= 'function' then
			error(
				"bad value assigned to option 'valueFunc'"
					.. '(function expected, got '
					.. type(tidyVal)
					.. ')',
				2
			)
		end
	elseif options.trim ~= false then
		if options.removeBlanks ~= false then
			tidyVal = tidyValDefault
		else
			tidyVal = tidyValTrimOnly
		end
	else
		if options.removeBlanks ~= false then
			tidyVal = tidyValRemoveBlanksOnly
		else
			tidyVal = tidyValNoChange
		end
	end

	--[[
	-- Set up the args, metaArgs and nilArgs tables. args will be the one
	-- accessed from functions, and metaArgs will hold the actual arguments. Nil
	-- arguments are memoized in nilArgs, and the metatable connects all of them
	-- together.
	--]]
	local args, metaArgs, nilArgs, metatable = {}, {}, {}, {}
	setmetatable(args, metatable)

	local function mergeArgs(tables)
		--[[
		-- Accepts multiple tables as input and merges their keys and values
		-- into one table. If a value is already present it is not overwritten;
		-- tables listed earlier have precedence. We are also memoizing nil
		-- values, which can be overwritten if they are 's' (soft).
		--]]
		for _, t in ipairs(tables) do
			for key, val in pairs(t) do
				if metaArgs[key] == nil and nilArgs[key] ~= 'h' then
					local tidiedVal = tidyVal(key, val)
					if tidiedVal == nil then
						nilArgs[key] = 's'
					else
						metaArgs[key] = tidiedVal
					end
				end
			end
		end
	end

	--[[
	-- Define metatable behaviour. Arguments are memoized in the metaArgs table,
	-- and are only fetched from the argument tables once. Fetching arguments
	-- from the argument tables is the most resource-intensive step in this
	-- module, so we try and avoid it where possible. For this reason, nil
	-- arguments are also memoized, in the nilArgs table. Also, we keep a record
	-- in the metatable of when pairs and ipairs have been called, so we do not
	-- run pairs and ipairs on the argument tables more than once. We also do
	-- not run ipairs on fargs and pargs if pairs has already been run, as all
	-- the arguments will already have been copied over.
	--]]

	metatable.__index = function (t, key)
		--[[
		-- Fetches an argument when the args table is indexed. First we check
		-- to see if the value is memoized, and if not we try and fetch it from
		-- the argument tables. When we check memoization, we need to check
		-- metaArgs before nilArgs, as both can be non-nil at the same time.
		-- If the argument is not present in metaArgs, we also check whether
		-- pairs has been run yet. If pairs has already been run, we return nil.
		-- This is because all the arguments will have already been copied into
		-- metaArgs by the mergeArgs function, meaning that any other arguments
		-- must be nil.
		--]]
		if type(key) == 'string' then
			key = options.translate[key]
		end
		local val = metaArgs[key]
		if val ~= nil then
			return val
		elseif metatable.donePairs or nilArgs[key] then
			return nil
		end
		for _, argTable in ipairs(argTables) do
			local argTableVal = tidyVal(key, argTable[key])
			if argTableVal ~= nil then
				metaArgs[key] = argTableVal
				return argTableVal
			end
		end
		nilArgs[key] = 'h'
		return nil
	end

	metatable.__newindex = function (t, key, val)
		-- This function is called when a module tries to add a new value to the
		-- args table, or tries to change an existing value.
		if type(key) == 'string' then
			key = options.translate[key]
		end
		if options.readOnly then
			error(
				'could not write to argument table key "'
					.. tostring(key)
					.. '"; the table is read-only',
				2
			)
		elseif options.noOverwrite and args[key] ~= nil then
			error(
				'could not write to argument table key "'
					.. tostring(key)
					.. '"; overwriting existing arguments is not permitted',
				2
			)
		elseif val == nil then
			--[[
			-- If the argument is to be overwritten with nil, we need to erase
			-- the value in metaArgs, so that __index, __pairs and __ipairs do
			-- not use a previous existing value, if present; and we also need
			-- to memoize the nil in nilArgs, so that the value isn't looked
			-- up in the argument tables if it is accessed again.
			--]]
			metaArgs[key] = nil
			nilArgs[key] = 'h'
		else
			metaArgs[key] = val
		end
	end

	local function translatenext(invariant)
		local k, v = next(invariant.t, invariant.k)
		invariant.k = k
		if k == nil then
			return nil
		elseif type(k) ~= 'string' or not options.backtranslate then
			return k, v
		else
			local backtranslate = options.backtranslate[k]
			if backtranslate == nil then
				-- Skip this one. This is a tail call, so this won't cause stack overflow
				return translatenext(invariant)
			else
				return backtranslate, v
			end
		end
	end

	metatable.__pairs = function ()
		-- Called when pairs is run on the args table.
		if not metatable.donePairs then
			mergeArgs(argTables)
			metatable.donePairs = true
		end
		return translatenext, { t = metaArgs }
	end

	local function inext(t, i)
		-- This uses our __index metamethod
		local v = t[i + 1]
		if v ~= nil then
			return i + 1, v
		end
	end

	metatable.__ipairs = function (t)
		-- Called when ipairs is run on the args table.
		return inext, t, 0
	end

	return args
end

return arguments</text>
      <sha1>5qx9tzlul9ser30uxj9nbasjt92cevn</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Category handler</title>
    <ns>828</ns>
    <id>16757112</id>
    <revision>
      <id>647173599</id>
      <parentid>647173598</parentid>
      <timestamp>2018-03-10T10:00:49Z</timestamp>
      <contributor>
        <username>Mbch331</username>
        <id>69441</id>
      </contributor>
      <minor/>
      <comment>3 revisions imported from [[:en:Module:Category_handler]]: https://www.wikidata.org/w/index.php?title=Wikidata:Administrators%27_noticeboard&amp;oldid=647164909#Request_to_import_template:Cite_Q_from_ENWP</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="7871">--------------------------------------------------------------------------------
--                                                                            --
--                              CATEGORY HANDLER                              --
--                                                                            --
--      This module implements the {{category handler}} template in Lua,      --
--      with a few improvements: all namespaces and all namespace aliases     --
--      are supported, and namespace names are detected automatically for     --
--      the local wiki. This module requires [[Module:Namespace detect]]      --
--      and [[Module:Yesno]] to be available on the local wiki. It can be     --
--      configured for different wikis by altering the values in              --
--      [[Module:Category handler/config]], and pages can be blacklisted      --
--      from categorisation by using [[Module:Category handler/blacklist]].   --
--                                                                            --
--------------------------------------------------------------------------------

-- Load required modules
local yesno = require('Module:Yesno')

-- Lazily load things we don't always need
local mShared, mappings

local p = {}

--------------------------------------------------------------------------------
-- Helper functions
--------------------------------------------------------------------------------

local function trimWhitespace(s, removeBlanks)
	if type(s) ~= 'string' then
		return s
	end
	s = s:match('^%s*(.-)%s*$')
	if removeBlanks then
		if s ~= '' then
			return s
		else
			return nil
		end
	else
		return s
	end
end

--------------------------------------------------------------------------------
-- CategoryHandler class
--------------------------------------------------------------------------------

local CategoryHandler = {}
CategoryHandler.__index = CategoryHandler

function CategoryHandler.new(data, args)
	local obj = setmetatable({ _data = data, _args = args }, CategoryHandler)
	
	-- Set the title object
	do
		local pagename = obj:parameter('demopage')
		local success, titleObj
		if pagename then
			success, titleObj = pcall(mw.title.new, pagename)
		end
		if success and titleObj then
			obj.title = titleObj
			if titleObj == mw.title.getCurrentTitle() then
				obj._usesCurrentTitle = true
			end
		else
			obj.title = mw.title.getCurrentTitle()
			obj._usesCurrentTitle = true
		end
	end

	-- Set suppression parameter values
	for _, key in ipairs{'nocat', 'categories'} do
		local value = obj:parameter(key)
		value = trimWhitespace(value, true)
		obj['_' .. key] = yesno(value)
	end
	do
		local subpage = obj:parameter('subpage')
		local category2 = obj:parameter('category2')
		if type(subpage) == 'string' then
			subpage = mw.ustring.lower(subpage)
		end
		if type(category2) == 'string' then
			subpage = mw.ustring.lower(category2)
		end
		obj._subpage = trimWhitespace(subpage, true)
		obj._category2 = trimWhitespace(category2) -- don't remove blank values
	end
	return obj
end

function CategoryHandler:parameter(key)
	local parameterNames = self._data.parameters[key]
	local pntype = type(parameterNames)
	if pntype == 'string' or pntype == 'number' then
		return self._args[parameterNames]
	elseif pntype == 'table' then
		for _, name in ipairs(parameterNames) do
			local value = self._args[name]
			if value ~= nil then
				return value
			end
		end
		return nil
	else
		error(string.format(
			'invalid config key "%s"',
			tostring(key)
		), 2)
	end
end

function CategoryHandler:isSuppressedByArguments()
	return
		-- See if a category suppression argument has been set.
		self._nocat == true
		or self._categories == false
		or (
			self._category2
			and self._category2 ~= self._data.category2Yes
			and self._category2 ~= self._data.category2Negative
		)

		-- Check whether we are on a subpage, and see if categories are
		-- suppressed based on our subpage status.
		or self._subpage == self._data.subpageNo and self.title.isSubpage
		or self._subpage == self._data.subpageOnly and not self.title.isSubpage
end

function CategoryHandler:shouldSkipBlacklistCheck()
	-- Check whether the category suppression arguments indicate we
	-- should skip the blacklist check.
	return self._nocat == false
		or self._categories == true
		or self._category2 == self._data.category2Yes
end

function CategoryHandler:matchesBlacklist()
	if self._usesCurrentTitle then
		return self._data.currentTitleMatchesBlacklist
	else
		mShared = mShared or require('Module:Category handler/shared')
		return mShared.matchesBlacklist(
			self.title.prefixedText,
			mw.loadData('Module:Category handler/blacklist')
		)
	end
end

function CategoryHandler:isSuppressed()
	-- Find if categories are suppressed by either the arguments or by
	-- matching the blacklist.
	return self:isSuppressedByArguments()
		or not self:shouldSkipBlacklistCheck() and self:matchesBlacklist()
end

function CategoryHandler:getNamespaceParameters()
	if self._usesCurrentTitle then
		return self._data.currentTitleNamespaceParameters
	else
		if not mappings then
			mShared = mShared or require('Module:Category handler/shared')
			mappings = mShared.getParamMappings(true) -- gets mappings with mw.loadData
		end
		return mShared.getNamespaceParameters(
			self.title,
			mappings
		)
	end
end

function CategoryHandler:namespaceParametersExist()
	-- Find whether any namespace parameters have been specified.
	-- We use the order "all" --&gt; namespace params --&gt; "other" as this is what
	-- the old template did.
	if self:parameter('all') then
		return true
	end
	if not mappings then
		mShared = mShared or require('Module:Category handler/shared')
		mappings = mShared.getParamMappings(true) -- gets mappings with mw.loadData
	end
	for ns, params in pairs(mappings) do
		for i, param in ipairs(params) do
			if self._args[param] then
				return true
			end
		end
	end
	if self:parameter('other') then
		return true
	end
	return false
end

function CategoryHandler:getCategories()
	local params = self:getNamespaceParameters()
	local nsCategory
	for i, param in ipairs(params) do
		local value = self._args[param]
		if value ~= nil then
			nsCategory = value
			break
		end
	end
	if nsCategory ~= nil or self:namespaceParametersExist() then
		-- Namespace parameters exist - advanced usage.
		if nsCategory == nil then
			nsCategory = self:parameter('other')
		end
		local ret = {self:parameter('all')}
		local numParam = tonumber(nsCategory)
		if numParam and numParam &gt;= 1 and math.floor(numParam) == numParam then
			-- nsCategory is an integer
			ret[#ret + 1] = self._args[numParam]
		else
			ret[#ret + 1] = nsCategory
		end
		if #ret &lt; 1 then
			return nil
		else
			return table.concat(ret)
		end
	elseif self._data.defaultNamespaces[self.title.namespace] then
		-- Namespace parameters don't exist, simple usage.
		return self._args[1]
	end
	return nil
end

--------------------------------------------------------------------------------
-- Exports
--------------------------------------------------------------------------------

local p = {}

function p._exportClasses()
	-- Used for testing purposes.
	return {
		CategoryHandler = CategoryHandler
	}
end

function p._main(args, data)
	data = data or mw.loadData('Module:Category handler/data')
	local handler = CategoryHandler.new(data, args)
	if handler:isSuppressed() then
		return nil
	end
	return handler:getCategories()
end

function p.main(frame, data)
	data = data or mw.loadData('Module:Category handler/data')
	local args = require('Module:Arguments').getArgs(frame, {
		wrappers = data.wrappers,
		valueFunc = function (k, v)
			v = trimWhitespace(v)
			if type(k) == 'number' then
				if v ~= '' then
					return v
				else
					return nil
				end
			else
				return v
			end
		end
	})
	return p._main(args, data)
end

return p</text>
      <sha1>letwavu3yvlayfzew66uuwixmwebq5b</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Category handler/blacklist</title>
    <ns>828</ns>
    <id>51354318</id>
    <revision>
      <id>647173610</id>
      <parentid>647173608</parentid>
      <timestamp>2018-03-10T10:00:49Z</timestamp>
      <contributor>
        <username>Mbch331</username>
        <id>69441</id>
      </contributor>
      <minor/>
      <comment>6 revisions imported from [[:en:Module:Category_handler/blacklist]]: https://www.wikidata.org/w/index.php?title=Wikidata:Administrators%27_noticeboard&amp;oldid=647164909#Request_to_import_template:Cite_Q_from_ENWP</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="764">-- This module contains the blacklist used by [[Module:Category handler]].
-- Pages that match Lua patterns in this list will not be categorised unless
-- categorisation is explicitly requested.

return {
	'^Main Page$', -- don't categorise the main page.

	-- Don't categorise the following pages or their subpages.
	-- "%f[/\0]" matches if the next character is "/" or the end of the string.
	'^Wikipedia:Cascade%-protected items%f[/\0]',
	'^User:UBX%f[/\0]', -- The userbox "template" space.
	'^User talk:UBX%f[/\0]',

	-- Don't categorise subpages of these pages, but allow
	-- categorisation of the base page.
	'^Wikipedia:Template messages/.*$',

	-- Don't categorise archives.
	'/[aA]rchive',
	"^Wikipedia:Administrators' noticeboard/IncidentArchive%d+$",
}</text>
      <sha1>hwue3i1eua4tsdxlsbcs4f5syudywbe</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Category handler/config</title>
    <ns>828</ns>
    <id>51354319</id>
    <revision>
      <id>647173626</id>
      <parentid>647173625</parentid>
      <timestamp>2018-03-10T10:00:50Z</timestamp>
      <contributor>
        <username>Mbch331</username>
        <id>69441</id>
      </contributor>
      <minor/>
      <comment>13 revisions imported from [[:en:Module:Category_handler/config]]: https://www.wikidata.org/w/index.php?title=Wikidata:Administrators%27_noticeboard&amp;oldid=647164909#Request_to_import_template:Cite_Q_from_ENWP</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="5755">--------------------------------------------------------------------------------
--            [[Module:Category handler]] configuration data                  --
--       Language-specific parameter names and values can be set here.        --
--       For blacklist config, see [[Module:Category handler/blacklist]].     --
--------------------------------------------------------------------------------

local cfg = {} -- Don't edit this line.

--------------------------------------------------------------------------------
--                       Start configuration data                             --
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
--                              Parameter names                               --
-- These configuration items specify custom parameter names.                  --
-- To add one extra name, you can use this format:                            --
--                                                                            --
-- foo = 'parameter name',                                                    --
--                                                                            --
-- To add multiple names, you can use this format:                            --
--                                                                            --
-- foo = {'parameter name 1', 'parameter name 2', 'parameter name 3'},        --
--------------------------------------------------------------------------------

cfg.parameters = {
	
	-- The nocat and categories parameter suppress
	-- categorisation. They are used with Module:Yesno, and work as follows:
	--
	-- cfg.nocat:
	-- Result of yesno()                        Effect
	-- true                                     Categorisation is suppressed
	-- false                                    Categorisation is allowed, and
	--                                          the blacklist check is skipped
	-- nil                                      Categorisation is allowed
	--
	-- cfg.categories:
	-- Result of yesno()                        Effect
	-- true                                     Categorisation is allowed, and
	--                                          the blacklist check is skipped
	-- false                                    Categorisation is suppressed
	-- nil                                      Categorisation is allowed
	nocat = 'nocat',
	categories = 'categories',
	
	-- The parameter name for the legacy "category2" parameter. This skips the
	-- blacklist if set to the cfg.category2Yes value, and suppresses
	-- categorisation if present but equal to anything other than
	-- cfg.category2Yes or cfg.category2Negative.
	category2 = 'category2',
	
	-- cfg.subpage is the parameter name to specify how to behave on subpages.
	subpage = 'subpage',
	
	-- The parameter for data to return in all namespaces.
	all = 'all',
	
	-- The parameter name for data to return if no data is specified for the
	-- namespace that is detected.
	other = 'other',
	
	-- The parameter name used to specify a page other than the current page;
	-- used for testing and demonstration.
	demopage = 'page',
}

--------------------------------------------------------------------------------
--                              Parameter values                              --
-- These are set values that can be used with certain parameters. Only one    --
-- value can be specified, like this:                                         --
--                                                                            --
-- cfg.foo = 'value name'                                                     --                                               --
--------------------------------------------------------------------------------

-- The following settings are used with the cfg.category2 parameter. Setting
-- cfg.category2 to cfg.category2Yes skips the blacklist, and if cfg.category2
-- is present but equal to anything other than cfg.category2Yes or
-- cfg.category2Negative then it supresses cateogrisation.
cfg.category2Yes = 'yes'
cfg.category2Negative = '¬'

-- The following settings are used with the cfg.subpage parameter.
-- cfg.subpageNo is the value to specify to not categorise on subpages;
-- cfg.subpageOnly is the value to specify to only categorise on subpages.
cfg.subpageNo = 'no'
cfg.subpageOnly = 'only'

--------------------------------------------------------------------------------
--                           Default namespaces                               --
-- This is a table of namespaces to categorise by default. The keys are the   --
-- namespace numbers.                                                         --
--------------------------------------------------------------------------------

cfg.defaultNamespaces = {
	[  0] = true, -- main
	[  6] = true, -- file
	[ 12] = true, -- help
	[ 14] = true, -- category
	[100] = true, -- portal
	[108] = true, -- book
}

--------------------------------------------------------------------------------
--                                Wrappers                                    --
-- This is a wrapper template or a list of wrapper templates to be passed to  --
-- [[Module:Arguments]].                                                      --
--------------------------------------------------------------------------------

cfg.wrappers = 'Template:Category handler'

--------------------------------------------------------------------------------
--                           End configuration data                           --
--------------------------------------------------------------------------------

return cfg -- Don't edit this line.</text>
      <sha1>6ga9hbq2pdwalsvx68i53dmbr421rq5</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Category handler/data</title>
    <ns>828</ns>
    <id>51354320</id>
    <revision>
      <id>647173633</id>
      <parentid>647173632</parentid>
      <timestamp>2018-03-10T10:00:50Z</timestamp>
      <contributor>
        <username>Mbch331</username>
        <id>69441</id>
      </contributor>
      <minor/>
      <comment>5 revisions imported from [[:en:Module:Category_handler/data]]: https://www.wikidata.org/w/index.php?title=Wikidata:Administrators%27_noticeboard&amp;oldid=647164909#Request_to_import_template:Cite_Q_from_ENWP</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="631">-- This module assembles data to be passed to [[Module:Category handler]] using
-- mw.loadData. This includes the configuration data and whether the current
-- page matches the title blacklist.

local data = require('Module:Category handler/config')
local mShared = require('Module:Category handler/shared')
local blacklist = require('Module:Category handler/blacklist')
local title = mw.title.getCurrentTitle()

data.currentTitleMatchesBlacklist = mShared.matchesBlacklist(
	title.prefixedText,
	blacklist
)

data.currentTitleNamespaceParameters = mShared.getNamespaceParameters(
	title,
	mShared.getParamMappings()
)

return data</text>
      <sha1>k26mwixuaeijisfddb0sxkg82iux8v4</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Category handler/shared</title>
    <ns>828</ns>
    <id>51354321</id>
    <revision>
      <id>647173642</id>
      <parentid>647173641</parentid>
      <timestamp>2018-03-10T10:00:50Z</timestamp>
      <contributor>
        <username>Mbch331</username>
        <id>69441</id>
      </contributor>
      <minor/>
      <comment>7 revisions imported from [[:en:Module:Category_handler/shared]]: https://www.wikidata.org/w/index.php?title=Wikidata:Administrators%27_noticeboard&amp;oldid=647164909#Request_to_import_template:Cite_Q_from_ENWP</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="888">-- This module contains shared functions used by [[Module:Category handler]]
-- and its submodules.

local p = {}

function p.matchesBlacklist(page, blacklist)
	for i, pattern in ipairs(blacklist) do
		local match = mw.ustring.match(page, pattern)
		if match then
			return true
		end
	end
	return false
end

function p.getParamMappings(useLoadData)
	local dataPage = 'Module:Namespace detect/data'
	if useLoadData then
		return mw.loadData(dataPage).mappings
	else
		return require(dataPage).mappings
	end
end

function p.getNamespaceParameters(titleObj, mappings)
	-- We don't use title.nsText for the namespace name because it adds
	-- underscores.
	local mappingsKey
	if titleObj.isTalkPage then
		mappingsKey = 'talk'
	else
		mappingsKey = mw.site.namespaces[titleObj.namespace].name
	end
	mappingsKey = mw.ustring.lower(mappingsKey)
	return mappings[mappingsKey] or {}
end

return p</text>
      <sha1>omlsnhudxz6juptvtxz7ns97jutbzc5</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Check isxn</title>
    <ns>828</ns>
    <id>29795690</id>
    <revision>
      <id>423113850</id>
      <timestamp>2017-01-01T02:39:56Z</timestamp>
      <contributor>
        <username>Koavf</username>
        <id>7083</id>
      </contributor>
      <comment>port from en.wp</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="5972">-- This template is a copy of the ISXN validation code from [[Module:Citation/CS1]]
-- which allows for validating ISBN, ISMN, and ISSN without invoking a citation template

local p = {}

--[[--------------------------&lt; IS _ V A L I D _ I S X N &gt;-----------------------------------------------------

ISBN-10 and ISSN validator code calculates checksum across all isbn/issn digits including the check digit. ISBN-13 is checked in check_isbn().
If the number is valid the result will be 0. Before calling this function, issbn/issn must be checked for length and stripped of dashes,
spaces and other non-isxn characters.

]]

local function is_valid_isxn (isxn_str, len)
	local temp = 0;
	isxn_str = { isxn_str:byte(1, len) };	-- make a table of byte values '0' → 0x30 .. '9'  → 0x39, 'X' → 0x58
	len = len+1;							-- adjust to be a loop counter
	for i, v in ipairs( isxn_str ) do		-- loop through all of the bytes and calculate the checksum
		if v == string.byte( "X" ) then		-- if checkdigit is X (compares the byte value of 'X' which is 0x58)
			temp = temp + 10*( len - i );	-- it represents 10 decimal
		else
			temp = temp + tonumber( string.char(v) )*(len-i);
		end
	end
	return temp % 11 == 0;					-- returns true if calculation result is zero
end


--[[--------------------------&lt; IS _ V A L I D _ I S X N  _ 1 3 &gt;----------------------------------------------

ISBN-13 and ISMN validator code calculates checksum across all 13 isbn/ismn digits including the check digit.
If the number is valid, the result will be 0. Before calling this function, isbn-13/ismn must be checked for length
and stripped of dashes, spaces and other non-isxn-13 characters.

]]

local function is_valid_isxn_13 (isxn_str)
	local temp=0;
	
	isxn_str = { isxn_str:byte(1, 13) };										-- make a table of byte values '0' → 0x30 .. '9'  → 0x39
	for i, v in ipairs( isxn_str ) do
		temp = temp + (3 - 2*(i % 2)) * tonumber( string.char(v) );				-- multiply odd index digits by 1, even index digits by 3 and sum; includes check digit
	end
	return temp % 10 == 0;														-- sum modulo 10 is zero when isbn-13/ismn is correct
end

--[[--------------------------&lt; C H E C K _ I S B N &gt;------------------------------------------------------------

Determines whether an ISBN string is valid

]]

local function check_isbn( isbn_str, error_string )
	if nil ~= isbn_str:match("[^%s-0-9X]") then -- fail if isbn_str contains anything but digits, hyphens, or the uppercase X
		return error_string;
	end
	isbn_str = isbn_str:gsub( "-", "" ):gsub( " ", "" );	-- remove hyphens and spaces
	local len = isbn_str:len();
 
	if len ~= 10 and len ~= 13 then
		return error_string;
	end

	if len == 10 then
		if isbn_str:match( "^%d*X?$" ) == nil then 
			return error_string; 
		end
		return is_valid_isxn(isbn_str, 10) and '' or error_string;
	else
		local temp = 0;
		if isbn_str:match( "^97[89]%d*$" ) == nil then -- isbn13 begins with 978 or 979; ismn begins with 979
			return error_string; 
		end
		return is_valid_isxn_13 (isbn_str) and '' or error_string;
	end
end

--[[--------------------------&lt; C H E C K _ I S M N &gt;------------------------------------------------------------

Determines whether an ISMN string is valid.  Similar to isbn-13, ismn is 13 digits begining 979-0-... and uses the
same check digit calculations.  See http://www.ismn-international.org/download/Web_ISMN_Users_Manual_2008-6.pdf
section 2, pages 9–12.

]]

local function check_ismn (id, error_string)
	local text;
	local valid_ismn = true;

	id=id:gsub( "[%s-–]", "" );													-- strip spaces, hyphens, and endashes from the ismn

	if 13 ~= id:len() or id:match( "^9790%d*$" ) == nil then					-- ismn must be 13 digits and begin 9790
		valid_ismn = false;
	else
		valid_ismn=is_valid_isxn_13 (id);										-- validate ismn
	end

	return valid_ismn and '' or error_string
end

--[[--------------------------&lt; I S S N &gt;----------------------------------------------------------------------

Validate and format an issn.  This code fixes the case where an editor has included an ISSN in the citation but has separated the two groups of four
digits with a space.  When that condition occurred, the resulting link looked like this:

	|issn=0819 4327 gives: [http://www.worldcat.org/issn/0819 4327 0819 4327]  -- can't have spaces in an external link
	
This code now prevents that by inserting a hyphen at the issn midpoint.  It also validates the issn for length and makes sure that the checkdigit agrees
with the calculated value.  Incorrect length (8 digits), characters other than 0-9 and X, or checkdigit / calculated value mismatch will all cause a check issn
error message.

]]

local function check_issn(id, error_string)
	local issn_copy = id;		-- save a copy of unadulterated issn; use this version for display if issn does not validate
	local text;
	local valid_issn = true;

	if not id:match ('^%d%d%d%d%-%d%d%d[%dX]$') then
		return error_string;
	end
	
	id=id:gsub( "[%s-–]", "" );									-- strip spaces, hyphens, and endashes from the issn

	if 8 ~= id:len() or nil == id:match( "^%d*X?$" ) then		-- validate the issn: 8 digits long, containing only 0-9 or X in the last position
		valid_issn=false;										-- wrong length or improper character
	else
		valid_issn=is_valid_isxn(id, 8);						-- validate issn
	end

	return valid_issn and '' or error_string
end


------------------------------&lt; E N T R Y   P O I N T S &gt;--------------------------------------------------====

function p.check_isbn(frame)
	return check_isbn(frame.args[1] or frame:getParent().args[1], frame.args['error'] or frame:getParent().args['error'] or 'error')
end

function p.check_ismn(frame)
	return check_ismn(frame.args[1] or frame:getParent().args[1], frame.args['error'] or frame:getParent().args['error'] or 'error')
end

function p.check_issn(frame)
	return check_issn(frame.args[1] or frame:getParent().args[1], frame.args['error'] or frame:getParent().args['error'] or 'error')
end

return p</text>
      <sha1>m39a8k5gmtbg6x3k2f7rizj3jk5on20</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Citation/CS1</title>
    <ns>828</ns>
    <id>19187474</id>
    <revision>
      <id>647173704</id>
      <parentid>647173703</parentid>
      <timestamp>2018-03-10T10:00:53Z</timestamp>
      <contributor>
        <username>Mbch331</username>
        <id>69441</id>
      </contributor>
      <minor/>
      <comment>48 revisions imported from [[:en:Module:Citation/CS1]]: https://www.wikidata.org/w/index.php?title=Wikidata:Administrators%27_noticeboard&amp;oldid=647164909#Request_to_import_template:Cite_Q_from_ENWP</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="164808">
local cs1 ={};

--[[--------------------------&lt; F O R W A R D   D E C L A R A T I O N S &gt;--------------------------------------
]]

local dates, year_date_check, reformat_dates, date_hyphen_to_dash,				-- functions in Module:Citation/CS1/Date_validation
	date_name_xlate

local is_set, in_array, substitute, error_comment, set_error, select_one,		-- functions in Module:Citation/CS1/Utilities
	add_maint_cat, wrap_style, safe_for_italics, is_wikilink, make_wikilink;

local z ={};																	-- tables in Module:Citation/CS1/Utilities

local extract_ids, extract_id_access_levels, build_id_list, is_embargoed;		-- functions in Module:Citation/CS1/Identifiers

local make_coins_title, get_coins_pages, COinS;									-- functions in Module:Citation/CS1/COinS

local cfg = {};																	-- table of configuration tables that are defined in Module:Citation/CS1/Configuration
local whitelist = {};															-- table of tables listing valid template parameter names; defined in Module:Citation/CS1/Whitelist


--[[--------------------------&lt; P A G E   S C O P E   V A R I A B L E S &gt;--------------------------------------

delare variables here that have page-wide scope that are not brought in from other modules; thatare created here
and used here

]]

local added_deprecated_cat;														-- boolean flag so that the category is added only once
local added_prop_cats = {};														-- list of property categories that have been added to z.properties_cats
local added_vanc_errs;															-- boolean flag so we only emit one Vancouver error / category

local Frame;																	-- holds the module's frame table


--[[--------------------------&lt; F I R S T _ S E T &gt;------------------------------------------------------------

Locates and returns the first set value in a table of values where the order established in the table,
left-to-right (or top-to-bottom), is the order in which the values are evaluated.  Returns nil if none are set.

This version replaces the original 'for _, val in pairs do' and a similar version that used ipairs.  With the pairs
version the order of evaluation could not be guaranteed.  With the ipairs version, a nil value would terminate
the for-loop before it reached the actual end of the list.

]]

local function first_set (list, count)
	local i = 1;
	while i &lt;= count do															-- loop through all items in list
		if is_set( list[i] ) then
			return list[i];														-- return the first set list member
		end
		i = i + 1;																-- point to next
	end
end


--[[--------------------------&lt; A D D _ P R O P _ C A T &gt;--------------------------------------------------------

Adds a category to z.properties_cats using names from the configuration file with additional text if any.

foreign_lang_source and foreign_lang_source_2 keys have a language code appended to them so that multiple languages
may be categorized but multiples of the same language are not categorized.

added_prop_cats is a table declared in page scope variables above

]]

local function add_prop_cat (key, arguments)
	if not added_prop_cats [key] then
		added_prop_cats [key] = true;											-- note that we've added this category
		key = key:gsub ('(foreign_lang_source_?2?)%a%a%a?', '%1');				-- strip lang code from keyname
		table.insert( z.properties_cats, substitute (cfg.prop_cats [key], arguments));		-- make name then add to table
	end
end


--[[--------------------------&lt; A D D _ V A N C _ E R R O R &gt;----------------------------------------------------

Adds a single Vancouver system error message to the template's output regardless of how many error actually exist.
To prevent duplication, added_vanc_errs is nil until an error message is emitted.

added_vanc_errs is a boolean declared in page scope variables above

]]

local function add_vanc_error (source)
	if not added_vanc_errs then
		added_vanc_errs = true;													-- note that we've added this category
		table.insert( z.message_tail, { set_error( 'vancouver', {source}, true ) } );
	end
end


--[[--------------------------&lt; I S _ S C H E M E &gt;------------------------------------------------------------

does this thing that purports to be a uri scheme seem to be a valid scheme?  The scheme is checked to see if it
is in agreement with http://tools.ietf.org/html/std66#section-3.1 which says:
	Scheme names consist of a sequence of characters beginning with a
   letter and followed by any combination of letters, digits, plus
   ("+"), period ("."), or hyphen ("-").

returns true if it does, else false

]]

local function is_scheme (scheme)
	return scheme and scheme:match ('^%a[%a%d%+%.%-]*:');						-- true if scheme is set and matches the pattern
end


--[=[-------------------------&lt; I S _ D O M A I N _ N A M E &gt;--------------------------------------------------

Does this thing that purports to be a domain name seem to be a valid domain name?

Syntax defined here: http://tools.ietf.org/html/rfc1034#section-3.5
BNF defined here: https://tools.ietf.org/html/rfc4234
Single character names are generally reserved; see https://tools.ietf.org/html/draft-ietf-dnsind-iana-dns-01#page-15;
	see also [[Single-letter second-level domain]]
list of tlds: https://www.iana.org/domains/root/db

rfc952 (modified by rfc 1123) requires the first and last character of a hostname to be a letter or a digit.  Between
the first and last characters the name may use letters, digits, and the hyphen.

Also allowed are IPv4 addresses. IPv6 not supported

domain is expected to be stripped of any path so that the last character in the last character of the tld.  tld
is two or more alpha characters.  Any preceding '//' (from splitting a url with a scheme) will be stripped
here.  Perhaps not necessary but retained incase it is necessary for IPv4 dot decimal.

There are several tests:
	the first character of the whole domain name including subdomains must be a letter or a digit
	internationalized domain name (ascii characters with .xn-- ASCII Compatible Encoding (ACE) prefix xn-- in the tld) see https://tools.ietf.org/html/rfc3490
	single-letter/digit second-level domains in the .org and .cash TLDs
	q, x, and z SL domains in the .com TLD
	i and q SL domains in the .net TLD
	single-letter SL domains in the ccTLDs (where the ccTLD is two letters)
	two-character SL domains in gTLDs (where the gTLD is two or more letters)
	three-plus-character SL domains in gTLDs (where the gTLD is two or more letters)
	IPv4 dot-decimal address format; TLD not allowed

returns true if domain appears to be a proper name and tld or IPv4 address, else false

]=]

local function is_domain_name (domain)
	if not domain then
		return false;															-- if not set, abandon
	end
	
	domain = domain:gsub ('^//', '');											-- strip '//' from domain name if present; done here so we only have to do it once
	
	if not domain:match ('^[%a%d]') then										-- first character must be letter or digit
		return false;
	end
																				-- Do most common case first
	if domain:match ('%f[%a%d][%a%d][%a%d%-]+[%a%d]%.%a%a+$') then				-- three or more character hostname.hostname or hostname.tld
		return true;
	elseif domain:match ('%f[%a%d][%a%d][%a%d%-]+[%a%d]%.xn%-%-[%a%d]+$') then	-- internationalized domain name with ACE prefix
		return true;
	elseif domain:match ('%f[%a%d][%a%d]%.cash$') then							-- one character/digit .cash hostname
		return true;
	elseif domain:match ('%f[%a%d][%a%d]%.org$') then							-- one character/digit .org hostname
		return true;
	elseif domain:match ('%f[%a][qxz]%.com$') then								-- assigned one character .com hostname (x.com times out 2015-12-10)
		return true;
	elseif domain:match ('%f[%a][iq]%.net$') then								-- assigned one character .net hostname (q.net registered but not active 2015-12-10)
		return true;
	elseif domain:match ('%f[%a%d][%a%d]%.%a%a$') then							-- one character hostname and cctld (2 chars)
		return true;
	elseif domain:match ('%f[%a%d][%a%d][%a%d]%.%a%a+$') then					-- two character hostname and tld
		return true;
	elseif domain:match ('^%d%d?%d?%.%d%d?%d?%.%d%d?%d?%.%d%d?%d?') then		-- IPv4 address
		return true;
	else
		return false;
	end
end


--[[--------------------------&lt; I S _ U R L &gt;------------------------------------------------------------------

returns true if the scheme and domain parts of a url appear to be a valid url; else false.

This function is the last step in the validation process.  This function is separate because there are cases that
are not covered by split_url(), for example is_parameter_ext_wikilink() which is looking for bracketted external
wikilinks.

]]

local function is_url (scheme, domain)
	if is_set (scheme) then														-- if scheme is set check it and domain
		return is_scheme (scheme) and is_domain_name (domain);
	else
		return is_domain_name (domain);											-- scheme not set when url is protocol relative
	end
end


--[[--------------------------&lt; S P L I T _ U R L &gt;------------------------------------------------------------

Split a url into a scheme, authority indicator, and domain.

First remove Fully Qualified Domain Name terminator (a dot following tld) (if any) and any path(/), query(?) or fragment(#).

If protocol relative url, return nil scheme and domain else return nil for both scheme and domain.

When not protocol relative, get scheme, authority indicator, and domain.  If there is an authority indicator (one
or more '/' characters immediately following the scheme's colon), make sure that there are only 2.

Strip off any port and path;

]]

local function split_url (url_str)
	local scheme, authority, domain;
	
	url_str = url_str:gsub ('([%a%d])%.?[/%?#].*$', '%1');						-- strip FQDN terminator and path(/), query(?), fragment (#) (the capture prevents false replacement of '//')

	if url_str:match ('^//%S*') then											-- if there is what appears to be a protocol relative url
		domain = url_str:match ('^//(%S*)')
	elseif url_str:match ('%S-:/*%S+') then										-- if there is what appears to be a scheme, optional authority indicator, and domain name
		scheme, authority, domain = url_str:match ('(%S-:)(/*)(%S+)');			-- extract the scheme, authority indicator, and domain portions
		authority = authority:gsub ('//', '', 1);								-- replace place 1 pair of '/' with nothing;
		if is_set(authority) then												-- if anything left (1 or 3+ '/' where authority should be) then
			return scheme;														-- return scheme only making domain nil which will cause an error message
		end
		domain = domain:gsub ('(%a):%d+', '%1');								-- strip port number if present
	end
	
	return scheme, domain;
end


--[[--------------------------&lt; L I N K _ P A R A M _ O K &gt;---------------------------------------------------

checks the content of |title-link=, |series-link=, |author-link= etc for properly formatted content: no wikilinks, no urls

Link parameters are to hold the title of a wikipedia article so none of the WP:TITLESPECIALCHARACTERS are allowed:
	# &lt; &gt; [ ] | { } _
except the underscore which is used as a space in wiki urls and # which is used for section links

returns false when the value contains any of these characters.

When there are no illegal characters, this function returns TRUE if value DOES NOT appear to be a valid url (the
|&lt;param&gt;-link= parameter is ok); else false when value appears to be a valid url (the |&lt;param&gt;-link= parameter is NOT ok).

]]

local function link_param_ok (value)
	local scheme, domain;
	if value:find ('[&lt;&gt;%[%]|{}]') then											-- if any prohibited characters
		return false;
	end

	scheme, domain = split_url (value);											-- get scheme or nil and domain or nil from url; 
	return not is_url (scheme, domain);											-- return true if value DOES NOT appear to be a valid url
end


--[[--------------------------&lt; L I N K _ T I T L E _ O K &gt;---------------------------------------------------

Use link_param_ok() to validate |&lt;param&gt;-link= value and its matching |&lt;title&gt;= value.

|&lt;title&gt;= may be wikilinked but not when |&lt;param&gt;-link= has a value.  This function emits an error message when
that condition exists

]]

local function link_title_ok (link, lorig, title, torig)
local orig;

	if is_set (link) then 														-- don't bother if &lt;param&gt;-link doesn't have a value
		if not link_param_ok (link) then										-- check |&lt;param&gt;-link= markup
			orig = lorig;														-- identify the failing link parameter
		elseif title:find ('%[%[') then											-- check |title= for wikilink markup
			orig = torig;														-- identify the failing |title= parameter
		end
	end

	if is_set (orig) then
		table.insert( z.message_tail, { set_error( 'bad_paramlink', orig)});	-- url or wikilink in |title= with |title-link=;
	end
end


--[[--------------------------&lt; C H E C K _ U R L &gt;------------------------------------------------------------

Determines whether a URL string appears to be valid.

First we test for space characters.  If any are found, return false.  Then split the url into scheme and domain
portions, or for protocol relative (//example.com) urls, just the domain.  Use is_url() to validate the two
portions of the url.  If both are valid, or for protocol relative if domain is valid, return true, else false.

Because it is different from a standard url, and because this module used external_link() to make external links
that work for standard and news: links, we validate newsgroup names here.  The specification for a newsgroup name
is at https://tools.ietf.org/html/rfc5536#section-3.1.4

]]

local function check_url( url_str )
	if nil == url_str:match ("^%S+$") then										-- if there are any spaces in |url=value it can't be a proper url
		return false;
	end
	local scheme, domain;

	scheme, domain = split_url (url_str);										-- get scheme or nil and domain or nil from url;
	
	if 'news:' == scheme then													-- special case for newsgroups
		return domain:match('^[%a%d%+%-_]+%.[%a%d%+%-_%.]*[%a%d%+%-_]$');
	end
	
	return is_url (scheme, domain);												-- return true if value appears to be a valid url
end


--[=[-------------------------&lt; I S _ P A R A M E T E R _ E X T _ W I K I L I N K &gt;----------------------------

Return true if a parameter value has a string that begins and ends with square brackets [ and ] and the first
non-space characters following the opening bracket appear to be a url.  The test will also find external wikilinks
that use protocol relative urls. Also finds bare urls.

The frontier pattern prevents a match on interwiki links which are similar to scheme:path urls.  The tests that
find bracketed urls are required because the parameters that call this test (currently |title=, |chapter=, |work=,
and |publisher=) may have wikilinks and there are articles or redirects like '//Hus' so, while uncommon, |title=[[//Hus]]
is possible as might be [[en://Hus]].

]=]

local function is_parameter_ext_wikilink (value)
local scheme, domain;

	if value:match ('%f[%[]%[%a%S*:%S+.*%]') then								-- if ext wikilink with scheme and domain: [xxxx://yyyyy.zzz]
		scheme, domain = split_url (value:match ('%f[%[]%[(%a%S*:%S+).*%]'));
	elseif value:match ('%f[%[]%[//%S+.*%]') then								-- if protocol relative ext wikilink: [//yyyyy.zzz]
		scheme, domain = split_url (value:match ('%f[%[]%[(//%S+).*%]'));
	elseif value:match ('%a%S*:%S+') then										-- if bare url with scheme; may have leading or trailing plain text
		scheme, domain = split_url (value:match ('(%a%S*:%S+)'));
	elseif value:match ('//%S+') then											-- if protocol relative bare url: //yyyyy.zzz; may have leading or trailing plain text
		scheme, domain = split_url (value:match ('(//%S+)'));					-- what is left should be the domain
	else
		return false;															-- didn't find anything that is obviously a url
	end

	return is_url (scheme, domain);												-- return true if value appears to be a valid url
end


--[[-------------------------&lt; C H E C K _ F O R _ U R L &gt;-----------------------------------------------------

loop through a list of parameters and their values.  Look at the value and if it has an external link, emit an error message.

]]

local function check_for_url (parameter_list)
local error_message = '';
	for k, v in pairs (parameter_list) do										-- for each parameter in the list
		if is_parameter_ext_wikilink (v) then									-- look at the value; if there is a url add an error message
			if is_set(error_message) then										-- once we've added the first portion of the error message ...
				error_message=error_message .. ", ";							-- ... add a comma space separator
			end
			error_message=error_message .. "&amp;#124;" .. k .. "=";				-- add the failed parameter
		end
	end
	if is_set (error_message) then												-- done looping, if there is an error message, display it
		table.insert( z.message_tail, { set_error( 'param_has_ext_link', {error_message}, true ) } );
	end
end


--[[--------------------------&lt; S A F E _ F O R _ U R L &gt;------------------------------------------------------

Escape sequences for content that will be used for URL descriptions

]]

local function safe_for_url( str )
	if str:match( "%[%[.-%]%]" ) ~= nil then 
		table.insert( z.message_tail, { set_error( 'wikilink_in_url', {}, true ) } );
	end
	
	return str:gsub( '[%[%]\n]', {	
		['['] = '&amp;#91;',
		[']'] = '&amp;#93;',
		['\n'] = ' ' } );
end


--[[--------------------------&lt; E X T E R N A L _ L I N K &gt;----------------------------------------------------

Format an external link with error checking

]]

local function external_link( URL, label, source, access)
	local error_str = "";
	local domain;
	local path;
	local base_url;
	
	if not is_set( label ) then
		label = URL;
		if is_set( source ) then
			error_str = set_error( 'bare_url_missing_title', { wrap_style ('parameter', source) }, false, " " );
		else
			error( cfg.messages["bare_url_no_origin"] );
		end			
	end
	if not check_url( URL ) then
		error_str = set_error( 'bad_url', {wrap_style ('parameter', source)}, false, " " ) .. error_str;
	end
	
	domain, path = URL:match ('^([/%.%-%+:%a%d]+)([/%?#].*)$');					-- split the url into scheme plus domain and path
	if path then																-- if there is a path portion
		path = path:gsub ('[%[%]]', {['[']='%5b',[']']='%5d'});					-- replace '[' and ']' with their percent encoded values
		URL=domain..path;														-- and reassemble
	end
	
	if is_set (access) then														-- access level (subscription, registration, limited)
		label = safe_for_url (label);											-- replace square brackets and newlines

		base_url = table.concat (												-- assemble external link with access signal
			{
			'&lt;span class="plainlinks"&gt;[',										-- opening css and url markup
			URL,																-- the url
			' ',																-- the required space
			label,
			'&lt;span style="padding-left:0.15em"&gt;',								-- signal spacing css
			cfg.presentation[access],											-- the appropriate icon
			'&lt;/span&gt;',															-- close signal spacing span
			']&lt;/span&gt;'															-- close url markup and plain links span
			});
	else
		base_url = table.concat({ "[", URL, " ", safe_for_url( label ), "]" });	-- no signal markup
	end
	
	return table.concat({ base_url, error_str });
end


--[[--------------------------&lt; D E P R E C A T E D _ P A R A M E T E R &gt;--------------------------------------

Categorize and emit an error message when the citation contains one or more deprecated parameters.  The function includes the
offending parameter name to the error message.  Only one error message is emitted regardless of the number of deprecated
parameters in the citation.

added_deprecated_cat is a boolean declared in page scope variables above

]]

local function deprecated_parameter(name)
	if not added_deprecated_cat then
		added_deprecated_cat = true;											-- note that we've added this category
		table.insert( z.message_tail, { set_error( 'deprecated_params', {name}, true ) } );		-- add error message
	end
end


--[=[-------------------------&lt; K E R N _ Q U O T E S &gt;--------------------------------------------------------

Apply kerning to open the space between the quote mark provided by the Module and a leading or trailing quote
mark contained in a |title= or |chapter= parameter's value.

This function will positive kern either single or double quotes:
	"'Unkerned title with leading and trailing single quote marks'"
	" 'Kerned title with leading and trailing single quote marks' " (in real life the kerning isn't as wide as this example)
Double single quotes (italic or bold wikimarkup) are not kerned.

Replaces unicode quotemarks in plain text or in the label portion of a [[L|D]] style wikilink with typewriter
quote marks regardless of the need for kerning.  Unicode quote marks are not replaced in simple [[D]] wikilinks.

Call this function for chapter titles, for website titles, etc; not for book titles.

]=]

local function kern_quotes (str)
	local cap='';
	local cap2='';
	local wl_type, label, link;

	wl_type, label, link = is_wikilink (str);									-- wl_type is: 0, no wl (text in label variable); 1, [[D]]; 2, [[L|D]]
	
	if 1 == wl_type then														-- [[D]] simple wikilink with or without quote marks
		if mw.ustring.match (str, '%[%[[\"“”\'‘’].+[\"“”\'‘’]%]%]') then		-- leading and trailing quote marks
			str = substitute (cfg.presentation['kern-wl-both'], str);
		elseif mw.ustring.match (str, '%[%[[\"“”\'‘’].+%]%]')	then			-- leading quote marks
			str = substitute (cfg.presentation['kern-wl-left'], str);
		elseif mw.ustring.match (str, '%[%[.+[\"“”\'‘’]%]%]') then				-- trailing quote marks
			str = substitute (cfg.presentation['kern-wl-right'], str);
		end

	else																		-- plain text or [[L|D]]; text in label variable
		label= mw.ustring.gsub (label, '[“”]', '\"');							-- replace “” (U+201C &amp; U+201D) with " (typewriter double quote mark)
		label= mw.ustring.gsub (label, '[‘’]', '\'');							-- replace ‘’ (U+2018 &amp; U+2019) with ' (typewriter single quote mark)

		cap, cap2 = mw.ustring.match (label, "^([\"\'])([^\'].+)");				-- match leading double or single quote but not doubled single quotes (italic markup)
		if is_set (cap) then
			label = substitute (cfg.presentation['kern-left'], {cap, cap2});
		end
	
		cap, cap2 = mw.ustring.match (label, "^(.+[^\'])([\"\'])$")				-- match trailing double or single quote but not doubled single quotes (italic markup)
		if is_set (cap) then
			label = substitute (cfg.presentation['kern-right'], {cap, cap2});
		end
		
		if 2 == wl_type then
			str = make_wikilink (link, label);									-- reassemble the wikilink
		else
			str = label;
		end
	end
	return str;
end


--[[--------------------------&lt; F O R M A T _ S C R I P T _ V A L U E &gt;----------------------------------------

|script-title= holds title parameters that are not written in Latin based scripts: Chinese, Japanese, Arabic, Hebrew, etc. These scripts should
not be italicized and may be written right-to-left.  The value supplied by |script-title= is concatenated onto Title after Title has been wrapped
in italic markup.

Regardless of language, all values provided by |script-title= are wrapped in &lt;bdi&gt;...&lt;/bdi&gt; tags to isolate rtl languages from the English left to right.

|script-title= provides a unique feature.  The value in |script-title= may be prefixed with a two-character ISO639-1 language code and a colon:
	|script-title=ja:*** *** (where * represents a Japanese character)
Spaces between the two-character code and the colon and the colon and the first script character are allowed:
	|script-title=ja : *** ***
	|script-title=ja: *** ***
	|script-title=ja :*** ***
Spaces preceding the prefix are allowed: |script-title = ja:*** ***

The prefix is checked for validity.  If it is a valid ISO639-1 language code, the lang attribute (lang="ja") is added to the &lt;bdi&gt; tag so that browsers can
know the language the tag contains.  This may help the browser render the script more correctly.  If the prefix is invalid, the lang attribute
is not added.  At this time there is no error message for this condition.

Supports |script-title= and |script-chapter=

TODO: error messages when prefix is invalid ISO639-1 code; when script_value has prefix but no script;
]]

local function format_script_value (script_value)
	local lang='';																-- initialize to empty string
	local name;
	if script_value:match('^%l%l%s*:') then										-- if first 3 non-space characters are script language prefix
		lang = script_value:match('^(%l%l)%s*:%s*%S.*');						-- get the language prefix or nil if there is no script
		if not is_set (lang) then
			return '';															-- script_value was just the prefix so return empty string
		end
																				-- if we get this far we have prefix and script
		name = mw.language.fetchLanguageName( lang, "en" );						-- get language name so that we can use it to categorize
		if is_set (name) then													-- is prefix a proper ISO 639-1 language code?
			script_value = script_value:gsub ('^%l%l%s*:%s*', '');				-- strip prefix from script
																				-- is prefix one of these language codes?
			if in_array (lang, cfg.script_lang_codes) then
				add_prop_cat ('script_with_name', {name, lang})
			else
				add_prop_cat ('script')
			end
			lang = ' lang="' .. lang .. '" ';									-- convert prefix into a lang attribute
		else
			lang = '';															-- invalid so set lang to empty string
		end
	end
	script_value = substitute (cfg.presentation['bdi'], {lang, script_value});	-- isolate in case script is rtl

	return script_value;
end


--[[--------------------------&lt; S C R I P T _ C O N C A T E N A T E &gt;------------------------------------------

Initially for |title= and |script-title=, this function concatenates those two parameter values after the script value has been 
wrapped in &lt;bdi&gt; tags.
]]

local function script_concatenate (title, script)
	if is_set (script) then
		script = format_script_value (script);									-- &lt;bdi&gt; tags, lang atribute, categorization, etc; returns empty string on error
		if is_set (script) then
			title = title .. ' ' .. script;										-- concatenate title and script title
		end
	end
	return title;
end


--[[--------------------------&lt; W R A P _ M S G &gt;--------------------------------------------------------------

Applies additional message text to various parameter values. Supplied string is wrapped using a message_list
configuration taking one argument.  Supports lower case text for {{citation}} templates.  Additional text taken
from citation_config.messages - the reason this function is similar to but separate from wrap_style().

]]

local function wrap_msg (key, str, lower)
	if not is_set( str ) then
		return "";
	end
	if true == lower then
		local msg;
		msg = cfg.messages[key]:lower();										-- set the message to lower case before 
		return substitute( msg, str );										-- including template text
	else
		return substitute( cfg.messages[key], str );
	end		
end


--[[--------------------------&lt; F O R M A T _ C H A P T E R _ T I T L E &gt;--------------------------------------

Format the four chapter parameters: |script-chapter=, |chapter=, |trans-chapter=, and |chapter-url= into a single Chapter meta-
parameter (chapter_url_source used for error messages).

]]

local function format_chapter_title (scriptchapter, chapter, transchapter, chapterurl, chapter_url_source, no_quotes, access)
	local chapter_error = '';
	
	if not is_set (chapter) then
		chapter = '';															-- to be safe for concatenation
	else
		if false == no_quotes then
			chapter = kern_quotes (chapter);									-- if necessary, separate chapter title's leading and trailing quote marks from Module provided quote marks
			chapter = wrap_style ('quoted-title', chapter);
		end
	end

	chapter = script_concatenate (chapter, scriptchapter)						-- &lt;bdi&gt; tags, lang atribute, categorization, etc; must be done after title is wrapped

	if is_set (transchapter) then
		transchapter = wrap_style ('trans-quoted-title', transchapter);
		if is_set (chapter) then
			chapter = chapter ..  ' ' .. transchapter;
		else																	-- here when transchapter without chapter or script-chapter
			chapter = transchapter;												-- 
			chapter_error = ' ' .. set_error ('trans_missing_title', {'chapter'});
		end
	end

	if is_set (chapterurl) then
		chapter = external_link (chapterurl, chapter, chapter_url_source, access);		-- adds bare_url_missing_title error if appropriate
	end

	return chapter .. chapter_error;
end


--[[--------------------------&lt; H A S _ I N V I S I B L E _ C H A R S &gt;----------------------------------------

This function searches a parameter's value for nonprintable or invisible characters.  The search stops at the
first match.

This function will detect the visible replacement character when it is part of the wikisource.

Detects but ignores nowiki and math stripmarkers.  Also detects other named stripmarkers (gallery, math, pre, ref)
and identifies them with a slightly different error message.  See also coins_cleanup().

Detects but ignores the character pattern that results from the transclusion of {{'}} templates.

Output of this function is an error message that identifies the character or the Unicode group, or the stripmarker
that was detected along with its position (or, for multi-byte characters, the position of its first byte) in the
parameter value.

]]

local function has_invisible_chars (param, v)
	local position = '';														-- position of invisible char or starting position of stripmarker
	local dummy;																-- end of matching string; not used but required to hold end position when a capture is returned
	local capture;																-- used by stripmarker detection to hold name of the stripmarker
	local i=1;
	local stripmarker, apostrophe;
	
	capture = string.match (v, '[%w%p ]*');										-- Test for values that are simple ASCII text and bypass other tests if true
	if capture == v then														-- if same there are no unicode characters
		return;
	end

	while cfg.invisible_chars[i] do
		local char=cfg.invisible_chars[i][1]									-- the character or group name
		local pattern=cfg.invisible_chars[i][2]									-- the pattern used to find it
		position, dummy, capture = mw.ustring.find (v, pattern)					-- see if the parameter value contains characters that match the pattern
		
		if position and (char == 'zero width joiner') then						-- if we found a zero width joiner character
			if mw.ustring.find (v, cfg.indic_script) then						-- its ok if one of the indic scripts
				position = nil;													-- unset position
			end
		end
		
		if position then
			if 'nowiki' == capture or 'math' == capture then 					-- nowiki, math stripmarker (not an error condition)
				stripmarker = true;												-- set a flag
			elseif true == stripmarker and 'delete' == char then				-- because stripmakers begin and end with the delete char, assume that we've found one end of a stripmarker
				position = nil;													-- unset
			else
				local err_msg;
				if capture then
					err_msg = capture .. ' ' .. char;
				else
					err_msg = char .. ' ' .. 'character';
				end

				table.insert( z.message_tail, { set_error( 'invisible_char', {err_msg, wrap_style ('parameter', param), position}, true ) } );	-- add error message
				return;															-- and done with this parameter
			end
		end
		i=i+1;																	-- bump our index
	end
end


--[[--------------------------&lt; A R G U M E N T _ W R A P P E R &gt;----------------------------------------------

Argument wrapper.  This function provides support for argument mapping defined in the configuration file so that
multiple names can be transparently aliased to single internal variable.

]]

local function argument_wrapper( args )
	local origin = {};
	
	return setmetatable({
		ORIGIN = function( self, k )
			local dummy = self[k]; --force the variable to be loaded.
			return origin[k];
		end
	},
	{
		__index = function ( tbl, k )
			if origin[k] ~= nil then
				return nil;
			end
			
			local args, list, v = args, cfg.aliases[k];
			
			if type( list ) == 'table' then
				v, origin[k] = select_one( args, list, 'redundant_parameters' );
				if origin[k] == nil then
					origin[k] = ''; -- Empty string, not nil
				end
			elseif list ~= nil then
				v, origin[k] = args[list], list;
			else
				-- maybe let through instead of raising an error?
				-- v, origin[k] = args[k], k;
				error( cfg.messages['unknown_argument_map'] );
			end
			
			-- Empty strings, not nil;
			if v == nil then
				v = cfg.defaults[k] or '';
				origin[k] = '';
			end
			
			tbl = rawset( tbl, k, v );
			return v;
		end,
	});
end


--[[--------------------------&lt; V A L I D A T E &gt;--------------------------------------------------------------

Looks for a parameter's name in one of several whitelists.

Parameters in the whitelist can have three values:
	true - active, supported parameters
	false - deprecated, supported parameters
	nil - unsupported parameters
	
]]

local function validate( name, cite_class )
	local name = tostring( name );
	local state;
	
	if in_array (cite_class, {'arxiv', 'biorxiv', 'citeseerx'}) then			-- limited parameter sets allowed for these templates
		state = whitelist.limited_basic_arguments[ name ];
		if true == state then return true; end									-- valid actively supported parameter
		if false == state then
			deprecated_parameter (name);										-- parameter is deprecated but still supported
			return true;
		end

		if 'arxiv' == cite_class then											-- basic parameters unique to these templates
			state = whitelist.arxiv_basic_arguments[name];
		end
		if 'biorxiv' == cite_class then
			state = whitelist.biorxiv_basic_arguments[name];
		end
		if 'citeseerx' == cite_class then
			state = whitelist.citeseerx_basic_arguments[name];
		end

		if true == state then return true; end									-- valid actively supported parameter
		if false == state then
			deprecated_parameter (name);										-- parameter is deprecated but still supported
			return true;
		end
																				-- limited enumerated parameters list
		name = name:gsub( "%d+", "#" );											-- replace digit(s) with # (last25 becomes last#)
		state = whitelist.limited_numbered_arguments[ name ];
		if true == state then return true; end									-- valid actively supported parameter
		if false == state then
			deprecated_parameter (name);										-- parameter is deprecated but still supported
			return true;
		end

		return false;															-- not supported because not found or name is set to nil
	end																			-- end limited parameter-set templates
		
	state = whitelist.basic_arguments[ name ];									-- all other templates; all normal parameters allowed
											
	if true == state then return true; end										-- valid actively supported parameter
	if false == state then
		deprecated_parameter (name);											-- parameter is deprecated but still supported
		return true;
	end
																				-- all enumerated parameters allowed
	name = name:gsub( "%d+", "#" );												-- replace digit(s) with # (last25 becomes last#
	state = whitelist.numbered_arguments[ name ];

	if true == state then return true; end										-- valid actively supported parameter
	if false == state then
		deprecated_parameter (name);											-- parameter is deprecated but still supported
		return true;
	end
	
	return false;																-- not supported because not found or name is set to nil
end


--[[--------------------------&lt; N O W R A P _ D A T E &gt;--------------------------------------------------------

When date is YYYY-MM-DD format wrap in nowrap span: &lt;span ...&gt;YYYY-MM-DD&lt;/span&gt;.  When date is DD MMMM YYYY or is
MMMM DD, YYYY then wrap in nowrap span: &lt;span ...&gt;DD MMMM&lt;/span&gt; YYYY or &lt;span ...&gt;MMMM DD,&lt;/span&gt; YYYY

DOES NOT yet support MMMM YYYY or any of the date ranges.

]]

local function nowrap_date (date)
	local cap='';
	local cap2='';

	if date:match("^%d%d%d%d%-%d%d%-%d%d$") then
		date = substitute (cfg.presentation['nowrap1'], date);
	
	elseif date:match("^%a+%s*%d%d?,%s+%d%d%d%d$") or date:match ("^%d%d?%s*%a+%s+%d%d%d%d$") then
		cap, cap2 = string.match (date, "^(.*)%s+(%d%d%d%d)$");
		date = substitute (cfg.presentation['nowrap2'], {cap, cap2});
	end
	
	return date;
end


--[[--------------------------&lt; S E T _ T I T L E T Y P E &gt;----------------------------------------------------

This function sets default title types (equivalent to the citation including |type=&lt;default value&gt;) for those templates that have defaults.
Also handles the special case where it is desirable to omit the title type from the rendered citation (|type=none).

]]

local function set_titletype (cite_class, title_type)
	if is_set(title_type) then
		if "none" == title_type then
			title_type = "";													-- if |type=none then type parameter not displayed
		end
		return title_type;														-- if |type= has been set to any other value use that value
	end

	return cfg.title_types [cite_class] or '';									-- set template's default title type; else empty string for concatenation
end


--[[--------------------------&lt; H Y P H E N _ T O _ D A S H &gt;--------------------------------------------------

Converts a hyphen to a dash

]]

local function hyphen_to_dash( str )
	if not is_set(str) or str:match( "[%[%]{}&lt;&gt;]" ) ~= nil then
		return str;
	end	
	return str:gsub( '-', '–' );
end


--[[--------------------------&lt; S A F E _ J O I N &gt;------------------------------------------------------------

Joins a sequence of strings together while checking for duplicate separation characters.

]]

local function safe_join( tbl, duplicate_char )
	--[[
	Note: we use string functions here, rather than ustring functions.
	
	This has considerably faster performance and should work correctly as 
	long as the duplicate_char is strict ASCII.  The strings
	in tbl may be ASCII or UTF8.
	]]
	
	local str = '';																-- the output string
	local comp = '';															-- what does 'comp' mean?
	local end_chr = '';
	local trim;
	for _, value in ipairs( tbl ) do
		if value == nil then value = ''; end
		
		if str == '' then														-- if output string is empty
			str = value;														-- assign value to it (first time through the loop)
		elseif value ~= '' then
			if value:sub(1,1) == '&lt;' then										-- Special case of values enclosed in spans and other markup.
				comp = value:gsub( "%b&lt;&gt;", "" );								-- remove html markup (&lt;span&gt;string&lt;/span&gt; -&gt; string)
			else
				comp = value;
			end
																				-- typically duplicate_char is sepc
			if comp:sub(1,1) == duplicate_char then								-- is first charactier same as duplicate_char? why test first character?
																				--   Because individual string segments often (always?) begin with terminal punct for th
																				--   preceding segment: 'First element' .. 'sepc next element' .. etc?
				trim = false;
				end_chr = str:sub(-1,-1);										-- get the last character of the output string
				-- str = str .. "&lt;HERE(enchr=" .. end_chr.. ")"					-- debug stuff?
				if end_chr == duplicate_char then								-- if same as separator
					str = str:sub(1,-2);										-- remove it
				elseif end_chr == "'" then										-- if it might be wikimarkup
					if str:sub(-3,-1) == duplicate_char .. "''" then			-- if last three chars of str are sepc'' 
						str = str:sub(1, -4) .. "''";							-- remove them and add back ''
					elseif str:sub(-5,-1) == duplicate_char .. "]]''" then		-- if last five chars of str are sepc]]'' 
						trim = true;											-- why? why do this and next differently from previous?
					elseif str:sub(-4,-1) == duplicate_char .. "]''" then		-- if last four chars of str are sepc]'' 
						trim = true;											-- same question
					end
				elseif end_chr == "]" then										-- if it might be wikimarkup
					if str:sub(-3,-1) == duplicate_char .. "]]" then			-- if last three chars of str are sepc]] wikilink 
						trim = true;
					elseif str:sub(-3,-1) == duplicate_char .. '"]' then		-- if last three chars of str are sepc"] quoted external link 
						trim = true;
					elseif str:sub(-2,-1) == duplicate_char .. "]" then			-- if last two chars of str are sepc] external link
						trim = true;
					elseif str:sub(-4,-1) == duplicate_char .. "'']" then		-- normal case when |url=something &amp; |title=Title.
						trim = true;
					end
				elseif end_chr == " " then										-- if last char of output string is a space
					if str:sub(-2,-1) == duplicate_char .. " " then				-- if last two chars of str are &lt;sepc&gt;&lt;space&gt;
						str = str:sub(1,-3);									-- remove them both
					end
				end

				if trim then
					if value ~= comp then 										-- value does not equal comp when value contains html markup
						local dup2 = duplicate_char;
						if dup2:match( "%A" ) then dup2 = "%" .. dup2; end		-- if duplicate_char not a letter then escape it
						
						value = value:gsub( "(%b&lt;&gt;)" .. dup2, "%1", 1 )			-- remove duplicate_char if it follows html markup
					else
						value = value:sub( 2, -1 );								-- remove duplicate_char when it is first character
					end
				end
			end
			str = str .. value;													--add it to the output string
		end
	end
	return str;
end  


--[[--------------------------&lt; I S _ S U F F I X &gt;------------------------------------------------------------

returns true is suffix is properly formed Jr, Sr, or ordinal in the range 2–9.  Puncutation not allowed.

]]

local function is_suffix (suffix)
	if in_array (suffix, {'Jr', 'Sr', '2nd', '3rd'}) or suffix:match ('^%dth$') then
		return true;
	end
	return false;
end


--[[--------------------------&lt; I S _ G O O D _ V A N C _ N A M E &gt;--------------------------------------------

For Vancouver Style, author/editor names are supposed to be rendered in Latin (read ASCII) characters.  When a name
uses characters that contain diacritical marks, those characters are to converted to the corresponding Latin character.
When a name is written using a non-Latin alphabet or logogram, that name is to be transliterated into Latin characters.
These things are not currently possible in this module so are left to the editor to do.

This test allows |first= and |last= names to contain any of the letters defined in the four Unicode Latin character sets
	[http://www.unicode.org/charts/PDF/U0000.pdf C0 Controls and Basic Latin] 0041–005A, 0061–007A
	[http://www.unicode.org/charts/PDF/U0080.pdf C1 Controls and Latin-1 Supplement] 00C0–00D6, 00D8–00F6, 00F8–00FF
	[http://www.unicode.org/charts/PDF/U0100.pdf Latin Extended-A] 0100–017F
	[http://www.unicode.org/charts/PDF/U0180.pdf Latin Extended-B] 0180–01BF, 01C4–024F

|lastn= also allowed to contain hyphens, spaces, and apostrophes. (http://www.ncbi.nlm.nih.gov/books/NBK7271/box/A35029/)
|firstn= also allowed to contain hyphens, spaces, apostrophes, and periods

This original test:
	if nil == mw.ustring.find (last, "^[A-Za-zÀ-ÖØ-öø-ƿǄ-ɏ%-%s%']*$") or nil == mw.ustring.find (first, "^[A-Za-zÀ-ÖØ-öø-ƿǄ-ɏ%-%s%'%.]+[2-6%a]*$") then
was written ouside of the code editor and pasted here because the code editor gets confused between character insertion point and cursor position.
The test has been rewritten to use decimal character escape sequence for the individual bytes of the unicode characters so that it is not necessary
to use an external editor to maintain this code.

	\195\128-\195\150 – À-Ö (U+00C0–U+00D6 – C0 controls)
	\195\152-\195\182 – Ø-ö (U+00D8-U+00F6 – C0 controls)
	\195\184-\198\191 – ø-ƿ (U+00F8-U+01BF – C0 controls, Latin extended A &amp; B)
	\199\132-\201\143 – Ǆ-ɏ (U+01C4-U+024F – Latin extended B)

]]

local function is_good_vanc_name (last, first)
	local first, suffix = first:match ('(.-),?%s*([%dJS][%drndth]+)%.?$') or first;		-- if first has something that looks like a generational suffix, get it

	if is_set (suffix) then
		if not is_suffix (suffix) then
			add_vanc_error ('suffix');
			return false;														-- not a name with an appropriate suffix
		end
	end
	if nil == mw.ustring.find (last, "^[A-Za-z\195\128-\195\150\195\152-\195\182\195\184-\198\191\199\132-\201\143%-%s%']*$") or
		nil == mw.ustring.find (first, "^[A-Za-z\195\128-\195\150\195\152-\195\182\195\184-\198\191\199\132-\201\143%-%s%'%.]*$") then
			add_vanc_error ('non-Latin character');
			return false;														-- not a string of latin characters; Vancouver requires Romanization
	end;
	return true;
end


--[[--------------------------&lt; R E D U C E _ T O _ I N I T I A L S &gt;------------------------------------------

Attempts to convert names to initials in support of |name-list-format=vanc.  

Names in |firstn= may be separated by spaces or hyphens, or for initials, a period. See http://www.ncbi.nlm.nih.gov/books/NBK7271/box/A35062/.

Vancouver style requires family rank designations (Jr, II, III, etc) to be rendered as Jr, 2nd, 3rd, etc.  See http://www.ncbi.nlm.nih.gov/books/NBK7271/box/A35085/.
This code only accepts and understands generational suffix in the Vancouver format because Roman numerals look like, and can be mistaken for, initials.

This function uses ustring functions because firstname initials may be any of the unicode Latin characters accepted by is_good_vanc_name ().

]]

local function reduce_to_initials(first)
	local name, suffix = mw.ustring.match(first, "^(%u+) ([%dJS][%drndth]+)$");

	if not name then															-- if not initials and a suffix
		name = mw.ustring.match(first, "^(%u+)$");								-- is it just intials?
	end

	if name then																-- if first is initials with or without suffix
		if 3 &gt; mw.ustring.len (name) then										-- if one or two initials
			if suffix then														-- if there is a suffix
				if is_suffix (suffix) then										-- is it legitimate?
					return first;												-- one or two initials and a valid suffix so nothing to do
				else
					add_vanc_error ('suffix');									-- one or two initials with invalid suffix so error message
					return first;												-- and return first unmolested
				end
			else
				return first;													-- one or two initials without suffix; nothing to do
			end
		end
	end																			-- if here then name has 3 or more uppercase letters so treat them as a word


	local initials, names = {}, {};												-- tables to hold name parts and initials
	local i = 1;																-- counter for number of initials

	names = mw.text.split (first, '[%s,]+');									-- split into a table of names and possible suffix

	while names[i] do															-- loop through the table
		if 1 &lt; i and names[i]:match ('[%dJS][%drndth]+%.?$') then				-- if not the first name, and looks like a suffix (may have trailing dot)
			names[i] = names[i]:gsub ('%.', '');								-- remove terminal dot if present
			if is_suffix (names[i]) then										-- if a legitimate suffix
				table.insert (initials, ' ' .. names[i]);						-- add a separator space, insert at end of initials table
				break;															-- and done because suffix must fall at the end of a name
			end																	-- no error message if not a suffix; possibly because of Romanization
		end
		if 3 &gt; i then
			table.insert (initials, mw.ustring.sub(names[i],1,1));				-- insert the intial at end of initials table
		end
		i = i+1;																-- bump the counter
	end
			
	return table.concat(initials)												-- Vancouver format does not include spaces.
end


--[[--------------------------&lt; L I S T  _ P E O P L E &gt;-------------------------------------------------------

Formats a list of people (e.g. authors / editors) 

]]

local function list_people(control, people, etal)
	local sep;
	local namesep;
	local format = control.format
	local maximum = control.maximum
	local lastauthoramp = control.lastauthoramp;
	local text = {}

	if 'vanc' == format then													-- Vancouver-like author/editor name styling?
		sep = ',';																-- name-list separator between authors is a comma
		namesep = ' ';															-- last/first separator is a space
	else
		sep = ';'																-- name-list separator between authors is a semicolon
		namesep = ', '															-- last/first separator is &lt;comma&gt;&lt;space&gt;
	end
	
	if sep:sub(-1,-1) ~= " " then sep = sep .. " " end
	if is_set (maximum) and maximum &lt; 1 then return "", 0; end					-- returned 0 is for EditorCount; not used for authors
	
	for i,person in ipairs(people) do
		if is_set(person.last) then
			local mask = person.mask
			local one
			local sep_one = sep;
			if is_set (maximum) and i &gt; maximum then
				etal = true;
				break;
			elseif (mask ~= nil) then
				local n = tonumber(mask)
				if (n ~= nil) then
					one = string.rep("&amp;mdash;",n)
				else
					one = mask;
					sep_one = " ";
				end
			else
				one = person.last
				local first = person.first
				if is_set(first) then
					if ( "vanc" == format ) then								-- if vancouver format
						one = one:gsub ('%.', '');								-- remove periods from surnames (http://www.ncbi.nlm.nih.gov/books/NBK7271/box/A35029/)
						if not person.corporate and is_good_vanc_name (one, first) then		-- and name is all Latin characters; corporate authors not tested
							first = reduce_to_initials(first)					-- attempt to convert first name(s) to initials
						end
					end
					one = one .. namesep .. first;
				end
				if is_set(person.link) and person.link ~= control.page_name then
					one = make_wikilink (person.link, one);						-- link author/editor if this page is not the author's/editor's page
				end
			end
			table.insert( text, one )
			table.insert( text, sep_one )
		end
	end

	local count = #text / 2;													-- (number of names + number of separators) divided by 2
	if count &gt; 0 then 
		if count &gt; 1 and is_set(lastauthoramp) and not etal then
			text[#text-2] = " &amp; ";												-- replace last separator with ampersand text
		end
		text[#text] = nil;														-- erase the last separator
	end
	
	local result = table.concat(text)											-- construct list
	if etal and is_set (result) then											-- etal may be set by |display-authors=etal but we might not have a last-first list
		result = result .. sep .. ' ' .. cfg.messages['et al'];					-- we've go a last-first list and etal so add et al.
	end
	
	return result, count
end


--[[--------------------------&lt; A N C H O R _ I D &gt;------------------------------------------------------------

Generates a CITEREF anchor ID if we have at least one name or a date.  Otherwise returns an empty string.

namelist is one of the contributor-, author-, or editor-name lists chosen in that order.  year is Year or anchor_year.

]]
local function anchor_id (namelist, year)
	local names={};																-- a table for the one to four names and year
	for i,v in ipairs (namelist) do												-- loop through the list and take up to the first four last names
		names[i] = v.last 
		if i == 4 then break end												-- if four then done
	end
	table.insert (names, year);													-- add the year at the end
	local id = table.concat(names);												-- concatenate names and year for CITEREF id
	if is_set (id) then															-- if concatenation is not an empty string
		return "CITEREF" .. id;													-- add the CITEREF portion
	else
		return '';																-- return an empty string; no reason to include CITEREF id in this citation
	end
end


--[[--------------------------&lt; N A M E _ H A S _ E T A L &gt;----------------------------------------------------

Evaluates the content of author and editor name parameters for variations on the theme of et al.  If found,
the et al. is removed, a flag is set to true and the function returns the modified name and the flag.

This function never sets the flag to false but returns it's previous state because it may have been set by
previous passes through this function or by the parameters |display-authors=etal or |display-editors=etal

]]

local function name_has_etal (name, etal, nocat)

	if is_set (name) then														-- name can be nil in which case just return
		local etal_pattern = "[;,]? *[\"']*%f[%a][Ee][Tt] *[Aa][Ll][%.\"']*$"	-- variations on the 'et al' theme
		local others_pattern = "[;,]? *%f[%a]and [Oo]thers";					-- and alternate to et al.
		
		if name:match (etal_pattern) then										-- variants on et al.
			name = name:gsub (etal_pattern, '');								-- if found, remove
			etal = true;														-- set flag (may have been set previously here or by |display-authors=etal)
			if not nocat then													-- no categorization for |vauthors=
				add_maint_cat ('etal');											-- and add a category if not already added
			end
		elseif name:match (others_pattern) then									-- if not 'et al.', then 'and others'?
			name = name:gsub (others_pattern, '');								-- if found, remove
			etal = true;														-- set flag (may have been set previously here or by |display-authors=etal)
			if not nocat then													-- no categorization for |vauthors=
				add_maint_cat ('etal');											-- and add a category if not already added
			end
		end
	end
	return name, etal;															-- 
end


--[[--------------------------&lt; N A M E _ H A S _ E D _ M A R K U P &gt;------------------------------------------

Evaluates the content of author and editor parameters for extranious editor annotations: ed, ed., eds, (Ed.), etc.
These annotation do not belong in author parameters and are redundant in editor parameters.  If found, the function
adds the editor markup maintenance category.

]]

local function name_has_ed_markup (name, list_name)
	local _, pattern;
	local patterns = {															-- these patterns match annotations at end of name
		'%f[%(%[][%(%[]%s*[Ee][Dd][Ss]?%.?%s*[%)%]]?$',							-- (ed) or (eds): leading '(', case insensitive 'ed', optional 's', '.' and/or ')'
		'[,%.%s]%f[e]eds?%.?$',													-- ed or eds: without '('or ')'; case sensitive (ED could be initials Ed could be name)
		'%f[%(%[][%(%[]%s*[Ee][Dd][Ii][Tt][Oo][Rr][Ss]?%.?%s*[%)%]]?$',			-- (editor) or (editors): leading '(', case insensitive, optional '.' and/or ')'
		'[,%.%s]%f[Ee][Ee][Dd][Ii][Tt][Oo][Rr][Ss]?%.?$',						-- editor or editors: without '('or ')'; case insensitive
		
																				-- these patterns match annotations at beginning of name
		'^eds?[%.,;]',															-- ed. or eds.: lower case only, optional 's', requires '.'
		'^[%(%[]%s*[Ee][Dd][Ss]?%.?%s*[%)%]]',									-- (ed) or (eds): also sqare brackets, case insensitive, optional 's', '.'
		'^[%(%[]?%s*[Ee][Dd][Ii][Tt][Oo][Rr][Ss]?%A',							-- (editor or (editors: also sq brackets, case insensitive, optional brackets, 's'
		'^[%(%[]?%s*[Ee][Dd][Ii][Tt][Ee][Dd]%A',								-- (edited: also sq brackets, case insensitive, optional brackets
		}

	if is_set (name) then
		for _, pattern in ipairs (patterns) do									-- spin through patterns table and
			if name:match (pattern) then
				add_maint_cat ('extra_text_names', cfg.special_case_translation [list_name]);	-- add a maint cat for this template
				break;
			end
		end
	end
	return name;																-- and done
end


--[[--------------------------&lt; N A M E _ H A S _ M U L T _ N A M E S &gt;----------------------------------------

Evaluates the content of author and editor (surnames only) parameters for multiple names.  Multiple names are
indicated if there is more than one comma and or semicolon.  If found, the function adds the multiple name
(author or editor) maintenance category.

]]

local function name_has_mult_names (name, list_name)
local count, _;
	if is_set (name) then
		_, count = name:gsub ('[;,]', '');										-- count the number of separator-like characters
		
		if 1 &lt; count then														-- param could be |author= or |editor= so one separator character is acceptable
			add_maint_cat ('mult_names', cfg.special_case_translation [list_name]);	-- more than one separator indicates multiple names so add a maint cat for this template
		end
	end
	return name;																-- and done
end


--[[--------------------------&lt; N A M E _ C H E C K S &gt;--------------------------------------------------------
This function calls various name checking functions used to validate the content of the various name-holding
parameters.

]]

local function name_checks (last, first, list_name)
	if is_set (last) then
		if last:match ('^%(%(.*%)%)$') then										-- if wrapped in doubled parentheses, accept as written 
			last = last:match ('^%(%((.*)%)%)$');								-- strip parens
		else
			last = name_has_mult_names (last, list_name);						-- check for multiple names in the parameter (last only)
			last = name_has_ed_markup (last, list_name);						-- check for extraneous 'editor' annotation
		end
	end
	if is_set (first) then
		if first:match ('^%(%(.*%)%)$') then									-- if wrapped in doubled parentheses, accept as written 
			first = first:match ('^%(%((.*)%)%)$');								-- strip parens
		else
			first = name_has_ed_markup (first, list_name);						-- check for extraneous 'editor' annotation
		end
	end
	return last, first;															-- done
	end


--[[--------------------------&lt; E X T R A C T _ N A M E S &gt;----------------------------------------------------
Gets name list from the input arguments

Searches through args in sequential order to find |lastn= and |firstn= parameters (or their aliases), and their matching link and mask parameters.
Stops searching when both |lastn= and |firstn= are not found in args after two sequential attempts: found |last1=, |last2=, and |last3= but doesn't
find |last4= and |last5= then the search is done.

This function emits an error message when there is a |firstn= without a matching |lastn=.  When there are 'holes' in the list of last names, |last1= and |last3=
are present but |last2= is missing, an error message is emitted. |lastn= is not required to have a matching |firstn=.

When an author or editor parameter contains some form of 'et al.', the 'et al.' is stripped from the parameter and a flag (etal) returned
that will cause list_people() to add the static 'et al.' text from Module:Citation/CS1/Configuration.  This keeps 'et al.' out of the 
template's metadata.  When this occurs, the page is added to a maintenance category.

]]

local function extract_names(args, list_name)
	local names = {};			-- table of names
	local last;					-- individual name components
	local first;
	local link;
	local mask;
	local i = 1;				-- loop counter/indexer
	local n = 1;				-- output table indexer
	local count = 0;			-- used to count the number of times we haven't found a |last= (or alias for authors, |editor-last or alias for editors)
	local etal=false;			-- return value set to true when we find some form of et al. in an author parameter

	local err_msg_list_name = list_name:match ("(%w+)List") .. 's list';		-- modify AuthorList or EditorList for use in error messages if necessary
	while true do
		last = select_one( args, cfg.aliases[list_name .. '-Last'], 'redundant_parameters', i );		-- search through args for name components beginning at 1
		first = select_one( args, cfg.aliases[list_name .. '-First'], 'redundant_parameters', i );
		link = select_one( args, cfg.aliases[list_name .. '-Link'], 'redundant_parameters', i );
		mask = select_one( args, cfg.aliases[list_name .. '-Mask'], 'redundant_parameters', i );

		last, etal = name_has_etal (last, etal, false);							-- find and remove variations on et al.
		first, etal = name_has_etal (first, etal, false);						-- find and remove variations on et al.
		last, first= name_checks (last, first, list_name);						-- multiple names, extraneous annotation, etc checks
		
		if first and not last then												-- if there is a firstn without a matching lastn
			table.insert( z.message_tail, { set_error( 'first_missing_last', {err_msg_list_name, i}, true ) } );	-- add this error message
		elseif not first and not last then										-- if both firstn and lastn aren't found, are we done?
			count = count + 1;													-- number of times we haven't found last and first
			if 2 &lt;= count then													-- two missing names and we give up
				break;															-- normal exit or there is a two-name hole in the list; can't tell which
			end
		else																	-- we have last with or without a first
			link_title_ok (link, list_name:match ("(%w+)List"):lower() .. '-link' .. i, last, list_name:match ("(%w+)List"):lower() .. '-last' .. i);	-- check for improper wikimarkup

			names[n] = {last = last, first = first, link = link, mask = mask, corporate=false};	-- add this name to our names list (corporate for |vauthors= only)
			n = n + 1;															-- point to next location in the names table
			if 1 == count then													-- if the previous name was missing
				table.insert( z.message_tail, { set_error( 'missing_name', {err_msg_list_name, i-1}, true ) } );		-- add this error message
			end
			count = 0;															-- reset the counter, we're looking for two consecutive missing names
		end
		i = i + 1;																-- point to next args location
	end
	
	return names, etal;															-- all done, return our list of names
end


--[[--------------------------&lt; G E T _ I S O 6 3 9 _ C O D E &gt;------------------------------------------------

Validates language names provided in |language= parameter if not an ISO639-1 or 639-2 code.

Returns the language name and associated two- or three-character code.  Because case of the source may be incorrect
or different from the case that WikiMedia uses, the name comparisons are done in lower case and when a match is
found, the Wikimedia version (assumed to be correct) is returned along with the code.  When there is no match, we
return the original language name string.

mw.language.fetchLanguageNames(&lt;local wiki language&gt;, 'all') returns a list of languages that in some cases may include
extensions. For example, code 'cbk-zam' and its associated name 'Chavacano de Zamboanga' (MediaWiki does not support
code 'cbk' or name 'Chavacano'.  Most (all?) of these languages are not used a 'language' codes per se, rather they
are used as sub-domain names: cbk-zam.wikipedia.org.  These names can be found (for the time being) at
https://phabricator.wikimedia.org/diffusion/ECLD/browse/master/LocalNames/LocalNamesEn.php

Names but that are included in the list will be found if that name is provided in the |language= parameter.  For example,
if |language=Chavacano de Zamboanga, that name will be found with the associated code 'cbk-zam'.  When names are found
and the associated code is not two or three characters, this function returns only the Wikimedia language name.

Adapted from code taken from Module:Check ISO 639-1.

]]

local function get_iso639_code (lang, this_wiki_code)
	local remap = {
		['bangla'] = {'Bengali', 'bn'},											-- MediaWiki returns Bangla (the endonym) but we want Bengali (the exonym); here we remap
		['bengali'] = {'Bengali', 'bn'},										-- MediaWiki doesn't use exonym so here we provide correct language name and 639-1 code
		['bihari'] = {'Bihari', 'bh'},											-- MediaWiki replace 'Bihari' with 'Bhojpuri' so 'Bihari' cannot be found
		['bhojpuri'] = {'Bhojpuri', 'bho'},										-- MediaWiki uses 'bh' as a subdomain name for Bhojpuri wWikipedia: bh.wikipedia.org
	}
	
	if remap[lang:lower()] then
		return remap[lang:lower()][1], remap[lang:lower()][2];					-- for this language 'name', return a possibly new name and appropriate code
	end

	local languages = mw.language.fetchLanguageNames(this_wiki_code, 'all')		-- get a list of language names known to Wikimedia
																				-- ('all' is required for North Ndebele, South Ndebele, and Ojibwa)
	local langlc = mw.ustring.lower(lang);										-- lower case version for comparisons
	
	for code, name in pairs(languages) do										-- scan the list to see if we can find our language
		if langlc == mw.ustring.lower(name) then
			if 2 ~= code:len() and 3 ~= code:len() then							-- two- or three-character codes only; extensions not supported
				return name;													-- so return the name but not the code
			end
			return name, code;													-- found it, return name to ensure proper capitalization and the the code
		end
	end
	return lang;																-- not valid language; return language in original case and nil for the code
end


--[[--------------------------&lt; L A N G U A G E _ P A R A M E T E R &gt;------------------------------------------

Gets language name from a provided two- or three-character ISO 639 code.  If a code is recognized by MediaWiki,
use the returned name; if not, then use the value that was provided with the language parameter.

When |language= contains a recognized language (either code or name), the page is assigned to the category for
that code: Category:Norwegian-language sources (no).  For valid three-character code languages, the page is assigned
to the single category for '639-2' codes: Category:CS1 ISO 639-2 language sources.

Languages that are the same as the local wiki are not categorized.  MediaWiki does not recognize three-character
equivalents of two-character codes: code 'ar' is recognized bit code 'ara' is not.

This function supports multiple languages in the form |language=nb, French, th where the language names or codes are
separated from each other by commas.

]]

local function language_parameter (lang)
	local code;																	-- the two- or three-character language code
	local name;																	-- the language name
	local language_list = {};													-- table of language names to be rendered
	local names_table = {};														-- table made from the value assigned to |language=

	local this_wiki = mw.getContentLanguage();									-- get a language object for this wiki
	local this_wiki_code = this_wiki:getCode()									-- get this wiki's language code
	local this_wiki_name = mw.language.fetchLanguageName(this_wiki_code, this_wiki_code);	-- get this wiki's language name

	local remap = {
		['bh'] = 'Bihari',														-- MediaWiki uses 'bh' as a subdomain name for Bhojpuri wWikipedia: bh.wikipedia.org
		['bn'] = 'Bengali',														-- MediaWiki returns Bangla
	}

	names_table = mw.text.split (lang, '%s*,%s*');								-- names should be a comma separated list

	for _, lang in ipairs (names_table) do										-- reuse lang

		if lang:match ('^%a%a%-') then											-- strip ietf language tags from code; TODO: is there a need to support 3-char with tag?
			lang = lang:match ('(%a%a)%-')										-- keep only 639-1 code portion to lang; TODO: do something with 3166 alpha 2 country code?
		end
		if 2 == lang:len() or 3 == lang:len() then								-- if two-or three-character code
			name = mw.language.fetchLanguageName( lang:lower(), this_wiki_code);	-- get language name if |language= is a proper code
		end
	
		if is_set (name) then													-- if |language= specified a valid code
			code = lang:lower();												-- save it
		else
			name, code = get_iso639_code (lang, this_wiki_code);				-- attempt to get code from name (assign name here so that we are sure of proper capitalization)
		end
	
		if is_set (code) then													-- only 2- or 3-character codes
			name = remap[code] or name;											-- override wikimedia when they misuse language codes/names

			if this_wiki_code ~= code then										-- when the language is not the same as this wiki's language
				if 2 == code:len() then											-- and is a two-character code
					add_prop_cat ('foreign_lang_source' .. code, {name, code})			-- categorize it
				else															-- or is a recognized language (but has a three-character code)
					add_prop_cat ('foreign_lang_source_2' .. code, {code})				-- categorize it differently TODO: support mutliple three-character code categories per cs1|2 template
				end
			end
		else
			add_maint_cat ('unknown_lang');										-- add maint category if not already added
		end
		
		table.insert (language_list, name);
		name = '';																-- so we can reuse it
	end
	
	code = #language_list														-- reuse code as number of languages in the list
	if 2 &gt;= code then
		name = table.concat (language_list, ' and ')							-- insert '&lt;space&gt;and&lt;space&gt;' between two language names
	elseif 2 &lt; code then
		language_list[code] = 'and ' .. language_list[code];					-- prepend last name with 'and&lt;space&gt;'
		name = table.concat (language_list, ', ')								-- and concatenate with '&lt;comma&gt;&lt;space&gt;' separators
	end
	if this_wiki_name == name then
		return '';																-- if one language and that language is this wiki's return an empty string (no annotation)
	end
	return (" " .. wrap_msg ('language', name));								-- otherwise wrap with '(in ...)'
	--[[ TODO: should only return blank or name rather than full list
	so we can clean up the bunched parenthetical elements Language, Type, Format
	]]
end


--[[--------------------------&lt; S E T _ C S 1 _ S T Y L E &gt;----------------------------------------------------

Set style settings for CS1 citation templates. Returns separator and postscript settings

]]

local function set_cs1_style (ps)
	if not is_set (ps) then														-- unless explicitely set to something
		ps = '.';																-- terminate the rendered citation with a period
	end
	return '.', ps;																-- separator is a full stop
end


--[[--------------------------&lt; S E T _ C S 2 _ S T Y L E &gt;----------------------------------------------------

Set style settings for CS2 citation templates. Returns separator, postscript, ref settings

]]

local function set_cs2_style (ps, ref)
	if not is_set (ps) then														-- if |postscript= has not been set, set cs2 default
		ps = '';																-- make sure it isn't nil
	end
	if not is_set (ref) then													-- if |ref= is not set
		ref = "harv";															-- set default |ref=harv
	end
	return ',', ps, ref;														-- separator is a comma
end


--[[--------------------------&lt; G E T _ S E T T I N G S _ F R O M _ C I T E _ C L A S S &gt;----------------------

When |mode= is not set or when its value is invalid, use config.CitationClass and parameter values to establish
rendered style.

]]

local function get_settings_from_cite_class (ps, ref, cite_class)
	local sep;
	if (cite_class == "citation") then											-- for citation templates (CS2)
		sep, ps, ref = set_cs2_style (ps, ref);
	else																		-- not a citation template so CS1
		sep, ps = set_cs1_style (ps);
	end

	return sep, ps, ref															-- return them all
end


--[[--------------------------&lt; S E T _ S T Y L E &gt;------------------------------------------------------------

Establish basic style settings to be used when rendering the citation.  Uses |mode= if set and valid or uses
config.CitationClass from the template's #invoke: to establish style.

]]

local function set_style (mode, ps, ref, cite_class)
	local sep;
	if 'cs2' == mode then														-- if this template is to be rendered in CS2 (citation) style
		sep, ps, ref = set_cs2_style (ps, ref);
	elseif 'cs1' == mode then													-- if this template is to be rendered in CS1 (cite xxx) style
		sep, ps = set_cs1_style (ps);
	else																		-- anything but cs1 or cs2
		sep, ps, ref = get_settings_from_cite_class (ps, ref, cite_class);		-- get settings based on the template's CitationClass
	end
	if 'none' == ps:lower() then												-- if assigned value is 'none' then
		ps = '';																-- set to empty string
	end
	
	return sep, ps, ref
end


--[=[-------------------------&lt; I S _ P D F &gt;------------------------------------------------------------------

Determines if a url has the file extension that is one of the pdf file extensions used by [[MediaWiki:Common.css]] when
applying the pdf icon to external links.

returns true if file extension is one of the recognized extensions, else false

]=]

local function is_pdf (url)
	return url:match ('%.pdf$') or url:match ('%.PDF$') or url:match ('%.pdf[%?#]') or url:match ('%.PDF[%?#]');
end


--[[--------------------------&lt; S T Y L E _ F O R M A T &gt;------------------------------------------------------

Applies css style to |format=, |chapter-format=, etc.  Also emits an error message if the format parameter does
not have a matching url parameter.  If the format parameter is not set and the url contains a file extension that
is recognized as a pdf document by MediaWiki's commons.css, this code will set the format parameter to (PDF) with
the appropriate styling.

]]

local function style_format (format, url, fmt_param, url_param)
	if is_set (format) then
		format = wrap_style ('format', format);									-- add leading space, parentheses, resize
		if not is_set (url) then
			format = format .. set_error( 'format_missing_url', {fmt_param, url_param} );	-- add an error message
		end
	elseif is_pdf (url) then													-- format is not set so if url is a pdf file then
		format = wrap_style ('format', 'PDF');									-- set format to pdf
	else
		format = '';															-- empty string for concatenation
	end
	return format;
end


--[[--------------------------&lt; G E T _ D I S P L A Y _ A U T H O R S _ E D I T O R S &gt;------------------------

Returns a number that defines the number of names displayed for author and editor name lists and a boolean flag
to indicate when et al. should be appended to the name list.

When the value assigned to |display-xxxxors= is a number greater than or equal to zero, return the number and
the previous state of the 'etal' flag (false by default but may have been set to true if the name list contains
some variant of the text 'et al.').

When the value assigned to |display-xxxxors= is the keyword 'etal', return a number that is one greater than the
number of authors in the list and set the 'etal' flag true.  This will cause the list_people() to display all of
the names in the name list followed by 'et al.'

In all other cases, returns nil and the previous state of the 'etal' flag.

inputs:
	max: A['DisplayAuthors'] or A['DisplayEditors']; a number or some flavor of etal
	count: #a or #e
	list_name: 'authors' or 'editors'
	etal: author_etal or editor_etal

]]

local function get_display_authors_editors (max, count, list_name, etal)
	if is_set (max) then
		if 'etal' == max:lower():gsub("[ '%.]", '') then						-- the :gsub() portion makes 'etal' from a variety of 'et al.' spellings and stylings
			max = count + 1;													-- number of authors + 1 so display all author name plus et al.
			etal = true;														-- overrides value set by extract_names()
		elseif max:match ('^%d+$') then											-- if is a string of numbers
			max = tonumber (max);												-- make it a number
			if max &gt;= count then												-- if |display-xxxxors= value greater than or equal to number of authors/editors
				add_maint_cat ('disp_auth_ed', cfg.special_case_translation [list_name]);
			end
		else																	-- not a valid keyword or number
			table.insert( z.message_tail, { set_error( 'invalid_param_val', {'display-' .. list_name, max}, true ) } );		-- add error message
			max = nil;															-- unset; as if |display-xxxxors= had not been set
		end
	end
	
	return max, etal;
end


--[[--------------------------&lt; E X T R A _ T E X T _ I N _ P A G E _ C H E C K &gt;------------------------------

Adds page to Category:CS1 maint: extra text if |page= or |pages= has what appears to be some form of p. or pp. 
abbreviation in the first characters of the parameter content.

check Page and Pages for extraneous p, p., pp, and pp. at start of parameter value:
	good pattern: '^P[^%.P%l]' matches when |page(s)= begins PX or P# but not Px where x and X are letters and # is a dgiit
	bad pattern: '^[Pp][Pp]' matches matches when |page(s)= begins pp or pP or Pp or PP

]]

local function extra_text_in_page_check (page)
	local good_pattern = '^P[^%.Pp]';											-- ok to begin with uppercase P: P7 (pg 7 of section P) but not p123 (page 123) TODO: add Gg for PG or Pg?
	local bad_pattern = '^[Pp]?[Pp]%.?[ %d]';

	if not page:match (good_pattern) and (page:match (bad_pattern) or  page:match ('^[Pp]ages?')) then
		add_maint_cat ('extra_text');
	end
end


--[=[-------------------------&lt; G E T _ V _ N A M E _ T A B L E &gt;----------------------------------------------

split apart a |vauthors= or |veditors= parameter.  This function allows for corporate names, wrapped in doubled
parentheses to also have commas; in the old version of the code, the doubled parnetheses were included in the
rendered citation and in the metadata.  Individual author names may be wikilinked

	|vauthors=Jones AB, [[E. B. White|White EB]], ((Black, Brown, and Co.))

]=]

local function get_v_name_table (vparam, output_table, output_link_table)
	local name_table = mw.text.split(vparam, "%s*,%s*");						-- names are separated by commas
	local wl_type, label, link;													-- wl_type not used here; just a place holder
	
	local i = 1;
	
	while name_table[i] do
		if name_table[i]:match ('^%(%(.*[^%)][^%)]$') then						-- first segment of corporate with one or more commas; this segment has the opening doubled parens
			local name = name_table[i];
			i=i+1;																-- bump indexer to next segment
			while name_table[i] do
				name = name .. ', ' .. name_table[i];							-- concatenate with previous segments
				if name_table[i]:match ('^.*%)%)$') then						-- if this table member has the closing doubled parens
					break;														-- and done reassembling so
				end
				i=i+1;															-- bump indexer
			end
			table.insert (output_table, name);									-- and add corporate name to the output table
			table.insert (output_link_table, '');								-- no wikilink
		else
			wl_type, label, link = is_wikilink (name_table[i]);					-- wl_type is: 0, no wl (text in label variable); 1, [[D]]; 2, [[L|D]]
			table.insert (output_table, label);									-- add this name
			if 1 == wl_type then
				table.insert (output_link_table, label);						-- simple wikilink [[D]]
			else
				table.insert (output_link_table, link);							-- no wikilink or [[L|D]]; add this link if there is one, else empty string
			end
		end
		i = i+1;
	end	
	return output_table;
end


--[[--------------------------&lt; P A R S E _ V A U T H O R S _ V E D I T O R S &gt;--------------------------------

This function extracts author / editor names from |vauthors= or |veditors= and finds matching |xxxxor-maskn= and
|xxxxor-linkn= in args.  It then returns a table of assembled names just as extract_names() does.

Author / editor names in |vauthors= or |veditors= must be in Vancouver system style. Corporate or institutional names
may sometimes be required and because such names will often fail the is_good_vanc_name() and other format compliance
tests, are wrapped in doubled paranethese ((corporate name)) to suppress the format tests.

Supports generational suffixes Jr, 2nd, 3rd, 4th–6th.

This function sets the vancouver error when a reqired comma is missing and when there is a space between an author's initials.

]]

local function parse_vauthors_veditors (args, vparam, list_name)
	local names = {};															-- table of names assembled from |vauthors=, |author-maskn=, |author-linkn=
	local v_name_table = {};
	local v_link_table = {};													-- when name is wikilinked, targets go in this table
	local etal = false;															-- return value set to true when we find some form of et al. vauthors parameter
	local last, first, link, mask, suffix;
	local corporate = false;

	vparam, etal = name_has_etal (vparam, etal, true);							-- find and remove variations on et al. do not categorize (do it here because et al. might have a period)
	v_name_table = get_v_name_table (vparam, v_name_table, v_link_table);						-- names are separated by commas

	for i, v_name in ipairs(v_name_table) do
		if v_name:match ('^%(%(.+%)%)$') then									-- corporate authors are wrapped in doubled parentheses to supress vanc formatting and error detection
			first = '';															-- set to empty string for concatenation and because it may have been set for previous author/editor
			last = v_name:match ('^%(%((.+)%)%)$')								-- remove doubled parntheses
			corporate = true;													-- flag used in list_people()
		elseif string.find(v_name, "%s") then
			if v_name:find('[;%.]') then										-- look for commonly occurring punctuation characters; 
				add_vanc_error ('punctuation');
			end
			local lastfirstTable = {}
			lastfirstTable = mw.text.split(v_name, "%s")
			first = table.remove(lastfirstTable);								-- removes and returns value of last element in table which should be author intials
			if is_suffix (first) then											-- if a valid suffix
				suffix = first													-- save it as a suffix and
				first = table.remove(lastfirstTable);							-- get what should be the initials from the table
			end																	-- no suffix error message here because letter combination may be result of Romanization; check for digits?
			last = table.concat(lastfirstTable, " ")							-- returns a string that is the concatenation of all other names that are not initials
			if mw.ustring.match (last, '%a+%s+%u+%s+%a+') then
				add_vanc_error ('missing comma');								-- matches last II last; the case when a comma is missing
			end
			if mw.ustring.match (v_name, ' %u %u$') then						-- this test is in the wrong place TODO: move or replace with a more appropriate test
				add_vanc_error ('name');										-- matches a space between two intiials
			end
		else
			first = '';															-- set to empty string for concatenation and because it may have been set for previous author/editor
			last = v_name;														-- last name or single corporate name?  Doesn't support multiword corporate names? do we need this?
		end
																
		if is_set (first) then
			if not mw.ustring.match (first, "^%u?%u$") then						-- first shall contain one or two upper-case letters, nothing else
				add_vanc_error ('initials');									-- too many initials; mixed case initials (which may be ok Romanization); hyphenated initials
			end
			is_good_vanc_name (last, first);									-- check first and last before restoring the suffix which may have a non-Latin digit
			if is_set (suffix) then
				first = first .. ' ' .. suffix;									-- if there was a suffix concatenate with the initials
				suffix = '';													-- unset so we don't add this suffix to all subsequent names
			end
		else
			if not corporate then
				is_good_vanc_name (last, '');
			end
		end

		link = select_one( args, cfg.aliases[list_name .. '-Link'], 'redundant_parameters', i ) or v_link_table[i];
		mask = select_one( args, cfg.aliases[list_name .. '-Mask'], 'redundant_parameters', i );
		names[i] = {last = last, first = first, link = link, mask = mask, corporate=corporate};		-- add this assembled name to our names list
	end
	return names, etal;															-- all done, return our list of names
end


--[[--------------------------&lt; S E L E C T _ A U T H O R _ E D I T O R _ S O U R C E &gt;------------------------

Select one of |authors=, |authorn= / |lastn / firstn=, or |vauthors= as the source of the author name list or
select one of |editors=, |editorn= / editor-lastn= / |editor-firstn= or |veditors= as the source of the editor name list.

Only one of these appropriate three will be used.  The hierarchy is: |authorn= (and aliases) highest and |authors= lowest and
similarly, |editorn= (and aliases) highest and |editors= lowest

When looking for |authorn= / |editorn= parameters, test |xxxxor1= and |xxxxor2= (and all of their aliases); stops after the second
test which mimicks the test used in extract_names() when looking for a hole in the author name list.  There may be a better
way to do this, I just haven't discovered what that way is.

Emits an error message when more than one xxxxor name source is provided.

In this function, vxxxxors = vauthors or veditors; xxxxors = authors or editors as appropriate.

]]

local function select_author_editor_source (vxxxxors, xxxxors, args, list_name)
local lastfirst = false;
	if select_one( args, cfg.aliases[list_name .. '-Last'], 'none', 1 ) or		-- do this twice incase we have a |first1= without a |last1=; this ...
		select_one( args, cfg.aliases[list_name .. '-First'], 'none', 1 ) or	-- ... also catches the case where |first= is used with |vauthors=
		select_one( args, cfg.aliases[list_name .. '-Last'], 'none', 2 ) or
		select_one( args, cfg.aliases[list_name .. '-First'], 'none', 2 ) then
			lastfirst=true;
	end

	if (is_set (vxxxxors) and true == lastfirst) or								-- these are the three error conditions
		(is_set (vxxxxors) and is_set (xxxxors)) or
		(true == lastfirst and is_set (xxxxors)) then
			local err_name;
			if 'AuthorList' == list_name then									-- figure out which name should be used in error message
				err_name = 'author';
			else
				err_name = 'editor';
			end
			table.insert( z.message_tail, { set_error( 'redundant_parameters',
				{err_name .. '-name-list parameters'}, true ) } );				-- add error message
	end

	if true == lastfirst then return 1 end;										-- return a number indicating which author name source to use
	if is_set (vxxxxors) then return 2 end;
	if is_set (xxxxors) then return 3 end;
	return 1;																	-- no authors so return 1; this allows missing author name test to run in case there is a first without last 
end


--[[--------------------------&lt; I S _ V A L I D _ P A R A M E T E R _ V A L U E &gt;------------------------------

This function is used to validate a parameter's assigned value for those parameters that have only a limited number
of allowable values (yes, y, true, no, etc).  When the parameter value has not been assigned a value (missing or empty
in the source template) the function returns true.  If the parameter value is one of the list of allowed values returns
true; else, emits an error message and returns false.

]]

local function is_valid_parameter_value (value, name, possible)
	if not is_set (value) then
		return true;															-- an empty parameter is ok
	elseif in_array(value:lower(), possible) then
		return true;
	else
		table.insert( z.message_tail, { set_error( 'invalid_param_val', {name, value}, true ) } );	-- not an allowed value so add error message
		return false
	end
end


--[[--------------------------&lt; T E R M I N A T E _ N A M E _ L I S T &gt;----------------------------------------

This function terminates a name list (author, contributor, editor) with a separator character (sepc) and a space
when the last character is not a sepc character or when the last three characters are not sepc followed by two
closing square brackets (close of a wikilink).  When either of these is true, the name_list is terminated with a
single space character.

]]

local function terminate_name_list (name_list, sepc)
	if (string.sub (name_list,-3,-1) == sepc .. '. ') then						-- if already properly terminated
		return name_list;														-- just return the name list
	elseif (string.sub (name_list,-1,-1) == sepc) or (string.sub (name_list,-3,-1) == sepc .. ']]') then	-- if last name in list ends with sepc char
		return name_list .. " ";												-- don't add another
	else
		return name_list .. sepc .. ' ';										-- otherwise terninate the name list
	end
end


--[[-------------------------&lt; F O R M A T _ V O L U M E _ I S S U E &gt;----------------------------------------

returns the concatenation of the formatted volume and issue parameters as a single string; or formatted volume
or formatted issue, or an empty string if neither are set.

]]
	
local function format_volume_issue (volume, issue, cite_class, origin, sepc, lower)
	if not is_set (volume) and not is_set (issue) then
		return '';
	end
	
	if 'magazine' == cite_class or (in_array (cite_class, {'citation', 'map'}) and 'magazine' == origin) then
		if is_set (volume) and is_set (issue) then
			return wrap_msg ('vol-no', {sepc, volume, issue}, lower);
		elseif is_set (volume) then
			return wrap_msg ('vol', {sepc, volume}, lower);
		else
			return wrap_msg ('issue', {sepc, issue}, lower);
		end
	end

	local vol = '';
		
	if is_set (volume) then
		if (4 &lt; mw.ustring.len(volume)) then
			vol = substitute (cfg.messages['j-vol'], {sepc, volume});
		else
			vol = substitute (cfg.presentation['vol-bold'], {sepc, hyphen_to_dash(volume)});
		end
	end
	if is_set (issue) then
		return vol .. substitute (cfg.messages['j-issue'], issue);
	end
	return vol;
end


--[[-------------------------&lt; F O R M A T _ P A G E S _ S H E E T S &gt;-----------------------------------------

adds static text to one of |page(s)= or |sheet(s)= values and returns it with all of the others set to empty strings.
The return order is:
	page, pages, sheet, sheets

Singular has priority over plural when both are provided.

]]

local function format_pages_sheets (page, pages, sheet, sheets, cite_class, origin, sepc, nopp, lower)
	if 'map' == cite_class then													-- only cite map supports sheet(s) as in-source locators
		if is_set (sheet) then
			if 'journal' == origin then
				return '', '', wrap_msg ('j-sheet', sheet, lower), '';
			else
				return '', '', wrap_msg ('sheet', {sepc, sheet}, lower), '';
			end
		elseif is_set (sheets) then
			if 'journal' == origin then
				return '', '', '', wrap_msg ('j-sheets', sheets, lower);
			else
				return '', '', '', wrap_msg ('sheets', {sepc, sheets}, lower);
			end
		end
	end

	local is_journal = 'journal' == cite_class or (in_array (cite_class, {'citation', 'map'}) and 'journal' == origin);
	
	if is_set (page) then
		if is_journal then
			return substitute (cfg.messages['j-page(s)'], page), '', '', '';
		elseif not nopp then
			return substitute (cfg.messages['p-prefix'], {sepc, page}), '', '', '';
		else
			return substitute (cfg.messages['nopp'], {sepc, page}), '', '', '';
		end
	elseif is_set(pages) then
		if is_journal then
			return substitute (cfg.messages['j-page(s)'], pages), '', '', '';
		elseif tonumber(pages) ~= nil and not nopp then										-- if pages is only digits, assume a single page number
			return '', substitute (cfg.messages['p-prefix'], {sepc, pages}), '', '';
		elseif not nopp then
			return '', substitute (cfg.messages['pp-prefix'], {sepc, pages}), '', '';
		else
			return '', substitute (cfg.messages['nopp'], {sepc, pages}), '', '';
		end
	end
	
	return '', '', '', '';														-- return empty strings
end


--[=[-------------------------&lt; A R C H I V E _ U R L _ C H E C K &gt;--------------------------------------------

Check archive.org urls to make sure they at least look like they are pointing at valid archives and not to the 
save snapshot url or to calendar pages.  When the archive url is 'https://web.archive.org/save/' (or http://...)
archive.org saves a snapshot of the target page in the url.  That is something that Wikipedia should not allow
unwitting readers to do.

When the archive.org url does not have a complete timestamp, archive.org chooses a snapshot according to its own
algorithm or provides a calendar 'search' result.  [[WP:ELNO]] discourages links to search results.

This function looks at the value assigned to |archive-url= and returns empty strings for |archive-url= and
|archive-date= and an error message when:
	|archive-url= holds an archive.org save command url
	|archive-url= is an archive.org url that does not have a complete timestamp (YYYYMMDDhhmmss 14 digits) in the
		correct place
otherwise returns |archive-url= and |archive-date=

There are two mostly compatible archive.org urls:
	//web.archive.org/&lt;timestamp&gt;...		-- the old form
	//web.archive.org/web/&lt;timestamp&gt;...	-- the new form

The old form does not support or map to the new form when it contains a display flag.  There are four identified flags
('id_', 'js_', 'cs_', 'im_') but since archive.org ignores others following the same form (two letters and an underscore)
we don't check for these specific flags but we do check the form.

This function supports a preview mode.  When the article is rendered in preview mode, this funct may return a modified
archive url:
	for save command errors, return undated wildcard (/*/)
	for timestamp errors when the timestamp has a wildcard, return the url unmodified
	for timestamp errors when the timestamp does not have a wildcard, return with timestamp limited to six digits plus wildcard (/yyyymm*/)

]=]

local function archive_url_check (url, date)
	local err_msg = '';															-- start with the error message empty
	local path, timestamp, flag;												-- portions of the archive.or url
	
	if (not url:match('//web%.archive%.org/')) and (not url:match('//liveweb%.archive%.org/')) then		-- also deprecated liveweb Wayback machine url
		return url, date;														-- not an archive.org archive, return ArchiveURL and ArchiveDate
	end

	if url:match('//web%.archive%.org/save/') then								-- if a save command url, we don't want to allow saving of the target page 
		err_msg = 'save command';
		url = url:gsub ('(//web%.archive%.org)/save/', '%1/*/', 1);				-- for preview mode: modify ArchiveURL
	elseif url:match('//liveweb%.archive%.org/') then
		err_msg = 'liveweb';
	else
		path, timestamp, flag = url:match('//web%.archive%.org/([^%d]*)(%d+)([^/]*)/');		-- split out some of the url parts for evaluation
		
		if not is_set(timestamp) or 14 ~= timestamp:len() then					-- path and flag optional, must have 14-digit timestamp here
			err_msg = 'timestamp';
			if '*' ~= flag then
				url=url:gsub ('(//web%.archive%.org/[^%d]*%d?%d?%d?%d?%d?%d?)[^/]*', '%1*', 1)	-- for preview, modify ts to be yearmo* max (0-6 digits plus splat)
			end
		elseif is_set(path) and 'web/' ~= path then								-- older archive urls do not have the extra 'web/' path element
			err_msg = 'path';
		elseif is_set (flag) and not is_set (path) then							-- flag not allowed with the old form url (without the 'web/' path element)
			err_msg = 'flag';
		elseif is_set (flag) and not flag:match ('%a%a_') then					-- flag if present must be two alpha characters and underscore (requires 'web/' path element)
			err_msg = 'flag';
		else
			return url, date;													-- return archiveURL and ArchiveDate
		end
	end
																				-- if here, something not right so
	table.insert( z.message_tail, { set_error( 'archive_url', {err_msg}, true ) } );	-- add error message and
	if is_set (Frame:preprocess('{{REVISIONID}}')) then
		return '', '';															-- return empty strings for archiveURL and ArchiveDate
	else
		return url, date;														-- preview mode so return archiveURL and ArchiveDate
	end
end


--[[--------------------------&lt; M I S S I N G _ P I P E _ C H E C K &gt;------------------------------------------

Look at the contents of a parameter. If the content has a string of characters and digits followed by an equal
sign, compare the alphanumeric string to the list of cs1|2 parameters.  If found, then the string is possibly a
parameter that is missing its pipe:
	{{cite ... |title=Title access-date=2016-03-17}}

cs1|2 shares some parameter names with xml/html atributes: class=, title=, etc.  To prevent false positives xml/html
tags are removed before the search.

If a missing pipe is detected, this function adds the missing pipe maintenance category.

]]

local function missing_pipe_check (value)
	local capture;
	value = value:gsub ('%b&lt;&gt;', '');											-- remove xml/html tags because attributes: class=, title=, etc 

	capture = value:match ('%s+(%a[%a%d]+)%s*=') or value:match ('^(%a[%a%d]+)%s*=');	-- find and categorize parameters with possible missing pipes
	if capture and validate (capture) then								-- if the capture is a valid parameter name
		add_maint_cat ('missing_pipe');
	end
end


--[[--------------------------&lt; C I T A T I O N 0 &gt;------------------------------------------------------------

This is the main function doing the majority of the citation formatting.

]]

local function citation0( config, args)
	--[[ 
	Load Input Parameters
	The argument_wrapper facilitates the mapping of multiple aliases to single internal variable.
	]]
	local A = argument_wrapper( args );
	local i 

	-- Pick out the relevant fields from the arguments.  Different citation templates
	-- define different field names for the same underlying things.	

-- set default parameter values defined by |mode= parameter.
	local Mode = A['Mode'];
	if not is_valid_parameter_value (Mode, 'mode', cfg.keywords['mode']) then
		Mode = '';
	end

	local author_etal;
	local a	= {};																-- authors list from |lastn= / |firstn= pairs or |vauthors=
	local Authors;
	local NameListFormat = A['NameListFormat'];
	local Collaboration = A['Collaboration'];

	do																			-- to limit scope of selected
		local selected = select_author_editor_source (A['Vauthors'], A['Authors'], args, 'AuthorList');
		if 1 == selected then
			a, author_etal = extract_names (args, 'AuthorList');				-- fetch author list from |authorn= / |lastn= / |firstn=, |author-linkn=, and |author-maskn=
		elseif 2 == selected then
			NameListFormat = 'vanc';											-- override whatever |name-list-format= might be
			a, author_etal = parse_vauthors_veditors (args, args.vauthors, 'AuthorList');	-- fetch author list from |vauthors=, |author-linkn=, and |author-maskn=
		elseif 3 == selected then
			Authors = A['Authors'];												-- use content of |authors=
			if 'authors' == A:ORIGIN('Authors') then							-- but add a maint cat if the parameter is |authors=
				add_maint_cat ('authors');										-- because use of this parameter is discouraged; what to do about the aliases is a TODO:
			end
		end
		if is_set (Collaboration) then
			author_etal = true;													-- so that |display-authors=etal not required
		end
	end

	local Others = A['Others'];

	local editor_etal;
	local e	= {};																-- editors list from |editor-lastn= / |editor-firstn= pairs or |veditors=
	local Editors;

	do																			-- to limit scope of selected
		local selected = select_author_editor_source (A['Veditors'], A['Editors'], args, 'EditorList');
		if 1 == selected then
			e, editor_etal = extract_names (args, 'EditorList');				-- fetch editor list from |editorn= / |editor-lastn= / |editor-firstn=, |editor-linkn=, and |editor-maskn=
		elseif 2 == selected then
			NameListFormat = 'vanc';											-- override whatever |name-list-format= might be
			e, editor_etal = parse_vauthors_veditors (args, args.veditors, 'EditorList');	-- fetch editor list from |veditors=, |editor-linkn=, and |editor-maskn=
		elseif 3 == selected then
			Editors = A['Editors'];												-- use content of |editors=
			add_maint_cat ('editors');											-- but add a maint cat because use of this parameter is discouraged
		end
	end

	local t = {};																-- translators list from |translator-lastn= / translator-firstn= pairs
	local Translators;															-- assembled translators name list
	t = extract_names (args, 'TranslatorList');									-- fetch translator list from |translatorn= / |translator-lastn=, -firstn=, -linkn=, -maskn=

	local interviewers_list = {};
	local Interviewers = A['Interviewers']
	if is_set (Interviewers) then												-- add a maint cat if the |interviewers= is used
		add_maint_cat ('interviewers');											-- because use of this parameter is discouraged
	else
		interviewers_list = extract_names (args, 'InterviewerList');			-- else, process preferred interviewers parameters
	end

	local c = {};																-- contributors list from |contributor-lastn= / contributor-firstn= pairs
	local Contributors;															-- assembled contributors name list
	local Contribution = A['Contribution'];
	if in_array(config.CitationClass, {"book","citation"}) and not is_set(A['Periodical']) then	-- |contributor= and |contribution= only supported in book cites
		c = extract_names (args, 'ContributorList');							-- fetch contributor list from |contributorn= / |contributor-lastn=, -firstn=, -linkn=, -maskn=
		
		if 0 &lt; #c then
			if not is_set (Contribution) then									-- |contributor= requires |contribution=
				table.insert( z.message_tail, { set_error( 'contributor_missing_required_param', 'contribution')});	-- add missing contribution error message
				c = {};															-- blank the contributors' table; it is used as a flag later
			end
			if 0 == #a then														-- |contributor= requires |author=
				table.insert( z.message_tail, { set_error( 'contributor_missing_required_param', 'author')});	-- add missing author error message
				c = {};															-- blank the contributors' table; it is used as a flag later
			end
		end
	else																		-- if not a book cite
		if select_one (args, cfg.aliases['ContributorList-Last'], 'redundant_parameters', 1 ) then	-- are there contributor name list parameters?
			table.insert( z.message_tail, { set_error( 'contributor_ignored')});	-- add contributor ignored error message
		end
		Contribution = nil;														-- unset
	end

	if not is_valid_parameter_value (NameListFormat, 'name-list-format', cfg.keywords['name-list-format']) then			-- only accepted value for this parameter is 'vanc'
		NameListFormat = '';													-- anything else, set to empty string
	end

	local Year = A['Year'];
	local PublicationDate = A['PublicationDate'];
	local OrigYear = A['OrigYear'];
	local Date = A['Date'];
	local LayDate = A['LayDate'];
	------------------------------------------------- Get title data
	local Title = A['Title'];
	local ScriptTitle = A['ScriptTitle'];
	local BookTitle = A['BookTitle'];
	local Conference = A['Conference'];
	local TransTitle = A['TransTitle'];
	local TitleNote = A['TitleNote'];
	local TitleLink = A['TitleLink'];
			link_title_ok (TitleLink, A:ORIGIN ('TitleLink'), Title, 'title');	-- check for wikimarkup in |title-link= or wikimarkup in |title= when |title-link= is set

	local Chapter = A['Chapter'];
	local ScriptChapter = A['ScriptChapter'];
	local ChapterLink	-- = A['ChapterLink'];									-- deprecated as a parameter but still used internally by cite episode
	local TransChapter = A['TransChapter'];
	local TitleType = A['TitleType'];
	local Degree = A['Degree'];
	local Docket = A['Docket'];
	local ArchiveFormat = A['ArchiveFormat'];

	local ArchiveDate;
	local ArchiveURL;

	ArchiveURL, ArchiveDate = archive_url_check (A['ArchiveURL'], A['ArchiveDate'])
	
	local DeadURL = A['DeadURL']
		if not is_valid_parameter_value (DeadURL, 'dead-url', cfg.keywords ['deadurl']) then	-- set in config.defaults to 'yes'
			DeadURL = '';														-- anything else, set to empty string
		end

	local URL = A['URL']
	local URLorigin = A:ORIGIN('URL');											-- get name of parameter that holds URL
	local ChapterURL = A['ChapterURL'];
	local ChapterURLorigin = A:ORIGIN('ChapterURL');							-- get name of parameter that holds ChapterURL
	local ConferenceFormat = A['ConferenceFormat'];
	local ConferenceURL = A['ConferenceURL'];
	local ConferenceURLorigin = A:ORIGIN('ConferenceURL');						-- get name of parameter that holds ConferenceURL
	local Periodical = A['Periodical'];
	local Periodical_origin = A:ORIGIN('Periodical');							-- get the name of the periodical parameter

	local Series = A['Series'];
	
	local Volume;
	local Issue;
	local Page;
	local Pages;
	local At;

	if in_array (config.CitationClass, cfg.templates_using_volume) then
		Volume = A['Volume'];
	end
																				-- conference &amp; map books do not support issue
	if in_array (config.CitationClass, cfg.templates_using_issue) and not (in_array (config.CitationClass, {'conference', 'map'}) and not is_set (Periodical))then
		Issue = A['Issue'];
	end
	local Position = '';
	if not in_array (config.CitationClass, cfg.templates_not_using_page) then
		Page = A['Page'];
		Pages = hyphen_to_dash( A['Pages'] );	
		At = A['At'];
	end

	local Edition = A['Edition'];
	local PublicationPlace = A['PublicationPlace']
	local Place = A['Place'];
	
	local PublisherName = A['PublisherName'];
	local RegistrationRequired = A['RegistrationRequired'];
		if not is_valid_parameter_value (RegistrationRequired, 'registration', cfg.keywords ['yes_true_y']) then
			RegistrationRequired=nil;
		end

	local SubscriptionRequired = A['SubscriptionRequired'];
		if not is_valid_parameter_value (SubscriptionRequired, 'subscription', cfg.keywords ['yes_true_y']) then
			SubscriptionRequired=nil;
		end

	local UrlAccess = A['UrlAccess'];
		if not is_valid_parameter_value (UrlAccess, 'url-access', cfg.keywords ['url-access']) then
			UrlAccess = nil;
		end
		if not is_set(URL) and is_set(UrlAccess) then
			UrlAccess = nil;
			table.insert( z.message_tail, { set_error( 'param_access_requires_param', {'url'}, true ) } );
		end

		if is_set (UrlAccess) and is_set (SubscriptionRequired) then			-- while not aliases, these are much the same so if both are set
			table.insert( z.message_tail, { set_error( 'redundant_parameters', {wrap_style ('parameter', 'url-access') .. ' and ' .. wrap_style ('parameter', 'subscription')}, true ) } );		-- add error message
			SubscriptionRequired = nil;											-- unset; prefer |access= over |subscription=
		end
		if is_set (UrlAccess) and is_set (RegistrationRequired) then			-- these are not the same but contradictory so if both are set
			table.insert( z.message_tail, { set_error( 'redundant_parameters', {wrap_style ('parameter', 'url-access') .. ' and ' .. wrap_style ('parameter', 'registration')}, true ) } );		-- add error message
			RegistrationRequired = nil;											-- unset; prefer |access= over |registration=
		end

	local ChapterUrlAccess = A['ChapterUrlAccess'];
		if not is_valid_parameter_value (ChapterUrlAccess, 'chapter-url-access', cfg.keywords ['url-access']) then	-- same as url-access
			ChapterUrlAccess = nil;
		end
		if not is_set(ChapterURL) and is_set(ChapterUrlAccess) then
			ChapterUrlAccess = nil;
			table.insert( z.message_tail, { set_error( 'param_access_requires_param', {'chapter-url'}, true ) } );
		end

	local Via = A['Via'];
	local AccessDate = A['AccessDate'];
	local Agency = A['Agency'];

	local Language = A['Language'];
	local Format = A['Format'];
	local ChapterFormat = A['ChapterFormat'];
	local DoiBroken = A['DoiBroken'];
	local ID = A['ID'];
	local ASINTLD = A['ASINTLD'];
	local IgnoreISBN = A['IgnoreISBN'];
		if not is_valid_parameter_value (IgnoreISBN, 'ignore-isbn-error', cfg.keywords ['yes_true_y']) then
			IgnoreISBN = nil;													-- anything else, set to empty string
		end
	local Embargo = A['Embargo'];
	local Class = A['Class'];													-- arxiv class identifier

	local ID_list = extract_ids( args );
	local ID_access_levels = extract_id_access_levels( args, ID_list );

	local Quote = A['Quote'];

	local LayFormat = A['LayFormat'];
	local LayURL = A['LayURL'];
	local LaySource = A['LaySource'];
	local Transcript = A['Transcript'];
	local TranscriptFormat = A['TranscriptFormat'];
	local TranscriptURL = A['TranscriptURL'] 
	local TranscriptURLorigin = A:ORIGIN('TranscriptURL');						-- get name of parameter that holds TranscriptURL

	local LastAuthorAmp = A['LastAuthorAmp'];
		if not is_valid_parameter_value (LastAuthorAmp, 'last-author-amp', cfg.keywords ['yes_true_y']) then
			LastAuthorAmp = nil;												-- set to empty string
		end

	local no_tracking_cats = A['NoTracking'];
		if not is_valid_parameter_value (no_tracking_cats, 'no-tracking', cfg.keywords ['yes_true_y']) then
			no_tracking_cats = nil;												-- set to empty string
		end

	--local variables that are not cs1 parameters
	local use_lowercase;														-- controls capitalization of certain static text
	local this_page = mw.title.getCurrentTitle();								-- also used for COinS and for language
	local anchor_year;															-- used in the CITEREF identifier
	local COinS_date = {};														-- holds date info extracted from |date= for the COinS metadata by Module:Date verification

	local DF = A['DF'];															-- date format set in cs1|2 template
	if not is_valid_parameter_value (DF, 'df', cfg.keywords['date-format']) then	-- validate reformatting keyword
		DF = '';																-- not valid, set to empty string
	end

	local sepc;											-- separator between citation elements for CS1 a period, for CS2, a comma
	local PostScript;
	local Ref;
	sepc, PostScript, Ref = set_style (Mode:lower(), A['PostScript'], A['Ref'], config.CitationClass);
	use_lowercase = ( sepc == ',' );					-- used to control capitalization for certain static text

	--check this page to see if it is in one of the namespaces that cs1 is not supposed to add to the error categories
	if not is_set (no_tracking_cats) then										-- ignore if we are already not going to categorize this page
		if in_array (this_page.nsText, cfg.uncategorized_namespaces) then
			no_tracking_cats = "true";											-- set no_tracking_cats
		end
		for _,v in ipairs (cfg.uncategorized_subpages) do						-- cycle through page name patterns
			if this_page.text:match (v) then									-- test page name against each pattern
				no_tracking_cats = "true";										-- set no_tracking_cats
				break;															-- bail out if one is found
			end
		end
	end

	-- check for extra |page=, |pages= or |at= parameters. (also sheet and sheets while we're at it)
	select_one( args, {'page', 'p', 'pp', 'pages', 'at', 'sheet', 'sheets'}, 'redundant_parameters' );		-- this is a dummy call simply to get the error message and category

	local NoPP = A['NoPP'] 
	if is_set (NoPP) and is_valid_parameter_value (NoPP, 'nopp', cfg.keywords ['yes_true_y']) then
		NoPP = true;
	else
		NoPP = nil;																-- unset, used as a flag later
	end

	if is_set(Page) then
		if is_set(Pages) or is_set(At) then
			Pages = '';															-- unset the others
			At = '';
		end
		extra_text_in_page_check (Page);										-- add this page to maint cat if |page= value begins with what looks like p. or pp.
	elseif is_set(Pages) then
		if is_set(At) then
			At = '';															-- unset
		end
		extra_text_in_page_check (Pages);										-- add this page to maint cat if |pages= value begins with what looks like p. or pp.
	end	

	-- both |publication-place= and |place= (|location=) allowed if different
	if not is_set(PublicationPlace) and is_set(Place) then
		PublicationPlace = Place;							-- promote |place= (|location=) to |publication-place
	end
	
	if PublicationPlace == Place then Place = ''; end		-- don't need both if they are the same
	
	--[[
	Parameter remapping for cite encyclopedia:
	When the citation has these parameters:
		|encyclopedia and |title then map |title to |article and |encyclopedia to |title
		|encyclopedia and |article then map |encyclopedia to |title
		|encyclopedia then map |encyclopedia to |title
	
		|trans-title maps to |trans-chapter when |title is re-mapped
		|url maps to |chapterurl when |title is remapped
	
	All other combinations of |encyclopedia, |title, and |article are not modified
	
	]]

local Encyclopedia = A['Encyclopedia'];

	if ( config.CitationClass == "encyclopaedia" ) or ( config.CitationClass == "citation" and is_set (Encyclopedia)) then	-- test code for citation
		if is_set(Periodical) then												-- Periodical is set when |encyclopedia is set
			if is_set(Title) or is_set (ScriptTitle) then
				if not is_set(Chapter) then
					Chapter = Title;											-- |encyclopedia and |title are set so map |title to |article and |encyclopedia to |title
					ScriptChapter = ScriptTitle;
					TransChapter = TransTitle;
					ChapterURL = URL;
					ChapterUrlAccess = UrlAccess;

					if not is_set (ChapterURL) and is_set (TitleLink) then
						Chapter = make_wikilink (TitleLink, Chapter);
					end
					Title = Periodical;
					ChapterFormat = Format;
					Periodical = '';											-- redundant so unset
					TransTitle = '';
					URL = '';
					Format = '';
					TitleLink = '';
					ScriptTitle = '';
				end
			else																-- |title not set
				Title = Periodical;												-- |encyclopedia set and |article set or not set so map |encyclopedia to |title
				Periodical = '';												-- redundant so unset
			end
		end
	end

	-- Special case for cite techreport.
	if (config.CitationClass == "techreport") then								-- special case for cite techreport
		if is_set(A['Number']) then												-- cite techreport uses 'number', which other citations alias to 'issue'
			if not is_set(ID) then												-- can we use ID for the "number"?
				ID = A['Number'];												-- yes, use it
			else																-- ID has a value so emit error message
				table.insert( z.message_tail, { set_error('redundant_parameters', {wrap_style ('parameter', 'id') .. ' and ' .. wrap_style ('parameter', 'number')}, true )});
			end
		end	
	end

	-- special case for cite mailing list
	if (config.CitationClass == "mailinglist") then
		Periodical = A ['MailingList'];
	elseif 'mailinglist' == A:ORIGIN('Periodical') then
		Periodical = '';														-- unset because mailing list is only used for cite mailing list
	end

	-- Account for the oddity that is {{cite conference}}, before generation of COinS data.
	if 'conference' == config.CitationClass then
		if is_set(BookTitle) then
			Chapter = Title;
--			ChapterLink = TitleLink;											-- |chapterlink= is deprecated
			ChapterURL = URL;
			ChapterUrlAccess = UrlAccess;
			ChapterURLorigin = URLorigin;
			URLorigin = '';
			ChapterFormat = Format;
			TransChapter = TransTitle;
			Title = BookTitle;
			Format = '';
--			TitleLink = '';
			TransTitle = '';
			URL = '';
		end
	elseif 'speech' ~= config.CitationClass then
		Conference = '';														-- not cite conference or cite speech so make sure this is empty string
	end

	-- cite map oddities
	local Cartography = "";
	local Scale = "";
	local Sheet = A['Sheet'] or '';
	local Sheets = A['Sheets'] or '';
	if config.CitationClass == "map" then
		Chapter = A['Map'];
		ChapterURL = A['MapURL'];
		ChapterUrlAccess = UrlAccess;
		TransChapter = A['TransMap'];
		ChapterURLorigin = A:ORIGIN('MapURL');
		ChapterFormat = A['MapFormat'];
		
		Cartography = A['Cartography'];
		if is_set( Cartography ) then
			Cartography = sepc .. " " .. wrap_msg ('cartography', Cartography, use_lowercase);
		end		
		Scale = A['Scale'];
		if is_set( Scale ) then
			Scale = sepc .. " " .. Scale;
		end
	end

	-- Account for the oddities that are {{cite episode}} and {{cite serial}}, before generation of COinS data.
	if 'episode' == config.CitationClass or 'serial' == config.CitationClass then
		local AirDate = A['AirDate'];
		local SeriesLink = A['SeriesLink'];

		link_title_ok (SeriesLink, A:ORIGIN ('SeriesLink'), Series, 'series');	-- check for wikimarkup in |series-link= or wikimarkup in |series= when |series-link= is set

		local Network = A['Network'];
		local Station = A['Station'];
		local s, n = {}, {};
																				-- do common parameters first
		if is_set(Network) then table.insert(n, Network); end
		if is_set(Station) then table.insert(n, Station); end
		ID = table.concat(n, sepc .. ' ');
		
		if not is_set (Date) and is_set (AirDate) then							-- promote airdate to date
			Date = AirDate;
		end

		if 'episode' == config.CitationClass then								-- handle the oddities that are strictly {{cite episode}}
			local Season = A['Season'];
			local SeriesNumber = A['SeriesNumber'];

			if is_set (Season) and is_set (SeriesNumber) then					-- these are mutually exclusive so if both are set
				table.insert( z.message_tail, { set_error( 'redundant_parameters', {wrap_style ('parameter', 'season') .. ' and ' .. wrap_style ('parameter', 'seriesno')}, true ) } );		-- add error message
				SeriesNumber = '';												-- unset; prefer |season= over |seriesno=
			end
																				-- assemble a table of parts concatenated later into Series
			if is_set(Season) then table.insert(s, wrap_msg ('season', Season, use_lowercase)); end
			if is_set(SeriesNumber) then table.insert(s, wrap_msg ('series', SeriesNumber, use_lowercase)); end
			if is_set(Issue) then table.insert(s, wrap_msg ('episode', Issue, use_lowercase)); end
			Issue = '';															-- unset because this is not a unique parameter
	
			Chapter = Title;													-- promote title parameters to chapter
			ScriptChapter = ScriptTitle;
			ChapterLink = TitleLink;											-- alias episodelink
			TransChapter = TransTitle;
			ChapterURL = URL;
			ChapterUrlAccess = UrlAccess;
			ChapterURLorigin = A:ORIGIN('URL');
			
			Title = Series;														-- promote series to title
			TitleLink = SeriesLink;
			Series = table.concat(s, sepc .. ' ');								-- this is concatenation of season, seriesno, episode number

			if is_set (ChapterLink) and not is_set (ChapterURL) then			-- link but not URL
				Chapter = make_wikilink (ChapterLink, Chapter);
			elseif is_set (ChapterLink) and is_set (ChapterURL) then			-- if both are set, URL links episode;
				Series = make_wikilink (ChapterLink, Series);
			end
			URL = '';															-- unset
			TransTitle = '';
			ScriptTitle = '';
			
		else																	-- now oddities that are cite serial
			Issue = '';															-- unset because this parameter no longer supported by the citation/core version of cite serial
			Chapter = A['Episode'];												-- TODO: make |episode= available to cite episode someday?
			if is_set (Series) and is_set (SeriesLink) then
				Series = make_wikilink (SeriesLink, Series);
			end
			Series = wrap_style ('italic-title', Series);						-- series is italicized
		end	
	end
	-- end of {{cite episode}} stuff

	-- Account for the oddities that are {{cite arxiv}}, {{cite biorxiv}}, {{cite citeseerx}}, before generation of COinS data.
	do
		if in_array (config.CitationClass, {'arxiv', 'biorxiv', 'citeseerx'}) then
			if not is_set (ID_list[config.CitationClass:upper()]) then			-- |arxiv= or |eprint= required for cite arxiv; |biorxiv= &amp; |citeseerx= required for their templates
				table.insert( z.message_tail, { set_error( config.CitationClass .. '_missing', {}, true ) } );		-- add error message
			end
			
			if 'arxiv' == config.CitationClass then
				Periodical = 'arXiv';											-- set to arXiv for COinS; after that, must be set to empty string
			end

			if 'biorxiv' == config.CitationClass then
				Periodical = 'bioRxiv';											-- set to bioRxiv for COinS; after that, must be set to empty string
			end

			if 'citeseerx' == config.CitationClass then
				Periodical = 'CiteSeerX';										-- set to CiteSeerX for COinS; after that, must be set to empty string
			end
		end
	end

	-- handle type parameter for those CS1 citations that have default values
	if in_array(config.CitationClass, {"AV-media-notes", "interview", "mailinglist", "map", "podcast", "pressrelease", "report", "techreport", "thesis"}) then
		TitleType = set_titletype (config.CitationClass, TitleType);
		if is_set(Degree) and "Thesis" == TitleType then						-- special case for cite thesis
			TitleType = Degree .. ' ' .. cfg.title_types ['thesis']:lower();
		end
	end

	if is_set(TitleType) then													-- if type parameter is specified
		TitleType = substitute( cfg.messages['type'], TitleType);				-- display it in parentheses
	-- TODO: Hack on TitleType to fix bunched parentheses problem
	end

	-- legacy: promote PublicationDate to Date if neither Date nor Year are set.
	if not is_set (Date) then
		Date = Year;															-- promote Year to Date
		Year = nil;																-- make nil so Year as empty string isn't used for CITEREF
		if not is_set (Date) and is_set(PublicationDate) then					-- use PublicationDate when |date= and |year= are not set
			Date = PublicationDate;												-- promote PublicationDate to Date
			PublicationDate = '';												-- unset, no longer needed
		end
	end

	if PublicationDate == Date then PublicationDate = ''; end					-- if PublicationDate is same as Date, don't display in rendered citation

	--[[
	Go test all of the date-holding parameters for valid MOS:DATE format and make sure that dates are real dates. This must be done before we do COinS because here is where
	we get the date used in the metadata.
	
	Date validation supporting code is in Module:Citation/CS1/Date_validation
	]]
	do	-- create defined block to contain local variables error_message, date_parameters_list, mismatch
		local error_message = '';
																				-- AirDate has been promoted to Date so not necessary to check it
		local date_parameters_list = {['access-date']=AccessDate, ['archive-date']=ArchiveDate, ['date']=Date, ['doi-broken-date']=DoiBroken,
				['embargo']=Embargo, ['lay-date']=LayDate, ['publication-date']=PublicationDate, ['year']=Year};

		anchor_year, Embargo, error_message = dates(date_parameters_list, COinS_date);
-- start temporary Julian / Gregorian calendar uncertainty categorization
		if COinS_date.inter_cal_cat then
			add_prop_cat ('jul_greg_uncertainty');
		end
-- end temporary Julian / Gregorian calendar uncertainty categorization

		if is_set (Year) and is_set (Date) then									-- both |date= and |year= not normally needed; 
			local mismatch = year_date_check (Year, Date)
			if 0 == mismatch then												-- |year= does not match a year-value in |date=
				if is_set (error_message) then									-- if there is already an error message
					error_message = error_message .. ', ';						-- tack on this additional message
				end
				error_message = error_message .. '&amp;#124;year= / &amp;#124;date= mismatch';
			elseif 1 == mismatch then											-- |year= matches year-value in |date=
				add_maint_cat ('date_year');
			end
		end
		
		if not is_set(error_message) then										-- error free dates only
			local modified = false;												-- flag
			
			if is_set (DF) then													-- if we need to reformat dates
				modified = reformat_dates (date_parameters_list, DF, false);	-- reformat to DF format, use long month names if appropriate
			end

			if true == date_hyphen_to_dash (date_parameters_list) then			-- convert hyphens to dashes where appropriate
				modified = true;
				add_maint_cat ('date_format');									-- hyphens were converted so add maint category
			end
			
	-- for those wikis that can and want to have English date names translated to the local language,
	-- uncomment these three lines.  Not supported by en.wiki (for obvious reasons)
--			if date_name_xlate (date_parameters_list) then
--				modified = true;
--			end

			if modified then													-- if the date_parameters_list values were modified
				AccessDate = date_parameters_list['access-date'];				-- overwrite date holding parameters with modified values
				ArchiveDate = date_parameters_list['archive-date'];
				Date = date_parameters_list['date'];
				DoiBroken = date_parameters_list['doi-broken-date'];
				LayDate = date_parameters_list['lay-date'];
				PublicationDate = date_parameters_list['publication-date'];
			end
		else
			table.insert( z.message_tail, { set_error( 'bad_date', {error_message}, true ) } );	-- add this error message
		end
	end	-- end of do

	-- Account for the oddity that is {{cite journal}} with |pmc= set and |url= not set.  Do this after date check but before COInS.
	-- Here we unset Embargo if PMC not embargoed (|embargo= not set in the citation) or if the embargo time has expired. Otherwise, holds embargo date
	Embargo = is_embargoed (Embargo);

	if config.CitationClass == "journal" and not is_set(URL) and is_set(ID_list['PMC']) then
		if not is_set (Embargo) then											-- if not embargoed or embargo has expired
			URL=cfg.id_handlers['PMC'].prefix .. ID_list['PMC'];				-- set url to be the same as the PMC external link if not embargoed
			URLorigin = cfg.id_handlers['PMC'].parameters[1];					-- set URLorigin to parameter name for use in error message if citation is missing a |title=
			if is_set(AccessDate) then											-- access date requires |url=; pmc created url is not |url=
				table.insert( z.message_tail, { set_error( 'accessdate_missing_url', {}, true ) } );
				AccessDate = '';												-- unset
			end

		end
	end

	-- At this point fields may be nil if they weren't specified in the template use.  We can use that fact.
	-- Test if citation has no title
	if	not is_set(Title) and
		not is_set(TransTitle) and
		not is_set(ScriptTitle) then
			if 'episode' == config.CitationClass then							-- special case for cite episode; TODO: is there a better way to do this?
				table.insert( z.message_tail, { set_error( 'citation_missing_title', {'series'}, true ) } );
			else
				table.insert( z.message_tail, { set_error( 'citation_missing_title', {'title'}, true ) } );
			end
	end
	
	if 'none' == Title and in_array (config.CitationClass, {'journal', 'citation'}) and is_set (Periodical) and 'journal' == A:ORIGIN('Periodical') then	-- special case for journal cites
		Title = '';																-- set title to empty string
		add_maint_cat ('untitled');
	end

	check_for_url ({															-- add error message when any of these parameters contains a URL
		['title']=Title,
		[A:ORIGIN('Chapter')]=Chapter,
		[A:ORIGIN('Periodical')]=Periodical,
		[A:ORIGIN('PublisherName')] = PublisherName
		});

	-- COinS metadata (see &lt;http://ocoins.info/&gt;) for automated parsing of citation information.
	-- handle the oddity that is cite encyclopedia and {{citation |encyclopedia=something}}. Here we presume that
	-- when Periodical, Title, and Chapter are all set, then Periodical is the book (encyclopedia) title, Title
	-- is the article title, and Chapter is a section within the article.  So, we remap 
	
	local coins_chapter = Chapter;												-- default assuming that remapping not required
	local coins_title = Title;													-- et tu
	if 'encyclopaedia' == config.CitationClass or ('citation' == config.CitationClass and is_set (Encyclopedia)) then
		if is_set (Chapter) and is_set (Title) and is_set (Periodical) then		-- if all are used then
			coins_chapter = Title;												-- remap
			coins_title = Periodical;
		end
	end
	local coins_author = a;														-- default for coins rft.au 
	if 0 &lt; #c then																-- but if contributor list
		coins_author = c;														-- use that instead
	end

	-- this is the function call to COinS()
	local OCinSoutput = COinS({
		['Periodical'] = Periodical,
		['Encyclopedia'] = Encyclopedia,
		['Chapter'] = make_coins_title (coins_chapter, ScriptChapter),			-- Chapter and ScriptChapter stripped of bold / italic wikimarkup
		['Degree'] = Degree;													-- cite thesis only
		['Title'] = make_coins_title (coins_title, ScriptTitle),				-- Title and ScriptTitle stripped of bold / italic wikimarkup
		['PublicationPlace'] = PublicationPlace,
		['Date'] = COinS_date.rftdate,											-- COinS_date has correctly formatted date if Date is valid;
		['Season'] = COinS_date.rftssn,
		['Chron'] =  COinS_date.rftchron or (not COinS_date.rftdate and Date) or '',	-- chron but if not set and invalid date format use Date; keep this last bit?
		['Series'] = Series,
		['Volume'] = Volume,
		['Issue'] = Issue,
		['Pages'] = get_coins_pages (first_set ({Sheet, Sheets, Page, Pages, At}, 5)),				-- pages stripped of external links
		['Edition'] = Edition,
		['PublisherName'] = PublisherName,
		['URL'] = first_set ({ChapterURL, URL}, 2),
		['Authors'] = coins_author,
		['ID_list'] = ID_list,
		['RawPage'] = this_page.prefixedText,
	}, config.CitationClass);

	-- Account for the oddities that are {{cite arxiv}}, {{cite biorxiv}}, and {{cite citeseerx}} AFTER generation of COinS data.
	if in_array (config.CitationClass, {'arxiv', 'biorxiv', 'citeseerx'}) then	-- we have set rft.jtitle in COinS to arXiv, bioRxiv, or CiteSeerX now unset so it isn't displayed
		Periodical = '';														-- periodical not allowed in these templates; if article has been published, use cite journal
	end

	-- special case for cite newsgroup.  Do this after COinS because we are modifying Publishername to include some static text
	if 'newsgroup' == config.CitationClass then
		if is_set (PublisherName) then
			PublisherName = substitute (cfg.messages['newsgroup'], external_link( 'news:' .. PublisherName, PublisherName, A:ORIGIN('PublisherName'), nil ));
		end
	end



	-- Now perform various field substitutions.
	-- We also add leading spaces and surrounding markup and punctuation to the
	-- various parts of the citation, but only when they are non-nil.
	local EditorCount;															-- used only for choosing {ed.) or (eds.) annotation at end of editor name-list
	do
		local last_first_list;
		local control = { 
			format = NameListFormat,											-- empty string or 'vanc'
			maximum = nil,														-- as if display-authors or display-editors not set
			lastauthoramp = LastAuthorAmp,
			page_name = this_page.text,											-- get current page name so that we don't wikilink to it via editorlinkn
			mode = Mode
		};

		do																		-- do editor name list first because the now unsupported coauthors used to modify control table
			control.maximum , editor_etal = get_display_authors_editors (A['DisplayEditors'], #e, 'editors', editor_etal);
			last_first_list, EditorCount = list_people(control, e, editor_etal);

			if is_set (Editors) then
				if editor_etal then
					Editors = Editors .. ' ' .. cfg.messages['et al'];			-- add et al. to editors parameter beause |display-editors=etal
					EditorCount = 2;											-- with et al., |editors= is multiple names; spoof to display (eds.) annotation
				else
					EditorCount = 2;											-- we don't know but assume |editors= is multiple names; spoof to display (eds.) annotation
				end
			else
				Editors = last_first_list;										-- either an author name list or an empty string
			end

			if 1 == EditorCount and (true == editor_etal or 1 &lt; #e) then		-- only one editor displayed but includes etal then 
				EditorCount = 2;												-- spoof to display (eds.) annotation
			end
		end
		do																		-- now do interviewers
			control.maximum = #interviewers_list;							-- number of interviewerss
			Interviewers = list_people(control, interviewers_list, false);	-- et al not currently supported
		end
		do																		-- now do translators
			control.maximum = #t;												-- number of translators
			Translators = list_people(control, t, false);						-- et al not currently supported
		end
		do																		-- now do contributors
			control.maximum = #c;												-- number of contributors
			Contributors = list_people(control, c, false);						-- et al not currently supported
		end
		do																		-- now do authors
			control.maximum , author_etal = get_display_authors_editors (A['DisplayAuthors'], #a, 'authors', author_etal);

			last_first_list = list_people(control, a, author_etal);

			if is_set (Authors) then
				Authors, author_etal = name_has_etal (Authors, author_etal, false);	-- find and remove variations on et al.
				if author_etal then
					Authors = Authors .. ' ' .. cfg.messages['et al'];			-- add et al. to authors parameter
				end
			else
				Authors = last_first_list;										-- either an author name list or an empty string
			end
		end																		-- end of do
	
		if is_set (Authors) and is_set (Collaboration) then
			Authors = Authors .. ' (' .. Collaboration .. ')';					-- add collaboration after et al.
		end

	end

	-- apply |[xx-]format= styling; at the end, these parameters hold correctly styled format annotation,
	-- an error message if the associated url is not set, or an empty string for concatenation
	ArchiveFormat = style_format (ArchiveFormat, ArchiveURL, 'archive-format', 'archive-url');
	ConferenceFormat = style_format (ConferenceFormat, ConferenceURL, 'conference-format', 'conference-url');
	Format = style_format (Format, URL, 'format', 'url');
	LayFormat = style_format (LayFormat, LayURL, 'lay-format', 'lay-url');
	TranscriptFormat = style_format (TranscriptFormat, TranscriptURL, 'transcript-format', 'transcripturl');

	-- special case for chapter format so no error message or cat when chapter not supported
	if not (in_array(config.CitationClass, {'web', 'news', 'journal', 'magazine', 'pressrelease', 'podcast', 'newsgroup', 'arxiv', 'biorxiv', 'citeseerx'}) or
		('citation' == config.CitationClass and is_set (Periodical) and not is_set (Encyclopedia))) then
			ChapterFormat = style_format (ChapterFormat, ChapterURL, 'chapter-format', 'chapter-url');
	end

	if not is_set(URL) then
		if in_array(config.CitationClass, {"web","podcast", "mailinglist"}) then	-- |url= required for cite web, cite podcast, and cite mailinglist
			table.insert( z.message_tail, { set_error( 'cite_web_url', {}, true ) } );
		end
		
		-- do we have |accessdate= without either |url= or |chapter-url=?
		if is_set(AccessDate) and not is_set(ChapterURL)then					-- ChapterURL may be set when URL is not set;
			table.insert( z.message_tail, { set_error( 'accessdate_missing_url', {}, true ) } );
			AccessDate = '';
		end
	end

	local OriginalURL, OriginalURLorigin, OriginalFormat, OriginalAccess;
	DeadURL = DeadURL:lower();													-- used later when assembling archived text
	if is_set( ArchiveURL ) then
		if is_set (ChapterURL) then 											-- URL not set so if chapter-url is set apply archive url to it
			OriginalURL = ChapterURL;											-- save copy of source chapter's url for archive text
			OriginalURLorigin = ChapterURLorigin;								-- name of chapter-url parameter for error messages
			OriginalFormat = ChapterFormat;										-- and original |format=
			if 'no' ~= DeadURL then
				ChapterURL = ArchiveURL											-- swap-in the archive's url
				ChapterURLorigin = A:ORIGIN('ArchiveURL')						-- name of archive-url parameter for error messages
				ChapterFormat = ArchiveFormat or '';							-- swap in archive's format
			end
		elseif is_set (URL) then
			OriginalURL = URL;													-- save copy of original source URL
			OriginalURLorigin = URLorigin;										-- name of url parameter for error messages
			OriginalFormat = Format; 											-- and original |format=
			OriginalAccess = UrlAccess;
			if 'no' ~= DeadURL then												-- if URL set then archive-url applies to it
				URL = ArchiveURL												-- swap-in the archive's url
				URLorigin = A:ORIGIN('ArchiveURL')								-- name of archive url parameter for error messages
				Format = ArchiveFormat or '';									-- swap in archive's format
				UrlAccess = nil;												-- restricted access levels do not make sense for archived urls
			end
 		end
	end

	if in_array(config.CitationClass, {'web','news','journal', 'magazine', 'pressrelease', 'podcast', 'newsgroup', 'arxiv', 'biorxiv', 'citeseerx'}) or	-- if any of the 'periodical' cites except encyclopedia
		('citation' == config.CitationClass and is_set (Periodical) and not is_set (Encyclopedia)) then
			local chap_param;
			if is_set (Chapter) then											-- get a parameter name from one of these chapter related meta-parameters
				chap_param = A:ORIGIN ('Chapter')
			elseif is_set (TransChapter) then
				chap_param = A:ORIGIN ('TransChapter')
			elseif is_set (ChapterURL) then
				chap_param = A:ORIGIN ('ChapterURL')
			elseif is_set (ScriptChapter) then
				chap_param = A:ORIGIN ('ScriptChapter')
			else is_set (ChapterFormat)
				chap_param = A:ORIGIN ('ChapterFormat')
			end

			if is_set (chap_param) then											-- if we found one
				table.insert( z.message_tail, { set_error( 'chapter_ignored', {chap_param}, true ) } );		-- add error message
				Chapter = '';													-- and set them to empty string to be safe with concatenation
				TransChapter = '';
				ChapterURL = '';
				ScriptChapter = '';
				ChapterFormat = '';
			end
	else																		-- otherwise, format chapter / article title
		local no_quotes = false;												-- default assume that we will be quoting the chapter parameter value
		if is_set (Contribution) and 0 &lt; #c then								-- if this is a contribution with contributor(s)
			if in_array (Contribution:lower(), cfg.keywords.contribution) then	-- and a generic contribution title
				no_quotes = true;												-- then render it unquoted
			end
		end

		Chapter = format_chapter_title (ScriptChapter, Chapter, TransChapter, ChapterURL, ChapterURLorigin, no_quotes, ChapterUrlAccess);		-- Contribution is also in Chapter
		if is_set (Chapter) then
			Chapter = Chapter .. ChapterFormat ;
			if 'map' == config.CitationClass and is_set (TitleType) then
				Chapter = Chapter .. ' ' .. TitleType;							-- map annotation here; not after title
			end
			Chapter = Chapter.. sepc .. ' ';
		elseif is_set (ChapterFormat) then										-- |chapter= not set but |chapter-format= is so ...
			Chapter = ChapterFormat .. sepc .. ' ';								-- ... ChapterFormat has error message, we want to see it
		end
	end

	-- Format main title.
	if '...' == Title:sub (-3) then												-- if elipsis is the last three characters of |title=
		Title = mw.ustring.gsub (Title, '(%.%.%.)%.+$', '%1');					-- limit the number of dots to three
	elseif not mw.ustring.find (Title, '%.%s*%a%.') then						-- end of title is not a 'dot-(optional space-)letter-dot' initialism
		Title = mw.ustring.gsub(Title, '%'..sepc..'$', '');						-- remove any trailing separator character
	end
	if is_set(TitleLink) and is_set(Title) then
		Title = make_wikilink (TitleLink, Title);
	end

	if in_array(config.CitationClass, {'web', 'news', 'journal', 'magazine', 'pressrelease', 'podcast', 'newsgroup', 'mailinglist', 'interview', 'arxiv', 'biorxiv', 'citeseerx'}) or
		('citation' == config.CitationClass and is_set (Periodical) and not is_set (Encyclopedia)) or
		('map' == config.CitationClass and is_set (Periodical)) then			-- special case for cite map when the map is in a periodical treat as an article
			Title = kern_quotes (Title);										-- if necessary, separate title's leading and trailing quote marks from Module provided quote marks
			Title = wrap_style ('quoted-title', Title);
			Title = script_concatenate (Title, ScriptTitle);					-- &lt;bdi&gt; tags, lang atribute, categorization, etc; must be done after title is wrapped
			TransTitle= wrap_style ('trans-quoted-title', TransTitle );
	elseif 'report' == config.CitationClass then								-- no styling for cite report
		Title = script_concatenate (Title, ScriptTitle);						-- &lt;bdi&gt; tags, lang atribute, categorization, etc; must be done after title is wrapped
		TransTitle= wrap_style ('trans-quoted-title', TransTitle );				-- for cite report, use this form for trans-title
	else
		Title = wrap_style ('italic-title', Title);
		Title = script_concatenate (Title, ScriptTitle);						-- &lt;bdi&gt; tags, lang atribute, categorization, etc; must be done after title is wrapped
		TransTitle = wrap_style ('trans-italic-title', TransTitle);
	end

	local TransError = "";
	if is_set(TransTitle) then
		if is_set(Title) then
			TransTitle = " " .. TransTitle;
		else
			TransError = " " .. set_error( 'trans_missing_title', {'title'} );
		end
	end
	
	if is_set(Title) then
		if not is_set(TitleLink) and is_set(URL) then
			
			Title = external_link( URL, Title, URLorigin, UrlAccess ) .. TransTitle .. TransError .. Format;
			URL = '';															-- unset these because no longer needed
			Format = "";
		else
			Title = Title .. TransTitle .. TransError;
		end
	else
		Title = TransTitle .. TransError;
	end

	if is_set(Place) then
		Place = " " .. wrap_msg ('written', Place, use_lowercase) .. sepc .. " ";
	end

	if is_set (Conference) then
		if is_set (ConferenceURL) then
			Conference = external_link( ConferenceURL, Conference, ConferenceURLorigin, nil );
		end
		Conference = sepc .. " " .. Conference .. ConferenceFormat;
	elseif is_set(ConferenceURL) then
		Conference = sepc .. " " .. external_link( ConferenceURL, nil, ConferenceURLorigin, nil );
	end

	if not is_set(Position) then
		local Minutes = A['Minutes'];
		local Time = A['Time'];

		if is_set(Minutes) then
			if is_set (Time) then
				table.insert( z.message_tail, { set_error( 'redundant_parameters', {wrap_style ('parameter', 'minutes') .. ' and ' .. wrap_style ('parameter', 'time')}, true ) } );
			end
			Position = " " .. Minutes .. " " .. cfg.messages['minutes'];
		else
			if is_set(Time) then
				local TimeCaption = A['TimeCaption']
				if not is_set(TimeCaption) then
					TimeCaption = cfg.messages['event'];
					if sepc ~= '.' then
						TimeCaption = TimeCaption:lower();
					end
				end
				Position = " " .. TimeCaption .. " " .. Time;
			end
		end
	else
		Position = " " .. Position;
		At = '';
	end

	Page, Pages, Sheet, Sheets = format_pages_sheets (Page, Pages, Sheet, Sheets, config.CitationClass, Periodical_origin, sepc, NoPP, use_lowercase);

	At = is_set(At) and (sepc .. " " .. At) or "";
	Position = is_set(Position) and (sepc .. " " .. Position) or "";
	if config.CitationClass == 'map' then
		local Section = A['Section'];
		local Sections = A['Sections'];
		local Inset = A['Inset'];
		
		if is_set( Inset ) then
			Inset = sepc .. " " .. wrap_msg ('inset', Inset, use_lowercase);
		end			

		if is_set( Sections ) then
			Section = sepc .. " " .. wrap_msg ('sections', Sections, use_lowercase);
		elseif is_set( Section ) then
			Section = sepc .. " " .. wrap_msg ('section', Section, use_lowercase);
		end
		At = At .. Inset .. Section;		
	end	

	if is_set (Language) then
		Language = language_parameter (Language);								-- format, categories, name from ISO639-1, etc
	else
		Language="";															-- language not specified so make sure this is an empty string;
	--[[ TODO: need to extract the wrap_msg from language_parameter
	so that we can solve parentheses bunching problem with Format/Language/TitleType
	]]
	end

	Others = is_set(Others) and (sepc .. " " .. Others) or "";
	
	if is_set (Translators) then
		Others = sepc .. ' ' .. wrap_msg ('translated', Translators, use_lowercase) .. Others;
	end
	if is_set (Interviewers) then
		Others = sepc .. ' ' .. wrap_msg ('interview', Interviewers, use_lowercase) .. Others;
	end
	
	TitleNote = is_set(TitleNote) and (sepc .. " " .. TitleNote) or "";
	if is_set (Edition) then
		if Edition:match ('%f[%a][Ee]d%.?$') or Edition:match ('%f[%a][Ee]dition$') then
			add_maint_cat ('extra_text', 'edition');
		end
		Edition = " " .. wrap_msg ('edition', Edition);
	else
		Edition = '';
	end

	Series = is_set(Series) and (sepc .. " " .. Series) or "";
		OrigYear = is_set(OrigYear) and (" [" .. OrigYear .. "]") or "";		-- TODO: presentation

	Agency = is_set(Agency) and (sepc .. " " .. Agency) or "";

	Volume = format_volume_issue (Volume, Issue, config.CitationClass, Periodical_origin, sepc, use_lowercase);

	------------------------------------ totally unrelated data
	if is_set(Via) then
		Via = " " .. wrap_msg ('via', Via);
	end

	--[[
	Subscription implies paywall; Registration does not.  If both are used in a citation, the subscription required link
	note is displayed. There are no error messages for this condition.
	
	]]
	if is_set (SubscriptionRequired) then
		SubscriptionRequired = sepc .. " " .. cfg.messages['subscription'];		-- subscription required message
	elseif is_set (RegistrationRequired) then
		SubscriptionRequired = sepc .. " " .. cfg.messages['registration'];		-- registration required message
	else
		SubscriptionRequired = '';												-- either or both might be set to something other than yes true y
	end

	if is_set(AccessDate) then
		local retrv_text = " " .. cfg.messages['retrieved']

		AccessDate = nowrap_date (AccessDate);									-- wrap in nowrap span if date in appropriate format
		if (sepc ~= ".") then retrv_text = retrv_text:lower() end				-- if mode is cs2, lower case
		AccessDate = substitute (retrv_text, AccessDate);						-- add retrieved text

		AccessDate = substitute (cfg.presentation['accessdate'], {sepc, AccessDate});	-- allow editors to hide accessdates
	end
	
	if is_set(ID) then ID = sepc .." ".. ID; end
   	if "thesis" == config.CitationClass and is_set(Docket) then
		ID = sepc .." Docket ".. Docket .. ID;
	end
   	if "report" == config.CitationClass and is_set(Docket) then					-- for cite report when |docket= is set
		ID = sepc .. ' ' .. Docket;												-- overwrite ID even if |id= is set
	end

	ID_list = build_id_list( ID_list, {IdAccessLevels=ID_access_levels, DoiBroken = DoiBroken, ASINTLD = ASINTLD, IgnoreISBN = IgnoreISBN, Embargo=Embargo, Class = Class} );

	if is_set(URL) then
		URL = " " .. external_link( URL, nil, URLorigin, UrlAccess );
	end

	if is_set(Quote) then
		if Quote:sub(1,1) == '"' and Quote:sub(-1,-1) == '"' then				-- if first and last characters of quote are quote marks
			Quote = Quote:sub(2,-2);											-- strip them off
		end
		Quote = sepc .." " .. wrap_style ('quoted-text', Quote ); 				-- wrap in &lt;q&gt;...&lt;/q&gt; tags
		PostScript = "";														-- cs1|2 does not supply terminal punctuation when |quote= is set
	end
	
	local Archived
	if is_set(ArchiveURL) then
		if not is_set(ArchiveDate) then
			ArchiveDate = set_error('archive_missing_date');
		end
		if "no" == DeadURL then
			local arch_text = cfg.messages['archived'];
			if sepc ~= "." then arch_text = arch_text:lower() end
			Archived = sepc .. " " .. substitute( cfg.messages['archived-not-dead'],
				{ external_link( ArchiveURL, arch_text, A:ORIGIN('ArchiveURL'), nil ) .. ArchiveFormat, ArchiveDate } );
			if not is_set(OriginalURL) then
				Archived = Archived .. " " .. set_error('archive_missing_url');							   
			end
		elseif is_set(OriginalURL) then											-- DeadURL is empty, 'yes', 'true', 'y', 'unfit', 'usurped'
			local arch_text = cfg.messages['archived-dead'];
			if sepc ~= "." then arch_text = arch_text:lower() end
			if in_array (DeadURL, {'unfit', 'usurped', 'bot: unknown'}) then
				Archived = sepc .. " " .. 'Archived from the original on ' .. ArchiveDate;	-- format already styled
				if 'bot: unknown' == DeadURL then
					add_maint_cat ('bot:_unknown');								-- and add a category if not already added
				else
					add_maint_cat ('unfit');									-- and add a category if not already added
				end
			else																-- DeadURL is empty, 'yes', 'true', or 'y'
				Archived = sepc .. " " .. substitute( arch_text,
					{ external_link( OriginalURL, cfg.messages['original'], OriginalURLorigin, OriginalAccess ) .. OriginalFormat, ArchiveDate } );	-- format already styled
			end	
		else
			local arch_text = cfg.messages['archived-missing'];
			if sepc ~= "." then arch_text = arch_text:lower() end
			Archived = sepc .. " " .. substitute( arch_text, 
				{ set_error('archive_missing_url'), ArchiveDate } );
		end
	elseif is_set (ArchiveFormat) then
		Archived = ArchiveFormat;												-- if set and ArchiveURL not set ArchiveFormat has error message
	else
		Archived = ""
	end
	
	local Lay = '';
	if is_set(LayURL) then
		if is_set(LayDate) then LayDate = " (" .. LayDate .. ")" end
		if is_set(LaySource) then 
			LaySource = " &amp;ndash; ''" .. safe_for_italics(LaySource) .. "''";
		else
			LaySource = "";
		end
		if sepc == '.' then
			Lay = sepc .. " " .. external_link( LayURL, cfg.messages['lay summary'], A:ORIGIN('LayURL'), nil ) .. LayFormat .. LaySource .. LayDate
		else
			Lay = sepc .. " " .. external_link( LayURL, cfg.messages['lay summary']:lower(), A:ORIGIN('LayURL'), nil ) .. LayFormat .. LaySource .. LayDate
		end			
	elseif is_set (LayFormat) then												-- Test if |lay-format= is given without giving a |lay-url=
		Lay = sepc .. LayFormat;												-- if set and LayURL not set, then LayFormat has error message
	end

	if is_set(Transcript) then
		if is_set(TranscriptURL) then
			Transcript = external_link( TranscriptURL, Transcript, TranscriptURLorigin, nil );
		end
		Transcript = sepc .. ' ' .. Transcript .. TranscriptFormat;
	elseif is_set(TranscriptURL) then
		Transcript = external_link( TranscriptURL, nil, TranscriptURLorigin, nil );
	end

	local Publisher;
	if is_set(PublicationDate) then
		PublicationDate = wrap_msg ('published', PublicationDate);
	end
	if is_set(PublisherName) then
		if is_set(PublicationPlace) then
			Publisher = sepc .. " " .. PublicationPlace .. ": " .. PublisherName .. PublicationDate;
		else
			Publisher = sepc .. " " .. PublisherName .. PublicationDate;  
		end			
	elseif is_set(PublicationPlace) then 
		Publisher= sepc .. " " .. PublicationPlace .. PublicationDate;
	else 
		Publisher = PublicationDate;
	end
	
	-- Several of the above rely upon detecting this as nil, so do it last.
	if is_set(Periodical) then
		if is_set(Title) or is_set(TitleNote) then 
			Periodical = sepc .. " " .. wrap_style ('italic-title', Periodical) 
		else 
			Periodical = wrap_style ('italic-title', Periodical)
		end
	end

	--[[
	Handle the oddity that is cite speech.  This code overrides whatever may be the value assigned to TitleNote (through |department=) and forces it to be " (Speech)" so that
	the annotation directly follows the |title= parameter value in the citation rather than the |event= parameter value (if provided).
	]]
	if "speech" == config.CitationClass then				-- cite speech only
		TitleNote = " (Speech)";							-- annotate the citation
		if is_set (Periodical) then							-- if Periodical, perhaps because of an included |website= or |journal= parameter 
			if is_set (Conference) then						-- and if |event= is set
				Conference = Conference .. sepc .. " ";		-- then add appropriate punctuation to the end of the Conference variable before rendering
			end
		end
	end

	-- Piece all bits together at last.  Here, all should be non-nil.
	-- We build things this way because it is more efficient in LUA
	-- not to keep reassigning to the same string variable over and over.

	local tcommon;
	local tcommon2;																-- used for book cite when |contributor= is set
	
	if in_array(config.CitationClass, {"journal","citation"}) and is_set(Periodical) then
		if is_set(Others) then Others = Others .. sepc .. " " end
		tcommon = safe_join( {Others, Title, TitleNote, Conference, Periodical, Format, TitleType, Series, Language, Edition, Publisher, Agency, Volume}, sepc );
	elseif in_array(config.CitationClass, {"book","citation"}) and not is_set(Periodical) then		-- special cases for book cites
		if is_set (Contributors) then											-- when we are citing foreword, preface, introduction, etc
			tcommon = safe_join( {Title, TitleNote}, sepc );					-- author and other stuff will come after this and before tcommon2
			tcommon2 = safe_join( {Conference, Periodical, Format, TitleType, Series, Language, Volume, Others, Edition, Publisher, Agency}, sepc );
		else
			tcommon = safe_join( {Title, TitleNote, Conference, Periodical, Format, TitleType, Series, Language, Volume, Others, Edition, Publisher, Agency}, sepc );
		end

	elseif 'map' == config.CitationClass then									-- special cases for cite map
		if is_set (Chapter) then												-- map in a book; TitleType is part of Chapter
			tcommon = safe_join( {Title, Format, Edition, Scale, Series, Language, Cartography, Others, Publisher, Volume}, sepc );
		elseif is_set (Periodical) then											-- map in a periodical
			tcommon = safe_join( {Title, TitleType, Format, Periodical, Scale, Series, Language, Cartography, Others, Publisher, Volume}, sepc );
		else																	-- a sheet or stand-alone map
			tcommon = safe_join( {Title, TitleType, Format, Edition, Scale, Series, Language, Cartography, Others, Publisher}, sepc );
		end
		
	elseif 'episode' == config.CitationClass then								-- special case for cite episode
		tcommon = safe_join( {Title, TitleNote, TitleType, Series, Transcript, Language, Edition, Publisher}, sepc );

	else																		-- all other CS1 templates
		tcommon = safe_join( {Title, TitleNote, Conference, Periodical, Format, TitleType, Series, Language, 
			Volume, Others, Edition, Publisher, Agency}, sepc );
	end
	
	if #ID_list &gt; 0 then
		ID_list = safe_join( { sepc .. " ",  table.concat( ID_list, sepc .. " " ), ID }, sepc );
	else
		ID_list = ID;
	end
	
	local idcommon = safe_join( { ID_list, URL, Archived, AccessDate, Via, SubscriptionRequired, Lay, Quote }, sepc );
	local text;
	local pgtext = Position .. Sheet .. Sheets .. Page .. Pages .. At;

	if is_set(Date) then
		if is_set (Authors) or is_set (Editors) then							-- date follows authors or editors when authors not set
			Date = " (" .. Date ..")" .. OrigYear .. sepc .. " ";				-- in paranetheses
		else																	-- neither of authors and editors set
			if (string.sub(tcommon,-1,-1) == sepc) then							-- if the last character of tcommon is sepc
				Date = " " .. Date .. OrigYear;									-- Date does not begin with sepc
			else
				Date = sepc .. " " .. Date .. OrigYear;							-- Date begins with sepc
			end
		end
	end	
	if is_set(Authors) then
		if (not is_set (Date)) then												-- when date is set it's in parentheses; no Authors termination
			Authors = terminate_name_list (Authors, sepc);						-- when no date, terminate with 0 or 1 sepc and a space
		end
		if is_set(Editors) then
			local in_text = " ";
			local post_text = "";
			if is_set(Chapter) and 0 == #c then
				in_text = in_text .. cfg.messages['in'] .. " "
				if (sepc ~= '.') then
					in_text = in_text:lower()									-- lowercase for cs2
				 end
			else
				if EditorCount &lt;= 1 then
					post_text = ", " .. cfg.messages['editor'];
				else
					post_text = ", " .. cfg.messages['editors'];
				end
			end 
			Editors = terminate_name_list (in_text .. Editors .. post_text, sepc);	-- terminate with 0 or 1 sepc and a space
		end
		if is_set (Contributors) then											-- book cite and we're citing the intro, preface, etc
			local by_text = sepc .. ' ' .. cfg.messages['by'] .. ' ';
			if (sepc ~= '.') then by_text = by_text:lower() end					-- lowercase for cs2
			Authors = by_text .. Authors;										-- author follows title so tweak it here
			if is_set (Editors) and is_set (Date) then							-- when Editors make sure that Authors gets terminated
				Authors = terminate_name_list (Authors, sepc);					-- terminate with 0 or 1 sepc and a space
			end
			if (not is_set (Date)) then											-- when date is set it's in parentheses; no Contributors termination
				Contributors = terminate_name_list (Contributors, sepc);		-- terminate with 0 or 1 sepc and a space
			end
			text = safe_join( {Contributors, Date, Chapter, tcommon, Authors, Place, Editors, tcommon2, pgtext, idcommon }, sepc );
		else
			text = safe_join( {Authors, Date, Chapter, Place, Editors, tcommon, pgtext, idcommon }, sepc );
		end
	elseif is_set(Editors) then
		if is_set(Date) then
			if EditorCount &lt;= 1 then
				Editors = Editors .. ", " .. cfg.messages['editor'];
			else
				Editors = Editors .. ", " .. cfg.messages['editors'];
			end
		else
			if EditorCount &lt;= 1 then
				Editors = Editors .. " (" .. cfg.messages['editor'] .. ")" .. sepc .. " "
			else
				Editors = Editors .. " (" .. cfg.messages['editors'] .. ")" .. sepc .. " "
			end
		end
		text = safe_join( {Editors, Date, Chapter, Place, tcommon, pgtext, idcommon}, sepc );
	else
		if in_array(config.CitationClass, {"journal","citation"}) and is_set(Periodical) then
			text = safe_join( {Chapter, Place, tcommon, pgtext, Date, idcommon}, sepc );
		else
			text = safe_join( {Chapter, Place, tcommon, Date, pgtext, idcommon}, sepc );
		end
	end
	
	if is_set(PostScript) and PostScript ~= sepc then
		text = safe_join( {text, sepc}, sepc );  --Deals with italics, spaces, etc.
		text = text:sub(1,-sepc:len()-1);
	end	
	
	text = safe_join( {text, PostScript}, sepc );

	-- Now enclose the whole thing in a &lt;cite/&gt; element
	local options = {};
	
	if is_set(config.CitationClass) and config.CitationClass ~= "citation" then
		options.class = config.CitationClass;
		options.class = "citation " .. config.CitationClass;					-- class=citation required for blue highlight when used with |ref=
	else
		options.class = "citation";
	end
	
	if is_set(Ref) and Ref:lower() ~= "none" then								-- set reference anchor if appropriate
		local id = Ref
		if ('harv' == Ref ) then
			local namelist = {};												-- holds selected contributor, author, editor name list
			local year = first_set ({Year, anchor_year}, 2);					-- Year first for legacy citations and for YMD dates that require disambiguation

			if #c &gt; 0 then														-- if there is a contributor list
				namelist = c;													-- select it
			elseif #a &gt; 0 then													-- or an author list
				namelist = a;
			elseif #e &gt; 0 then													-- or an editor list
				namelist = e;
			end
			if #namelist &gt; 0 then												-- if there are names in namelist
				id = anchor_id (namelist, year);								-- go make the CITEREF anchor
			else
				id = '';														-- unset
			end
		end
		options.id = id;
	end
	
	if string.len(text:gsub("&lt;span[^&gt;/]*&gt;(.-)&lt;/span&gt;", "%1"):gsub("%b&lt;&gt;","")) &lt;= 2 then	-- remove &lt;span&gt; tags and other html-like markup; then get length of what remains
		z.error_categories = {};
		text = set_error('empty_citation');
		z.message_tail = {};
	end
	
	local render = {};															-- here we collect the final bits for concatenation into the rendered citation

	if is_set(options.id) then													-- here we wrap the rendered citation in &lt;cite ...&gt;...&lt;/cite&gt; tags
		table.insert (render, substitute (cfg.presentation['cite-id'], {mw.uri.anchorEncode(options.id), mw.text.nowiki(options.class), text}));	-- when |ref= is set
	else
		table.insert (render, substitute (cfg.presentation['cite'], {mw.text.nowiki(options.class), text}));	-- all other cases
	end		

	table.insert (render, substitute (cfg.presentation['ocins'], {OCinSoutput}));		-- append metadata to the citation

	if #z.message_tail ~= 0 then
		table.insert (render, ' ');
		for i,v in ipairs( z.message_tail ) do
			if is_set(v[1]) then
				if i == #z.message_tail then
					table.insert (render, error_comment( v[1], v[2] ));
				else
					table.insert (render, error_comment( v[1] .. "; ", v[2] ));
				end
			end
		end
	end

	if #z.maintenance_cats ~= 0 then
		table.insert (render, '&lt;span class="citation-comment" style="display:none; color:#33aa33; margin-left:0.3em"&gt;');
		for _, v in ipairs( z.maintenance_cats ) do								-- append maintenance categories
			table.insert (render, v);
			table.insert (render, ' (');
			table.insert (render, make_wikilink (':Category:' .. v, 'link'));
			table.insert (render, ') ');
		end
		table.insert (render, '&lt;/span&gt;');
	end
	
	no_tracking_cats = no_tracking_cats:lower();
	if in_array(no_tracking_cats, {"", "no", "false", "n"}) then
		for _, v in ipairs( z.error_categories ) do
			table.insert (render, make_wikilink ('Category:' .. v));
		end
		for _, v in ipairs( z.maintenance_cats ) do								-- append maintenance categories
			table.insert (render, make_wikilink ('Category:' .. v));
		end
		for _, v in ipairs( z.properties_cats ) do								-- append properties categories
			table.insert (render, make_wikilink ('Category:' .. v));
		end
	end

	return table.concat (render);	
end


--[[--------------------------&lt; C S 1 . C I T A T I O N &gt;------------------------------------------------------

This is used by templates such as {{cite book}} to create the actual citation text.

]]

function cs1.citation(frame)
	Frame = frame;																-- save a copy incase we need to display an error message in preview mode
	local pframe = frame:getParent()
	local validation, utilities, identifiers, metadata;
	
	if nil ~= string.find (frame:getTitle(), 'sandbox', 1, true) then			-- did the {{#invoke:}} use sandbox version?
		cfg = mw.loadData ('Module:Citation/CS1/Configuration/sandbox');		-- load sandbox versions of support modules
		whitelist = mw.loadData ('Module:Citation/CS1/Whitelist/sandbox');
		utilities = require ('Module:Citation/CS1/Utilities/sandbox');
		validation = require ('Module:Citation/CS1/Date_validation/sandbox');
		identifiers = require ('Module:Citation/CS1/Identifiers/sandbox');
		metadata = require ('Module:Citation/CS1/COinS/sandbox');
		
	else																		-- otherwise
		cfg = mw.loadData ('Module:Citation/CS1/Configuration');				-- load live versions of support modules
		whitelist = mw.loadData ('Module:Citation/CS1/Whitelist');
		utilities = require ('Module:Citation/CS1/Utilities');
		validation = require ('Module:Citation/CS1/Date_validation');
		identifiers = require ('Module:Citation/CS1/Identifiers');
		metadata = require ('Module:Citation/CS1/COinS');
	end

	utilities.set_selected_modules (cfg);										-- so that functions in Utilities can see the cfg tables
	identifiers.set_selected_modules (cfg, utilities);							-- so that functions in Identifiers can see the selected cfg tables and selected Utilities module
	validation.set_selected_modules (cfg, utilities);							-- so that functions in Date validataion can see selected cfg tables and the selected Utilities module
	metadata.set_selected_modules (cfg, utilities);								-- so that functions in COinS can see the selected cfg tables and selected Utilities module

	dates = validation.dates;													-- imported functions from Module:Citation/CS1/Date validation
	year_date_check = validation.year_date_check;
	reformat_dates = validation.reformat_dates;
	date_hyphen_to_dash = validation.date_hyphen_to_dash;
	date_name_xlate = validation.date_name_xlate;

	is_set = utilities.is_set;													-- imported functions from Module:Citation/CS1/Utilities
	in_array = utilities.in_array;
	substitute = utilities.substitute;
	error_comment = utilities.error_comment;
	set_error = utilities.set_error;
	select_one = utilities.select_one;
	add_maint_cat = utilities.add_maint_cat;
	wrap_style = utilities.wrap_style;
	safe_for_italics = utilities.safe_for_italics;
	is_wikilink = utilities.is_wikilink;
	make_wikilink = utilities.make_wikilink;

	z = utilities.z;															-- table of error and category tables in Module:Citation/CS1/Utilities

	extract_ids = identifiers.extract_ids;										-- imported functions from Module:Citation/CS1/Identifiers
	build_id_list = identifiers.build_id_list;
	is_embargoed = identifiers.is_embargoed;
	extract_id_access_levels = identifiers.extract_id_access_levels;
	
	make_coins_title = metadata.make_coins_title;								-- imported functions from Module:Citation/CS1/COinS
	get_coins_pages = metadata.get_coins_pages;
	COinS = metadata.COinS;

	local args = {};															-- table where we store all of the template's arguments
	local suggestions = {};														-- table where we store suggestions if we need to loadData them
	local error_text, error_state;

	local config = {};															-- table to store parameters from the module {{#invoke:}}
	for k, v in pairs( frame.args ) do
		config[k] = v;
--		args[k] = v;															-- debug tool that allows us to render a citation from module {{#invoke:}}
	end	

	local capture;																-- the single supported capture when matching unknown parameters using patterns
	for k, v in pairs( pframe.args ) do
		if v ~= '' then
			if not validate( k, config.CitationClass ) then			
				error_text = "";
				if type( k ) ~= 'string' then
					-- Exclude empty numbered parameters
					if v:match("%S+") ~= nil then
						error_text, error_state = set_error( 'text_ignored', {v}, true );
					end
				elseif validate( k:lower(), config.CitationClass ) then 
					error_text, error_state = set_error( 'parameter_ignored_suggest', {k, k:lower()}, true );
				else
					if nil == suggestions.suggestions then						-- if this table is nil then we need to load it
						if nil ~= string.find (frame:getTitle(), 'sandbox', 1, true) then			-- did the {{#invoke:}} use sandbox version?
							suggestions = mw.loadData( 'Module:Citation/CS1/Suggestions/sandbox' );	-- use the sandbox version
						else
							suggestions = mw.loadData( 'Module:Citation/CS1/Suggestions' );			-- use the live version
						end
					end
					for pattern, param in pairs (suggestions.patterns) do		-- loop through the patterns to see if we can suggest a proper parameter
						capture = k:match (pattern);							-- the whole match if no caputre in pattern else the capture if a match
						if capture then											-- if the pattern matches 
							param = substitute( param, capture );				-- add the capture to the suggested parameter (typically the enumerator)
							error_text, error_state = set_error( 'parameter_ignored_suggest', {k, param}, true );	-- set the error message
						end
					end
					if not is_set (error_text) then								-- couldn't match with a pattern, is there an expicit suggestion?
						if suggestions.suggestions[ k:lower() ] ~= nil then
							error_text, error_state = set_error( 'parameter_ignored_suggest', {k, suggestions.suggestions[ k:lower() ]}, true );
						else
							error_text, error_state = set_error( 'parameter_ignored', {k}, true );
							v = '';												-- unset value assigned to unrecognized parameters (this for the limited parameter lists)
						end
					end
				end				  
				if error_text ~= '' then
					table.insert( z.message_tail, {error_text, error_state} );
				end				
			end
			missing_pipe_check (v);												-- do we think that there is a parameter that is missing a pipe?
			
			args[k] = v;
		elseif args[k] ~= nil or (k == 'postscript') then
			args[k] = v;
		end		
	end	

	for k, v in pairs( args ) do
		if 'string' == type (k) then											-- don't evaluate positional parameters
			has_invisible_chars (k, v);
		end
	end
	return citation0( config, args)
end

return cs1;</text>
      <sha1>p7he7iz3bxgxc5kjp3g2mrtmgcn4d8h</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Citation/CS1/COinS</title>
    <ns>828</ns>
    <id>51354322</id>
    <revision>
      <id>647173739</id>
      <parentid>647173738</parentid>
      <timestamp>2018-03-10T10:00:55Z</timestamp>
      <contributor>
        <username>Mbch331</username>
        <id>69441</id>
      </contributor>
      <minor/>
      <comment>28 revisions imported from [[:en:Module:Citation/CS1/COinS]]: https://www.wikidata.org/w/index.php?title=Wikidata:Administrators%27_noticeboard&amp;oldid=647164909#Request_to_import_template:Cite_Q_from_ENWP</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="16800">
local coins = {};


--[[--------------------------&lt; F O R W A R D   D E C L A R A T I O N S &gt;--------------------------------------
]]
local is_set, in_array, remove_wiki_link;										-- functions in Module:Citation/CS1/Utilities

local cfg;																		-- table of configuration tables that are defined in Module:Citation/CS1/Configuration


--[[--------------------------&lt; S T R I P _ A P O S T R O P H E _ M A R K U P &gt;--------------------------------

Strip wiki italic and bold markup from argument so that it doesn't contaminate COinS metadata.
This function strips common patterns of apostrophe markup.  We presume that editors who have taken the time to
markup a title have, as a result, provided valid markup. When they don't, some single apostrophes are left behind.

]]

local function strip_apostrophe_markup (argument)
	if not is_set (argument) then return argument; end

	if argument:find ( "''", 1, true ) == nil then								-- Is there at least one double apostrophe?  If not, exit.
		return argument;
	end

	while true do
		if argument:find ( "'''''", 1, true ) then								-- bold italic (5)
			argument=argument:gsub("%'%'%'%'%'", "");							-- remove all instances of it
		elseif argument:find ( "''''", 1, true ) then							-- italic start and end without content (4)
			argument=argument:gsub("%'%'%'%'", "");
		elseif argument:find ( "'''", 1, true ) then							-- bold (3)
			argument=argument:gsub("%'%'%'", "");
		elseif argument:find ( "''", 1, true ) then								-- italic (2)
			argument=argument:gsub("%'%'", "");
		else
			break;
		end
	end
	return argument;															-- done
end


--[[--------------------------&lt; M A K E _ C O I N S _ T I T L E &gt;----------------------------------------------

Makes a title for COinS from Title and / or ScriptTitle (or any other name-script pairs)

Apostrophe markup (bold, italics) is stripped from each value so that the COinS metadata isn't corrupted with strings
of %27%27...

]]

local function make_coins_title (title, script)
	if is_set (title) then
		title = strip_apostrophe_markup (title);								-- strip any apostrophe markup
	else
		title='';																-- if not set, make sure title is an empty string
	end
	if is_set (script) then
		script = script:gsub ('^%l%l%s*:%s*', '');								-- remove language prefix if present (script value may now be empty string)
		script = strip_apostrophe_markup (script);								-- strip any apostrophe markup
	else
		script='';																-- if not set, make sure script is an empty string
	end
	if is_set (title) and is_set (script) then
		script = ' ' .. script;													-- add a space before we concatenate
	end
	return title .. script;														-- return the concatenation
end


--[[--------------------------&lt; E S C A P E _ L U A _ M A G I C _ C H A R S &gt;----------------------------------

Returns a string where all of lua's magic characters have been escaped.  This is important because functions like
string.gsub() treat their pattern and replace strings as patterns, not literal strings.
]]

local function escape_lua_magic_chars (argument)
	argument = argument:gsub("%%", "%%%%");										-- replace % with %%
	argument = argument:gsub("([%^%$%(%)%.%[%]%*%+%-%?])", "%%%1");				-- replace all other lua magic pattern characters
	return argument;
end


--[[--------------------------&lt; G E T _ C O I N S _ P A G E S &gt;------------------------------------------------

Extract page numbers from external wikilinks in any of the |page=, |pages=, or |at= parameters for use in COinS.

]]

local function get_coins_pages (pages)
	local pattern;
	if not is_set (pages) then return pages; end								-- if no page numbers then we're done
	
	while true do
		pattern = pages:match("%[(%w*:?//[^ ]+%s+)[%w%d].*%]");					-- pattern is the opening bracket, the url and following space(s): "[url "
		if nil == pattern then break; end										-- no more urls
		pattern = escape_lua_magic_chars (pattern);								-- pattern is not a literal string; escape lua's magic pattern characters
		pages = pages:gsub(pattern, "");										-- remove as many instances of pattern as possible
	end
	pages = pages:gsub("[%[%]]", "");											-- remove the brackets
	pages = pages:gsub("–", "-" );							-- replace endashes with hyphens
	pages = pages:gsub("&amp;%w+;", "-" );						-- and replace html entities (&amp;ndash; etc.) with hyphens; do we need to replace numerical entities like &amp;#32; and the like?
	return pages;
end


--[=[-------------------------&lt; C O I N S _ R E P L A C E _ M A T H _ S T R I P M A R K E R &gt;------------------

There are three options for math markup rendering that depend on the editor's math preference settings.  These
settings are at [[Special:Preferences#mw-prefsection-rendering]] and are
	PNG images
	TeX source
	MathML with SVG or PNG fallback

All three are heavy with html and css which doesn't belong in the metadata.

Without this function, the metadata saved in the raw wikitext contained the rendering determined by the settings
of the last editor to save the page.

This function gets the rendered form of an equation according to the editor's preference before the page is saved.  It
then searches the rendering for the text equivalent of the rendered equation and replaces the rendering with that so
that the page is saved without extraneous html/css markup and with a reasonably readable text form of the equation.

When a replacement is made, this function returns true and the value with replacement; otherwise false and the intital
value.  To replace multipe equations it is necesary to call this function from within a loop.

]=]

local function coins_replace_math_stripmarker (value)
	local stripmarker = cfg.stripmarkers['math'];
	local rendering = value:match (stripmarker);								-- is there a math stripmarker

	if not rendering then														-- when value doesn't have a math stripmarker, abandon this test
		return false, value;
	end
	
	rendering = mw.text.unstripNoWiki (rendering);								-- convert stripmarker into rendered value (or nil? ''? when math render error)
	
	if rendering:match ('alt="[^"]+"') then										-- if PNG math option
		rendering = rendering:match ('alt="([^"]+)"');							-- extract just the math text
	elseif rendering:match ('$%s+.+%s+%$') then									-- if TeX math option; $ is legit character that is escapes as \$
		rendering = rendering:match ('$%s+(.+)%s+%$')							-- extract just the math text
	elseif rendering:match ('&lt;annotation[^&gt;]+&gt;.+&lt;/annotation&gt;') then			-- if MathML math option
		rendering = rendering:match ('&lt;annotation[^&gt;]+&gt;(.+)&lt;/annotation&gt;')		-- extract just the math text
	else
		return false, value;													-- had math stripmarker but not one of the three defined forms
	end
	
	return true, value:gsub (stripmarker, rendering, 1);
end


--[[--------------------------&lt; C O I N S _ C L E A N U P &gt;----------------------------------------------------

Cleanup parameter values for the metadata by removing or replacing invisible characters and certain html entities.

2015-12-10: there is a bug in mw.text.unstripNoWiki ().  It replaces math stripmarkers with the appropriate content
when it shouldn't.  See https://phabricator.wikimedia.org/T121085 and Wikipedia_talk:Lua#stripmarkers_and_mw.text.unstripNoWiki.28.29

TODO: move the replacement patterns and replacement values into a table in /Configuration similar to the invisible
characters table?

]]

local function coins_cleanup (value)
	local replaced = true;														-- default state to get the do loop running

	while replaced do															-- loop until all math stripmarkers replaced
		replaced, value = coins_replace_math_stripmarker (value);				-- replace math stripmarker with text representation of the equation
	end

	value = value:gsub (cfg.stripmarkers['math'], "MATH RENDER ERROR");						-- one or more couldn't be replaced; insert vague error message
	
	value = mw.text.unstripNoWiki (value);										-- replace nowiki stripmarkers with their content
	value = value:gsub ('&lt;span class="nowrap" style="padding%-left:0%.1em;"&gt;&amp;#39;(s?)&lt;/span&gt;', "'%1");	-- replace {{'}} or {{'s}} with simple apostrophe or apostrophe-s
	value = value:gsub ('&amp;nbsp;', ' ');											-- replace &amp;nbsp; entity with plain space
	value = value:gsub ('\226\128\138', ' ');									-- replace hair space with plain space
	if not mw.ustring.find (value, cfg.indic_script) then						-- don't remove zero width joiner characters from indic script
		value = value:gsub ('&amp;zwj;', '');											-- remove &amp;zwj; entities
		value = mw.ustring.gsub (value, '[\226\128\141\226\128\139\194\173]', '');	-- remove zero-width joiner, zero-width space, soft hyphen
	end
	value = value:gsub ('[\009\010\013]', ' ');									-- replace horizontal tab, line feed, carriage return with plain space
	return value;
end


--[[--------------------------&lt; C O I N S &gt;--------------------------------------------------------------------

COinS metadata (see &lt;http://ocoins.info/&gt;) allows automated tools to parse the citation information.

]]

local function COinS(data, class)
	if 'table' ~= type(data) or nil == next(data) then
		return '';
	end

	for k, v in pairs (data) do													-- spin through all of the metadata parameter values
		if 'ID_list' ~= k and 'Authors' ~= k then								-- except the ID_list and Author tables (author nowiki stripmarker done when Author table processed)
			data[k] = coins_cleanup (v);
		end
	end

	local ctx_ver = "Z39.88-2004";
	
	-- treat table strictly as an array with only set values.
	local OCinSoutput = setmetatable( {}, {
		__newindex = function(self, key, value)
			if is_set(value) then
				rawset( self, #self+1, table.concat{ key, '=', mw.uri.encode( remove_wiki_link( value ) ) } );
			end
		end
	});
	
	if in_array (class, {'arxiv', 'biorxiv', 'citeseerx', 'journal', 'news'}) or (in_array (class, {'conference', 'interview', 'map', 'press release', 'web'}) and is_set(data.Periodical)) or 
		('citation' == class and is_set(data.Periodical) and not is_set (data.Encyclopedia)) then
			OCinSoutput.rft_val_fmt = "info:ofi/fmt:kev:mtx:journal";			-- journal metadata identifier
			if in_array (class, {'arxiv', 'biorxiv', 'citeseerx'}) then			-- set genre according to the type of citation template we are rendering
				OCinSoutput["rft.genre"] = "preprint";							-- cite arxiv, cite biorxiv, cite citeseerx
			elseif 'conference' == class then
				OCinSoutput["rft.genre"] = "conference";						-- cite conference (when Periodical set)
			elseif 'web' == class then
				OCinSoutput["rft.genre"] = "unknown";							-- cite web (when Periodical set)
			else
				OCinSoutput["rft.genre"] = "article";							-- journal and other 'periodical' articles
			end
			OCinSoutput["rft.jtitle"] = data.Periodical;						-- journal only
			OCinSoutput["rft.atitle"] = data.Title;								-- 'periodical' article titles

																				-- these used only for periodicals
			OCinSoutput["rft.ssn"] = data.Season;								-- keywords: winter, spring, summer, fall
			OCinSoutput["rft.chron"] = data.Chron;								-- free-form date components
			OCinSoutput["rft.volume"] = data.Volume;							-- does not apply to books
			OCinSoutput["rft.issue"] = data.Issue;
			OCinSoutput["rft.pages"] = data.Pages;								-- also used in book metadata

	elseif 'thesis' ~= class then												-- all others except cite thesis are treated as 'book' metadata; genre distinguishes
		OCinSoutput.rft_val_fmt = "info:ofi/fmt:kev:mtx:book";					-- book metadata identifier
		if 'report' == class or 'techreport' == class then						-- cite report and cite techreport
			OCinSoutput["rft.genre"] = "report";
		elseif 'conference' == class then										-- cite conference when Periodical not set
			OCinSoutput["rft.genre"] = "conference";
			OCinSoutput["rft.atitle"] = data.Chapter;							-- conference paper as chapter in proceedings (book)
		elseif in_array (class, {'book', 'citation', 'encyclopaedia', 'interview', 'map'}) then
			if is_set (data.Chapter) then
				OCinSoutput["rft.genre"] = "bookitem";
				OCinSoutput["rft.atitle"] = data.Chapter;						-- book chapter, encyclopedia article, interview in a book, or map title
			else
				if 'map' == class or 'interview' == class then
					OCinSoutput["rft.genre"] = 'unknown';						-- standalone map or interview
				else
					OCinSoutput["rft.genre"] = 'book';							-- book and encyclopedia
				end
			end
		else	--{'audio-visual', 'AV-media-notes', 'DVD-notes', 'episode', 'interview', 'mailinglist', 'map', 'newsgroup', 'podcast', 'press release', 'serial', 'sign', 'speech', 'web'}
			OCinSoutput["rft.genre"] = "unknown";
		end
		OCinSoutput["rft.btitle"] = data.Title;									-- book only
		OCinSoutput["rft.place"] = data.PublicationPlace;						-- book only
		OCinSoutput["rft.series"] = data.Series;								-- book only
		OCinSoutput["rft.pages"] = data.Pages;									-- book, journal
		OCinSoutput["rft.edition"] = data.Edition;								-- book only
		OCinSoutput["rft.pub"] = data.PublisherName;							-- book and dissertation
		
	else																		-- cite thesis
		OCinSoutput.rft_val_fmt = "info:ofi/fmt:kev:mtx:dissertation";			-- dissertation metadata identifier
		OCinSoutput["rft.title"] = data.Title;									-- dissertation (also patent but that is not yet supported)
		OCinSoutput["rft.degree"] = data.Degree;								-- dissertation only
		OCinSoutput['rft.inst'] = data.PublisherName;							-- book and dissertation
	end
																				-- and now common parameters (as much as possible)
	OCinSoutput["rft.date"] = data.Date;										-- book, journal, dissertation
	
	for k, v in pairs( data.ID_list ) do										-- what to do about these? For now assume that they are common to all?
--		if k == 'ISBN' then v = clean_isbn( v ) end
		if k == 'ISBN' then v = v:gsub( "[^-0-9X]", "" ); end
		local id = cfg.id_handlers[k].COinS;
		if string.sub( id or "", 1, 4 ) == 'info' then							-- for ids that are in the info:registry
			OCinSoutput["rft_id"] = table.concat{ id, "/", v };
		elseif string.sub (id or "", 1, 3 ) == 'rft' then						-- for isbn, issn, eissn, etc that have defined COinS keywords
			OCinSoutput[ id ] = v;
		elseif id then															-- when cfg.id_handlers[k].COinS is not nil
			OCinSoutput["rft_id"] = table.concat{ cfg.id_handlers[k].prefix, v };	-- others; provide a url
		end
	end

--[[	
	for k, v in pairs( data.ID_list ) do										-- what to do about these? For now assume that they are common to all?
		local id, value = cfg.id_handlers[k].COinS;
		if k == 'ISBN' then value = clean_isbn( v ); else value = v; end
		if string.sub( id or "", 1, 4 ) == 'info' then
			OCinSoutput["rft_id"] = table.concat{ id, "/", v };
		else
			OCinSoutput[ id ] = value;
		end
	end
]]
	local last, first;
	for k, v in ipairs( data.Authors ) do
		last, first = coins_cleanup (v.last), coins_cleanup (v.first or '');	-- replace any nowiki strip markers, non-printing or invisible characers
		if k == 1 then															-- for the first author name only
			if is_set(last)  and is_set(first) then								-- set these COinS values if |first= and |last= specify the first author name
				OCinSoutput["rft.aulast"] = last;								-- book, journal, dissertation
				OCinSoutput["rft.aufirst"] = first;								-- book, journal, dissertation
			elseif is_set(last) then 
				OCinSoutput["rft.au"] = last;									-- book, journal, dissertation -- otherwise use this form for the first name
			end
		else																	-- for all other authors
			if is_set(last) and is_set(first) then
				OCinSoutput["rft.au"] = table.concat{ last, ", ", first };		-- book, journal, dissertation
			elseif is_set(last) then
				OCinSoutput["rft.au"] = last;									-- book, journal, dissertation
			end
		end
	end

	OCinSoutput.rft_id = data.URL;
	OCinSoutput.rfr_id = table.concat{ "info:sid/", mw.site.server:match( "[^/]*$" ), ":", data.RawPage };
	OCinSoutput = setmetatable( OCinSoutput, nil );
	
	-- sort with version string always first, and combine.
	--table.sort( OCinSoutput );
	table.insert( OCinSoutput, 1, "ctx_ver=" .. ctx_ver );  -- such as "Z39.88-2004"
	return table.concat(OCinSoutput, "&amp;");
end


--[[--------------------------&lt; S E T _ S E L E C T E D _ M O D U L E S &gt;--------------------------------------

Sets local cfg table and imported functions table to same (live or sandbox) as that used by the other modules.

]]

local function set_selected_modules (cfg_table_ptr, utilities_page_ptr)
	cfg = cfg_table_ptr;

	is_set = utilities_page_ptr.is_set;											-- import functions from select Module:Citation/CS1/Utilities module
	in_array = utilities_page_ptr.in_array;
	remove_wiki_link = utilities_page_ptr.remove_wiki_link;
end



return {
	make_coins_title = make_coins_title,
	get_coins_pages = get_coins_pages,
	COinS = COinS,
	set_selected_modules = set_selected_modules,
	}</text>
      <sha1>coep8us87urtrppcmr74si4z4ldv4gs</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Citation/CS1/Configuration</title>
    <ns>828</ns>
    <id>19187512</id>
    <revision>
      <id>655208339</id>
      <parentid>647173768</parentid>
      <timestamp>2018-03-23T09:22:14Z</timestamp>
      <contributor>
        <username>Trappist the monk</username>
        <id>129485</id>
      </contributor>
      <comment>synch from [[en:Module:Citation/CS1/Configuration/sandbox]];</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="50649">local citation_config = {};

-- override &lt;code&gt;...&lt;/code&gt; styling to remove color, border, and padding.  &lt;code&gt; css is specified here:
-- https://git.wikimedia.org/blob/mediawiki%2Fcore.git/69cd73811f7aadd093050dbf20ed70ef0b42a713/skins%2Fcommon%2FcommonElements.css#L199
local code_style="color:inherit; border:inherit; padding:inherit;";

--[[--------------------------&lt; U N C A T E G O R I Z E D _ N A M E S P A C E S &gt;------------------------------

List of namespaces that should not be included in citation error categories.  Same as setting notracking = true by default

Note: Namespace names should use underscores instead of spaces.

]]
local uncategorized_namespaces = { 'User', 'Talk', 'User_talk', 'Wikipedia_talk', 'File_talk', 'Template_talk', 'Help_talk', 'Category_talk', 'Portal_talk', 'Book_talk', 'Draft_talk', 'Education_Program_talk', 'Module_talk', 'MediaWiki_talk' };

local uncategorized_subpages = {'/[Ss]andbox', '/[Tt]estcases'};		-- list of Lua patterns found in page names of pages we should not categorize


--[[--------------------------&lt; M E S S A G E S &gt;--------------------------------------------------------------

Translation table

The following contains fixed text that may be output as part of a citation.
This is separated from the main body to aid in future translations of this
module.

]]

local messages = {
	['archived-dead'] = 'Archived from $1 on $2',
	['archived-not-dead'] = '$1 from the original on $2',
	['archived-missing'] = 'Archived from the original$1 on $2',
	['archived'] = 'Archived',
	['by'] = 'By',																-- contributions to authored works: introduction, foreword, afterword
	['cartography'] = 'Cartography by $1',
	['editor'] = 'ed.',
	['editors'] = 'eds.',
	['edition'] = '($1 ed.)',
	['episode'] = 'Episode $1',
	['et al'] = 'et al.',
	['in'] = 'In',																-- edited works
	['inactive'] = 'inactive',
	['inset'] = '$1 inset',
	['interview'] = 'Interviewed by $1',										
	['lay summary'] = 'Lay summary',
	['newsgroup'] = '[[Usenet newsgroup|Newsgroup]]:&amp;nbsp;$1',
	['original'] = 'the original',
	['published'] = ' (published $1)',
	['retrieved'] = 'Retrieved $1',
	['season'] = 'Season $1',
	['section'] = '§ $1',
	['sections'] = '§§ $1',
	['series'] = 'Series $1',
	['translated'] = 'Translated by $1',
	['type'] = ' ($1)',															-- for titletype
	['written'] = 'Written at $1',

	['vol'] = '$1 Vol.&amp;nbsp;$2',												-- $1 is sepc; bold journal style volume is in presentation{}
	['vol-no'] = '$1 Vol.&amp;nbsp;$2 no.&amp;nbsp;$3',									-- sepc, volume, issue
	['issue'] = '$1 No.&amp;nbsp;$2',												-- $1 is sepc

	['j-vol'] = '$1 $2',														-- sepc, volume; bold journal volume is in presentation{}
	['j-issue'] = ' ($1)',

	['nopp'] = '$1 $2';															-- page(s) without prefix; $1 is sepc

	['p-prefix'] = "$1 p.&amp;nbsp;$2",												-- $1 is sepc
	['pp-prefix'] = "$1 pp.&amp;nbsp;$2",											-- $1 is sepc
	['j-page(s)'] = ': $1',														-- same for page and pages

	['sheet'] = '$1 Sheet&amp;nbsp;$2',												-- $1 is sepc
	['sheets'] = '$1 Sheets&amp;nbsp;$2',											-- $1 is sepc
	['j-sheet'] = ': Sheet&amp;nbsp;$1',
	['j-sheets'] = ': Sheets&amp;nbsp;$1',
	
	['subscription'] = '&lt;span style="font-size:90%; color:#555"&gt;(Subscription required (&lt;span title="The site requires a paid subscription to access this page." style="border-bottom:1px dotted;cursor:help"&gt;help&lt;/span&gt;))&lt;/span&gt;' ..
		'[[Category:Pages containing links to subscription-only content]]',
	
	['registration']='&lt;span style="font-size:90%; color:#555"&gt;(Registration required (&lt;span title="The site requires registration to access this page." style="border-bottom:1px dotted;cursor:help"&gt;help&lt;/span&gt;))&lt;/span&gt;' ..
		'[[Category:Pages with login required references or sources]]',
	
	['language'] = '(in $1)',
	['via'] = " &amp;ndash; via $1",
	['event'] = 'Event occurs at',
	['minutes'] = 'minutes in',
	
	['parameter-separator'] = ', ',
	['parameter-final-separator'] = ', and ',
	['parameter-pair-separator'] = ' and ',
	
	-- Determines the location of the help page
	['help page link'] = 'Help:CS1 errors',
	['help page label'] = 'help',
	
	-- Internal errors (should only occur if configuration is bad)
	['undefined_error'] = 'Called with an undefined error condition',
	['unknown_manual_ID'] = 'Unrecognized manual ID mode',
	['unknown_ID_mode'] = 'Unrecognized ID mode',
	['unknown_argument_map'] = 'Argument map not defined for this variable',
	['bare_url_no_origin'] = 'Bare url found but origin indicator is nil or empty',
	}


--[[--------------------------&lt; P R E S E N T A T I O N &gt;------------------------------------------------------

Fixed presentation markup.  Originally part of citation_config.messages it has been moved into its own, more semantically
correct place.

]]

local presentation = 
	{
	-- Error output
	-- .error class is specified at https://git.wikimedia.org/blob/mediawiki%2Fcore.git/9553bd02a5595da05c184f7521721fb1b79b3935/skins%2Fcommon%2Fshared.css#L538
	-- .citation-comment class is specified at Help:CS1_errors#Controlling_error_message_display
	['hidden-error'] = '&lt;span style="display:none;font-size:100%" class="error citation-comment"&gt;$1&lt;/span&gt;',
	['visible-error'] = '&lt;span style="font-size:100%" class="error citation-comment"&gt;$1&lt;/span&gt;',

	['accessdate'] = '&lt;span class="reference-accessdate"&gt;$1$2&lt;/span&gt;',			-- to allow editors to hide accessdate using personal css

	['bdi'] = '&lt;bdi$1&gt;$2&lt;/bdi&gt;',												-- bidirectional isolation used with |script-title= and the like

	['cite'] = '&lt;cite class="$1"&gt;$2&lt;/cite&gt;';									-- |ref= not set so no id="..." attribute
	['cite-id'] = '&lt;cite id="$1" class="$2"&gt;$3&lt;/cite&gt;';							-- for use when |ref= is set

	['format'] = ' &lt;span style="font-size:85%;"&gt;($1)&lt;/span&gt;',					-- for |format=, |chapter-format=, etc
	
																				-- various access levels, for |access=, |doi-access=, |arxiv=, ...
																				-- narrow no-break space &amp;#8239; may work better than nowrap css. Or not? browser support?

	['access-signal'] = '&lt;span class="plainlinks"&gt;$1&amp;#8239;$2&lt;/span&gt;',			-- external link with appropriate lock icon
		['free'] = '[[File:Lock-green.svg|9px|link=|alt=Freely accessible|Freely accessible]]',
		['registration'] = '[[File:Lock-blue-alt-2.svg|9px|link=|alt=Free registration required|Free registration required]]',
		['limited'] = '[[File:Lock-blue-alt-2.svg|9px|link=|alt=Free access subject to limited trial, subscription normally required|Free access subject to limited trial, subscription normally required]]',
		['subscription'] = '[[File:Lock-red-alt.svg|9px|link=|alt=Paid subscription required|Paid subscription required]]',

	['italic-title'] = "''$1''",

	['kern-left'] = '&lt;span style="padding-left:0.2em;"&gt;$1&lt;/span&gt;$2',			-- spacing to use when title contains leading single or double quote mark
	['kern-right'] = '$1&lt;span style="padding-right:0.2em;"&gt;$2&lt;/span&gt;',			-- spacing to use when title contains trailing single or double quote mark

																				-- these for simple wikilinked titles [["text]], [[text"]] and [["text"]]
																				-- span wraps entire wikilink
	['kern-wl-left'] = '&lt;span style="padding-left:0.2em;"&gt;$1&lt;/span&gt;',			-- when title contains leading single or double quote mark
	['kern-wl-right'] = '&lt;span style="padding-right:0.2em;"&gt;$1&lt;/span&gt;',			-- when title contains trailing single or double quote mark
	['kern-wl-both'] = '&lt;span style="padding-left:0.2em;padding-right:0.2em;"&gt;$1&lt;/span&gt;',	-- when title contains leading and trailing single or double quote marks

	['nowrap1'] = '&lt;span class="nowrap"&gt;$1&lt;/span&gt;',								-- for nowrapping an item: &lt;span ...&gt;yyyy-mm-dd&lt;/span&gt;
	['nowrap2'] = '&lt;span class="nowrap"&gt;$1&lt;/span&gt; $2',							-- for nowrapping portions of an item: &lt;span ...&gt;dd mmmm&lt;/span&gt; yyyy (note white space)

	['ocins'] = '&lt;span title="$1" class="Z3988"&gt;&lt;span style="display:none;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;',		-- Note: Using display: none on the COinS span breaks some clients

	['parameter'] = '&lt;code style="'..code_style..'"&gt;&amp;#124;$1=&lt;/code&gt;',

	['quoted-text'] = '&lt;q&gt;$1&lt;/q&gt;',												-- for wrapping |quote= content
	['quoted-title'] = '"$1"',

	['trans-italic-title'] = "&amp;#91;''$1''&amp;#93;",
	['trans-quoted-title'] = "&amp;#91;$1&amp;#93;",
	['vol-bold'] = '$1 &lt;b&gt;$2&lt;/b&gt;',												-- sepc, volume; for bold journal cites; for other cites ['vol'] in messages{}
	}

	
--[[--------------------------&lt; A L I A S E S &gt;----------------------------------------------------------------

Aliases table for commonly passed parameters

]]

local aliases = {
	['AccessDate'] = {'access-date', 'accessdate'},
	['Agency'] = 'agency',
	['AirDate'] = {'air-date', 'airdate'},
	['ArchiveDate'] = {'archive-date', 'archivedate'},
	['ArchiveFormat'] = 'archive-format',
	['ArchiveURL'] = {'archive-url', 'archiveurl'},
	['ASINTLD'] = {'ASIN-TLD', 'asin-tld'},
	['At'] = 'at',
	['Authors'] = {'authors', 'people', 'host', 'credits'},
	['BookTitle'] = {'book-title', 'booktitle'},
	['Cartography'] = 'cartography',
	['Chapter'] = {'chapter', 'contribution', 'entry', 'article', 'section'},
	['ChapterFormat'] = {'chapter-format', 'contribution-format', 'section-format'};
	['ChapterURL'] = {'chapter-url', 'chapterurl', 'contribution-url', 'contributionurl', 'section-url', 'sectionurl'},
	['ChapterUrlAccess'] = 'chapter-url-access',
	['Class'] = 'class',														-- cite arxiv and arxiv identifiers
	['Collaboration'] = 'collaboration',
	['Conference'] = {'conference', 'event'},
	['ConferenceFormat'] = {'conference-format', 'event-format'},
	['ConferenceURL'] = {'conference-url', 'conferenceurl', 'event-url', 'eventurl'},
	['Contribution'] = 'contribution',											-- introduction, foreword, afterword, etc; required when |contributor= set
	['Date'] = 'date',
	['DeadURL'] = {'dead-url', 'deadurl'},
	['Degree'] = 'degree',
	['DF'] = 'df',
	['DisplayAuthors'] = {'display-authors', 'displayauthors'},
	['DisplayEditors'] = {'display-editors', 'displayeditors'},
	['Docket'] = 'docket',
	['DoiBroken'] = {'doi-broken', 'doi-broken-date', 'doi-inactive-date'},
	['Edition'] = 'edition',
	['Editors'] = 'editors',
	['Embargo'] = 'embargo',
	['Encyclopedia'] = {'encyclopedia', 'encyclopaedia'},						-- this one only used by citation
	['Episode'] = 'episode',													-- cite serial only TODO: make available to cite episode?
	['Format'] = 'format',
	['ID'] = {'id', 'ID'},
	['IgnoreISBN'] = {'ignore-isbn-error', 'ignoreisbnerror'},
	['Inset'] = 'inset',
	['Issue'] = {'issue', 'number'},
	['Interviewers'] = 'interviewers',
	['Language'] = {'language', 'in'},
	['LastAuthorAmp'] = {'last-author-amp', 'lastauthoramp'},
	['LayDate'] = {'lay-date', 'laydate'},
	['LayFormat'] = 'lay-format',
	['LaySource'] = {'lay-source', 'laysource'},
	['LayURL'] = {'lay-url', 'lay-summary', 'layurl', 'laysummary'},
	['MailingList'] = {'mailinglist', 'mailing-list'},							-- cite mailing list only
	['Map'] = 'map',															-- cite map only
	['MapFormat'] = 'map-format',												-- cite map only
	['MapURL'] = {'mapurl', 'map-url'},											-- cite map only
	['MessageID'] = 'message-id',
	['Minutes'] = 'minutes',
	['Mode'] = 'mode',
	['NameListFormat'] = 'name-list-format',
	['Network'] = 'network',
	['NoPP'] = {'no-pp', 'nopp'},
	['NoTracking'] = {'template-doc-demo', 'no-cat', 'nocat',
		'no-tracking', 'notracking'},
	['Number'] = 'number',														-- this case only for cite techreport
	['OrigYear'] = {'orig-year', 'origyear'},
	['Others'] = 'others',
	['Page'] = {'p', 'page'},
	['Pages'] = {'pp', 'pages'},
	['Periodical'] = {'journal', 'newspaper', 'magazine', 'work',
		'website',  'periodical', 'encyclopedia', 'encyclopaedia', 'dictionary', 'mailinglist'},
	['Place'] = {'place', 'location'},
	['PostScript'] = 'postscript',
	['PublicationDate'] = {'publicationdate', 'publication-date'},
	['PublicationPlace'] = {'publication-place', 'publicationplace'},
	['PublisherName'] = {'publisher', 'distributor', 'institution', 'newsgroup'},
	['Quote'] = {'quote', 'quotation'},
	['Ref'] = 'ref',
	['RegistrationRequired'] = 'registration',
	['Scale'] = 'scale',
	['ScriptChapter'] = 'script-chapter',
	['ScriptTitle'] = 'script-title',
	['Section'] = 'section',
	['Season'] = 'season',
	['Sections'] = 'sections',													-- cite map only
	['Series'] = {'series', 'version'},
	['SeriesSeparator'] = 'series-separator',
	['SeriesLink'] = {'series-link', 'serieslink'},
	['SeriesNumber'] = {'series-number', 'series-no', 'seriesnumber', 'seriesno'},
	['Sheet'] = 'sheet',														-- cite map only
	['Sheets'] = 'sheets',														-- cite map only
	['Station'] = 'station',
	['SubscriptionRequired'] = 'subscription',
	['Time'] = 'time',
	['TimeCaption'] = {'time-caption', 'timecaption'},
	['Title'] = 'title',
	['TitleLink'] = {'title-link', 'episode-link', 'titlelink', 'episodelink'},
	['TitleNote'] = 'department',
	['TitleType'] = {'type', 'medium'},
	['TransChapter'] = 'trans-chapter',
	['TransMap'] = 'trans-map',													-- cite map only
	['Transcript'] = 'transcript',
	['TranscriptFormat'] = 'transcript-format',
	['TranscriptURL'] = {'transcript-url', 'transcripturl'},
	['TransTitle'] = 'trans-title',
	['URL'] = {'url', 'URL'},
	['UrlAccess'] = {'url-access'},
	['Vauthors'] = 'vauthors',
	['Veditors'] = 'veditors',
	['Via'] = 'via',
	['Volume'] = 'volume',
	['Year'] = 'year',

	['AuthorList-First'] = {"first#", "given#", "author-first#", "author#-first"},
	['AuthorList-Last'] = {"last#", "author#", "surname#", "author-last#", "author#-last", "subject#"},
	['AuthorList-Link'] = {"authorlink#", "author-link#", "author#-link", "subjectlink#", "author#link", "subject-link#", "subject#-link", "subject#link"},
	['AuthorList-Mask'] = {"author-mask#", "authormask#", "author#mask", "author#-mask"},
	
	['ContributorList-First'] = {'contributor-first#', 'contributor#-first', 'contributor-given#', 'contributor#-given'},
	['ContributorList-Last'] = {'contributor#', 'contributor-last#', 'contributor#-last', 'contributor-surname#', 'contributor#-surname'},
	['ContributorList-Link'] = {'contributor-link#', 'contributor#-link'},
	['ContributorList-Mask'] = {'contributor-mask#', 'contributor#-mask'},

	['EditorList-First'] = {"editor-first#", "editor#-first", "editor-given#", "editor#-given"},
	['EditorList-Last'] = {"editor#", "editor-last#", "editor#-last", "editor-surname#", "editor#-surname"},
	['EditorList-Link'] = {"editor-link#", "editor#-link", "editorlink#", "editor#link"},
	['EditorList-Mask'] = {"editor-mask#", "editor#-mask", "editormask#", "editor#mask"},
	
	['InterviewerList-First'] = {'interviewer-first#', 'interviewer#-first'},
	['InterviewerList-Last'] = {'interviewer#', 'interviewer-last#', 'interviewer#-last'},
	['InterviewerList-Link'] = {'interviewer-link#', 'interviewer#-link'},
	['InterviewerList-Mask'] = {'interviewer-mask#', 'interviewer#-mask'},

	['TranslatorList-First'] = {'translator-first#', 'translator#-first', 'translator-given#', 'translator#-given'},
	['TranslatorList-Last'] = {'translator#', 'translator-last#', 'translator#-last', 'translator-surname#', 'translator#-surname'},
	['TranslatorList-Link'] = {'translator-link#', 'translator#-link'},
	['TranslatorList-Mask'] = {'translator-mask#', 'translator#-mask'},
	}


--[[--------------------------&lt; S P E C I A L   C A S E   T R A N S L A T I O N S &gt;----------------------------

This table is primarily here to support internationalization.  Translations in this table are used, for example,
when an error message, category name, etc is extracted from the English alias key.  There may be other cases where
this translation table may be useful.

]]

local special_case_translation = {
	['AuthorList'] = "authors list",											-- these for multiple names maint categories
	['ContributorList'] = "contributors list",
	['EditorList'] = "editors list",
	['InterviewerList'] = "interviewers list",
	['TranslatorList'] = "translators list",
	
	['authors'] = "authors",													-- used in get_display_authors_editors()
	['editors'] = "editors",
	}


--[[--------------------------&lt; D E F A U L T S &gt;--------------------------------------------------------------

Default parameter values

TODO: keep this?  Only one default?
]]

local defaults = {
	['DeadURL'] = 'yes',
}


--[[--------------------------&lt; D A T E _ N A M E S &gt;----------------------------------------------------------

This table of tables lists local language date names and fallback English date names.  The code in Date_validation
will look first in the local table for valid date names.  If date names are not found in the local table, the code
will look in the English table.

Because citations can be copied to the local wiki from en.wiki, the English is required when the date-name translation
function date_name_xlate() is used.

In these tables, season numbering is defined by ISO DIS 8601:2016 part 2 §4.7 'Divisions of a year'.  The standard
defines various divisions using numbers 21-41.  cs1|2 only supports generic seasons.  ISO DIS 8601:2016 does support
the distinction between north and south hemispere seasons but cs1|2 has no way to make that distinction.

The standard does not address 'named' dates so, for the purposes of cs1|2, Christmas is defined here as 99, which
should be out of the ISO DIS 8601:2016 range of uses for a while.

]]

local date_names = {
	['en'] = {			-- English
		['long']	= {['January']=1, ['February']=2, ['March']=3, ['April']=4, ['May']=5, ['June']=6, ['July']=7, ['August']=8, ['September']=9, ['October']=10, ['November']=11, ['December']=12};
		['short']	= {['Jan']=1, ['Feb']=2, ['Mar']=3, ['Apr']=4, ['May']=5, ['Jun']=6, ['Jul']=7, ['Aug']=8, ['Sep']=9, ['Oct']=10, ['Nov']=11, ['Dec']=12};
		['season']	= {['Winter']=24, ['Spring']=21, ['Summer']=22, ['Fall']=23, ['Autumn']=23};
		['named']	= {['Christmas']=99};
		},
	['local'] = {		-- replace these English date names with the local language equivalents
		['long']	= {['January']=1, ['February']=2, ['March']=3, ['April']=4, ['May']=5, ['June']=6, ['July']=7, ['August']=8, ['September']=9, ['October']=10, ['November']=11, ['December']=12};
		['short']	= {['Jan']=1, ['Feb']=2, ['Mar']=3, ['Apr']=4, ['May']=5, ['Jun']=6, ['Jul']=7, ['Aug']=8, ['Sep']=9, ['Oct']=10, ['Nov']=11, ['Dec']=12};
		['season']	= {['Winter']=24, ['Spring']=21, ['Summer']=22, ['Fall']=23, ['Autumn']=23};
		['named']	= {['Christmas']=99};
		},
	['local_digits'] = {['0'] = '0', ['1'] = '1', ['2'] = '2', ['3'] = '3', ['4'] = '4', ['5'] = '5', ['6'] = '6', ['7'] = '7', ['8'] = '8', ['9'] = '9'};	-- used to convert local language digits to Western 0-9
	}


--[[--------------------------&lt; V O L U M E ,  I S S U E ,  P A G E S &gt;----------------------------------------

These tables hold cite class values (from the template invocation) and identify those templates that support
|volume=, |issue=, and |page(s)= parameters.  Cite conference and cite map require further qualification which
is handled in the main module.

]]

local templates_using_volume = {'citation', 'audio-visual', 'book', 'conference', 'encyclopaedia', 'interview', 'journal', 'magazine', 'map', 'news', 'report', 'techreport', 'thesis'}
local templates_using_issue = {'citation', 'conference', 'episode', 'interview', 'journal', 'magazine', 'map', 'news'}
local templates_not_using_page = {'audio-visual', 'episode', 'mailinglist', 'newsgroup', 'podcast', 'serial', 'sign', 'speech'}


--[[--------------------------&lt; K E Y W O R D S &gt;--------------------------------------------------------------

This table holds keywords for those parameters that have defined sets of acceptible keywords.

]]

local keywords = {
	['yes_true_y'] = {'yes', 'true', 'y'},										-- ignore-isbn-error, last-author-amp, no-tracking, nopp, registration, subscription
--	['deadurl'] = {'yes', 'true', 'y', 'no', 'unfit', 'usurped', 'unfit no archive', 'usurped no archive'},		-- hidden 2016-04-10; see Help_talk:Citation_Style_1#Recycled_urls
	['deadurl'] = {'yes', 'true', 'y', 'no', 'unfit', 'usurped', 'bot: unknown'},
	['mode'] = {'cs1', 'cs2', 'mla'},
	['name-list-format'] = {'vanc'},
	['contribution'] = {'afterword', 'foreword', 'introduction', 'preface'},	-- generic contribution titles that are rendered unquoted in the 'chapter' position
	['date-format'] = {'dmy', 'dmy-all', 'mdy', 'mdy-all', 'ymd', 'ymd-all'},
	['url-access'] = {'subscription', 'limited', 'registration'}, 	   -- access level of a URL (subscription required, limited access, free registration required), free to read by default
    ['id-access'] = {'free'},                                          -- access level of an identifier (free to read), subscription required (or no full text) by default
}


--[[--------------------------&lt; S T R I P M A R K E R S &gt;------------------------------------------------------

Common pattern definition location for stripmarkers so that we don't have to go hunting for them if (when)
MediaWiki changes their form.

]]

local stripmarkers = {
	['any'] = '\127[^\127]*UNIQ%-%-(%a+)%-[%a%d]+%-QINU[^\127]*\127',			-- capture returns name of stripmarker
	['math'] = '\127[^\127]*UNIQ%-%-math%-[%a%d]+%-QINU[^\127]*\127'			-- math stripmarkers used in coins_cleanup() and coins_replace_math_stripmarker()
	}


--[[--------------------------&lt; I N V I S I B L E _ C H A R A C T E R S &gt;--------------------------------------

This table holds non-printing or invisible characters indexed either by name or by Unicode group. Values are decimal
representations of UTF-8 codes.  The table is organized as a table of tables because the lua pairs keyword returns
table data in an arbitrary order.  Here, we want to process the table from top to bottom because the entries at
the top of the table are also found in the ranges specified by the entries at the bottom of the table.

This list contains patterns for templates like {{'}} which isn't an error but transcludes characters that are
invisible.  These kinds of patterns must be recognized by the functions that use this list.

Also here is a pattern that recognizes stripmarkers that begin and end with the delete characters.  The nowiki
stripmarker is not an error but some others are because the parameter values that include them become part of the
template's metadata before stripmarker replacement.

]]

local invisible_chars = {
	{'replacement', '\239\191\189'},											-- U+FFFD, EF BF BD
	{'zero width joiner', '\226\128\141'},										-- U+200D, E2 80 8D
	{'zero width space', '\226\128\139'},										-- U+200B, E2 80 8B
	{'hair space', '\226\128\138'},												-- U+200A, E2 80 8A
	{'soft hyphen', '\194\173'},												-- U+00AD, C2 AD
	{'horizontal tab', '\009'},													-- U+0009 (HT), 09
	{'line feed', '\010'},														-- U+000A (LF), 0A
	{'carriage return', '\013'},												-- U+000D (CR), 0D
	{'stripmarker', stripmarkers.any},											-- stripmarker; may or may not be an error; capture returns the stripmaker type
	{'delete', '\127'},															-- U+007F (DEL), 7F; must be done after stripmarker test
	{'C0 control', '[\000-\008\011\012\014-\031]'},								-- U+0000–U+001F (NULL–US), 00–1F (except HT, LF, CR (09, 0A, 0D))
	{'C1 control', '[\194\128-\194\159]'},										-- U+0080–U+009F (XXX–APC), C2 80 – C2 9F
--	{'Specials', '[\239\191\185-\239\191\191]'},								-- U+FFF9-U+FFFF, EF BF B9 – EF BF BF
--	{'Private use area', '[\238\128\128-\239\163\191]'},						-- U+E000–U+F8FF, EE 80 80 – EF A3 BF
--	{'Supplementary Private Use Area-A', '[\243\176\128\128-\243\191\191\189]'},	-- U+F0000–U+FFFFD, F3 B0 80 80 – F3 BF BF BD
--	{'Supplementary Private Use Area-B', '[\244\128\128\128-\244\143\191\189]'},	-- U+100000–U+10FFFD, F4 80 80 80 – F4 8F BF BD
	}


-- Indic script makes use of zero width joiner as a character modifier so zwj characters must be left in.  This
-- pattern covers all of the unicode characters for these languages:
--	Devanagari					0900–097F – https://unicode.org/charts/PDF/U0900.pdf
--		Devanagari extended		A8E0–A8FF – https://unicode.org/charts/PDF/UA8E0.pdf
--	Bengali						0980–09FF – https://unicode.org/charts/PDF/U0980.pdf
--	Gurmukhi					0A00–0A7F – https://unicode.org/charts/PDF/U0A00.pdf
--	Gujarati					0A80–0AFF – https://unicode.org/charts/PDF/U0A80.pdf
--	Oriya						0B00–0B7F – https://unicode.org/charts/PDF/U0B00.pdf
--	Tamil						0B80–0BFF – https://unicode.org/charts/PDF/U0B80.pdf
--	Telugu						0C00–0C7F – https://unicode.org/charts/PDF/U0C00.pdf
--	Kannada						0C80–0CFF – https://unicode.org/charts/PDF/U0C80.pdf
--	Malayalam					0D00–0D7F – https://unicode.org/charts/PDF/U0D00.pdf
-- plus the not-necessarily Indic scripts for Sinhala and Burmese:
--  Sinhala						0D80-0DFF - https://unicode.org/charts/PDF/U0D80.pdf
--	Myanmar						1000-109F - https://unicode.org/charts/PDF/U1000.pdf
--		Myanmar extended A		AA60-AA7F - https://unicode.org/charts/PDF/UAA60.pdf
--		Myanmar extended B		A9E0-A9FF - https://unicode.org/charts/PDF/UA9E0.pdf
-- the pattern is used by has_invisible_chars() and coins_cleanup()
-- TODO: find a better place for this?

local indic_script = '[\224\164\128-\224\181\191\224\163\160-\224\183\191\225\128\128-\225\130\159\234\167\160-\234\167\191\234\169\160-\234\169\191]';


--[[--------------------------&lt; L A N G U A G E S &gt;------------------------------------------------------------

This table is used to hold ISO 639-1 two-character language codes that apply only to |script-title= and |script-chapter=

]]

local script_lang_codes = {
	'am', 'ar', 'be', 'bg', 'bn', 'bs', 'dv', 'el', 'fa',						-- ISO 639-1 codes only for |script-title= and |script-chapter=
	'gu', 'he', 'hy', 'ja', 'ka', 'kn', 'ko', 'ku',
	'mk', 'ml', 'mn', 'mr', 'my', 'ps', 'ru', 'sd',
	'sr', 'tg', 'th', 'uk', 'ug', 'ur', 'yi', 'zh'
	};


--[[--------------------------&lt; L A N G U A G E   R E M A P P I N G &gt;------------------------------------------

These tables hold language information that is different (correct) from MediaWiki's definitions

]]

	local lang_code_remap = {													-- used for |language= and |script-title= / |script-chapter=
		['bh'] = 'Bihari',														-- MediaWiki uses 'bh' as a subdomain name for Bhojpuri wWikipedia: bh.wikipedia.org
		['bn'] = 'Bengali',														-- MediaWiki returns Bangla
		['cnr'] = 'Montenegrin',												-- 'new' 639 code that MediaWiki does not yet understand
	}

	local lang_name_remap = {													-- used for |language=
		['bangla'] = {'Bengali', 'bn'},											-- MediaWiki returns Bangla (the endonym) but we want Bengali (the exonym); here we remap
		['bengali'] = {'Bengali', 'bn'},										-- MediaWiki doesn't use exonym so here we provide correct language name and 639-1 code
		['bihari'] = {'Bihari', 'bh'},											-- MediaWiki replaces 'Bihari' with 'Bhojpuri' so 'Bihari' cannot be found
		['bhojpuri'] = {'Bhojpuri', 'bho'},										-- MediaWiki uses 'bh' as a subdomain name for Bhojpuri wWikipedia: bh.wikipedia.org
		['montenegrin'] = {'Montenegrin', 'cnr'},								-- 'new' 639 code that MediaWiki does not yet understand
	}

--[[--------------------------&lt; M A I N T E N A N C E _ C A T E G O R I E S &gt;----------------------------------

Here we name maintenance categories to be used in maintenance messages.

]]

local maint_cats = {
	['ASIN'] = 'CS1 maint: ASIN uses ISBN',
	['authors'] = 'CS1 maint: Uses authors parameter',
	['bot:_unknown'] = 'CS1 maint: BOT: original-url status unknown',
	['date_format'] = 'CS1 maint: Date format',
	['date_year'] = 'CS1 maint: Date and year',
	['disp_auth_ed'] = 'CS1 maint: display-$1',									-- $1 is authors or editors; gets value from special_case_translation table
	['editors'] = 'CS1 maint: Uses editors parameter',
	['embargo'] = 'CS1 maint: PMC embargo expired',
	['english'] = 'CS1 maint: English language specified',
	['etal'] = 'CS1 maint: Explicit use of et al.',
	['extra_text'] = 'CS1 maint: Extra text',
	['extra_text_names'] = 'CS1 maint: Extra text: $1',							-- $1 is &lt;name&gt;s list; gets value from special_case_translation table
	['ignore_isbn_err'] = 'CS1 maint: Ignored ISBN errors',
	['interviewers'] = 'CS1 maint: Uses interviewers parameter',
	['missing_pipe'] = 'CS1 maint: Missing pipe',
	['mult_names'] = 'CS1 maint: Multiple names: $1',							-- $1 is &lt;name&gt;s list; gets value from special_case_translation table
	['pmc_format'] = 'CS1 maint: PMC format',
	['unfit'] = 'CS1 maint: Unfit url',
	['unknown_lang'] = 'CS1 maint: Unrecognized language',
	['untitled'] = 'CS1 maint: Untitled periodical',
	}


--[[--------------------------&lt; P R O P E R T I E S _ C A T E G O R I E S &gt;------------------------------------

Here we name properties categories

]]

local prop_cats = {
	['foreign_lang_source'] = 'CS1 $1-language sources ($2)',					-- |language= categories; $1 is language name, $2 is ISO639-1 code
	['foreign_lang_source_2'] = 'CS1 foreign language sources (ISO 639-2)|$1',	-- |language= category; a cat for ISO639-2 languages; $1 is the ISO 639-2 code
	['script'] = 'CS1 uses foreign language script',							-- when language specified by |script-title=xx: doesn't have its own category
	['script_with_name'] = 'CS1 uses $1-language script ($2)',					-- |script-title=xx: has matching category; $1 is language name, $2 is ISO639-1 code
	['jul_greg_uncertainty'] = 'CS1: Julian–Gregorian uncertainty',				-- probably temporary cat to identify scope of template with dates 1 October 1582 – 1 January 1926
	}


--[[--------------------------&lt; T I T L E _ T Y P E S &gt;--------------------------------------------------------

Here we map a template's CitationClass to TitleType (default values for |type= parameter)

]]

local title_types = {
	['AV-media-notes'] = 'Media notes',
	['interview'] = 'Interview',
	['mailinglist'] = 'Mailing list',
	['map'] = 'Map',
	['podcast'] = 'Podcast',
	['pressrelease'] = 'Press release',
	['report'] = 'Report',
	['techreport'] = 'Technical report',
	['thesis'] = 'Thesis',
	}


--[[--------------------------&lt; E R R O R _ C O N D I T I O N S &gt;----------------------------------------------

Error condition table

The following contains a list of IDs for various error conditions defined in the code.  For each ID, we specify a
text message to display, an error category to include, and whether the error message should be wrapped as a hidden comment.

Anchor changes require identical changes to matching anchor in Help:CS1 errors

]]

local error_conditions = {
	accessdate_missing_url = {
		message = '&lt;code style="'..code_style..'"&gt;&amp;#124;access-date=&lt;/code&gt; requires &lt;code style="'..code_style..'"&gt;&amp;#124;url=&lt;/code&gt;',
		anchor = 'accessdate_missing_url',
		category = 'Pages using citations with accessdate and no URL',
		hidden = true },
	archive_missing_date = {
		message = '&lt;code style="'..code_style..'"&gt;&amp;#124;archive-url=&lt;/code&gt; requires &lt;code style="'..code_style..'"&gt;&amp;#124;archive-date=&lt;/code&gt;',
		anchor = 'archive_missing_date',
		category = 'Pages with archiveurl citation errors',
		hidden = false },
	archive_missing_url = {
		message = '&lt;code style="'..code_style..'"&gt;&amp;#124;archive-url=&lt;/code&gt; requires &lt;code style="'..code_style..'"&gt;&amp;#124;url=&lt;/code&gt;',
		anchor = 'archive_missing_url',
		category = 'Pages with archiveurl citation errors',
		hidden = false },
	archive_url = {
		message = '&lt;code style="'..code_style..'"&gt;&amp;#124;archive-url=&lt;/code&gt; is malformed: $1',
		anchor = 'archive_url',
		category = 'Pages with archiveurl citation errors',
		hidden = false },
	arxiv_missing = {
		message = '&lt;code style="'..code_style..'"&gt;&amp;#124;arxiv=&lt;/code&gt; required',
		anchor = 'arxiv_missing',
		category = 'CS1 errors: arXiv',											-- same as bad arxiv
		hidden = false },
	arxiv_params_not_supported = {
		message = 'Unsupported parameter(s) in cite arXiv',
		anchor = 'arxiv_params_not_supported',
		category = 'CS1 errors: arXiv',											-- same as bad arxiv
		hidden = false },
	bad_arxiv = {
		message = 'Check &lt;code style="'..code_style..'"&gt;&amp;#124;arxiv=&lt;/code&gt; value',
		anchor = 'bad_arxiv',
		category = 'CS1 errors: arXiv',
		hidden = false },
	bad_asin = {
		message = 'Check &lt;code style="'..code_style..'"&gt;&amp;#124;asin=&lt;/code&gt; value',
		anchor = 'bad_asin',
		category ='CS1 errors: ASIN',
		hidden = false },
	bad_bibcode = {
		message = 'Check &lt;code style="'..code_style..'"&gt;&amp;#124;bibcode=&lt;/code&gt; $1',
		anchor = 'bad_bibcode',
		category = 'CS1 errors: bibcode',
		hidden = false },
	bad_biorxiv = {
		message = 'Check &lt;code style="'..code_style..'"&gt;&amp;#124;biorxiv=&lt;/code&gt; value',
		anchor = 'bad_biorxiv',
		category = 'CS1 errors: bioRxiv',
		hidden = false },
	bad_citeseerx = {
		message = 'Check &lt;code style="'..code_style..'"&gt;&amp;#124;citeseerx=&lt;/code&gt; value',
		anchor = 'bad_citeseerx',
		category = 'CS1 errors: citeseerx',
		hidden = false },
	bad_date = {
		message = 'Check date values in: &lt;code style="'..code_style..'"&gt;$1&lt;/code&gt;',
		anchor = 'bad_date',
		category = 'CS1 errors: dates',
		hidden = false },
	bad_doi = {
		message = 'Check &lt;code style="'..code_style..'"&gt;&amp;#124;doi=&lt;/code&gt; value',
		anchor = 'bad_doi',
		category = 'CS1 errors: DOI',
		hidden = false },
	bad_hdl = {
		message = 'Check &lt;code style="'..code_style..'"&gt;&amp;#124;hdl=&lt;/code&gt; value',
		anchor = 'bad_hdl',
		category = 'CS1 errors: HDL',
		hidden = false },
	bad_isbn = {
		message = 'Check &lt;code style="'..code_style..'"&gt;&amp;#124;isbn=&lt;/code&gt; value: $1',
		anchor = 'bad_isbn',
		category = 'CS1 errors: ISBN',
		hidden = false },
	bad_ismn = {
		message = 'Check &lt;code style="'..code_style..'"&gt;&amp;#124;ismn=&lt;/code&gt; value',
		anchor = 'bad_ismn',
		category = 'CS1 errors: ISMN',
		hidden = false },
	bad_issn = {
		message = 'Check &lt;code style="'..code_style..'"&gt;&amp;#124;$1issn=&lt;/code&gt; value',
		anchor = 'bad_issn',
		category = 'CS1 errors: ISSN',
		hidden = false },
	bad_jfm = {
		message = 'Check &lt;code style="'..code_style..'"&gt;&amp;#124;jfm=&lt;/code&gt; value',
		anchor = 'bad_jfm',
		category = 'CS1 errors: JFM',
		hidden = false },
	bad_lccn = {
		message = 'Check &lt;code style="'..code_style..'"&gt;&amp;#124;lccn=&lt;/code&gt; value',
		anchor = 'bad_lccn',
		category = 'CS1 errors: LCCN',
		hidden = false },
	bad_usenet_id = {
		message = 'Check &lt;code style="'..code_style..'"&gt;&amp;#124;message-id=&lt;/code&gt; value',
		anchor = 'bad_message_id',
		category = 'CS1 errors: message-id',
		hidden = false },
	bad_mr = {
		message = 'Check &lt;code style="'..code_style..'"&gt;&amp;#124;mr=&lt;/code&gt; value',
		anchor = 'bad_mr',
		category = 'CS1 errors: MR',
		hidden = false },
	bad_ol = {
		message = 'Check &lt;code style="'..code_style..'"&gt;&amp;#124;ol=&lt;/code&gt; value',
		anchor = 'bad_ol',
		category = 'CS1 errors: OL',
		hidden = false },
	bad_paramlink = {															-- for |title-link=, |author/editor/translator-link=, |series-link=, |episode-link=
		message = 'Check &lt;code style="'..code_style..'"&gt;&amp;#124;$1=&lt;/code&gt; value',
		anchor = 'bad_paramlink',
		category = 'CS1 errors: parameter link',
		hidden = false },
	bad_pmc = {
		message = 'Check &lt;code style="'..code_style..'"&gt;&amp;#124;pmc=&lt;/code&gt; value',
		anchor = 'bad_pmc',
		category = 'CS1 errors: PMC',
		hidden = false },
	bad_pmid = {
		message = 'Check &lt;code style="'..code_style..'"&gt;&amp;#124;pmid=&lt;/code&gt; value',
		anchor = 'bad_pmid',
		category = 'CS1 errors: PMID',
		hidden = false },
	bad_oclc = {
		message = 'Check &lt;code style="'..code_style..'"&gt;&amp;#124;oclc=&lt;/code&gt; value',
		anchor = 'bad_oclc',
		category = 'CS1 errors: OCLC',
		hidden = false },
	bad_ssrn = {
		message = 'Check &lt;code style="'..code_style..'"&gt;&amp;#124;ssrn=&lt;/code&gt; value',
		anchor = 'bad_ssrn',
		category = 'CS1 errors: SSRN',
		hidden = false },
	bad_url = {
		message = 'Check $1 value',
		anchor = 'bad_url',
		category = 'Pages with URL errors',
		hidden = false },
	bad_zbl = {
		message = 'Check &lt;code style="'..code_style..'"&gt;&amp;#124;zbl=&lt;/code&gt; value',
		anchor = 'bad_zbl',
		category = 'CS1 errors: ZBL',
		hidden = false },
	bare_url_missing_title = {
		message = '$1 missing title',
		anchor = 'bare_url_missing_title',
		category = 'Pages with citations having bare URLs',
		hidden = false },
	biorxiv_missing = {
		message = '&lt;code style="'..code_style..'"&gt;&amp;#124;biorxiv=&lt;/code&gt; required',
		anchor = 'biorxiv_missing',
		category = 'CS1 errors: bioRxiv',										-- same as bad bioRxiv
		hidden = false },
	chapter_ignored = {
		message = '&lt;code style="'..code_style..'"&gt;&amp;#124;$1=&lt;/code&gt; ignored',
		anchor = 'chapter_ignored',
		category = 'CS1 errors: chapter ignored',
		hidden = false },
	citation_missing_title = {
		message = 'Missing or empty &lt;code style="'..code_style..'"&gt;&amp;#124;$1=&lt;/code&gt;',
		anchor = 'citation_missing_title',
		category = 'Pages with citations lacking titles',
		hidden = false },
	citeseerx_missing = {
		message = '&lt;code style="'..code_style..'"&gt;&amp;#124;citeseerx=&lt;/code&gt; required',
		anchor = 'citeseerx_missing',
		category = 'CS1 errors: citeseerx',										-- same as bad citeseerx
		hidden = false },
	cite_web_url = {															-- this error applies to cite web and to cite podcast
		message = 'Missing or empty &lt;code style="'..code_style..'"&gt;&amp;#124;url=&lt;/code&gt;',
		anchor = 'cite_web_url',
		category = 'Pages using web citations with no URL',
		hidden = true },
	contributor_ignored = {
		message = '&lt;code style="'..code_style..'"&gt;&amp;#124;contributor=&lt;/code&gt; ignored&lt;/code&gt;',
		anchor = 'contributor_ignored',
		category = 'CS1 errors: contributor',
		hidden = false },
	contributor_missing_required_param = {
		message = '&lt;code style="'..code_style..'"&gt;&amp;#124;contributor=&lt;/code&gt; requires &lt;code style="'..code_style..'"&gt;&amp;#124;$1=&lt;/code&gt;',
		anchor = 'contributor_missing_required_param',
		category = 'CS1 errors: contributor',
		hidden = false },
	deprecated_params = {
		message = 'Cite uses deprecated parameter &lt;code style="'..code_style..'"&gt;&amp;#124;$1=&lt;/code&gt;',
		anchor = 'deprecated_params',
		category = 'CS1 errors: deprecated parameters',
		hidden = false },
	empty_citation = {
		message = 'Empty citation',
		anchor = 'empty_citation',
		category = 'Pages with empty citations',
		hidden = false },
	first_missing_last = {
		message = '&lt;code style="'..code_style..'"&gt;&amp;#124;first$2=&lt;/code&gt; missing &lt;code style="'..code_style..'"&gt;&amp;#124;last$2=&lt;/code&gt; in $1',
		anchor = 'first_missing_last',
		category = 'CS1 errors: missing author or editor',
		hidden = false },
	format_missing_url = {
		message = '&lt;code style="'..code_style..'"&gt;&amp;#124;$1=&lt;/code&gt; requires &lt;code style="'..code_style..'"&gt;&amp;#124;$2=&lt;/code&gt;',
		anchor = 'format_missing_url',
		category = 'Pages using citations with format and no URL',
		hidden = true },
	invalid_param_val = {
		message = 'Invalid &lt;code style="'..code_style..'"&gt;&amp;#124;$1=$2&lt;/code&gt;',
		anchor = 'invalid_param_val',
		category = 'CS1 errors: invalid parameter value',
		hidden = false },
	invisible_char = {
		message = '$1 in $2 at position $3',
		anchor = 'invisible_char',
		category = 'CS1 errors: invisible characters',
		hidden = false },
	missing_name = {
		message = 'Missing &lt;code style="'..code_style..'"&gt;&amp;#124;last$2=&lt;/code&gt; in $1',
		anchor = 'missing_name',
		category = 'CS1 errors: missing author or editor',
		hidden = false },
	param_access_requires_param = {
		message = '&lt;code style="'..code_style..'"&gt;&amp;#124;$1-access=&lt;/code&gt; requires &lt;code style="'..code_style..'"&gt;&amp;#124;$1=&lt;/code&gt;',
		anchor = 'param_access_requires_param',
		category = 'CS1 errors: param-access',
		hidden = false },
	param_has_ext_link = {
		message = 'External link in &lt;code style="'..code_style..'"&gt;$1&lt;/code&gt;',
		anchor = 'param_has_ext_link',
		category = 'CS1 errors: external links',
		hidden = false },
	parameter_ignored = {
		message = 'Unknown parameter &lt;code style="'..code_style..'"&gt;&amp;#124;$1=&lt;/code&gt; ignored',
		anchor = 'parameter_ignored',
		category = 'Pages with citations using unsupported parameters',
		hidden = false },
	parameter_ignored_suggest = {
		message = 'Unknown parameter &lt;code style="'..code_style..'"&gt;&amp;#124;$1=&lt;/code&gt; ignored (&lt;code style="'..code_style..'"&gt;&amp;#124;$2=&lt;/code&gt; suggested)',
		anchor = 'parameter_ignored_suggest',
		category = 'Pages with citations using unsupported parameters',
		hidden = false },
	redundant_parameters = {
		message = 'More than one of $1 specified',
		anchor = 'redundant_parameters',
		category = 'Pages with citations having redundant parameters',
		hidden = false },
	text_ignored = {
		message = 'Text "$1" ignored',
		anchor = 'text_ignored',
		category = 'Pages with citations using unnamed parameters',
		hidden = false },
	trans_missing_title = {
		message = '&lt;code style="'..code_style..'"&gt;&amp;#124;trans-$1=&lt;/code&gt; requires &lt;code style="'..code_style..'"&gt;&amp;#124;$1=&lt;/code&gt;',
		anchor = 'trans_missing_title',
		category = 'CS1 errors: translated title',
		hidden = false },
	vancouver = {
		message = 'Vancouver style error: $1',
		anchor = 'vancouver',
		category = 'CS1 errors: Vancouver style',
		hidden = false },
	wikilink_in_url = {
		message = 'URL–wikilink conflict',										-- uses ndash
		anchor = 'wikilink_in_url',
		category = 'CS1 errors: URL–wikilink conflict',							-- uses ndash
		hidden = false },
	}


--[[--------------------------&lt; I D _ H A N D L E R S &gt;--------------------------------------------------------

The following contains a list of values for various defined identifiers.  For each identifier we specify a
variety of information necessary to properly render the identifier in the citation.

	parameters: a list of parameter aliases for this identifier
	link: Wikipedia article name
	q: wikidata q number for the identifier
	label: the alternate name to apply to link
	mode: 	'manual' when there is a specific function in the code to handle the identifier;
			'external' for identifiers that link outside of Wikipedia;
	prefix: the first part of a url that will be concatenated with a second part which usually contains the identifier
	encode: true if uri should be percent encoded; otherwise false
	COinS: identifier link or keyword for use in COinS:
		for identifiers registered at info-uri.info use: info:....
		for identifiers that have COinS keywords, use the keyword: rft.isbn, rft.issn, rft.eissn
		for others make a url using the value in prefix, use the keyword: pre (not checked; any text other than 'info' or 'rft' works here)
		set to nil to leave the identifier out of the COinS
	separator: character or text between label and the identifier in the rendered citation
	access: use this parameter to set the access level for all instances of this identifier.
			the value must be a valid access level for an identifier (see ['id-access'] in this file).
	custom_access: to enable custom access level for an identifier, set this parameter
			to the parameter that should control it (normally 'id-access')
]]

local id_handlers = {
	['ARXIV'] = {
		parameters = {'arxiv', 'eprint'},
		link = 'arXiv',
		q = 'Q118398',
		label = 'arXiv',
		mode = 'manual',
		prefix = '//arxiv.org/abs/', 											-- protocol relative tested 2013-09-04
		encode = false,
		COinS = 'info:arxiv',
		separator = ':',
		access = 'free',														-- free to read
	},
	['ASIN'] = {
		parameters = { 'asin', 'ASIN' },
		link = 'Amazon Standard Identification Number',
		q = 'Q1753278',
		label = 'ASIN',
		mode = 'manual',
		prefix = '//www.amazon.',
		COinS = nil,															-- no COinS for this id (needs thinking on implementation because |asin-tld=)
		separator = '&amp;nbsp;',
		encode = false;
	},
	['BIBCODE'] = {
		parameters = {'bibcode'},
		link = 'Bibcode',
		q = 'Q25754',
		label = 'Bibcode',
		mode = 'manual',
		prefix = 'http://adsabs.harvard.edu/abs/',
		encode = false,
		COinS = 'info:bibcode',
		separator = ':',
		custom_access = 'bibcode-access',
	},
	['BIORXIV'] = {
		parameters = {'biorxiv'},
		link = 'bioRxiv',
		q = 'Q19835482',
		label = 'bioRxiv',
		mode = 'manual',
		prefix = '//doi.org/10.1101/',
		COinS = 'pre',															-- use prefix value
		access = 'free',														-- free to read
		encode = true,
		separator = '&amp;nbsp;',
	},
	['CITESEERX'] = {
		parameters = {'citeseerx'},
		link = 'CiteSeerX',
		q = 'Q2715061',
		label = 'CiteSeerX',
		mode = 'manual',														-- manual for custom validation of the "doi"
		prefix = '//citeseerx.ist.psu.edu/viewdoc/summary?doi=',
		COinS =  'pre',															-- use prefix value
		access = 'free',														-- free to read
		encode = true,
		separator = '&amp;nbsp;',
	},
	['DOI'] = {
		parameters = { 'doi', 'DOI' },
		link = 'Digital object identifier',
		q = 'Q25670',
		label = 'doi',
		mode = 'manual',
		prefix = '//doi.org/',
		COinS = 'info:doi',
		separator = ':',
		encode = true,
		custom_access = 'doi-access',
	},
	['EISSN'] = {
		parameters = {'eissn', 'EISSN'},
		link = 'International_Standard_Serial_Number#Electronic_ISSN',
		q = 'Q46339674',
		label = 'eISSN',
		mode = 'manual',
		prefix = '//www.worldcat.org/issn/',
		COinS = 'rft.eissn',
		encode = false,
		separator = '&amp;nbsp;',
	},
	['HDL'] = {
		parameters = { 'hdl', 'HDL' },
		link = 'Handle System',
		q = 'Q3126718',
		label = 'hdl',
		mode = 'manual',
		prefix = '//hdl.handle.net/',
		COinS = 'info:hdl',
		separator = ':',
		encode = true,
		custom_access = 'hdl-access',
	},
	['ISBN'] = {
		parameters = {'isbn', 'ISBN', 'isbn13', 'ISBN13'},
		link = 'International Standard Book Number',
		q = 'Q33057',
		label = 'ISBN',
		mode = 'manual',
		prefix = 'Special:BookSources/',
		COinS = 'rft.isbn',
		separator = '&amp;nbsp;',
	},
	['ISMN'] = {
		parameters = {'ismn', 'ISMN'},
		link = 'International Standard Music Number',
		q = 'Q1666938',
		label = 'ISMN',
		mode = 'manual',
		prefix = '',															-- not currently used;
		COinS = 'nil',															-- nil because we can't use pre or rft or info:
		separator = '&amp;nbsp;',
	},
	['ISSN'] = {
		parameters = {'issn', 'ISSN'},
		link = 'International Standard Serial Number',
		q = 'Q131276',
		label = 'ISSN',
		mode = 'manual',
		prefix = '//www.worldcat.org/issn/',
		COinS = 'rft.issn',
		encode = false,
		separator = '&amp;nbsp;',
	},
	['JFM'] = {
		parameters = {'jfm', 'JFM'},
		link = 'Jahrbuch über die Fortschritte der Mathematik',
		q = '',
		label = 'JFM',
		mode = 'manual',
		prefix = '//zbmath.org/?format=complete&amp;q=an:',
		COinS = 'pre',															-- use prefix value
		encode = true,
		separator = '&amp;nbsp;',
	},
	['JSTOR'] = {
		parameters = {'jstor', 'JSTOR'},
		link = 'JSTOR',
		q = 'Q1420342',
		label = 'JSTOR',
		mode = 'external',
		prefix = '//www.jstor.org/stable/', 									-- protocol relative tested 2013-09-04
		COinS = 'pre',															-- use prefix value
		encode = false,
		separator = '&amp;nbsp;',
		custom_access = 'jstor-access',
	},
	['LCCN'] = {
		parameters = {'LCCN', 'lccn'},
		link = 'Library of Congress Control Number',
		q = 'Q620946',
		label = 'LCCN',
		mode = 'manual',
		prefix = '//lccn.loc.gov/', 											-- protocol relative tested 2015-12-28
		COinS = 'info:lccn',													-- use prefix value
		encode = false,
		separator = '&amp;nbsp;',
	},
	['MR'] = {
		parameters = {'MR', 'mr'},
		link = 'Mathematical Reviews',
		q = 'Q211172',
		label = 'MR',
		mode = 'manual',
		prefix = '//www.ams.org/mathscinet-getitem?mr=', 						-- protocol relative tested 2013-09-04
		COinS = 'pre',															-- use prefix value
		encode = true,
		separator = '&amp;nbsp;',
	},
	['OCLC'] = {
		parameters = {'OCLC', 'oclc'},
		link = 'OCLC',
		q = 'Q190593',
		label = 'OCLC',
		mode = 'manual',
		prefix = '//www.worldcat.org/oclc/',
		COinS = 'info:oclcnum',
		encode = true,
		separator = '&amp;nbsp;',
	},
	['OL'] = {
		parameters = { 'ol', 'OL' },
		link = 'Open Library',
		q = 'Q1201876',
		label = 'OL',
		mode = 'manual',
		prefix = '//openlibrary.org/',
		COinS = nil,															-- no COinS for this id (needs thinking on implementation because /authors/books/works/OL)
		separator = '&amp;nbsp;',
		encode = true,
		custom_access = 'ol-access',
	},
	['OSTI'] = {
		parameters = {'OSTI', 'osti'},
		link = 'Office of Scientific and Technical Information',
		q = 'Q2015776',
		label = 'OSTI',
		mode = 'external',
		prefix = '//www.osti.gov/energycitations/product.biblio.jsp?osti_id=',	-- protocol relative tested 2013-09-04
		COinS = 'pre',															-- use prefix value
		encode = true,
		separator = '&amp;nbsp;',
		custom_access = 'osti-access',
	},
	['PMC'] = {
		parameters = {'PMC', 'pmc'},
		link = 'PubMed Central',
		q = 'Q229883',
		label = 'PMC',
		mode = 'manual',
		prefix = '//www.ncbi.nlm.nih.gov/pmc/articles/PMC',
		suffix = " ",
		COinS = 'pre',															-- use prefix value
		encode = true,
		separator = '&amp;nbsp;',
		access = 'free',														-- free to read
	},
	['PMID'] = {
		parameters = {'PMID', 'pmid'},
		link = 'PubMed Identifier',
		q = '',
		label = 'PMID',
		mode = 'manual',
		prefix = '//www.ncbi.nlm.nih.gov/pubmed/',
		COinS = 'info:pmid',
		encode = false,
		separator = '&amp;nbsp;',
	},
	['RFC'] = {
		parameters = {'RFC', 'rfc'},
		link = 'Request for Comments',
		q = 'Q212971',
		label = 'RFC',
		mode = 'external',
		prefix = '//tools.ietf.org/html/rfc',
		COinS = 'pre',															-- use prefix value
		encode = false,
		separator = '&amp;nbsp;',
		access = 'free',														-- free to read
	},
	['SSRN'] = {
		parameters = {'SSRN', 'ssrn'},
		link = 'Social Science Research Network',
		q = 'Q7550801',
		label = 'SSRN',
		mode = 'manual',
		prefix = '//ssrn.com/abstract=', 										-- protocol relative tested 2013-09-04
		COinS = 'pre',															-- use prefix value
		encode = true,
		separator = '&amp;nbsp;',
		access = 'free',														-- always free to read
	},
	['USENETID'] = {
		parameters = {'message-id'},
		link = 'Usenet',
		q = 'Q193162',
		label = 'Usenet:',
		mode = 'manual',
		prefix = 'news:',
		encode = false,
		COinS = 'pre',															-- use prefix value
		separator = '&amp;nbsp;',
	},
	['ZBL'] = {
		parameters = {'ZBL', 'zbl'},
		link = 'Zentralblatt MATH',
		q = 'Q190269',
		label = 'Zbl',
		mode = 'manual',
		prefix = '//zbmath.org/?format=complete&amp;q=an:',
		COinS = 'pre',															-- use prefix value
		encode = true,
		separator = '&amp;nbsp;',
	},
	}


return 	{
	aliases = aliases,
	special_case_translation = special_case_translation,
	defaults = defaults,
	date_names = date_names,
	error_conditions = error_conditions,
	id_handlers = id_handlers,
	keywords = keywords,
	stripmarkers=stripmarkers,
	invisible_chars = invisible_chars,
	indic_script = indic_script,
	maint_cats = maint_cats,
	messages = messages,
	presentation = presentation,
	prop_cats = prop_cats,
	script_lang_codes = script_lang_codes,
	lang_code_remap = lang_code_remap,
	lang_name_remap = lang_name_remap,
	title_types = title_types,
	uncategorized_namespaces = uncategorized_namespaces,
	uncategorized_subpages = uncategorized_subpages,
	templates_using_volume = templates_using_volume,
	templates_using_issue = templates_using_issue,
	templates_not_using_page = templates_not_using_page,
	}</text>
      <sha1>h0eoorpz2d7pieesautlvjtrrrp9bdh</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Citation/CS1/Date validation</title>
    <ns>828</ns>
    <id>19187522</id>
    <revision>
      <id>647173789</id>
      <parentid>647173788</parentid>
      <timestamp>2018-03-10T10:00:56Z</timestamp>
      <contributor>
        <username>Mbch331</username>
        <id>69441</id>
      </contributor>
      <minor/>
      <comment>17 revisions imported from [[:en:Module:Citation/CS1/Date_validation]]: https://www.wikidata.org/w/index.php?title=Wikidata:Administrators%27_noticeboard&amp;oldid=647164909#Request_to_import_template:Cite_Q_from_ENWP</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="44395">
local p = {}


--[[--------------------------&lt; F O R W A R D   D E C L A R A T I O N S &gt;--------------------------------------
]]

local is_set, in_array;															-- imported functions from selected Module:Citation/CS1/Utilities
local cfg;																		-- table of tables imported from slected Module:Citation/CS1/Configuration

--[=[-------------------------&lt; I S _ V A L I D _ A C C E S S D A T E &gt;----------------------------------------

returns true if:
	Wikipedia start date &lt;= accessdate &lt; today + 2 days

Wikipedia start date is 2001-01-15T00:00:00 UTC which is 979516800 seconds after 1970-01-01T00:00:00 UTC (the start of Unix time)
accessdate is the date provided in |accessdate= at time 00:00:00 UTC
today is the current date at time 00:00:00 UTC plus 48 hours
	if today is 2015-01-01T00:00:00 then
		adding 24 hours gives 2015-01-02T00:00:00 – one second more than today
		adding 24 hours gives 2015-01-03T00:00:00 – one second more than tomorrow

This function does not work if it is fed month names for languages other than English.  Wikimedia #time: parser
apparently doesn't understand non-Engish date month names. This function will always return false when the date
contains a non-English month name because good1 is false after the call to lang.formatDate().  To get around that
call this function with YYYY-MM-DD format dates.

]=]

local function is_valid_accessdate (accessdate)
	local lang = mw.getContentLanguage();
	local good1, good2;
	local access_ts, tomorrow_ts;												-- to hold unix time stamps representing the dates
		
	good1, access_ts = pcall( lang.formatDate, lang, 'U', accessdate );			-- convert accessdate value to unix timesatmp 
	good2, tomorrow_ts = pcall( lang.formatDate, lang, 'U', 'today + 2 days' );	-- today midnight + 2 days is one second more than all day tomorrow
	
	if good1 and good2 then														-- lang.formatDate() returns a timestamp in the local script which which tonumber() may not understand
		access_ts = tonumber (access_ts) or lang:parseFormattedNumber (access_ts);			-- convert to numbers for the comparison;
		tomorrow_ts = tonumber (tomorrow_ts) or lang:parseFormattedNumber (tomorrow_ts);
	else
		return false;															-- one or both failed to convert to unix time stamp
	end

	if 979516800 &lt;= access_ts and access_ts &lt; tomorrow_ts then					-- Wikipedia start date &lt;= accessdate &lt; tomorrow's date
		return true;
	else
		return false;															-- accessdate out of range
	end
end


--[[--------------------------&lt; G E T _ M O N T H _ N U M B E R &gt;----------------------------------------------

returns a number according to the month in a date: 1 for January, etc.  Capitalization and spelling must be correct. If not a valid month, returns 0

]]

local function get_month_number (month)
	return cfg.date_names['local'].long[month] or cfg.date_names['local'].short[month] or		-- look for local names first
			cfg.date_names['en'].long[month] or	cfg.date_names['en'].short[month] or			-- failing that, look for English names
			0;																					-- not a recognized month name
end


--[[--------------------------&lt; I S _ V A L I D _ E M B A R G O _ D A T E &gt;------------------------------------

returns true and date value if that value has proper dmy, mdy, ymd format.

returns false and 9999 (embargoed forever) when date value is not proper format; assumes that when |embargo= is
set, the editor intended to embargo a pmc but |embargo= does not hold a single date.

]]

local function is_valid_embargo_date (v)
	if v:match ('^%d%d%d%d%-%d%d%-%d%d$') or									-- ymd
		v:match ('^%d%d?%s+%a+%s+%d%d%d%d$') or									-- dmy
		v:match ('^%a+%s+%d%d?%s*,%s*%d%d%d%d$') then							-- mdy
			return true, v;
	end
	return false, '9999';														-- if here not good date so return false and set embargo date to long time in future
end


--[[--------------------------&lt; G E T _ S E A S O N _ N U M B E R &gt;--------------------------------------------

returns a number according to the sequence of seasons in a year: 1 for Winter, etc.  Capitalization and spelling must be correct. If not a valid season, returns 0

Uses ISO DIS 8601 2016 part 2 §4.7  Divisions of a year for hemishpere-independent seasons:
	21-24 = Spring, Summer, Autumn, Winter, independent of “Hemisphere”

These additional divisions not currently supported:
	25-28 = Spring - Northern Hemisphere, Summer- Northern Hemisphere, Autumn - Northern Hemisphere, Winter - Northern Hemisphere
	29-32 = Spring – Southern Hemisphere, Summer– Southern Hemisphere, Autumn – Southern Hemisphere, Winter - Southern Hemisphere
	33-36 = Quarter 1, Quarter 2, Quarter 3, Quarter 4 (3 months each)
	37-39 = Quadrimester 1, Quadrimester 2, Quadrimester 3 (4 months each)
	40-41 = Semestral 1, Semestral-2 (6 months each)


]]

local function get_season_number (season)
	return cfg.date_names['local'].season[season] or							-- look for local names first
			cfg.date_names['en'].season[season] or								-- failing that, look for English names
			0;																	-- not a recognized season name
end

--[[--------------------------&lt; I S _ P R O P E R _ N A M E &gt;--------------------------------------------------

returns a non-zero number if date contains a recognized proper name.  Capitalization and spelling must be correct.

]]

local function is_proper_name (name)
	return cfg.date_names['local'].named[name] or								-- look for local names dates first
			cfg.date_names['en'].named[name] or									-- failing that, look for English names
			0;																	-- not a recognized named date
end

--[[--------------------------&lt; I S _ V A L I D _ M O N T H _ O R _ S E A S O N &gt;------------------------------

--returns true if month or season is valid (properly spelled, capitalized, abbreviated)

]]

local function is_valid_month_or_season (month_season)
	if 0 == get_month_number (month_season) then		-- if month text isn't one of the twelve months, might be a season
		if 0 == get_season_number (month_season) then	-- not a month, is it a season?
			return false;								-- return false not a month or one of the five seasons
		end
	end
	return true;
end

--[[--------------------------&lt; I S _ V A L I D _ Y E A R &gt;----------------------------------------------------

Function gets current year from the server and compares it to year from a citation parameter.  Years more than one year in the future are not acceptable.

]]
local year_limit;
local function is_valid_year(year)
	if not is_set(year_limit) then
		year_limit = tonumber(os.date("%Y"))+1;			-- global variable so we only have to fetch it once
	end
	return tonumber(year) &lt;= year_limit;				-- false if year is in the future more than one year
end

--[[--------------------------&lt; I S _ V A L I D _ D A T E &gt;----------------------------------------------------
Returns true if day is less than or equal to the number of days in month and year is no farther into the future
than next year; else returns false.

Assumes Julian calendar prior to year 1582 and Gregorian calendar thereafter. Accounts for Julian calendar leap
years before 1582 and Gregorian leap years after 1582. Where the two calendars overlap (1582 to approximately
1923) dates are assumed to be Gregorian.

]]

local function is_valid_date (year, month, day)
local days_in_month = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
local month_length;
	if not is_valid_year(year) then												-- no farther into the future than next year
		return false;
	end
	
	month = tonumber(month);													-- required for YYYY-MM-DD dates
	
	if (2==month) then															-- if February
		month_length = 28;														-- then 28 days unless
		if 1582 &gt; tonumber(year) then											-- Julian calendar
			if 0==(year%4) then
				month_length = 29;
			end
		else																	-- Gregorian calendar
			if (0==(year%4) and (0~=(year%100) or 0==(year%400))) then			-- is a leap year?
				month_length = 29;												-- if leap year then 29 days in February
			end
		end
	else
		month_length=days_in_month[month];
	end

	if tonumber (day) &gt; month_length then
		return false;
	end
	return true;
end

--[[--------------------------&lt; I S _ V A L I D _ M O N T H _ R A N G E _ S T Y L E &gt;--------------------------

Months in a range are expected to have the same style: Jan–Mar or October–December but not February–Mar or Jul–August. 
There is a special test for May because it can be either short or long form.

Returns true when style for both months is the same

]]

local function is_valid_month_range_style (month1, month2)
local len1 = month1:len();
local len2 = month2:len();
	if len1 == len2 then
		return true;															-- both months are short form so return true
	elseif 'May' == month1 or 'May'== month2 then
		return true;															-- both months are long form so return true
	elseif 3 == len1 or 3 == len2 then
		return false;															-- months are mixed form so return false
	else
		return true;															-- both months are long form so return true
	end
end


--[[--------------------------&lt; I S _ V A L I D _ M O N T H _ S E A S O N _ R A N G E &gt;------------------------

Check a pair of months or seasons to see if both are valid members of a month or season pair.

Month pairs are expected to be left to right, earliest to latest in time.

All season ranges are accepted as valid because there are publishers out there who have published a Summer–Spring YYYY issue so ... ok

]]

local function is_valid_month_season_range(range_start, range_end)
	local range_start_number = get_month_number (range_start);
	local range_end_number;
	
	if 0 == range_start_number then												-- is this a month range?
		range_start_number = get_season_number (range_start);					-- not a month; is it a season? get start season number
		range_end_number = get_season_number (range_end);						-- get end season number

		if (0 ~= range_start_number) and (0 ~= range_end_number) then
			return true;														-- any season pairing is accepted
		end
		return false;															-- range_start and/or range_end is not a season
	end
																				-- here when range_start is a month
	range_end_number = get_month_number (range_end);							-- get end month number
	if range_start_number &lt; range_end_number then								-- range_start is a month; does range_start precede range_end?
		if is_valid_month_range_style (range_start, range_end) then				-- do months have the same style?
			return true;														-- proper order and same style
		end
	end
	return false;																-- range_start month number is greater than or equal to range end number; or range end isn't a month
end


--[[--------------------------&lt; M A K E _ C O I N S _ D A T E &gt;------------------------------------------------

This function receives a table of date parts for one or two dates and an empty table reference declared in
Module:Citation/CS1.  The function is called only for |date= parameters and only if the |date=&lt;value&gt; is 
determined to be a valid date format.  The question of what to do with invalid date formats is not answered here.

The date parts in the input table are converted to an ISO 8601 conforming date string:
	single whole dates:		yyyy-mm-dd
	month and year dates:	yyyy-mm
	year dates:				yyyy
	ranges:					yyyy-mm-dd/yyyy-mm-dd
							yyyy-mm/yyyy-mm
							yyyy/yyyy

Dates in the Julian calendar are reduced to year or year/year so that we don't have to do calendar conversion from
Julian to Proleptic Gregorian.

The input table has:
	year, year2 – always present; if before 1582, ignore months and days if present
	month, month2 – 0 if not provided, 1-12 for months, 21-24 for seasons; 99 Christmas
	day, day2 –  0 if not provided, 1-31 for days
	
the output table receives:
	rftdate:	an IS8601 formatted date
	rftchron:	a free-form version of the date, usually without year which is in rftdate (season ranges and propername dates)
	rftssn:		one of four season keywords: winter, spring, summer, fall (lowercase)

]]

local function make_COinS_date (input, tCOinS_date)
	local date;																	-- one date or first date in a range
	local date2 = '';															-- end of range date
-- start temporary Julian / Gregorian calendar uncertainty detection
	local year = tonumber(input.year);											-- this temporary code to determine the extent of sources dated to the Julian/Gregorian
	local month = tonumber(input.month);										-- interstice 1 October 1582 – 1 January 1926
	local day = tonumber (input.day);
	if (0 ~= day) and															-- day must have a value for this to be a whole date
		(((1582 == year) and (10 &lt;= month) and (12 &gt;= month)) or				-- any whole 1582 date from 1 october to 31 December or
			((1926 == year) and (1 == month) and (1 == input.day)) or			-- 1 January 1926 or
				((1582 &lt; year) and (1925 &gt;= year))) then						-- any date 1 January 1583 – 31 December 1925
					tCOinS_date.inter_cal_cat = true;							-- set category flag true
	end
-- end temporary Julian / Gergorian calendar uncertainty detection
	
	if 1582 &gt; tonumber(input.year) or 20 &lt; tonumber(input.month) then			-- Julian calendar or season so &amp;rft.date gets year only
		date = input.year;
		if 0 ~= input.year2 and input.year ~= input.year2 then					-- if a range, only the second year portion when not the same as range start year
			date = string.format ('%.4d/%.4d', tonumber(input.year), tonumber(input.year2))		-- assemble the date range
		end
		if 20 &lt; tonumber(input.month) then										-- if season or propername date
			local season = {[24]='winter', [21]='spring', [22]='summer', [23]='fall', [99]='Christmas'};	-- seasons lowercase, no autumn; proper names use title case
			if 0 == input.month2 then											-- single season date
				if 30 &lt;tonumber(input.month) then
					tCOinS_date.rftchron = season[input.month];					-- proper name dates
				else
					tCOinS_date.rftssn = season[input.month];					-- seasons
				end
			else																-- season range with a second season specified
				if input.year ~= input.year2 then								-- season year – season year range or season year–year
					tCOinS_date.rftssn = season[input.month];					-- start of range season; keep this?
					if 0~= input.month2 then
						tCOinS_date.rftchron = string.format ('%s %s – %s %s', season[input.month], input.year, season[input.month2], input.year2);
					end
				else															-- season–season year range
					tCOinS_date.rftssn = season[input.month];					-- start of range season; keep this?
					tCOinS_date.rftchron = season[input.month] .. '–' .. season[input.month2];	-- season–season year range
				end
			end
		end
		tCOinS_date.rftdate = date;
		return;																	-- done
	end
	
	if 0 ~= input.day then
		date = string.format ('%s-%.2d-%.2d', input.year, tonumber(input.month), tonumber(input.day));	-- whole date
	elseif 0 ~= input.month then
		date = string.format ('%s-%.2d', input.year, tonumber(input.month));	-- year and month
	else
		date = string.format ('%s', input.year);								-- just year
	end

	if 0 ~= input.year2 then
		if 0 ~= input.day2 then
			date2 = string.format ('/%s-%.2d-%.2d', input.year2, tonumber(input.month2), tonumber(input.day2));		-- whole date
		elseif 0 ~= input.month2 then
			date2 = string.format ('/%s-%.2d', input.year2, tonumber(input.month2));	-- year and month
		else
			date2 = string.format ('/%s', input.year2);							-- just year
		end
	end
	
	tCOinS_date.rftdate = date .. date2;										-- date2 has the '/' separator
	return;
end


--[[--------------------------&lt; C H E C K _ D A T E &gt;----------------------------------------------------------

Check date format to see that it is one of the formats approved by WP:DATESNO or WP:DATERANGE. Exception: only
allowed range separator is endash.  Additionally, check the date to see that it is a real date: no 31 in 30-day
months; no 29 February when not a leap year.  Months, both long-form and three character abbreviations, and seasons
must be spelled correctly.  Future years beyond next year are not allowed.

If the date fails the format tests, this function returns false and does not return values for anchor_year and
COinS_date.  When this happens, the date parameter is used in the COinS metadata and the CITEREF identifier gets
its year from the year parameter if present otherwise CITEREF does not get a date value.

Inputs:
	date_string - date string from date-holding parameters (date, year, accessdate, embargo, archivedate, etc.)

Returns:
	false if date string is not a real date; else
	true, anchor_year, COinS_date
		anchor_year can be used in CITEREF anchors
		COinS_date is ISO 8601 format date; see make_COInS_date()

]]

local function check_date (date_string, tCOinS_date, test_accessdate)
	local year;			-- assume that year2, months, and days are not used;
	local year2=0;		-- second year in a year range
	local month=0;
	local month2=0;		-- second month in a month range
	local day=0;
	local day2=0;		-- second day in a day range
	local anchor_year;
	local coins_date;

	if date_string:match("^%d%d%d%d%-%d%d%-%d%d$") then										-- year-initial numerical year month day format
		year, month, day=string.match(date_string, "(%d%d%d%d)%-(%d%d)%-(%d%d)");
		if 12 &lt; tonumber(month) or 1 &gt; tonumber(month) or 1582 &gt; tonumber(year) or 0 == tonumber(day) then return false; end	-- month or day number not valid or not Gregorian calendar
		anchor_year = year;
	elseif mw.ustring.match(date_string, "^%D- +[1-9]%d?, +[1-9]%d%d%d%a?$") then						-- month-initial: month day, year
		month, day, anchor_year, year=mw.ustring.match(date_string, "(%D-) +(%d%d?),%s*((%d%d%d%d?)%a?)");
		month = get_month_number (month);
		if 0 == month then return false; end												-- return false if month text isn't one of the twelve months
				
	elseif mw.ustring.match(date_string, "^%D- +[1-9]%d?[%-–][1-9]%d?, +[1-9]%d%d%d%a?$") then				-- month-initial day range: month day–day, year; days are separated by endash
		month, day, day2, anchor_year, year=mw.ustring.match(date_string, "(%D-) +(%d%d?)[%-–](%d%d?), +((%d%d%d%d)%a?)");
		if tonumber(day) &gt;= tonumber(day2) then return false; end							-- date range order is left to right: earlier to later; dates may not be the same;
		month = get_month_number (month);
		if 0 == month then return false; end												-- return false if month text isn't one of the twelve months
		month2=month;																		-- for metadata
		year2=year;

	elseif mw.ustring.match(date_string, "^[1-9]%d? +%D- +[1-9]%d%d%d%a?$") then						-- day-initial: day month year
		day, month, anchor_year, year=mw.ustring.match(date_string, "(%d%d*)%s*(%D-) +((%d%d%d%d?)%a?)");
		month = get_month_number (month);
		if 0 == month then return false; end												-- return false if month text isn't one of the twelve months

	elseif mw.ustring.match(date_string, "^[1-9]%d?[%-–][1-9]%d? +%D- +[1-9]%d%d%d%a?$") then				-- day-range-initial: day–day month year; days are separated by endash
		day, day2, month, anchor_year, year=mw.ustring.match(date_string, "(%d%d?)[%-–](%d%d?) +(%D-) +((%d%d%d%d)%a?)");
		if tonumber(day) &gt;= tonumber(day2) then return false; end							-- date range order is left to right: earlier to later; dates may not be the same;
		month = get_month_number (month);
		if 0 == month then return false; end												-- return false if month text isn't one of the twelve months
		month2=month;																		-- for metadata
		year2=year;

	elseif mw.ustring.match(date_string, "^[1-9]%d? +%D- +[%-–] +[1-9]%d? +%D- +[1-9]%d%d%d%a?$") then		-- day initial month-day-range: day month - day month year; uses spaced endash
		day, month, day2, month2, anchor_year, year=mw.ustring.match(date_string, "(%d%d?) +(%D-) +[%-–] +(%d%d?) +(%D-) +((%d%d%d%d)%a?)");
		if (not is_valid_month_season_range(month, month2)) or not is_valid_year(year) then return false; end	-- date range order is left to right: earlier to later;
		month = get_month_number (month);													-- for metadata
		month2 = get_month_number (month2);
		year2=year;

	elseif mw.ustring.match(date_string, "^%D- +[1-9]%d? +[%-–] +%D- +[1-9]%d?, +[1-9]%d%d%d%a?$") then		-- month initial month-day-range: month day – month day, year;  uses spaced endash
		month, day, month2, day2, anchor_year, year=mw.ustring.match(date_string, "(%D-) +(%d%d?) +[%-–] +(%D-) +(%d%d?), +((%d%d%d%d)%a?)");
		if (not is_valid_month_season_range(month, month2)) or not is_valid_year(year) then return false; end
		month = get_month_number (month);													-- for metadata
		month2 = get_month_number (month2);
		year2=year;

	elseif mw.ustring.match(date_string, "^[1-9]%d? +%D- +[1-9]%d%d%d +[%-–] +[1-9]%d? +%D- +[1-9]%d%d%d%a?$") then		-- day initial month-day-year-range: day month year - day month year; uses spaced endash
		day, month, year, day2, month2, anchor_year, year2=mw.ustring.match(date_string, "(%d%d?) +(%D-) +(%d%d%d%d) +[%-–] +(%d%d?) +(%D-) +((%d%d%d%d)%a?)");
		if tonumber(year2) &lt;= tonumber(year) then return false; end												-- must be sequential years, left to right, earlier to later
		if not is_valid_year(year2) or not is_valid_month_range_style(month, month2) then return false; end		-- year2 no more than one year in the future; months same style
		month = get_month_number (month);																		-- for metadata
		month2 = get_month_number (month2);

	elseif mw.ustring.match(date_string, "^%D- +[1-9]%d?, +[1-9]%d%d%d +[%-–] +%D- +[1-9]%d?, +[1-9]%d%d%d%a?$") then		-- month initial month-day-year-range: month day, year – month day, year;  uses spaced endash
		month, day, year, month2, day2, anchor_year, year2=mw.ustring.match(date_string, "(%D-) +(%d%d?), +(%d%d%d%d) +[%-–] +(%D-) +(%d%d?), +((%d%d%d%d)%a?)");
		if tonumber(year2) &lt;= tonumber(year) then return false; end												-- must be sequential years, left to right, earlier to later
		if not is_valid_year(year2) or not is_valid_month_range_style(month, month2) then return false; end		-- year2 no more than one year in the future; months same style
		month = get_month_number (month);																		-- for metadata
		month2 = get_month_number (month2);

	elseif mw.ustring.match(date_string, "^%D- +[1-9]%d%d%d[%-–]%d%d%a?$") then								-- special case Winter/Summer year-year (YYYY-YY); year separated with unspaced endash
		local century;
		month, year, century, anchor_year, year2=mw.ustring.match(date_string, "(%D-) +((%d%d)%d%d)[%-–]((%d%d)%a?)");
		if 'Winter' ~= month and 'Summer' ~= month then return false end;					-- 'month' can only be Winter or Summer
		anchor_year=year..'–'..anchor_year;													-- assemble anchor_year from both years
		year2 = century..year2;																-- add the century to year2 for comparisons
		if 1 ~= tonumber(year2) - tonumber(year) then return false; end						-- must be sequential years, left to right, earlier to later
		if not is_valid_year(year2) then return false; end									-- no year farther in the future than next year
		month = get_season_number (month);

	elseif mw.ustring.match(date_string, "^%D- +[1-9]%d%d%d[%-–][1-9]%d%d%d%a?$") then						-- special case Winter/Summer year-year; year separated with unspaced endash
		month, year, anchor_year, year2=mw.ustring.match(date_string, "(%D-) +(%d%d%d%d)[%-–]((%d%d%d%d)%a?)");
		if 'Winter' ~= month and 'Summer' ~= month then return false end;					-- 'month' can only be Winter or Summer
		anchor_year=year..'–'..anchor_year;													-- assemble anchor_year from both years
		if 1 ~= tonumber(year2) - tonumber(year) then return false; end						-- must be sequential years, left to right, earlier to later
		if not is_valid_year(year2) then return false; end									-- no year farther in the future than next year
		month = get_season_number (month);													-- for metadata

	elseif mw.ustring.match(date_string, "^%D- +[1-9]%d%d%d +[%-–] +%D- +[1-9]%d%d%d%a?$") then				-- month/season year - month/season year; separated by spaced endash
		month, year, month2, anchor_year, year2=mw.ustring.match(date_string, "(%D-) +(%d%d%d%d) +[%-–] +(%D-) +((%d%d%d%d)%a?)");
		anchor_year=year..'–'..anchor_year;													-- assemble anchor_year from both years
		if tonumber(year) &gt;= tonumber(year2) then return false; end							-- left to right, earlier to later, not the same
		if not is_valid_year(year2) then return false; end									-- no year farther in the future than next year
		if 0 ~= get_month_number(month) and 0 ~= get_month_number(month2) and is_valid_month_range_style(month, month2) then 	-- both must be month year, same month style
			month = get_month_number(month);
			month2 = get_month_number(month2);
		elseif 0 ~= get_season_number(month) and 0 ~= get_season_number(month2) then		-- both must be or season year, not mixed
			month = get_season_number(month);
			month2 = get_season_number(month2);
		else
			 return false;
		end

	elseif mw.ustring.match(date_string, "^%D-[%-–]%D- +[1-9]%d%d%d%a?$") then					-- month/season range year; months separated by endash 
		month, month2, anchor_year, year=mw.ustring.match(date_string, "(%D-)[%-–](%D-)%s*((%d%d%d%d)%a?)");
		if (not is_valid_month_season_range(month, month2)) or (not is_valid_year(year)) then return false; end
		if 0 ~= get_month_number(month) then									-- determined to be a valid range so just check this one to know if month or season
			month = get_month_number(month);
			month2 = get_month_number(month2);
		else
			month = get_season_number(month);
			month2 = get_season_number(month2);
		end
		year2=year;
		
	elseif mw.ustring.match(date_string, "^%D- +%d%d%d%d%a?$") then							-- month/season year or proper-name year
		month, anchor_year, year=mw.ustring.match(date_string, "(%D-)%s*((%d%d%d%d)%a?)");
		if not is_valid_year(year) then return false; end
		if not is_valid_month_or_season (month) and 0 == is_proper_name (month) then return false; end
		if 0 ~= get_month_number(month) then									-- determined to be a valid range so just check this one to know if month or season
			month = get_month_number(month);
		elseif 0 ~= get_season_number(month) then
			month = get_season_number(month);
		else
			month = is_proper_name (month);										-- must be proper name; not supported in COinS
		end

	elseif mw.ustring.match(date_string, "^[1-9]%d%d%d?[%-–][1-9]%d%d%d?%a?$") then				-- Year range: YYY-YYY or YYY-YYYY or YYYY–YYYY; separated by unspaced endash; 100-9999
		year, anchor_year, year2=mw.ustring.match(date_string, "(%d%d%d%d?)[%-–]((%d%d%d%d?)%a?)");
		anchor_year=year..'–'..anchor_year;										-- assemble anchor year from both years
		if tonumber(year) &gt;= tonumber(year2) then return false; end				-- left to right, earlier to later, not the same
		if not is_valid_year(year2) then return false; end						-- no year farther in the future than next year

	elseif mw.ustring.match(date_string, "^[1-9]%d%d%d[%-–]%d%d%a?$") then						-- Year range: YYYY–YY; separated by unspaced endash
		local century;
		year, century, anchor_year, year2=mw.ustring.match(date_string, "((%d%d)%d%d)[%-–]((%d%d)%a?)");
		anchor_year=year..'–'..anchor_year;										-- assemble anchor year from both years
		if 13 &gt; tonumber(year2) then return false; end							-- don't allow 2003-05 which might be May 2003
		year2 = century..year2;													-- add the century to year2 for comparisons
		if tonumber(year) &gt;= tonumber(year2) then return false; end				-- left to right, earlier to later, not the same
		if not is_valid_year(year2) then return false; end						-- no year farther in the future than next year

	elseif date_string:match("^[1-9]%d%d%d?%a?$") then							-- year; here accept either YYY or YYYY
		anchor_year, year=date_string:match("((%d%d%d%d?)%a?)");
		if false == is_valid_year(year) then
			return false;
		end

	else
		return false;															-- date format not one of the MOS:DATE approved formats
	end

	if test_accessdate then														-- test accessdate here because we have numerical date parts
		if 0 ~= year and 0 ~= month and 0 ~= day and 							-- all parts of a single date required
			0 == year2 and 0 == month2 and 0 == day2 then						-- none of these; accessdate must not be a range
				if not is_valid_accessdate (year..'-'..month..'-'..day) then	
					return false;												-- return false when accessdate out of bounds
				end
		else
			return false;														-- return false when accessdate is a range of two dates
		end
	end

	local result=true;															-- check whole dates for validity; assume true because not all dates will go through this test
	if 0 ~= year and 0 ~= month and 0 ~= day and 0 == year2 and 0 == month2 and 0 == day2 then		-- YMD (simple whole date)
		result=is_valid_date(year,month,day);

	elseif 0 ~= year and 0 ~= month and 0 ~= day and 0 == year2 and 0 == month2 and 0 ~= day2 then	-- YMD-d (day range)
		result=is_valid_date(year,month,day);
		result=result and is_valid_date(year,month,day2);

	elseif 0 ~= year and 0 ~= month and 0 ~= day and 0 == year2 and 0 ~= month2 and 0 ~= day2 then	-- YMD-md (day month range)
		result=is_valid_date(year,month,day);
		result=result and is_valid_date(year,month2,day2);

	elseif 0 ~= year and 0 ~= month and 0 ~= day and 0 ~= year2 and 0 ~= month2 and 0 ~= day2 then	-- YMD-ymd (day month year range)
		result=is_valid_date(year,month,day);
		result=result and is_valid_date(year2,month2,day2);
	end
	
	if false == result then return false; end

	if nil ~= tCOinS_date then													-- this table only passed into this function when testing |date= parameter values
		make_COinS_date ({year=year, month=month, day=day, year2=year2, month2=month2, day2=day2}, tCOinS_date);	-- make an ISO 8601 date string for COinS
	end
	
	return true, anchor_year;													-- format is good and date string represents a real date
end	


--[[--------------------------&lt; D A T E S &gt;--------------------------------------------------------------------

Cycle the date-holding parameters in passed table date_parameters_list through check_date() to check compliance with MOS:DATE. For all valid dates, check_date() returns
true. The |date= parameter test is unique, it is the only date holding parameter from which values for anchor_year (used in CITEREF identifiers) and COinS_date (used in
the COinS metadata) are derived.  The |date= parameter is the only date-holding parameter that is allowed to contain the no-date keywords "n.d." or "nd" (without quotes).

Unlike most error messages created in this module, only one error message is created by this function. Because all of the date holding parameters are processed serially,
a single error message is created as the dates are tested.

]]

local function dates(date_parameters_list, tCOinS_date)
	local anchor_year;		-- will return as nil if the date being tested is not |date=
	local COinS_date;		-- will return as nil if the date being tested is not |date=
	local embargo_date;															-- if embargo date is a good dmy, mdy, ymd date then holds original value else reset to 9999
	local error_message = "";
	local good_date = false;
	
	for k, v in pairs(date_parameters_list) do									-- for each date-holding parameter in the list
		if is_set(v) then														-- if the parameter has a value
			if v:match("^c%. [1-9]%d%d%d?%a?$") then							-- special case for c. year or with or without CITEREF disambiguator - only |date= and |year=
				v = mw.ustring.gsub (v, '%d', cfg.date_names.local_digits);
				local year = v:match("c%. ([1-9]%d%d%d?)%a?");					-- get the year portion so it can be tested
				if 'date'==k then
					anchor_year, COinS_date = v:match("((c%. [1-9]%d%d%d?)%a?)");	-- anchor year and COinS_date only from |date= parameter
					good_date = is_valid_year(year);
				elseif 'year'==k then
					good_date = is_valid_year(year);
				end
			elseif 'date'==k then												-- if the parameter is |date=
				if v:match("^n%.d%.%a?$") then									-- if |date=n.d. with or without a CITEREF disambiguator
					good_date, anchor_year, COinS_date = true, v:match("((n%.d%.)%a?)");	--"n.d."; no error when date parameter is set to no date
				elseif v:match("^nd%a?$") then									-- if |date=nd with or without a CITEREF disambiguator
					good_date, anchor_year, COinS_date = true, v:match("((nd)%a?)");	--"nd";	no error when date parameter is set to no date
				else
					good_date, anchor_year, COinS_date = check_date (v, tCOinS_date);	-- go test the date
				end
			elseif 'year'==k then												-- if the parameter is |year= it should hold only a year value
				if v:match("^[1-9]%d%d%d?%a?$") then							-- if |year= 3 or 4 digits only with or without a CITEREF disambiguator
					good_date, anchor_year, COinS_date = true, v:match("((%d+)%a?)");
				end
			elseif 'access-date'==k then										-- if the parameter is |date=
				good_date = check_date (v, nil, true);							-- go test the date; nil is a placeholder; true is the test_accessdate flag
			elseif 'embargo'==k then											-- if the parameter is |embargo=
				good_date = check_date (v);										-- go test the date
				if true == good_date then										-- if the date is a valid date
					good_date, embargo_date = is_valid_embargo_date (v);		-- is |embargo= date a single dmy, mdy, or ymd formatted date? yes:returns embargo; no: returns 9999
				end
			else																-- any other date-holding parameter
				good_date = check_date (v);										-- go test the date
			end
			if false==good_date then											-- assemble one error message so we don't add the tracking category multiple times
				if is_set(error_message) then									-- once we've added the first portion of the error message ...
					error_message=error_message .. ", ";						-- ... add a comma space separator
				end
				error_message=error_message .. "&amp;#124;" .. k .. "=";			-- add the failed parameter
			end
		end
	end
	return anchor_year, embargo_date, error_message;											-- and done
end


--[[--------------------------&lt; Y E A R _ D A T E _ C H E C K &gt;------------------------------------------------

Compare the value provided in |year= with the year value(s) provided in |date=.  This function returns a numeric value:
	0 - year value does not match the year value in date
	1 - (default) year value matches the year value in date or one of the year values when date contains two years
	2 - year value matches the year value in date when date is in the form YYYY-MM-DD and year is disambiguated (|year=YYYYx)

]]

local function year_date_check (year_string, date_string)
	local year;
	local date1;
	local date2;
	local result = 1;															-- result of the test; assume that the test passes
	
	year = year_string:match ('(%d%d%d%d?)');

	if date_string:match ('%d%d%d%d%-%d%d%-%d%d') and year_string:match ('%d%d%d%d%a') then	--special case where both date and year are required YYYY-MM-DD and YYYYx
		date1 = date_string:match ('(%d%d%d%d)');
		year = year_string:match ('(%d%d%d%d)');
		if year ~= date1 then
			result = 0;															-- years don't match
		else
			result = 2;															-- years match; but because disambiguated, don't add to maint cat
		end
		
	elseif date_string:match ("%d%d%d%d?.-%d%d%d%d?") then						-- any of the standard range formats of date with two three- or four-digit years
		date1, date2 = date_string:match ("(%d%d%d%d?).-(%d%d%d%d?)");
		if year ~= date1 and year ~= date2 then
			result = 0;
		end

	elseif mw.ustring.match(date_string, "%d%d%d%d[%-–]%d%d") then								-- YYYY-YY date ranges
		local century;
		date1, century, date2 = mw.ustring.match(date_string, "((%d%d)%d%d)[%-–]+(%d%d)");
		date2 = century..date2;													-- convert YY to YYYY
		if year ~= date1 and year ~= date2 then
			result = 0;
		end

	elseif date_string:match ("%d%d%d%d?") then									-- any of the standard formats of date with one year
		date1 = date_string:match ("(%d%d%d%d?)");
		if year ~= date1 then
			result = 0;
		end
	else
		result = 0;																-- no recognizable year in date
	end
	return result;
end


--[[-------------------------&lt; R E F O R M A T   T A B L E S &gt;------------------------------------------------

These table are used exclusively for reformatting dates

]]

local source_patterns = {						-- this table holds patterns that match allowed date formats used to extract date components
	['dmy'] = '^(%d%d?)%s+(%a+)%s+(%d%d%d%d)$',
	['mdy'] = '^(%a+)%s+(%d%d?),%s+(%d%d%d%d)$',
	['ymd'] = '^(%d%d%d%d)%-(%d%d)-(%d%d)$',
	}

local short_formats = {							-- this table holds format strings used by os.date() for short month names
	['dmy'] = '%e %b %Y',
	['mdy'] = '%b %e, %Y',
	['ymd'] = '%F',
	}

local long_formats = {							-- this table holds format strings used by os.date() for long month names
	['dmy'] = '%e %B %Y',
	['mdy'] = '%B %e, %Y',
	['ymd'] = '%F',
	}


--[[-------------------------&lt; G E T _ D M Y _ D A T E _ P A R T S &gt;------------------------------------------

extracts year, month and day from DMY formatted date, places them in the source_date table, and returns.

]]

local function get_dmy_date_parts (date, source_date)
	source_date.day, source_date.month, source_date.year = date:match (source_patterns['dmy']);	-- get date components as strings
	source_date.month = get_month_number (source_date.month);					-- get month number
end


--[[-------------------------&lt; G E T _ M D Y _ D A T E _ P A R T S &gt;------------------------------------------

extracts year, month and day from MDY formatted date, places them in the source_date table, and returns.

]]

local function get_mdy_date_parts (date, source_date)
	source_date.month, source_date.day, source_date.year = date:match (source_patterns['mdy']);	-- get date components as strings
	source_date.month = get_month_number (source_date.month);					-- get month number
end


--[[-------------------------&lt; G E T _ Y M D _ D A T E _ P A R T S &gt;------------------------------------------

extracts year, month and day from YMD formatted date, places them in the source_date table, and returns.

]]

local function get_ymd_date_parts (date, source_date)
	source_date.year, source_date.month, source_date.day = date:match (source_patterns['ymd']);	-- get date components as strings
end


--[[-------------------------&lt; R E F O R M A T _ D A T E S &gt;--------------------------------------------------

Reformats existing dates into the format specified by format and short.

format is one of several keywords: dmy, dmy-all, mdy, mdy-all, ymd, ymd-all.  The all version includes access- and
archive-dates; otherwise these dates are not reformatted

Date ranges, season dates, proper name dates are not currently supported.

For i18n:  This code works only at en.wiki because os.date() doesn't support any languages other than English.
mw.getContentLanguage():formatDate() will work at non-English wikis only when the date format is yyyy-mm-dd. This is
the same issue that plagues is_valid_accessdate()

It is possible that a solution like that written for ht:Module:Citation/CS1/Date_validation date_name_xlate() could be applied to this problem

]]

local function reformat_dates (date_parameters_list, format, short)
	local all = false;															-- set to false to skip access- and archive-dates
	local format_str;
	local source_date = {};
	
	if format:match('%a+%-all') then
		format = format:match('(%a+)%-all');									-- extract the format
		all = true;																-- set to true to format access- and archive-dates
	end
	
	for param_name, param_val in pairs (date_parameters_list) do				-- for each date-holding parameter in the list
		if is_set (param_val) then												-- if the parameter has a value
			if not all and in_array (param_name, {'access-date', 'archive-date'}) then	-- if access- or archive-date and format not xxx-all
				param_val = '';													-- set to empty string so we don't process this date
			end
			for source, pattern in pairs (source_patterns) do
				if param_val:match (pattern) then
					if 'ymd' == source then
						get_ymd_date_parts (param_val, source_date);			-- get the date parts into the source_date table
					elseif 'dmy' == source then
						get_dmy_date_parts (param_val, source_date);			-- get the date parts into the source_date table
					elseif 'mdy' == source then
						get_mdy_date_parts (param_val, source_date);			-- get the date parts into the source_date table
					end

					if 'ymd' == format and 1582 &gt; tonumber(source_date.year) then	-- ymd format dates not allowed before 1582
						return false;											-- abandon reformatting
					end
					
					if short then
						format_str = short_formats[format];
					else
						format_str = long_formats[format];
					end
																				-- convert date and save;
					date_parameters_list[param_name] = mw.text.trim (os.date (format_str, os.time(source_date)));	-- strip leading space when single digit day and %e is first format
				end
			end
		end
	end
	return true;																-- declare success and done
end


--[[--------------------------&lt; D A T E _ H Y P H E N _ T O _ D A S H &gt;----------------------------------------

Loops through the list of date-holding parameters and converts any hyphen to an ndash.  Not called if the cs1|2
template has any date errors.

Modifies the date_parameters_list and returns true if hyphens are replaced, else returns false.

]]

local function date_hyphen_to_dash (date_parameters_list)
	local result = false;
	local n;
	for param_name, param_val in pairs(date_parameters_list) do					-- for each date-holding parameter in the list
		if not param_val:match ('%d%d%d%d%-%d%d%-%d%d') then					-- for those that are not ymd dates
			param_val, n = param_val:gsub ('%-', '–');							-- replace any hyphen with ndash
			if 0 ~= n then
				date_parameters_list[param_name] = param_val;					-- update the list
				result = true;
			end
		end
	end
	return result;																-- so we know if any hyphens were replaced
end


--[[-------------------------&lt; D A T E _ N A M E _ X L A T E &gt;------------------------------------------------

Attempts to translate English month names to local-language month names using names supplied by MediaWiki's
date parser function.  This is simple name-for-name replacement and may not work for all languages.

]]

local function	date_name_xlate (date_parameters_list)
	local xlate;
	local mode;																	-- long or short month names
	local modified = false;
	local date;
	
	for param_name, param_val in pairs(date_parameters_list) do					-- for each date-holding parameter in the list
		if is_set(param_val) then												-- if the parameter has a value
			date = param_val;
			for month in mw.ustring.gmatch (date, '%a+') do						-- iterate through all dates in the date (single date or date range)
				if cfg.date_names.en.long[month] then
					mode = 'F';													-- English name is long so use long local name
				elseif cfg.date_names.en.short[month] then
					mode = 'M';													-- English name is short so use short local name
				else
					mode = nil;													-- not an English month name; could be local language month name or an English season name
				end
		
				if mode then															-- might be a season
					xlate = mw.getContentLanguage():formatDate(mode, '1' .. month);		-- translate the month name to this local language
					date = mw.ustring.gsub (date, month, xlate);						-- replace the English with the translation
					date_parameters_list[param_name] = date;							-- save the translated date
					modified = true;
				end
			end

		end
	end
	
	return modified;
	end


--[[--------------------------&lt; S E T _ S E L E C T E D _ M O D U L E S &gt;--------------------------------------

Sets local imported functions table to same (live or sandbox) as that used by the other modules.

]]

local function set_selected_modules (cfg_table_ptr, utilities_page_ptr)
	is_set = utilities_page_ptr.is_set;											-- import functions from selected Module:Citation/CS1/Utilities module
	in_array = utilities_page_ptr.in_array;										-- import functions from selected Module:Citation/CS1/Utilities module
	cfg = cfg_table_ptr;														-- import tables from selected Module:Citation/CS1/Configuration
end



return {																		-- return exported functions
	dates = dates,
	year_date_check = year_date_check,
	reformat_dates = reformat_dates,
	date_hyphen_to_dash = date_hyphen_to_dash,
	date_name_xlate = date_name_xlate,
	set_selected_modules = set_selected_modules
	}</text>
      <sha1>4mkyfuts1otu8fxhn4fytsmvluoycin</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Citation/CS1/Identifiers</title>
    <ns>828</ns>
    <id>51354323</id>
    <revision>
      <id>655218644</id>
      <parentid>655214846</parentid>
      <timestamp>2018-03-23T10:12:00Z</timestamp>
      <contributor>
        <username>Trappist the monk</username>
        <id>129485</id>
      </contributor>
      <comment>synch from [[en:Module:Citation/CS1/Identifiers/sandbox]]</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="47674">local identifiers = {};


--[[--------------------------&lt; F O R W A R D   D E C L A R A T I O N S &gt;--------------------------------------
]]

local is_set, in_array, set_error, select_one, add_maint_cat, substitute, make_wikilink;	-- functions in Module:Citation/CS1/Utilities

local z;																		-- table of tables defined in Module:Citation/CS1/Utilities

local cfg;																		-- table of configuration tables that are defined in Module:Citation/CS1/Configuration

local wd_int_lang = (mw.site.server:match ('wikidata') and mw.getCurrentFrame():preprocess('{{int:lang}}')) or '';


--============================&lt;&lt; H E L P E R   F U N C T I O N S &gt;&gt;============================================

--[[--------------------------&lt; E X T E R N A L _ L I N K _ I D &gt;----------------------------------------------

Formats a wiki style external link

]]

local function external_link_id(options)
	local url_string = options.id;
	local ext_link;
	local this_wiki_code;														-- wikipedia subdomain; 'en' for en.wikipedia.org
	local wd_article;															-- article title from wikidata
	
	if options.encode == true or options.encode == nil then
		url_string = mw.uri.encode( url_string );
	end
	
	ext_link = mw.ustring.format ('[%s%s%s %s]', options.prefix, url_string, options.suffix or "", mw.text.nowiki(options.id));
	if is_set(options.access) then
		ext_link = substitute (cfg.presentation['access-signal'], {ext_link, cfg.presentation[options.access]});	-- add the free-to-read / paywall lock
	end

	this_wiki_code = mw.language.getContentLanguage():getCode();				-- get this wikipedia's language code (subdomain)
	
	if string.match (mw.site.server, 'wikidata') then
		this_wiki_code = mw.getCurrentFrame():preprocess('{{int:lang}}');		-- on wikidata so use interface language setting instead
	end
	
	if is_set (options.q) then
		wd_article = mw.wikibase.getEntity (options.q):getSitelink (this_wiki_code .. 'wiki');	-- fetch article title from wd
		if wd_article then
			wd_article = table.concat ({':', this_wiki_code, ':', wd_article});		-- make interwiki link if taken from wd
		end
	end

	return table.concat	({
		make_wikilink (wd_article or options.link, options.label),				-- wikidata link or locally specified
		options.separator or '&amp;nbsp;',
		ext_link
		});
end


--[[--------------------------&lt; I N T E R N A L _ L I N K _ I D &gt;----------------------------------------------

Formats a wiki style internal link

]]

local function internal_link_id(options)

	return table.concat (
		{
		make_wikilink (options.link, options.label),
		options.separator or '&amp;nbsp;',
		make_wikilink (
			table.concat (
				{
				options.prefix,
				options.id,
				options.suffix or ''
				}),
			mw.text.nowiki (options.id)
			);
		});
end


--[[--------------------------&lt; I S _ E M B A R G O E D &gt;------------------------------------------------------

Determines if a PMC identifier's online version is embargoed. Compares the date in |embargo= against today's date.  If embargo date is
in the future, returns the content of |embargo=; otherwise, returns and empty string because the embargo has expired or because
|embargo= was not set in this cite.

]]

local function is_embargoed (embargo)
	if is_set (embargo) then
		local lang = mw.getContentLanguage();
		local good1, embargo_date, good2, todays_date;
		good1, embargo_date = pcall( lang.formatDate, lang, 'U', embargo );
		good2, todays_date = pcall( lang.formatDate, lang, 'U' );
	
		if good1 and good2 then													-- if embargo date and today's date are good dates
			if tonumber( embargo_date ) &gt;= tonumber( todays_date ) then			-- is embargo date is in the future?
				return embargo;													-- still embargoed
			else
				add_maint_cat ('embargo')
				return '';														-- unset because embargo has expired
			end
		end
	end
	return '';																	-- |embargo= not set return empty string
end


--[[--------------------------&lt; IS _ V A L I D _ I S X N &gt;-----------------------------------------------------

ISBN-10 and ISSN validator code calculates checksum across all isbn/issn digits including the check digit.
ISBN-13 is checked in isbn().

If the number is valid the result will be 0. Before calling this function, issbn/issn must be checked for length
and stripped of dashes, spaces and other non-isxn characters.

]]

local function is_valid_isxn (isxn_str, len)
	local temp = 0;
	isxn_str = { isxn_str:byte(1, len) };	-- make a table of byte values '0' → 0x30 .. '9' → 0x39, 'X' → 0x58
	len = len+1;							-- adjust to be a loop counter
	for i, v in ipairs( isxn_str ) do		-- loop through all of the bytes and calculate the checksum
		if v == string.byte( "X" ) then		-- if checkdigit is X (compares the byte value of 'X' which is 0x58)
			temp = temp + 10*( len - i );	-- it represents 10 decimal
		else
			temp = temp + tonumber( string.char(v) )*(len-i);
		end
	end
	return temp % 11 == 0;					-- returns true if calculation result is zero
end


--[[--------------------------&lt; IS _ V A L I D _ I S X N _ 1 3 &gt;-----------------------------------------------

ISBN-13 and ISMN validator code calculates checksum across all 13 isbn/ismn digits including the check digit.
If the number is valid, the result will be 0. Before calling this function, isbn-13/ismn must be checked for length
and stripped of dashes, spaces and other non-isxn-13 characters.

]]

local function is_valid_isxn_13 (isxn_str)
	local temp=0;
	
	isxn_str = { isxn_str:byte(1, 13) };										-- make a table of byte values '0' → 0x30 .. '9' → 0x39
	for i, v in ipairs( isxn_str ) do
		temp = temp + (3 - 2*(i % 2)) * tonumber( string.char(v) );				-- multiply odd index digits by 1, even index digits by 3 and sum; includes check digit
	end
	return temp % 10 == 0;														-- sum modulo 10 is zero when isbn-13/ismn is correct
end


--[[--------------------------&lt; N O R M A L I Z E _ L C C N &gt;--------------------------------------------------

lccn normalization (http://www.loc.gov/marc/lccn-namespace.html#normalization)
1. Remove all blanks.
2. If there is a forward slash (/) in the string, remove it, and remove all characters to the right of the forward slash.
3. If there is a hyphen in the string:
	a. Remove it.
	b. Inspect the substring following (to the right of) the (removed) hyphen. Then (and assuming that steps 1 and 2 have been carried out):
		1. All these characters should be digits, and there should be six or less. (not done in this function)
		2. If the length of the substring is less than 6, left-fill the substring with zeroes until the length is six.

Returns a normalized lccn for lccn() to validate.  There is no error checking (step 3.b.1) performed in this function.
]]

local function normalize_lccn (lccn)
	lccn = lccn:gsub ("%s", "");									-- 1. strip whitespace

	if nil ~= string.find (lccn,'/') then
		lccn = lccn:match ("(.-)/");								-- 2. remove forward slash and all character to the right of it
	end

	local prefix
	local suffix
	prefix, suffix = lccn:match ("(.+)%-(.+)");						-- 3.a remove hyphen by splitting the string into prefix and suffix

	if nil ~= suffix then											-- if there was a hyphen
		suffix=string.rep("0", 6-string.len (suffix)) .. suffix;	-- 3.b.2 left fill the suffix with 0s if suffix length less than 6
		lccn=prefix..suffix;										-- reassemble the lccn
	end
	
	return lccn;
	end

--============================&lt;&lt; I D E N T I F I E R   F U N C T I O N S &gt;&gt;====================================

--[[--------------------------&lt; A R X I V &gt;--------------------------------------------------------------------

See: http://arxiv.org/help/arxiv_identifier

format and error check arXiv identifier.  There are three valid forms of the identifier:
the first form, valid only between date codes 9108 and 0703 is:
	arXiv:&lt;archive&gt;.&lt;class&gt;/&lt;date code&gt;&lt;number&gt;&lt;version&gt;
where:
	&lt;archive&gt; is a string of alpha characters - may be hyphenated; no other punctuation
	&lt;class&gt; is a string of alpha characters - may be hyphenated; no other punctuation
	&lt;date code&gt; is four digits in the form YYMM where YY is the last two digits of the four-digit year and MM is the month number January = 01
		first digit of YY for this form can only 9 and 0
	&lt;number&gt; is a three-digit number
	&lt;version&gt; is a 1 or more digit number preceded with a lowercase v; no spaces (undocumented)
	
the second form, valid from April 2007 through December 2014 is:
	arXiv:&lt;date code&gt;.&lt;number&gt;&lt;version&gt;
where:
	&lt;date code&gt; is four digits in the form YYMM where YY is the last two digits of the four-digit year and MM is the month number January = 01
	&lt;number&gt; is a four-digit number
	&lt;version&gt; is a 1 or more digit number preceded with a lowercase v; no spaces

the third form, valid from January 2015 is:
	arXiv:&lt;date code&gt;.&lt;number&gt;&lt;version&gt;
where:
	&lt;date code&gt; and &lt;version&gt; are as defined for 0704-1412
	&lt;number&gt; is a five-digit number
]]

local function arxiv (id, class)
	local handler = cfg.id_handlers['ARXIV'];
	local year, month, version;
	local err_cat = '';
	local text;
	
	if id:match("^%a[%a%.%-]+/[90]%d[01]%d%d%d%d$") or id:match("^%a[%a%.%-]+/[90]%d[01]%d%d%d%dv%d+$") then	-- test for the 9108-0703 format w/ &amp; w/o version
		year, month = id:match("^%a[%a%.%-]+/([90]%d)([01]%d)%d%d%d[v%d]*$");
		year = tonumber(year);
		month = tonumber(month);
		if ((not (90 &lt; year or 8 &gt; year)) or (1 &gt; month or 12 &lt; month)) or		-- if invalid year or invalid month
			((91 == year and 7 &gt; month) or (7 == year and 3 &lt; month)) then		-- if years ok, are starting and ending months ok?
				err_cat = ' ' .. set_error( 'bad_arxiv' );						-- set error message
		end
	elseif id:match("^%d%d[01]%d%.%d%d%d%d$") or id:match("^%d%d[01]%d%.%d%d%d%dv%d+$") then	-- test for the 0704-1412 w/ &amp; w/o version
		year, month = id:match("^(%d%d)([01]%d)%.%d%d%d%d[v%d]*$");
		year = tonumber(year);
		month = tonumber(month);
		if ((7 &gt; year) or (14 &lt; year) or (1 &gt; month or 12 &lt; month)) or			-- is year invalid or is month invalid? (doesn't test for future years)
			((7 == year) and (4 &gt; month)) then --or									-- when year is 07, is month invalid (before April)?
				err_cat = ' ' .. set_error( 'bad_arxiv' );						-- set error message
		end
	elseif id:match("^%d%d[01]%d%.%d%d%d%d%d$") or id:match("^%d%d[01]%d%.%d%d%d%d%dv%d+$") then	-- test for the 1501- format w/ &amp; w/o version
		year, month = id:match("^(%d%d)([01]%d)%.%d%d%d%d%d[v%d]*$");
		year = tonumber(year);
		month = tonumber(month);
		if ((15 &gt; year) or (1 &gt; month or 12 &lt; month)) then						-- is year invalid or is month invalid? (doesn't test for future years)
			err_cat = ' ' .. set_error( 'bad_arxiv' );							-- set error message
		end
	else
		err_cat = ' ' .. set_error( 'bad_arxiv' );								-- arXiv id doesn't match any format
	end

	text = external_link_id({link = handler.link, label = handler.label, q = handler.q,
			prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode, access=handler.access}) .. err_cat;

	if is_set (class) then
		class = ' [[' .. '//arxiv.org/archive/' .. class .. ' ' .. class .. ']]';	-- external link within square brackets, not wikilink
	else
		class = '';																-- empty string for concatenation
	end
	
	return text .. class;
end


--[[--------------------------&lt; B I B C O D E &gt;--------------------------------------------------------------------

Validates (sort of) and formats a bibcode id.

Format for bibcodes is specified here: http://adsabs.harvard.edu/abs_doc/help_pages/data.html#bibcodes

But, this: 2015arXiv151206696F is apparently valid so apparently, the only things that really matter are length, 19 characters
and first four digits must be a year.  This function makes these tests:
	length must be 19 characters
	characters in position
		1–4 must be digits and must represent a year in the range of 1000 – next year
		5 must be a letter
		6 must be letter, ampersand, or dot (ampersand cannot directly precede a dot; &amp;. )
		7–8 must be letter, digit, ampersand, or dot (ampersand cannot directly precede a dot; &amp;. )
		9–18 must be letter, digit, or dot
		19 must be a letter or dot

]]

local function bibcode (id, access)
	local handler = cfg.id_handlers['BIBCODE'];
	local err_type;
	local year;

	local text = external_link_id({link=handler.link, label=handler.label, q = handler.q,
		prefix=handler.prefix, id=id, separator=handler.separator, encode=handler.encode,
		access=access});
	
	if 19 ~= id:len() then
		err_type = 'length';
	else
		year = id:match ("^(%d%d%d%d)[%a][%a&amp;%.][%a&amp;%.%d][%a&amp;%.%d][%a%d%.]+[%a%.]$")	-- 
		if not year then														-- if nil then no pattern match
			err_type = 'value';													-- so value error
		else
			local next_year = tonumber(os.date ('%Y'))+1;						-- get the current year as a number and add one for next year
			year = tonumber (year);												-- convert year portion of bibcode to a number
			if (1000 &gt; year) or (year &gt; next_year) then
				err_type = 'year';												-- year out of bounds
			end
			if id:find('&amp;%.') then
				err_type = 'journal';											-- journal abbreviation must not have '&amp;.' (if it does its missing a letter)
			end
		end
	end

	if is_set (err_type) then													-- if there was an error detected
		text = text .. ' ' .. set_error( 'bad_bibcode', {err_type});
	end
	return text;
end


--[[--------------------------&lt; B I O R X I V &gt;-----------------------------------------------------------------

Format bioRxiv id and do simple error checking.  BiorXiv ids are exactly 6 digits.
The bioRxiv id is the number following the last slash in the bioRxiv-issued DOI:
https://doi.org/10.1101/078733 -&gt; 078733

]]

local function biorxiv(id)
	local handler = cfg.id_handlers['BIORXIV'];
	local err_cat = '';															-- presume that bioRxiv id is valid
	
	if nil == id:match("^%d%d%d%d%d%d$") then									-- if bioRxiv id has anything but six digits
		err_cat = ' ' .. set_error( 'bad_biorxiv');	-- set an error message
	end
	
	return external_link_id({link = handler.link, label = handler.label, q = handler.q,
			prefix=handler.prefix,id=id,separator=handler.separator,
			encode=handler.encode, access=handler.access}) .. err_cat;
end


--[[--------------------------&lt; C I T E S E E R X &gt;------------------------------------------------------------

CiteSeerX use their own notion of "doi" (not to be confused with the identifiers resolved via doi.org).

The description of the structure of this identifier can be found at Help_talk:Citation_Style_1/Archive_26#CiteSeerX_id_structure
]]

local function citeseerx (id)
	local handler = cfg.id_handlers['CITESEERX'];
	local matched;
	
	local text = external_link_id({link=handler.link, label=handler.label, q = handler.q,
		prefix=handler.prefix, id=id, separator=handler.separator, encode=handler.encode,
		access=handler.access});
	
	matched = id:match ("^10%.1%.1%.[1-9]%d?%d?%d?%.[1-9]%d?%d?%d?$");
	if not matched then
		text = text .. ' ' .. set_error( 'bad_citeseerx' );
	end
	return text;
end


--[[--------------------------&lt; D O I &gt;------------------------------------------------------------------------

Formats a DOI and checks for DOI errors.

DOI names contain two parts: prefix and suffix separated by a forward slash.
	Prefix: directory indicator '10.' followed by a registrant code
	Suffix: character string of any length chosen by the registrant

This function checks a DOI name for: prefix/suffix.  If the doi name contains spaces or endashes, or, if it ends
with a period or a comma, this function will emit a bad_doi error message.

DOI names are case-insensitive and can incorporate any printable Unicode characters so the test for spaces, endash,
and terminal punctuation may not be technically correct but it appears, that in practice these characters are rarely
if ever used in doi names.

]]

local function doi(id, inactive, access)
	local cat = ""
	local handler = cfg.id_handlers['DOI'];
	
	local text;
	if is_set(inactive) then
		local inactive_year = inactive:match("%d%d%d%d") or '';					-- try to get the year portion from the inactive date
		if is_set(inactive_year) then
			table.insert( z.error_categories, "Pages with DOIs inactive since " .. inactive_year );
		else
			table.insert( z.error_categories, "Pages with inactive DOIs" );		-- when inactive doesn't contain a recognizable year
		end
		inactive = " (" .. cfg.messages['inactive'] .. " " .. inactive .. ")" 
	end
	text = external_link_id({link = handler.link, label = handler.label, q = handler.q,
		prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode, access=access}) .. (inactive or '')

	if nil == id:match("^10%.[^%s–]-/[^%s–]-[^%.,]$") then						-- doi must begin with '10.', must contain a fwd slash, must not contain spaces or endashes, and must not end with period or comma
		cat = ' ' .. set_error( 'bad_doi' );
	end

	return text .. cat 
end


--[[--------------------------&lt; H D L &gt;------------------------------------------------------------------------

Formats an HDL with minor error checking.

HDL names contain two parts: prefix and suffix separated by a forward slash.
	Prefix: character string using any character in the UCS-2 character set except '/'
	Suffix: character string of any length using any character in the UCS-2 character set chosen by the registrant

This function checks a HDL name for: prefix/suffix.  If the HDL name contains spaces, endashes, or, if it ends
with a period or a comma, this function will emit a bad_hdl error message.

HDL names are case-insensitive and can incorporate any printable Unicode characters so the test for endashes and
terminal punctuation may not be technically correct but it appears, that in practice these characters are rarely
if ever used in HDLs.

]]

local function hdl(id, access)
	local handler = cfg.id_handlers['HDL'];
	
	local text = external_link_id({link = handler.link, label = handler.label, q = handler.q,
			prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode, access=access})

	if nil == id:match("^[^%s–]-/[^%s–]-[^%.,]$") then							-- hdl must contain a fwd slash, must not contain spaces, endashes, and must not end with period or comma
		text = text .. ' ' .. set_error( 'bad_hdl' );
	end
	return text;
end


--[[--------------------------&lt; I S B N &gt;----------------------------------------------------------------------

Determines whether an ISBN string is valid

]]

local function isbn( isbn_str )
	if nil ~= isbn_str:match("[^%s-0-9X]") then
		return false, 'invalid character';										-- fail if isbn_str contains anything but digits, hyphens, or the uppercase X
	end
	isbn_str = isbn_str:gsub( "-", "" ):gsub( " ", "" );						-- remove hyphens and spaces
	local len = isbn_str:len();
 
	if len ~= 10 and len ~= 13 then
		return false, 'length';													-- fail if incorrect length
	end

	if len == 10 then
		if isbn_str:match( "^%d*X?$" ) == nil then								-- fail if isbn_str has 'X' anywhere but last position
			return false, 'invalid form';									
		end
		return is_valid_isxn(isbn_str, 10), 'checksum';
	else
		if isbn_str:match( "^%d+$" ) == nil then
			return false, 'invalid character';									-- fail if isbn13 is not all digits
		end
		if isbn_str:match( "^97[89]%d*$" ) == nil then
			return false, 'invalid prefix';										-- fail when isbn13 does not begin with 978 or 979
		end
		return is_valid_isxn_13 (isbn_str), 'checksum';
	end
end


--[[--------------------------&lt; A M A Z O N &gt;------------------------------------------------------------------

Formats a link to Amazon.  Do simple error checking: asin must be mix of 10 numeric or uppercase alpha
characters.  If a mix, first character must be uppercase alpha; if all numeric, asins must be 10-digit
isbn. If 10-digit isbn, add a maintenance category so a bot or awb script can replace |asin= with |isbn=.
Error message if not 10 characters, if not isbn10, if mixed and first character is a digit.

This function is positioned here because it calls isbn()

]]

local function asin(id, domain)
	local err_cat = ""

	if not id:match("^[%d%u][%d%u][%d%u][%d%u][%d%u][%d%u][%d%u][%d%u][%d%u][%d%u]$") then
		err_cat = ' ' .. set_error ('bad_asin');								-- asin is not a mix of 10 uppercase alpha and numeric characters
	else
		if id:match("^%d%d%d%d%d%d%d%d%d[%dX]$") then							-- if 10-digit numeric (or 9 digits with terminal X)
			if isbn( id ) then													-- see if asin value is isbn10
				add_maint_cat ('ASIN');
			elseif not is_set (err_cat) then
				err_cat = ' ' .. set_error ('bad_asin');						-- asin is not isbn10
			end
		elseif not id:match("^%u[%d%u]+$") then
			err_cat = ' ' .. set_error ('bad_asin');							-- asin doesn't begin with uppercase alpha
		end
	end
	if not is_set(domain) then 
		domain = "com";
	elseif in_array (domain, {'jp', 'uk'}) then			-- Japan, United Kingdom
		domain = "co." .. domain;
	elseif in_array (domain, {'au', 'br', 'mx'}) then	-- Australia, Brazil, Mexico
		domain = "com." .. domain;
	end
	local handler = cfg.id_handlers['ASIN'];
	return external_link_id({link=handler.link,
		label=handler.label, q = handler.q, prefix=handler.prefix .. domain .. "/dp/",
		id=id, encode=handler.encode, separator = handler.separator}) .. err_cat;
end


--[[--------------------------&lt; I S M N &gt;----------------------------------------------------------------------

Determines whether an ISMN string is valid.  Similar to isbn-13, ismn is 13 digits begining 979-0-... and uses the
same check digit calculations.  See http://www.ismn-international.org/download/Web_ISMN_Users_Manual_2008-6.pdf
section 2, pages 9–12.

]]

local function ismn (id)
	local handler = cfg.id_handlers['ISMN'];
	local text;
	local valid_ismn = true;
	local id_copy;

	id_copy = id;																-- save a copy because this testing is destructive
	id=id:gsub( "[%s-–]", "" );													-- strip spaces, hyphens, and endashes from the ismn

	if 13 ~= id:len() or id:match( "^9790%d*$" ) == nil then					-- ismn must be 13 digits and begin 9790
		valid_ismn = false;
	else
		valid_ismn=is_valid_isxn_13 (id);										-- validate ismn
	end

--	text = internal_link_id({link = handler.link, label = handler.label,		-- use this (or external version) when there is some place to link to
--		prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode})
 
	text = table.concat (
		{
		make_wikilink (handler.link, handler.label),
		handler.separator,
		id_copy
		});		-- because no place to link to yet

	if false == valid_ismn then
		text = text .. ' ' .. set_error( 'bad_ismn' )							-- add an error message if the ismn is invalid
	end 
	
	return text;
end


--[[--------------------------&lt; I S S N &gt;----------------------------------------------------------------------

Validate and format an issn.  This code fixes the case where an editor has included an ISSN in the citation but
has separated the two groups of four digits with a space.  When that condition occurred, the resulting link looked
like this:

	|issn=0819 4327 gives: [http://www.worldcat.org/issn/0819 4327 0819 4327]	-- can't have spaces in an external link
	
This code now prevents that by inserting a hyphen at the issn midpoint.  It also validates the issn for length
and makes sure that the checkdigit agrees with the calculated value.  Incorrect length (8 digits), characters
other than 0-9 and X, or checkdigit / calculated value mismatch will all cause a check issn error message.  The
issn is always displayed with a hyphen, even if the issn was given as a single group of 8 digits.

]]

local function issn(id, e)
	local issn_copy = id;														-- save a copy of unadulterated issn; use this version for display if issn does not validate
	local handler;
	local text;
	local valid_issn = true;
	
	if e then
		 handler = cfg.id_handlers['EISSN'];
	else
		 handler = cfg.id_handlers['ISSN'];
	end

	id=id:gsub( "[%s-–]", "" );													-- strip spaces, hyphens, and endashes from the issn

	if 8 ~= id:len() or nil == id:match( "^%d*X?$" ) then						-- validate the issn: 8 digits long, containing only 0-9 or X in the last position
		valid_issn=false;														-- wrong length or improper character
	else
		valid_issn=is_valid_isxn(id, 8);										-- validate issn
	end

	if true == valid_issn then
		id = string.sub( id, 1, 4 ) .. "-" .. string.sub( id, 5 );				-- if valid, display correctly formatted version
	else
		id = issn_copy;															-- if not valid, use the show the invalid issn with error message
	end
	
	text = external_link_id({link = handler.link, label = handler.label, q = handler.q,
		prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode})
 
	if false == valid_issn then
		text = text .. ' ' .. set_error( 'bad_issn', e and 'e' or '' )			-- add an error message if the issn is invalid
	end 
	
	return text
end


--[[--------------------------&lt; J F M &gt;-----------------------------------------------------------------------

A numerical identifier in the form nn.nnnn.nn

]]

local function jfm (id)
	local handler = cfg.id_handlers['JFM'];
	local id_num;
	local err_cat = '';
	
	id_num = id:match ('^[Jj][Ff][Mm](.*)$');									-- identifier with jfm prefix; extract identifier

	if is_set (id_num) then
		add_maint_cat ('jfm_format');
	else																		-- plain number without mr prefix
		id_num = id;															-- if here id does not have prefix
	end

	if id_num and id_num:match('^%d%d%.%d%d%d%d%.%d%d$') then
		id = id_num;															-- jfm matches pattern
	else
		err_cat = ' ' .. set_error( 'bad_jfm' );								-- set an error message
	end
	
	return external_link_id({link = handler.link, label = handler.label, q = handler.q,
			prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode}) .. err_cat;
end


--[[--------------------------&lt; L C C N &gt;----------------------------------------------------------------------

Format LCCN link and do simple error checking.  LCCN is a character string 8-12 characters long. The length of
the LCCN dictates the character type of the first 1-3 characters; the rightmost eight are always digits.
http://info-uri.info/registry/OAIHandler?verb=GetRecord&amp;metadataPrefix=reg&amp;identifier=info:lccn/

length = 8 then all digits
length = 9 then lccn[1] is lower case alpha
length = 10 then lccn[1] and lccn[2] are both lower case alpha or both digits
length = 11 then lccn[1] is lower case alpha, lccn[2] and lccn[3] are both lower case alpha or both digits
length = 12 then lccn[1] and lccn[2] are both lower case alpha

]]

local function lccn(lccn)
	local handler = cfg.id_handlers['LCCN'];
	local err_cat = '';															-- presume that LCCN is valid
	local id = lccn;															-- local copy of the lccn

	id = normalize_lccn (id);													-- get canonical form (no whitespace, hyphens, forward slashes)
	local len = id:len();														-- get the length of the lccn

	if 8 == len then
		if id:match("[^%d]") then												-- if LCCN has anything but digits (nil if only digits)
			err_cat = ' ' .. set_error( 'bad_lccn' );							-- set an error message
		end
	elseif 9 == len then														-- LCCN should be adddddddd
		if nil == id:match("%l%d%d%d%d%d%d%d%d") then							-- does it match our pattern?
			err_cat = ' ' .. set_error( 'bad_lccn' );							-- set an error message
		end
	elseif 10 == len then														-- LCCN should be aadddddddd or dddddddddd
		if id:match("[^%d]") then												-- if LCCN has anything but digits (nil if only digits) ...
			if nil == id:match("^%l%l%d%d%d%d%d%d%d%d") then					-- ... see if it matches our pattern
				err_cat = ' ' .. set_error( 'bad_lccn' );						-- no match, set an error message
			end
		end
	elseif 11 == len then														-- LCCN should be aaadddddddd or adddddddddd
		if not (id:match("^%l%l%l%d%d%d%d%d%d%d%d") or id:match("^%l%d%d%d%d%d%d%d%d%d%d")) then	-- see if it matches one of our patterns
			err_cat = ' ' .. set_error( 'bad_lccn' );							-- no match, set an error message
		end
	elseif 12 == len then														-- LCCN should be aadddddddddd
		if not id:match("^%l%l%d%d%d%d%d%d%d%d%d%d") then						-- see if it matches our pattern
			err_cat = ' ' .. set_error( 'bad_lccn' );							-- no match, set an error message
		end
	else
		err_cat = ' ' .. set_error( 'bad_lccn' );								-- wrong length, set an error message
	end

	if not is_set (err_cat) and nil ~= lccn:find ('%s') then
		err_cat = ' ' .. set_error( 'bad_lccn' );								-- lccn contains a space, set an error message
	end

	return external_link_id({link = handler.link, label = handler.label, q = handler.q,
			prefix=handler.prefix,id=lccn,separator=handler.separator, encode=handler.encode}) .. err_cat;
end


--[[--------------------------&lt; M R &gt;--------------------------------------------------------------------------

A seven digit number; if not seven digits, zero-fill leading digits to make seven digits.

]]

local function mr (id)
	local handler = cfg.id_handlers['MR'];
	local id_num;
	local id_len;
	local err_cat = '';
	
	id_num = id:match ('^[Mm][Rr](%d+)$');										-- identifier with mr prefix

	if is_set (id_num) then
		add_maint_cat ('mr_format');
	else																		-- plain number without mr prefix
		id_num = id:match ('^%d+$');											-- if here id is all digits
	end

	id_len = id_num and id_num:len() or 0;
	if (7 &gt;= id_len) and (0 ~= id_len) then
		id = string.rep ('0', 7-id_len ) .. id_num;								-- zero-fill leading digits
	else
		err_cat = ' ' .. set_error( 'bad_mr' );									-- set an error message
	end
	
	return external_link_id({link = handler.link, label = handler.label, q = handler.q,
			prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode}) .. err_cat;
end


--[[--------------------------&lt; O C L C &gt;----------------------------------------------------------------------

Validate and format an oclc id.  https://www.oclc.org/batchload/controlnumber.en.html

]]

local function oclc (id)
	local handler = cfg.id_handlers['OCLC'];
	local number;
	local err_msg = '';															-- empty string for concatenation
	
	if id:match('^ocm%d%d%d%d%d%d%d%d$') then									-- ocm prefix and 8 digits; 001 field (12 characters)
		number = id:match('ocm(%d+)');											-- get the number
	elseif id:match('^ocn%d%d%d%d%d%d%d%d%d$') then								-- ocn prefix and 9 digits; 001 field (12 characters)
		number = id:match('ocn(%d+)');											-- get the number
	elseif id:match('^on%d%d%d%d%d%d%d%d%d%d+$') then							-- on prefix and 10 or more digits; 001 field (12 characters)
		number = id:match('^on(%d%d%d%d%d%d%d%d%d%d+)$');						-- get the number
	elseif id:match('^%(OCoLC%)[1-9]%d*$') then									-- (OCoLC) prefix and variable number digits; no leading zeros; 035 field
		number = id:match('%(OCoLC%)([1-9]%d*)');								-- get the number
		if 9 &lt; number:len() then
			number = nil;														-- contrain to 1 to 9 digits; change this when oclc issues 10-digit numbers
		end
	elseif id:match('^%d+$') then												-- no prefix
		number = id;															-- get the number
		if 10 &lt; number:len() then
			number = nil;														-- contrain to 1 to 10 digits; change this when oclc issues 11-digit numbers
		end
	end

	if number then																-- proper format
		id = number;															-- exclude prefix, if any, from external link
	else
		err_msg = ' ' .. set_error( 'bad_oclc' )								-- add an error message if the id is malformed
	end
	
	local text = external_link_id({link=handler.link, label=handler.label, q = handler.q,
		prefix=handler.prefix, id=id, separator=handler.separator, encode=handler.encode}) .. err_msg;

	return text;
end


--[[--------------------------&lt; O P E N L I B R A R Y &gt;--------------------------------------------------------

Formats an OpenLibrary link, and checks for associated errors.

]]

local function openlibrary(id, access)
	local code;
	local handler = cfg.id_handlers['OL'];
	local ident;
	
	ident, code = id:gsub('^OL', ''):match("^(%d+([AMW]))$");					-- optional OL prefix followed immediately by digits followed by 'A', 'M', or 'W'; remove OL prefix

	if not is_set (ident) then													-- if malformed return an error
		return external_link_id({link=handler.link, label=handler.label, q = handler.q,
			prefix=handler.prefix .. 'OL',
			id=id, separator=handler.separator,	encode = handler.encode,
			access = access}) .. ' ' .. set_error( 'bad_ol' );
	end
	
	id = ident;																	-- use ident without the optional OL prefix (it has been removed)
	
	if ( code == "A" ) then
		return external_link_id({link=handler.link, label=handler.label, q = handler.q,
			prefix=handler.prefix .. 'authors/OL',
			id=id, separator=handler.separator,	encode = handler.encode,
			access = access})
	end
	
	if ( code == "M" ) then
		return external_link_id({link=handler.link, label=handler.label, q = handler.q,
			prefix=handler.prefix .. 'books/OL',
			id=id, separator=handler.separator,	encode = handler.encode,
			access = access})
	end

	if ( code == "W" ) then
		return external_link_id({link=handler.link, label=handler.label, q = handler.q,
			prefix=handler.prefix .. 'works/OL',
			id=id, separator=handler.separator,	encode = handler.encode,
			access = access})
	end
end


--[[--------------------------&lt; P M C &gt;------------------------------------------------------------------------

Format a PMC, do simple error checking, and check for embargoed articles.

The embargo parameter takes a date for a value. If the embargo date is in the future the PMC identifier will not
be linked to the article.  If the embargo date is today or in the past, or if it is empty or omitted, then the
PMC identifier is linked to the article through the link at cfg.id_handlers['PMC'].prefix.

PMC embargo date testing is done in function is_embargoed () which is called earlier because when the citation
has |pmc=&lt;value&gt; but does not have a |url= then |title= is linked with the PMC link.  Function is_embargoed ()
returns the embargo date if the PMC article is still embargoed, otherwise it returns an empty string.

PMCs are sequential numbers beginning at 1 and counting up.  This code checks the PMC to see that it contains only digits and is less
than test_limit; the value in local variable test_limit will need to be updated periodically as more PMCs are issued.

]]

local function pmc(id, embargo)
	local test_limit = 6000000;													-- update this value as PMCs approach
	local handler = cfg.id_handlers['PMC'];
	local err_cat = '';															-- presume that PMC is valid
	local id_num;
	local text;
	
	id_num = id:match ('^[Pp][Mm][Cc](%d+)$');									-- identifier with pmc prefix

	if is_set (id_num) then
		add_maint_cat ('pmc_format');
	else																		-- plain number without pmc prefix
		id_num = id:match ('^%d+$');											-- if here id is all digits
	end

	if is_set (id_num) then														-- id_num has a value so test it
		id_num = tonumber(id_num);												-- convert id_num to a number for range testing
		if 1 &gt; id_num or test_limit &lt; id_num then								-- if PMC is outside test limit boundaries
			err_cat = ' ' .. set_error( 'bad_pmc' );							-- set an error message
		else
			id = tostring (id_num);												-- make sure id is a string
		end
	else																		-- when id format incorrect
		err_cat = ' ' .. set_error( 'bad_pmc' );								-- set an error message
	end
	
	if is_set (embargo) then													-- is PMC is still embargoed?
		text = table.concat (													-- still embargoed so no external link
			{
			make_wikilink (handler.link, handler.label),
			handler.separator,
			id,
			err_cat
			});
	else
		text = external_link_id({link = handler.link, label = handler.label, q = handler.q,	-- no embargo date or embargo has expired, ok to link to article
			prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode, access=handler.access}) .. err_cat;
	end
	return text;
end


--[[--------------------------&lt; P M I D &gt;----------------------------------------------------------------------

Format PMID and do simple error checking.  PMIDs are sequential numbers beginning at 1 and counting up.  This
code checks the PMID to see that it contains only digits and is less than test_limit; the value in local variable
test_limit will need to be updated periodically as more PMIDs are issued.

]]

local function pmid(id)
	local test_limit = 32000000;												-- update this value as PMIDs approach
	local handler = cfg.id_handlers['PMID'];
	local err_cat = '';															-- presume that PMID is valid
	
	if id:match("[^%d]") then													-- if PMID has anything but digits
		err_cat = ' ' .. set_error( 'bad_pmid' );								-- set an error message
	else																		-- PMID is only digits
		local id_num = tonumber(id);											-- convert id to a number for range testing
		if 1 &gt; id_num or test_limit &lt; id_num then								-- if PMID is outside test limit boundaries
			err_cat = ' ' .. set_error( 'bad_pmid' );							-- set an error message
		end
	end
	
	return external_link_id({link = handler.link, label = handler.label, q = handler.q,
			prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode}) .. err_cat;
end


--[[--------------------------&lt; S S R N &gt;----------------------------------------------------------------------

Format an ssrn, do simple error checking

SSRNs are sequential numbers beginning at 100? and counting up.  This code checks the ssrn to see that it is
only digits and is greater than 99 and less than test_limit; the value in local variable test_limit will need
to be updated periodically as more SSRNs are issued.

]]

local function ssrn (id)
	local test_limit = 3500000;													-- update this value as SSRNs approach
	local handler = cfg.id_handlers['SSRN'];
	local err_cat = '';															-- presume that SSRN is valid
	local id_num;
	local text;
	
	id_num = id:match ('^%d+$');												-- id must be all digits

	if is_set (id_num) then														-- id_num has a value so test it
		id_num = tonumber(id_num);												-- convert id_num to a number for range testing
		if 100 &gt; id_num or test_limit &lt; id_num then								-- if SSRN is outside test limit boundaries
			err_cat = ' ' .. set_error( 'bad_ssrn' );							-- set an error message
		end
	else																		-- when id format incorrect
		err_cat = ' ' .. set_error( 'bad_ssrn' );								-- set an error message
	end
	
	text = external_link_id({link = handler.link, label = handler.label, q = handler.q,
		prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode, access=handler.access}) .. err_cat;

	return text;
end


--[[--------------------------&lt; U S E N E T _ I D &gt;------------------------------------------------------------

Validate and format a usenet message id.  Simple error checking, looks for 'id-left@id-right' not enclosed in
'&lt;' and/or '&gt;' angle brackets.

]]

local function usenet_id (id)
	local handler = cfg.id_handlers['USENETID'];

	local text = external_link_id({link = handler.link, label = handler.label, q = handler.q,
		prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode})
 
	if not id:match('^.+@.+$') or not id:match('^[^&lt;].*[^&gt;]$')then				-- doesn't have '@' or has one or first or last character is '&lt; or '&gt;'
		text = text .. ' ' .. set_error( 'bad_usenet_id' )						-- add an error message if the message id is invalid
	end 
	
	return text
end


--[[--------------------------&lt; Z B L &gt;-----------------------------------------------------------------------

A numerical identifier in the form nnnn.nnnnn - leading zeros in the first quartet optional

]]

local function zbl (id)
	local handler = cfg.id_handlers['ZBL'];
	local id_num;
	local err_cat = '';
	
	id_num = id:match ('^[Zz][Bb][Ll](.*)$');									-- identifier with zbl prefix; extract identifier

	if is_set (id_num) then
		add_maint_cat ('zbl_format');
	else																		-- plain number without zbl prefix
		id_num = id;															-- if here id does not have prefix
	end

	if id_num:match('^%d?%d?%d?%d%.%d%d%d%d%d$') then
		id = id_num;															-- id matches pattern
	else
		err_cat = ' ' .. set_error( 'bad_zbl' );								-- set an error message
	end
	
	return external_link_id({link = handler.link, label = handler.label, q = handler.q,
			prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode}) .. err_cat;
end


--============================&lt;&lt; I N T E R F A C E   F U N C T I O N S &gt;&gt;==========================================

--[[--------------------------&lt; B U I L D _ I D _ L I S T &gt;--------------------------------------------------------

Takes a table of IDs created by extract_ids() and turns it into a table of formatted ID outputs.

inputs:
	id_list – table of identifiers built by extract_ids()
	options – table of various template parameter values used to modify some manually handled identifiers

]]

local function build_id_list( id_list, options )
	local new_list, handler = {};

	local function fallback(k) return { __index = function(t,i) return cfg.id_handlers[k][i] end } end;
	
	for k, v in pairs( id_list ) do												-- k is uc identifier name as index to cfg.id_handlers; e.g. cfg.id_handlers['ISBN'], v is a table
		-- fallback to read-only cfg
		handler = setmetatable( { ['id'] = v, ['access'] = options.IdAccessLevels[k] }, fallback(k) );

		if handler.mode == 'external' then
			table.insert( new_list, {handler.label, external_link_id( handler ) } );
		elseif handler.mode == 'internal' then
			table.insert( new_list, {handler.label, internal_link_id( handler ) } );
		elseif handler.mode ~= 'manual' then
			error( cfg.messages['unknown_ID_mode'] );
		elseif k == 'ARXIV' then
			table.insert( new_list, {handler.label, arxiv( v, options.Class ) } ); 
		elseif k == 'ASIN' then
			table.insert( new_list, {handler.label, asin( v, options.ASINTLD ) } ); 
		elseif k == 'BIBCODE' then
			table.insert( new_list, {handler.label, bibcode( v, handler.access ) } );
		elseif k == 'BIORXIV' then
			table.insert( new_list, {handler.label, biorxiv( v ) } );
		elseif k == 'CITESEERX' then
			table.insert( new_list, {handler.label, citeseerx( v ) } );
		elseif k == 'DOI' then
			table.insert( new_list, {handler.label, doi( v, options.DoiBroken, handler.access ) } );
		elseif k == 'EISSN' then
			table.insert( new_list, {handler.label, issn( v, true ) } );		-- true distinguishes eissn from issn
		elseif k == 'HDL' then
			table.insert( new_list, {handler.label, hdl( v, handler.access ) } );
		elseif k == 'ISBN' then
			local ISBN = internal_link_id( handler );
			local check;
			local err_type = '';
			check, err_type = isbn( v );
			if not check then
				if is_set(options.IgnoreISBN) then								-- ISBN is invalid; if |ignore-isbn-error= set
					add_maint_cat ('ignore_isbn_err');							-- ad a maint category
				else
					ISBN = ISBN .. set_error( 'bad_isbn', {err_type}, false, " ", "" );	-- else display an error message
				end
			elseif is_set(options.IgnoreISBN) then								-- ISBN is OK; if |ignore-isbn-error= set
				add_maint_cat ('ignore_isbn_err');								-- because |ignore-isbn-error= unnecessary
			end
			table.insert( new_list, {handler.label, ISBN } );				
		elseif k == 'ISMN' then
			table.insert( new_list, {handler.label, ismn( v ) } );
		elseif k == 'ISSN' then
			table.insert( new_list, {handler.label, issn( v ) } );
		elseif k == 'JFM' then
			table.insert( new_list, {handler.label, jfm( v ) } );
		elseif k == 'LCCN' then
			table.insert( new_list, {handler.label, lccn( v ) } );
		elseif k == 'MR' then
			table.insert( new_list, {handler.label, mr( v ) } );
		elseif k == 'OCLC' then
			table.insert( new_list, {handler.label, oclc( v ) } );
		elseif k == 'OL' or k == 'OLA' then
			table.insert( new_list, {handler.label, openlibrary( v, handler.access ) } );
		elseif k == 'PMC' then
			table.insert( new_list, {handler.label, pmc( v, options.Embargo ) } );
		elseif k == 'PMID' then
			table.insert( new_list, {handler.label, pmid( v ) } );
		elseif k == 'SSRN' then
			table.insert( new_list, {handler.label, ssrn( v ) } );
		elseif k == 'USENETID' then
			table.insert( new_list, {handler.label, usenet_id( v ) } );
		elseif k == 'ZBL' then
			table.insert( new_list, {handler.label, zbl( v ) } );
		else
			error( cfg.messages['unknown_manual_ID'] );
		end
	end
	
	local function comp( a, b )	-- used in following table.sort()
		return a[1]:lower() &lt; b[1]:lower();
	end
	
	table.sort( new_list, comp );
	for k, v in ipairs( new_list ) do
		new_list[k] = v[2];
	end
	
	return new_list;
end


--[[--------------------------&lt; E X T R A C T _ I D S &gt;------------------------------------------------------------

Populates ID table from arguments using configuration settings. Loops through cfg.id_handlers and searches args for
any of the parameters listed in each cfg.id_handlers['...'].parameters.  If found, adds the parameter and value to
the identifier list.  Emits redundant error message is more than one alias exists in args

]]

local function extract_ids( args )
	local id_list = {};															-- list of identifiers found in args
	for k, v in pairs( cfg.id_handlers ) do										-- k is uc identifier name as index to cfg.id_handlers; e.g. cfg.id_handlers['ISBN'], v is a table
		v = select_one( args, v.parameters, 'redundant_parameters' );			-- v.parameters is a table of aliases for k; here we pick one from args if present
		if is_set(v) then id_list[k] = v; end									-- if found in args, add identifier to our list
	end
	return id_list;
end


--[[--------------------------&lt; E X T R A C T _ I D _ A C C E S S _ L E V E L S &gt;--------------------------------------

Fetches custom id access levels from arguments using configuration settings.
Parameters which have a predefined access level (e.g. arxiv) do not use this
function as they are directly rendered as free without using an additional parameter.

]]

local function extract_id_access_levels( args, id_list )
	local id_accesses_list = {};
	for k, v in pairs( cfg.id_handlers ) do
		local access_param = v.custom_access;
		local k_lower = string.lower(k);
		if is_set(access_param) then
			local access_level = args[access_param];
			if is_set(access_level) then
				if not in_array (access_level:lower(), cfg.keywords['id-access']) then
					table.insert( z.message_tail, { set_error( 'invalid_param_val', {access_param, access_level}, true ) } );	
					access_level = nil;
				end
				if not is_set(id_list[k]) then
					table.insert( z.message_tail, { set_error( 'param_access_requires_param', {k_lower}, true ) } );
				end
				if is_set(access_level) then
					access_level = access_level:lower();
				end
				id_accesses_list[k] = access_level;
			end
		end
	end
	return id_accesses_list;
end


--[[--------------------------&lt; S E T _ S E L E C T E D _ M O D U L E S &gt;--------------------------------------

Sets local cfg table and imported functions table to same (live or sandbox) as that used by the other modules.

]]

local function set_selected_modules (cfg_table_ptr, utilities_page_ptr)
	cfg = cfg_table_ptr;

	is_set = utilities_page_ptr.is_set;											-- import functions from select Module:Citation/CS1/Utilities module
	in_array = utilities_page_ptr.in_array;
	set_error = utilities_page_ptr.set_error;
	select_one = utilities_page_ptr.select_one;
	add_maint_cat = utilities_page_ptr.add_maint_cat;
	substitute = utilities_page_ptr.substitute;
	make_wikilink = utilities_page_ptr.make_wikilink;

	z = utilities_page_ptr.z;													-- table of tables in Module:Citation/CS1/Utilities
end


return {
	build_id_list = build_id_list,
	extract_ids = extract_ids,
	extract_id_access_levels = extract_id_access_levels,
	is_embargoed = is_embargoed;
	set_selected_modules = set_selected_modules;
	}</text>
      <sha1>59mkyiqky2refhjposters742qef2zn</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Citation/CS1/Suggestions</title>
    <ns>828</ns>
    <id>27869792</id>
    <revision>
      <id>357861626</id>
      <timestamp>2016-07-17T06:24:11Z</timestamp>
      <contributor>
        <username>Jura1</username>
        <id>609373</id>
      </contributor>
      <comment>[[w:Module:Citation/CS1/Suggestions]]</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="9146">--Please insert new suggestions in alphabetical order
--The form is ['incorrect'] = 'correct',

suggestions = {
--	['acccessdate'] = 'access-date',
--	['accesdate'] = 'access-date',
--	['access date'] = 'access-date',
--	['accessate'] = 'access-date',
--	['accessdare'] = 'access-date',
--	['accessdatte'] = 'access-date',
--	['accessddate'] = 'access-date',
--	['accessdte'] = 'access-date',
--	['accessed'] = 'access-date',
--	['accessedate'] = 'access-date',
--	['accesssdate'] = 'access-date',
--	['accssdate'] = 'access-date',
--	['acessdate'] = 'access-date',
	['accessmonth'] = 'access-date', -- (no longer supported by us, but still by citation templates mirrored in foreign WPs; can be emulated using 'access-date')
	['accessyear'] = 'access-date', -- (no longer supported by us, but still by citation templates mirrored in foreign WPs; can be emulated using 'access-date')
	['address'] = 'location',
	['année'] = 'year', -- French
	['año'] = 'year',
	['año-original'] = 'orig-year',
	['añoacceso'] = 'access-date', -- Spanish, Italian
	['apellido'] = 'last', -- Spanish, Italian
	['archiv-datum'] = 'archive-date', -- German
	['archive date'] = 'archive-date',
	['archiv-url'] = 'archive-url', -- German
	['archive url'] = 'archive-url', -- Spanish, Italian
	['artist'] = 'others',
	['auflage'] = 'edition', -- German
	['auteur'] = 'author', -- French
	['auther'] = 'author',
--	['authorformat'] = 'name-list-format', -- remove after 2016-01-01
--	['author-format'] = 'name-list-format', -- remove after 2016-01-01
	['author link'] = 'author-link', -- Polish
	['author link2'] = 'author2-link', -- Polish
--	['autor'] = 'author', -- Spanish, Italian, Polish
	['autor'] = 'authors', -- German (singular and plural)
--	['autor2'] = 'author2', -- Spanish, Italian, Polish
--	['autor3'] = 'author3', -- Polish
	['autthor'] = 'author',
	['band'] = 'volume', -- German
--	['began'] = 'date', -- remove after 2016-01-01
	['chapter_title'] = 'chapter',
	['cita'] = 'quote', -- Spanish, Italian
	['coautores'] = 'coauthors', -- Spanish, Italian
	['consulté le'] = 'access-date', -- French
	['czasopismo'] = 'journal', -- Polish
	['data'] = 'date', -- Polish
	['data dostępu'] = 'access-date', -- Polish
	['datum'] = 'date', -- German
	['deadlink'] = 'dead-url',
	['distributor'] = 'publisher',
	['dnb'] = 'id', -- German (as 'id={{DNB-IDN|...}}') (not yet supported by us directly)
	['éditeur'] = 'editor', -- French
	['editon'] = 'edition',
	['editoin'] = 'edition',
--	['editorformat'] = 'name-list-format', -- remove after 2016-01-01
--	['editor-format'] = 'name-list-format', -- remove after 2016-01-01
--	['editorgiven'] = 'editor-given', -- remove after 2016-01-01
	['editorial'] = 'publisher',
--	['editorsurname'] = 'editor-surname', -- remove after 2016-01-01
	['en ligne le'] = 'archive-date', -- French
	['encyclopædia'] = 'encyclopedia',
--	['ended'] = 'date', -- remove after 2016-01-01
	['enlaceautor'] = 'author-link', -- Spanish, Italian
	['fecha'] = 'date', -- Spanish, Italian
	['fechaacceso'] = 'access-date', -- Spanish, Italian
	['fechaarchivo'] = 'archive-date', -- Spanish, Italian
	['filetype'] = 'format',
	['first 1'] = 'first1',
	['foramt'] = 'format',
	['formato'] = 'format', -- Spanish, Italian, Polish
	['frist'] = 'first',
	['herausgeber'] = 'editors', -- German (singular and plural)
	['idioma'] = 'language', -- Spanish, Italian
	['imię'] = 'first', -- Polish
	['isbnistformalfalsch'] = 'ignore-isbn-error', -- German
	['isnb'] = 'isbn',
	['jahr'] = 'year', -- German
	['kapitel'] = 'chapter', -- German
--	['kommentar'] = 'comment', -- German (not yet supported by us)
	['lang'] = 'language',
	['langauge'] = 'language',
	['langue'] = 'language', -- French
	['last 1'] = 'last1',
	['lieu'] = 'location', -- French
	['lire en ligne'] = 'url', -- French
	['lizenznummer'] = 'id', -- German (as 'id=License ...')
	['loaction'] = 'location',
	['locatoin'] = 'location',
	['lugar'] = 'location', -- Spanish
	['miejsce'] = 'location', -- Polish
	['miesiąc'] = 'date', -- Polish
	['mois'] = 'date', -- French
	['monat'] = 'date', -- German
--	['name'] = 'author', -- 'name' is often erroneously used for 'title' and 'work' as well, so no suggestion is better than a wrong suggestion
	['nazwisko'] = 'last', -- Polish
	['nespaper'] = 'newspaper',
	['newpaper'] = 'newspaper',
	['news'] = 'newspaper',
	['nom'] = 'last', -- French
	['nom1'] = 'last1', -- French
	['nombre'] = 'first', -- Spanish, Italian
	['nummer'] = 'number', -- German
	['obra'] = 'work', -- Spanish, Italian
	['odpowiedzialność'] = 'agency', -- Polish
	['offline'] = 'dead-url', -- German
	['online'] = 'url', -- German (not a direct replacement, but can be emulated)
	['opublikowany'] = 'agency', -- Polish
	['origdate'] = 'orig-year',
	['originaljahr'] = 'orig-year', -- German
	['originalort'] = 'location', -- German (if 'ort' is specified at the same time, the latter should be put in 'publication-place')
	['originalsprache'] = 'language', -- German
	['originaltitel'] = 'title', -- German (if 'originaltitel' is specified, any possible contents of 'title' should be put in 'trans-title')
	['ort'] = 'location', -- German
	['other'] = 'others',
	['oznaczenie'] = 'agency', -- Polish
	['pagees'] = 'pages',
	['página'] = 'page', -- Spanish, Italian
	['páginas'] = 'pages', -- Spanish, Italian
	['passage'] = 'pages', -- French
	['périodique'] = 'publisher', -- French
	['plublisher'] = 'publisher',
	['pmcid'] = 'pmc',
	['praca'] = 'work', -- Polish
	['prénom'] = 'first', -- French
	['prénom1'] = 'first1', -- French
	['ps'] = 'postscript',
	['pub'] = 'publisher',
--	['pubisher'] = 'publisher',
--	['publiser'] = 'publisher',
--	['publishers'] = 'publisher',
--	['publsher'] = 'publisher',
--	['publsiher'] = 'publisher',
	['pulbication-place'] = 'publication-place',
--	['pulbisher'] = 'publisher',
--	['pulisher'] = 'publisher',
	['reihe'] = 'series', -- German
	['retrieved'] = 'access-date',
	['rok'] = 'date', -- Polish
	['sammelwerk'] = 'work', -- German
	['seiten'] = 'pages', -- German
--	['separator'] = 'mode', -- remove after 2016-01-01
	['seria'] = 'series', -- Polish
	['série'] = 'work', -- French *RECHECK*
	['service'] = 'agency',
	['sitioweb'] = 'website', --Spanish
	['stron'] = 'page', -- Polish
	['strony'] = 'pages', -- Polish
	['spalten'] = 'at', -- German (not a direct replacement, but can be emulated)
	['sprache'] = 'language', -- German
	['suscripción'] = 'subscription', -- Spanish, Italian, Polish
	['tag'] = 'date', -- German
	['tile'] = 'title',
	['tite'] = 'title',
	['titel'] = 'title', -- German
	['titel-p'] = 'title', -- German ('postscript=none' should be added as well)
	['titelerg'] = 'contribution', -- German (not a direct replacement, but can be emulated)
	['titolo'] = 'title', -- Spanish, Italian
	['titre'] = 'title', -- French
	['títle'] = 'title',
	['título'] = 'title', -- Spanish, Italian
	['transchapter'] = 'trans-chapter',
	['translator'] = 'others',
	['transtitle'] = 'trans-title',
	['typ'] = 'author-mask', -- German (not a direct replacement, but the only valid argument 'typ=wl' can be emulated using 'author-mask')
	['tytuł'] = 'title', -- Polish
	['ubicación'] = 'location', -- Spanish, Italian
	['urlarchivo'] = 'archive-url', -- Spanish, Italian
	['urn'] = 'id', -- German (as 'id={{URN|...}}') (not yet supported by us directly)
	['übersetzer'] = 'translator', -- German (singular and plural)
	['verlag'] = 'publisher', -- German
	['vol'] = 'volume', 
	['volumen'] = 'volume', -- Spanish
	['werk'] = 'work', -- German
	['werkerg'] = 'contribution', -- German (not a direct replacement, but can be emulated)
	['wolumin'] = 'volume', -- Polish
	['wydanie'] = 'number', -- Polish
	['wydawca'] = 'publisher', -- French
	['zaprezentowany'] = 'publisher', -- French
	['zdb'] = 'id', -- German (as 'id={{ZDB|...}}') (not yet supported by us directly)
	['zitat'] = 'quote', -- German
	['zugriff'] = 'access-date', -- German
}


--[[--------------------------&lt; P A T T E R N S &gt;--------------------------------------------------------------

Here we use Lua patterns to make suggestions.  The form is ['pattern'] = 'correct',

Lua patterns are not regex though they are similar.  The escape character is '%', not '\'.  For more information about
lua patterns, see: Extension:Scribunto/Lua_reference_manual#Patterns

Patterns should probably always include the '^' and '$' anchor assertions to prevent a partial match from incorrectly
suggesting the wrong parameter name.  For instance, the pattern 'a[utho]+r' matches 'author' in the no-longer-supported
parameter |author-separator= so the code suggests '|author='; the same pattern also matches the no-longer-supported
parameter |separator= (returning 'ator') so again, the code suggests '|author='.

One capture is supported, typically the enumerator from an enumerated parameter (the '6' in |author6=, etc.)  The value from the
capture replaces $1 in the 'correct' value.

]]

local patterns = {
	['^ac+es+ ?d?a?t?e?$'] = 'access-date',
	['^a[utho]+r$'] = 'author',
	['^a[utho]+r(%d+)$'] = 'author$1', -- enumerated
	['^pu[blish]+ers?$'] = 'publisher',
	}

return {suggestions = suggestions, patterns=patterns};</text>
      <sha1>m9r4bd8z0xh79y2rny8loerdiwqxhqj</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Citation/CS1/Utilities</title>
    <ns>828</ns>
    <id>51354324</id>
    <revision>
      <id>647173861</id>
      <parentid>647173860</parentid>
      <timestamp>2018-03-10T10:00:59Z</timestamp>
      <contributor>
        <username>Mbch331</username>
        <id>69441</id>
      </contributor>
      <minor/>
      <comment>20 revisions imported from [[:en:Module:Citation/CS1/Utilities]]: https://www.wikidata.org/w/index.php?title=Wikidata:Administrators%27_noticeboard&amp;oldid=647164909#Request_to_import_template:Cite_Q_from_ENWP</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="13878">local u = {}

local z = {
	error_categories = {};														-- for categorizing citations that contain errors
	error_ids = {};
	message_tail = {};
	maintenance_cats = {};														-- for categorizing citations that aren't erroneous per se, but could use a little work
	properties_cats = {};														-- for categorizing citations based on certain properties, language of source for instance
};


--[[--------------------------&lt; F O R W A R D   D E C L A R A T I O N S &gt;--------------------------------------
]]

local cfg;																		-- table of tables imported from selected Module:Citation/CS1/Configuration


--[[--------------------------&lt; I S _ S E T &gt;------------------------------------------------------------------

Returns true if argument is set; false otherwise. Argument is 'set' when it exists (not nil) or when it is not an empty string.

]]

local function is_set( var )
	return not (var == nil or var == '');
end


--[[--------------------------&lt; I N _ A R R A Y &gt;--------------------------------------------------------------

Whether needle is in haystack

]]

local function in_array( needle, haystack )
	if needle == nil then
		return false;
	end
	for n,v in ipairs( haystack ) do
		if v == needle then
			return n;
		end
	end
	return false;
end


--[[--------------------------&lt; S U B S T I T U T E &gt;----------------------------------------------------------

Populates numbered arguments in a message string using an argument table.

]]

local function substitute( msg, args )
	return args and mw.message.newRawMessage( msg, args ):plain() or msg;
end


--[[--------------------------&lt; E R R O R _ C O M M E N T &gt;----------------------------------------------------

Wraps error messages with css markup according to the state of hidden.

]]

local function error_comment( content, hidden )
	return substitute( hidden and cfg.presentation['hidden-error'] or cfg.presentation['visible-error'], content );
end


--[=[-------------------------&lt; M A K E _ W I K I L I N K &gt;----------------------------------------------------

Makes a wikilink; when bot link and display text is provided, returns a wikilink in the form [[L|D]]; if only
link is provided, returns a wikilink in the form [[L]]; if neither are provided or link is omitted, returns an
empty string.

]=]

local function make_wikilink (link, display)
	if is_set (link) then
		if is_set (display) then
			return table.concat ({'[[', link, '|', display, ']]'});
		else
			return table.concat ({'[[', link, ']]'});
		end
	else
		return '';
	end
end


--[[--------------------------&lt; S E T _ E R R O R &gt;--------------------------------------------------------------

Sets an error condition and returns the appropriate error message.  The actual placement of the error message in the output is
the responsibility of the calling function.

]]

local function set_error( error_id, arguments, raw, prefix, suffix )
	local error_state = cfg.error_conditions[ error_id ];
	
	prefix = prefix or "";
	suffix = suffix or "";
	
	if error_state == nil then
		error( cfg.messages['undefined_error'] );								-- because missing error handler in Module:Citation/CS1/Configuration
	elseif is_set( error_state.category ) then
		table.insert( z.error_categories, error_state.category );
	end
	
	local message = substitute( error_state.message, arguments );

	message = table.concat (
		{
		message,
		' (',
		make_wikilink (
			table.concat (
				{
				cfg.messages['help page link'],
				'#',
				error_state.anchor
				}),
			cfg.messages['help page label']),
		')'
		});

--	message = table.concat ({message, ' (', substitute (cfg.presentation['wikilink'], 
--		{cfg.messages['help page link'] .. '#' .. error_state.anchor, cfg.messages['help page label']}), ')'});
--	message = message .. " ([[" .. cfg.messages['help page link'] .. 
--		"#" .. error_state.anchor .. "|" ..
--		cfg.messages['help page label'] .. "]])";
	
	z.error_ids[ error_id ] = true;
	if in_array( error_id, { 'bare_url_missing_title', 'trans_missing_title' } )
			and z.error_ids['citation_missing_title'] then
		return '', false;
	end
	
	message = table.concat({ prefix, message, suffix });
	
	if raw == true then
		return message, error_state.hidden;
	end		
		
	return error_comment( message, error_state.hidden );
end


--[[-------------------------&lt; I S _ A L I A S _ U S E D &gt;-----------------------------------------------------

This function is used by select_one() to determine if one of a list of alias parameters is in the argument list
provided by the template.

Input:
	args – pointer to the arguments table from calling template
	alias – one of the list of possible aliases in the aliases lists from Module:Citation/CS1/Configuration
	index – for enumerated parameters, identifies which one
	enumerated – true/false flag used choose how enumerated aliases are examined
	value – value associated with an alias that has previously been selected; nil if not yet selected
	selected – the alias that has previously been selected; nil if not yet selected
	error_list – list of aliases that are duplicates of the alias already selected

Returns:
	value – value associated with alias we selected or that was previously selected or nil if an alias not yet selected
	selected – the alias we selected or the alias that was previously selected or nil if an alias not yet selected

]]

local function is_alias_used (args, alias, index, enumerated, value, selected, error_list)
	if enumerated then															-- is this a test for an enumerated parameters?
		alias = alias:gsub ('#', index);										-- replace '#' with the value in index
	else
		alias = alias:gsub ('#', '');											-- remove '#' if it exists
	end

	if is_set(args[alias]) then													-- alias is in the template's argument list
		if value ~= nil and selected ~= alias then								-- if we have already selected one of the aliases
			local skip;
			for _, v in ipairs(error_list) do									-- spin through the error list to see if we've added this alias
				if v == alias then
					skip = true;
					break;														-- has been added so stop looking 
				end
			end
			if not skip then													-- has not been added so
				table.insert( error_list, alias );								-- add error alias to the error list
			end
		else
			value = args[alias];												-- not yet selected an alias, so select this one
			selected = alias;
		end
	end
	return value, selected;														-- return newly selected alias, or previously selected alias
end


--[[--------------------------&lt; A D D _ M A I N T _ C A T &gt;------------------------------------------------------

Adds a category to z.maintenance_cats using names from the configuration file with additional text if any.
To prevent duplication, the added_maint_cats table lists the categories by key that have been added to z.maintenance_cats.

]]

local added_maint_cats = {}														-- list of maintenance categories that have been added to z.maintenance_cats
local function add_maint_cat (key, arguments)
	if not added_maint_cats [key] then
		added_maint_cats [key] = true;											-- note that we've added this category
		table.insert( z.maintenance_cats, substitute (cfg.maint_cats [key], arguments));	-- make name then add to table
	end
end


--[[--------------------------&lt; S A F E _ F O R _ I T A L I C S &gt;----------------------------------------------

Protects a string that will be wrapped in wiki italic markup '' ... ''

Note: We cannot use &lt;i&gt; for italics, as the expected behavior for italics specified by ''...'' in the title is that
they will be inverted (i.e. unitalicized) in the resulting references.  In addition, &lt;i&gt; and '' tend to interact
poorly under Mediawiki's HTML tidy.

]]

local function safe_for_italics( str )
	if not is_set(str) then
		return str;
	else
		if str:sub(1,1) == "'" then str = "&lt;span&gt;&lt;/span&gt;" .. str; end
		if str:sub(-1,-1) == "'" then str = str .. "&lt;span&gt;&lt;/span&gt;"; end
		
		-- Remove newlines as they break italics.
		return str:gsub( '\n', ' ' );
	end
end


--[[--------------------------&lt; W R A P _ S T Y L E &gt;----------------------------------------------------------

Applies styling to various parameters.  Supplied string is wrapped using a message_list configuration taking one
argument; protects italic styled parameters.  Additional text taken from citation_config.presentation - the reason
this function is similar to but separate from wrap_msg().

]]

local function wrap_style (key, str)
	if not is_set( str ) then
		return "";
	elseif in_array( key, { 'italic-title', 'trans-italic-title' } ) then
		str = safe_for_italics( str );
	end

	return substitute( cfg.presentation[key], {str} );
end


--[[--------------------------&lt; S E L E C T _ O N E &gt;----------------------------------------------------------

Chooses one matching parameter from a list of parameters to consider.  The list of parameters to consider is just
names.  For parameters that may be enumerated, the position of the numerator in the parameter name is identified
by the '#' so |author-last1= and |author1-last= are represented as 'author-last#' and 'author#-last'.

Because enumerated parameter |&lt;param&gt;1= is an alias of |&lt;param&gt;= we must test for both possibilities.


Generates an error if more than one match is present.

]]

local function select_one( args, aliases_list, error_condition, index )
	local value = nil;															-- the value assigned to the selected parameter
	local selected = '';														-- the name of the parameter we have chosen
	local error_list = {};

	if index ~= nil then index = tostring(index); end

	for _, alias in ipairs( aliases_list ) do									-- for each alias in the aliases list
		if alias:match ('#') then												-- if this alias can be enumerated
			if '1' == index then												-- when index is 1 test for enumerated and non-enumerated aliases
				value, selected = is_alias_used (args, alias, index, false, value, selected, error_list);	-- first test for non-enumerated alias
			end
			value, selected = is_alias_used (args, alias, index, true, value, selected, error_list);		-- test for enumerated alias
		else
			value, selected = is_alias_used (args, alias, index, false, value, selected, error_list);		--test for non-enumerated alias
		end
	end

	if #error_list &gt; 0 and 'none' ~= error_condition then						-- for cases where this code is used outside of extract_names()
		local error_str = "";
		for _, k in ipairs( error_list ) do
			if error_str ~= "" then error_str = error_str .. cfg.messages['parameter-separator'] end
			error_str = error_str .. wrap_style ('parameter', k);
		end
		if #error_list &gt; 1 then
			error_str = error_str .. cfg.messages['parameter-final-separator'];
		else
			error_str = error_str .. cfg.messages['parameter-pair-separator'];
		end
		error_str = error_str .. wrap_style ('parameter', selected);
		table.insert( z.message_tail, { set_error( error_condition, {error_str}, true ) } );
	end
	
	return value, selected;
end


--[=[-------------------------&lt; R E M O V E _ W I K I _ L I N K &gt;----------------------------------------------

Gets the display text from a wikilink like [[A|B]] or [[B]] gives B

The str:gsub() returns either A|B froma [[A|B]] or B from [[B]] or B from B (no wikilink markup).

In l(), l:gsub() removes the link and pipe (if they exist); the second :gsub() trims white space from the label
if str was wrapped in wikilink markup.  Presumably, this is because without wikimarkup in str, there is no match
in the initial gsub, the replacement function l() doesn't get called.

]=]

local function remove_wiki_link (str)
	return (str:gsub( "%[%[([^%[%]]*)%]%]", function(l)
		return l:gsub( "^[^|]*|(.*)$", "%1" ):gsub("^%s*(.-)%s*$", "%1");
	end));
end


--[=[-------------------------&lt; I S _ W I K I L I N K &gt;--------------------------------------------------------

Determines if str is a wikilink, extracts, and returns the the wikilink type, link text, and display text parts.
If str is a complex wikilink ([[L|D]]):
	returns wl_type 2 and D and L from [[L|D]];
if str is a simple wikilink ([[D]])
	returns wl_type 1 and D from [[D]] and L as empty string;
if not a wikilink:
	returns wl_type 0, str as D, and L as empty string.

trims leading and trailing white space and pipes from L and D ([[L|]] and [[|D]] are accepted by MediaWiki and
treated like [[D]]; while [[|D|]] is not accepted by MediaWiki, here, we accept it and return D without the pipes).

]=]

local function is_wikilink (str)
	local D, L
	local wl_type = 2;															-- assume that str is a complex wikilink [[L|D]]

	L, D = str:match ('%[%[([^|]+)|([^%]]+)%]%]');								-- get L and D from [[L|D]] 

	if not is_set (D) then														-- if no separate link
		D = str:match ('%[%[([^%]]*)|*%]%]');									-- get D from [[D]]
		wl_type = 1; 
	end
	
	if not is_set (D) then														-- no wikilink markup
		D = str;																-- return the string as D
		wl_type = 0;															-- but say that it is not a wikilink
	end
	
	D = mw.text.trim (D, '%s|');												-- trim white space and pipe characters 
	L = L and mw.text.trim (L, '%s|');
	
	return wl_type, D, L or '';
end


--[[--------------------------&lt; S E T _ S E L E C T E D _ M O D U L E S &gt;--------------------------------------

Sets local cfg table to same (live or sandbox) as that used by the other modules.

]]

local function set_selected_modules (cfg_table_ptr)
	cfg = cfg_table_ptr;
	
end



return {																		-- return exported functions and tables
	is_set = is_set,
	in_array = in_array,
	substitute = substitute,
	error_comment = error_comment,
	set_error = set_error,
	select_one = select_one,
	add_maint_cat = add_maint_cat,
	wrap_style = wrap_style,
	safe_for_italics = safe_for_italics,
	remove_wiki_link = remove_wiki_link,
	is_wikilink = is_wikilink,
	make_wikilink = make_wikilink,
	set_selected_modules = set_selected_modules,
	z = z,
	}</text>
      <sha1>paqzmjiy0g42xcm0br82k5z9jczlnm6</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Citation/CS1/Whitelist</title>
    <ns>828</ns>
    <id>19187516</id>
    <revision>
      <id>647173885</id>
      <parentid>647173884</parentid>
      <timestamp>2018-03-10T10:00:59Z</timestamp>
      <contributor>
        <username>Mbch331</username>
        <id>69441</id>
      </contributor>
      <minor/>
      <comment>17 revisions imported from [[:en:Module:Citation/CS1/Whitelist]]: https://www.wikidata.org/w/index.php?title=Wikidata:Administrators%27_noticeboard&amp;oldid=647164909#Request_to_import_template:Cite_Q_from_ENWP</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="18946">
--[[--------------------------&lt; P A R A M E T E R S   N O T   S U P P O R T E D &gt;------------------------------

This is a list of parameters that once were but now are no longer supported:

	['albumlink'] = nil,			-- unique alias of titlelink used by old cite AV media notes
	['albumtype'] = nil,			-- controled inappropriate functionality in the old cite AV media notes
	['artist'] = nil,				-- unique alias of others used by old cite AV media notes
	['ARXIV'] = nil,				-- not an initialization
	['Author'] = nil,				-- non-standard capitalization
	['authorformat'] = nil,			-- primarily used to support Vancouver format which functionality now part of name-list-format
	['author-format'] = nil,		-- primarily used to support Vancouver format which functionality now part of name-list-format
	['author-name-separator'] = nil,-- primarily used to support Vancouver format which functionality now part of name-list-format
	['author-separator'] = nil,		-- primarily used to support Vancouver format which functionality now part of name-list-format
	['began'] = nil,				-- module handles date ranges; cite episode and cite series
	['BIBCODE'] = nil,				-- not an initialization
	['callsign'] = nil,				-- cite interview removed
	['call-sign'] = nil,			-- cite interview removed
	['chapterlink'] = nil,			-- if ever necessary to link to a chapter article, |chapter= can be wikilinked 
	['chapter-link'] = nil,			-- 
	['city'] = nil,					-- cite interview removed
	['coauthor'] = nil,				-- redundant to |authorn=; not made part of metadata
	['coauthors'] = nil,			-- redundant to |authorn=; not made part of metadata
	['cointerviewers'] = nil,		-- unique alias of others used by old cite interview
	['day'] = nil,					-- deprecated in {{citation/core}} and somehow undeprecated in Module:Citation/CS1 and now finally removed
	['director'] = nil,				-- unique alias of author used by old cite DVD-notes
	['doi_brokendate'] = nil,                  -- alias of doi-broken-date
	['doi_inactivedate'] = nil,                  -- alias of doi-inactive-date
	['DoiBroken'] = nil,			-- not used, non-standard captialization
	['Editor'] = nil,				-- non-standard capitalization
	['editorformat'] = nil,			-- primarily used to support Vancouver format which functionality now part of name-list-format
	['EditorSurname'] = nil,		-- non-standard capitalization
	['editor-format'] = nil,		-- primarily used to support Vancouver format which functionality now part of name-list-format
	['EditorGiven'] = nil,			-- non-standard capitalization
	['editor-name-separator'] = nil,-- primarily used to support Vancouver format which functionality now part of name-list-format
	['editor-separator'] = nil,		-- primarily used to support Vancouver format which functionality now part of name-list-format
	['Embargo'] = nil,				-- not used, non-standard capitalization
	['ended'] = nil,				-- module handles date ranges; cite episode and cite series
	['month'] = nil,				-- functionality supported by |date=
	['name-separator'] = nil,		-- primarily used to support Vancouver format which functionality now part of name-list-format
	['notestitle'] = nil,			-- unique alias of chapter used by old cite AV media notes
	['PPrefix'] = nil,				-- non-standard capitalization
	['PPPrefix'] = nil,				-- not used, non-standard capitalization
	['pp-prefix'] = nil,			-- not used, not documented
	['p-prefix'] = nil,				-- not used, not documented
	['program'] = nil,				-- cite interview removed
	['publisherid'] = nil,			-- unique alias of id used by old cite AV media notes and old cite DVD-notes
	['Ref'] = nil,					-- non-standard capitalization
	['separator'] = nil,			-- this functionality now provided by |mode=
	['template doc demo'] = nil,            -- alias of template doc demo
	['titleyear'] = nil,			-- unique alias of origyear used by old cite DVD-notes
	['trans_chapter'] = nil,                -- alias of trans-chapter
	['trans_title'] = nil,                  -- alias of trans-title

	['Author#'] = nil,				-- non-standard capitalization
	['authors#'] = nil,				-- no need for multiple lists of author names
	['Editor#'] = nil,				-- non-standard capitalization
	['editors#'] = nil,				-- no need for multiple lists of editor names
	['EditorGiven#'] = nil,			-- non-standard capitalization
	['EditorSurname#'] = nil,		-- non-standard capitalization

]]

--[[--------------------------&lt; S U P P O R T E D   P A R A M E T E R S &gt;--------------------------------------

Because a steady-state signal conveys no useful information, whitelist.basic_arguments[] list items can have three values:
	true - these parameters are valid and supported parameters
	false - these parameters are deprecated but still supported
	nil - these parameters are no longer supported (when setting a parameter to nil, leave a comment stating the reasons for invalidating the parameter)
	
]]

local whitelist = {}

local basic_arguments = {
	['accessdate'] = true,
	['access-date'] = true,
	['agency'] = true,
	['airdate'] = true,
	['air-date'] = true,
	['archivedate'] = true,
	['archive-date'] = true,
	['archive-format'] = true,
	['archiveurl'] = true,
	['archive-url'] = true,
	['article'] = true,
	['arxiv'] = true,
	['asin'] = true,
	['ASIN'] = true,
	['asin-tld'] = true,
	['ASIN-TLD'] = true,
	['at'] = true,
	['author'] = true,
	['author-first'] = true,
	['author-last'] = true,
	['authorlink'] = true,
	['author-link'] = true,
	['authormask'] = true,
	['author-mask'] = true,
	['authors'] = true,
	['bibcode'] = true,
	['bibcode-access'] = true,
	['biorxiv'] = true,
	['booktitle'] = true,
	['book-title'] = true,
	['cartography'] = true,
	['chapter'] = true,
	['chapter-format'] = true,
	['chapterurl'] = true,
	['chapter-url'] = true,
	['chapter-url-access'] = true,
	['citeseerx'] = true,
	['class'] = true,				-- cite arxiv and arxiv identifiers
	['collaboration'] = true,
	['conference'] = true,
	['conference-format'] = true,
	['conferenceurl'] = true,
	['conference-url'] = true,
	['contribution'] = true,
	['contribution-format'] = true,
	['contributionurl'] = true,
	['contribution-url'] = true,
	['contributor'] = true,
	['contributor-first'] = true,
	['contributor-last'] = true,
	['contributor-given'] = true,
	['contributor-surname'] = true,
	['contributor-link'] = true,
	['contributor-mask'] = true,
	['credits'] = true,				-- cite episode, cite serial
	['date'] = true,
	['deadurl'] = true,
	['dead-url'] = true,
	['degree'] = true,
	['department'] = true,
	['df'] = true,
	['dictionary'] = true,
	['displayauthors'] = true,
	['display-authors'] = true,
	['displayeditors'] = true,
	['display-editors'] = true,
	['docket'] = true,
	['doi'] = true,
	['DOI'] = true,
	['doi-access'] = true,
	['doi-broken'] = true,
	['doi-broken-date'] = true,
	['doi-inactive-date'] = true,
	['edition'] = true,
	['editor'] = true,
	['editor-first'] = true,
	['editor-given'] = true,
	['editor-last'] = true,
	['editorlink'] = true,
	['editor-link'] = true,
	['editormask'] = true,
	['editor-mask'] = true,
	['editors'] = true,
	['editor-surname'] = true,
	['eissn'] = true,
	['EISSN'] = true,
	['embargo'] = true,
	['encyclopaedia'] = true,
	['encyclopedia'] = true,
	['entry'] = true,
	['episode'] = true,															-- cite serial only TODO: make available to cite episode?
	['episodelink'] = true,														-- cite episode and cite serial
	['episode-link'] = true,													-- cite episode and cite serial
	['eprint'] = true,															-- cite arxiv and arxiv identifiers
	['event'] = true,
	['event-format'] = true,
	['eventurl'] = true,
	['event-url'] = true,
	['first'] = true,
	['format'] = true,
	['given'] = true,
	['hdl'] = true,
	['HDL'] = true,
	['hdl-access'] = true,
	['host'] = true,
	['id'] = true,
	['ID'] = true,
	['ignoreisbnerror'] = true,
	['ignore-isbn-error'] = true,
	['in'] = true,
	['inset'] = true,
	['institution'] = true,
	['interviewer'] = true,
	['interviewer-first'] = true,
	['interviewer-last'] = true,
	['interviewerlink'] = true,
	['interviewer-link'] = true,
	['interviewermask'] = true,
	['interviewer-mask'] = true,
	['interviewers'] = true,
	['isbn'] = true,
	['ISBN'] = true,
	['isbn13'] = true,
	['ISBN13'] = true,
	['ismn'] = true,
	['ISMN'] = true,
	['issn'] = true,
	['ISSN'] = true,
	['issue'] = true,
	['jfm'] = true,
	['JFM'] = true,
	['journal'] = true,
	['jstor'] = true,
	['JSTOR'] = true,
	['jstor-access'] = true,
	['language'] = true,
	['last'] = true,
	['lastauthoramp'] = true,
	['last-author-amp'] = true,
	['laydate'] = true,
	['lay-date'] = true,
	['laysource'] = true,
	['lay-source'] = true,
	['laysummary'] = true,
	['lay-summary'] = true,
	['lay-format'] = true,
	['layurl'] = true,
	['lay-url'] = true,
	['lccn'] = true,
	['LCCN'] = true,
	['location'] = true,
	['magazine'] = true,
	['mailinglist'] = true,				-- cite mailing list only
	['mailing-list'] = true,			-- cite mailing list only
	['map'] = true,						-- cite map only
	['map-format'] = true,				-- cite map only
	['mapurl'] = true,					-- cite map only
	['map-url'] = true,					-- cite map only
	['medium'] = true,
	['message-id'] = true,			-- cite newsgroup
	['minutes'] = true,
	['mode'] = true,
	['mr'] = true,
	['MR'] = true,
	['name-list-format'] = true,
	['network'] = true,
	['newsgroup'] = true,
	['newspaper'] = true,
	['nocat'] = true,
	['no-cat'] = true,
	['nopp'] = true,
	['no-pp'] = true,
	['notracking'] = true,
	['no-tracking'] = true,
	['number'] = true,
	['oclc'] = true,
	['OCLC'] = true,
	['ol'] = true,
	['OL'] = true,
	['ol-access'] = true,
	['origyear'] = true,
	['orig-year'] = true,
	['osti'] = true,
	['OSTI'] = true,
	['osti-access'] = true,
	['others'] = true,
	['p'] = true,
	['page'] = true,
	['pages'] = true,
	['people'] = true,
	['periodical'] = true,
	['place'] = true,
	['pmc'] = true,
	['PMC'] = true,
	['pmid'] = true,
	['PMID'] = true,
	['postscript'] = true,
	['pp'] = true,
	['publicationdate'] = true,
	['publication-date'] = true,
	['publicationplace'] = true,
	['publication-place'] = true,
	['publisher'] = true,
	['quotation'] = true,
	['quote'] = true,
	['ref'] = true,
	['registration'] = true,
	['rfc'] = true,
	['RFC'] = true,
	['scale'] = true,
	['script-chapter'] = true,
	['script-title'] = true,
	['season'] = true,
	['section'] = true,
	['section-format'] = true,
	['sections'] = true,					-- cite map only
	['sectionurl'] = true,
	['section-url'] = true,
	['series'] = true,
	['serieslink'] = true,
	['series-link'] = true,
	['seriesno'] = true,
	['series-no'] = true,
	['seriesnumber'] = true,
	['series-number'] = true,
	['series-separator'] = true,
	['sheet'] = true,															-- cite map only
	['sheets'] = true,															-- cite map only
	['ssrn'] = true,
	['SSRN'] = true,
	['station'] = true,
	['subject'] = true,
	['subjectlink'] = true,
	['subject-link'] = true,
	['subscription'] = true,
	['surname'] = true,
	['template-doc-demo'] = true,
	['time'] = true,
	['timecaption'] = true,
	['time-caption'] = true,
	['title'] = true,
	['titlelink'] = true,
	['title-link'] = true,
	['trans-chapter'] = true,
	['trans-map'] = true,
	['transcript'] = true,
	['transcript-format'] = true,
	['transcripturl'] = true,
	['transcript-url'] = true,
	['trans-title'] = true,
	['translator'] = true,
	['translator-first'] = true,
	['translator-last'] = true,
	['translator-given'] = true,
	['translator-surname'] = true,
	['translator-link'] = true,
	['translator-mask'] = true,
	['type'] = true,
	['url'] = true,
	['URL'] = true,
	['url-access'] = true,
	['vauthors'] = true,
	['veditors'] = true,
	['version'] = true,
	['via'] = true,
	['volume'] = true,
	['website'] = true,
	['work'] = true,
	['year'] = true,
	['zbl'] = true,
	['ZBL'] = true,
}

local numbered_arguments = {
	['author#'] = true,
	['author-first#'] = true,
	['author#-first'] = true,
	['author-last#'] = true,
	['author#-last'] = true,
	['author-link#'] = true,
	['author#link'] = true,
	['author#-link'] = true,
	['authorlink#'] = true,
	['author-mask#'] = true,
	['author#mask'] = true,
	['author#-mask'] = true,
	['authormask#'] = true,
	['contributor#'] = true,
	['contributor-first#'] = true,
	['contributor#-first'] = true,
	['contributor-last#'] = true,
	['contributor#-last'] = true,
	['contributor-given#'] = true,
	['contributor#-given'] = true,
	['contributor-surname#'] = true,
	['contributor#-surname'] = true,
	['contributor-link#'] = true,
	['contributor#-link'] = true,
	['contributor-mask#'] = true,
	['contributor#-mask'] = true,
	['editor#'] = true,
	['editor-first#'] = true,
	['editor#-first'] = true,
	['editor#-given'] = true,
	['editor-given#'] = true,
	['editor-last#'] = true,
	['editor#-last'] = true,
	['editor-link#'] = true,
	['editor#link'] = true,
	['editor#-link'] = true,
	['editorlink#'] = true,
	['editor-mask#'] = true,
	['editor#mask'] = true,
	['editor#-mask'] = true,
	['editormask#'] = true,
	['editor#-surname'] = true,
	['editor-surname#'] = true,
	['first#'] = true,
	['given#'] = true,
	['interviewer#'] = true,
	['interviewer-first#'] = true,
	['interviewer#-first'] = true,
	['interviewer-last#'] = true,
	['interviewer#-last'] = true,
	['interviewer-link#'] = true,
	['interviewer#-link'] = true,
	['interviewer-mask#'] = true,
	['interviewer#-mask'] = true,
	['last#'] = true,
	['subject#'] = true,
	['subject-link#'] = true,
	['subject#link'] = true,
	['subject#-link'] = true,
	['subjectlink#'] = true,
	['surname#'] = true,
	['translator#'] = true,
	['translator-first#'] = true,
	['translator#-first'] = true,
	['translator-last#'] = true,
	['translator#-last'] = true,
	['translator-given#'] = true,
	['translator#-given'] = true,
	['translator-surname#'] = true,
	['translator#-surname'] = true,
	['translator-link#'] = true,
	['translator#-link'] = true,
	['translator-mask#'] = true,
	['translator#-mask'] = true,
}

--[[--------------------------&lt; C I T E   A R X I V   S U P P O R T E D   P A R A M E T E R S &gt;----------------

This is an experiment that attempts to use validate() and a limited list of valid parameters to validate the
parameters provided in a cite arxiv template.  This method might be expanded to other templates being considered.

Because a steady-state signal conveys no useful information, whitelist.basic_arguments[] list items can have three values:
	true - these parameters are valid and supported parameters
	false - these parameters are deprecated but still supported
	nil - these parameters are no longer supported (when setting a parameter to nil, leave a comment stating the reasons for invalidating the parameter)
	
]]

--[[
This is a list of parameters that once were but now are no longer supported:
	['ARXIV'] = nil,				-- not an initialization
	['version'] = nil,				-- this is the cite arxiv parameter; |version= still supported by other cs1|2 templates

]]

local arxiv_basic_arguments = {
	['arxiv'] = true,
	['class'] = true,															-- cite arxiv and arxiv identifiers
	['eprint'] = true,															-- cite arxiv and arxiv identifiers
}


--[[--------------------------&lt; C I T E   B I O R X I V   S U P P O R T E D   P A R A M E T E R S &gt;------------

This is an experiment that attempts to use validate() and a limited list of valid parameters to validate the
parameters provided in a cite biorxiv template.  This method might be expanded to other templates being considered.

Because a steady-state signal conveys no useful information, whitelist.basic_arguments[] list items can have three values:
	true - these parameters are valid and supported parameters
	false - these parameters are deprecated but still supported
	nil - these parameters are no longer supported (when setting a parameter to nil, leave a comment stating the reasons for invalidating the parameter)
	
]]

local biorxiv_basic_arguments = {
	['biorxiv'] = true,
}


--[[--------------------------&lt; C I T E   C I T E S E E R X   S U P P O R T E D   P A R A M E T E R S &gt;--------

This is an experiment that attempts to use validate() and a limited list of valid parameters to validate the
parameters provided in a cite citeseerx template.  This method might be expanded to other templates being considered.

Because a steady-state signal conveys no useful information, whitelist.basic_arguments[] list items can have three values:
	true - these parameters are valid and supported parameters
	false - these parameters are deprecated but still supported
	nil - these parameters are no longer supported (when setting a parameter to nil, leave a comment stating the reasons for invalidating the parameter)
	
]]

local citeseerx_basic_arguments = {
	['citeseerx'] = true,
}


--[[--------------------------&lt; L I M I T E D   S U P P O R T E D   P A R A M E T E R S &gt;----------------------

This is an experiment that attempts to use validate() and a limited list of valid parameters to validate the
parameters provided in a cite arxiv, cite biorxiv, or cite citeseerx templates.  These parameters are common to
all three templates

Because a steady-state signal conveys no useful information, whitelist.basic_arguments[] list items can have three values:
	true - these parameters are valid and supported parameters
	false - these parameters are deprecated but still supported
	nil - these parameters are no longer supported (when setting a parameter to nil, leave a comment stating the reasons for invalidating the parameter)
	
]]

local limited_basic_arguments = {
	['at'] = true,
	['author'] = true,
	['author-first'] = true,
	['author-last'] = true,
	['authorlink'] = true,
	['author-link'] = true,
	['authormask'] = true,
	['author-mask'] = true,
	['authors'] = true,
	['collaboration'] = true,
	['date'] = true,
	['df'] = true,
	['display-authors'] = true,
	['first'] = true,
	['given'] = true,
	['language'] = true,
	['last'] = true,
	['lastauthoramp'] = true,
	['last-author-amp'] = true,
	['mode'] = true,
	['name-list-format'] = true,
	['nocat'] = true,
	['no-cat'] = true,
	['notracking'] = true,
	['no-tracking'] = true,
	['p'] = true,
	['page'] = true,
	['pages'] = true,
	['postscript'] = true,
	['pp'] = true,
	['quotation'] = true,
	['quote'] = true,
	['ref'] = true,
	['surname'] = true,
	['template-doc-demo'] = true,
	['title'] = true,
	['url'] = true,
	['URL'] = true,
	['vauthors'] = true,
	['year'] = true,
}
local limited_numbered_arguments = {
	['author#'] = true,
	['author-first#'] = true,
	['author#-first'] = true,
	['author-last#'] = true,
	['author#-last'] = true,
	['author-link#'] = true,
	['author#link'] = true,
	['author#-link'] = true,
	['authorlink#'] = true,
	['author-mask#'] = true,
	['author#mask'] = true,
	['author#-mask'] = true,
	['authormask#'] = true,
	['first#'] = true,
	['given#'] = true,
	['last#'] = true,
	['surname#'] = true,
}

return {
	basic_arguments = basic_arguments,
	numbered_arguments = numbered_arguments,
	limited_basic_arguments = limited_basic_arguments,
	limited_numbered_arguments = limited_numbered_arguments,
	arxiv_basic_arguments = arxiv_basic_arguments,
	biorxiv_basic_arguments = biorxiv_basic_arguments,
	citeseerx_basic_arguments = citeseerx_basic_arguments
};</text>
      <sha1>9x9mjj45vb802c1t6f99o8wlxbrfzt2</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Message box</title>
    <ns>828</ns>
    <id>16757102</id>
    <revision>
      <id>967814075</id>
      <parentid>647174178</parentid>
      <timestamp>2019-06-23T23:05:26Z</timestamp>
      <contributor>
        <username>Tacsipacsi</username>
        <id>33956</id>
      </contributor>
      <comment>load template styles from [[Module:Message box/styles.css|subpage]], as they were recently removed from Common.css, breaking many message boxes on Wikidata</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="16924">-- This is a meta-module for producing message box templates, including
-- {{mbox}}, {{ambox}}, {{imbox}}, {{tmbox}}, {{ombox}}, {{cmbox}} and {{fmbox}}.

-- Load necessary modules.
require('Module:No globals')
local getArgs
local categoryHandler = require('Module:Category handler')._main
local yesno = require('Module:Yesno')

-- Get a language object for formatDate and ucfirst.
local lang = mw.language.getContentLanguage()

-- Define constants
local CONFIG_MODULE = 'Module:Message box/configuration'

--------------------------------------------------------------------------------
-- Helper functions
--------------------------------------------------------------------------------

local function getTitleObject(...)
	-- Get the title object, passing the function through pcall
	-- in case we are over the expensive function count limit.
	local success, title = pcall(mw.title.new, ...)
	if success then
		return title
	end
end

local function union(t1, t2)
	-- Returns the union of two arrays.
	local vals = {}
	for i, v in ipairs(t1) do
		vals[v] = true
	end
	for i, v in ipairs(t2) do
		vals[v] = true
	end
	local ret = {}
	for k in pairs(vals) do
		table.insert(ret, k)
	end
	table.sort(ret)
	return ret
end

local function getArgNums(args, prefix)
	local nums = {}
	for k, v in pairs(args) do
		local num = mw.ustring.match(tostring(k), '^' .. prefix .. '([1-9]%d*)$')
		if num then
			table.insert(nums, tonumber(num))
		end
	end
	table.sort(nums)
	return nums
end

--------------------------------------------------------------------------------
-- Box class definition
--------------------------------------------------------------------------------

local MessageBox = {}
MessageBox.__index = MessageBox

function MessageBox.new(boxType, args, cfg)
	args = args or {}
	local obj = {}

	-- Set the title object and the namespace.
	obj.title = getTitleObject(args.page) or mw.title.getCurrentTitle()

	-- Set the config for our box type.
	obj.cfg = cfg[boxType]
	if not obj.cfg then
		local ns = obj.title.namespace
		-- boxType is "mbox" or invalid input
		if ns == 0 then
			obj.cfg = cfg.ambox -- main namespace
		elseif ns == 6 then
			obj.cfg = cfg.imbox -- file namespace
		elseif ns == 14 then
			obj.cfg = cfg.cmbox -- category namespace
		else
			local nsTable = mw.site.namespaces[ns]
			if nsTable and nsTable.isTalk then
				obj.cfg = cfg.tmbox -- any talk namespace
			else
				obj.cfg = cfg.ombox -- other namespaces or invalid input
			end
		end
	end

	-- Set the arguments, and remove all blank arguments except for the ones
	-- listed in cfg.allowBlankParams.
	do
		local newArgs = {}
		for k, v in pairs(args) do
			if v ~= '' then
				newArgs[k] = v
			end
		end
		for i, param in ipairs(obj.cfg.allowBlankParams or {}) do
			newArgs[param] = args[param]
		end
		obj.args = newArgs
	end

	-- Define internal data structure.
	obj.categories = {}
	obj.classes = {}

	return setmetatable(obj, MessageBox)
end

function MessageBox:addCat(ns, cat, sort)
	if not cat then
		return nil
	end
	if sort then
		cat = string.format('[[Category:%s|%s]]', cat, sort)
	else
		cat = string.format('[[Category:%s]]', cat)
	end
	self.categories[ns] = self.categories[ns] or {}
	table.insert(self.categories[ns], cat)
end

function MessageBox:addClass(class)
	if not class then
		return nil
	end
	table.insert(self.classes, class)
end

function MessageBox:setParameters()
	local args = self.args
	local cfg = self.cfg

	-- Get type data.
	self.type = args.type
	local typeData = cfg.types[self.type]
	self.invalidTypeError = cfg.showInvalidTypeError
		and self.type
		and not typeData
	typeData = typeData or cfg.types[cfg.default]
	self.typeClass = typeData.class
	self.typeImage = typeData.image

	-- Find if the box has been wrongly substituted.
	self.isSubstituted = cfg.substCheck and args.subst == 'SUBST'

	-- Find whether we are using a small message box.
	self.isSmall = cfg.allowSmall and (
		cfg.smallParam and args.small == cfg.smallParam
		or not cfg.smallParam and yesno(args.small)
	)

	-- Add attributes, classes and styles.
	self.id = args.id
	if yesno(args.plainlinks) ~= false then
		self:addClass('plainlinks')
	end
	for _, class in ipairs(cfg.classes or {}) do
		self:addClass(class)
	end
	if self.isSmall then
		self:addClass(cfg.smallClass or 'mbox-small')
	end
	self:addClass(self.typeClass)
	self:addClass(args.class)
	self.style = args.style
	self.attrs = args.attrs

	-- Set text style.
	self.textstyle = args.textstyle

	-- Find if we are on the template page or not. This functionality is only
	-- used if useCollapsibleTextFields is set, or if both cfg.templateCategory
	-- and cfg.templateCategoryRequireName are set.
	self.useCollapsibleTextFields = cfg.useCollapsibleTextFields
	if self.useCollapsibleTextFields
		or cfg.templateCategory
		and cfg.templateCategoryRequireName
	then
		self.name = args.name
		if self.name then
			local templateName = mw.ustring.match(
				self.name,
				'^[tT][eE][mM][pP][lL][aA][tT][eE][%s_]*:[%s_]*(.*)$'
			) or self.name
			templateName = 'Template:' .. templateName
			self.templateTitle = getTitleObject(templateName)
		end
		self.isTemplatePage = self.templateTitle
			and mw.title.equals(self.title, self.templateTitle)
	end

	-- Process data for collapsible text fields. At the moment these are only
	-- used in {{ambox}}.
	if self.useCollapsibleTextFields then
		-- Get the self.issue value.
		if self.isSmall and args.smalltext then
			self.issue = args.smalltext
		else
			local sect
			if args.sect == '' then
				sect = 'This ' .. (cfg.sectionDefault or 'page')
			elseif type(args.sect) == 'string' then
				sect = 'This ' .. args.sect
			end
			local issue = args.issue
			issue = type(issue) == 'string' and issue ~= '' and issue or nil
			local text = args.text
			text = type(text) == 'string' and text or nil
			local issues = {}
			table.insert(issues, sect)
			table.insert(issues, issue)
			table.insert(issues, text)
			self.issue = table.concat(issues, ' ')
		end

		-- Get the self.talk value.
		local talk = args.talk
		-- Show talk links on the template page or template subpages if the talk
		-- parameter is blank.
		if talk == ''
			and self.templateTitle
			and (
				mw.title.equals(self.templateTitle, self.title)
				or self.title:isSubpageOf(self.templateTitle)
			)
		then
			talk = '#'
		elseif talk == '' then
			talk = nil
		end
		if talk then
			-- If the talk value is a talk page, make a link to that page. Else
			-- assume that it's a section heading, and make a link to the talk
			-- page of the current page with that section heading.
			local talkTitle = getTitleObject(talk)
			local talkArgIsTalkPage = true
			if not talkTitle or not talkTitle.isTalkPage then
				talkArgIsTalkPage = false
				talkTitle = getTitleObject(
					self.title.text,
					mw.site.namespaces[self.title.namespace].talk.id
				)
			end
			if talkTitle and talkTitle.exists then
				local talkText = 'Relevant discussion may be found on'
				if talkArgIsTalkPage then
					talkText = string.format(
						'%s [[%s|%s]].',
						talkText,
						talk,
						talkTitle.prefixedText
					)
				else
					talkText = string.format(
						'%s the [[%s#%s|talk page]].',
						talkText,
						talkTitle.prefixedText,
						talk
					)
				end
				self.talk = talkText
			end
		end

		-- Get other values.
		self.fix = args.fix ~= '' and args.fix or nil
		local date
		if args.date and args.date ~= '' then
			date = args.date
		elseif args.date == '' and self.isTemplatePage then
			date = lang:formatDate('F Y')
		end
		if date then
			self.date = string.format(" &lt;small&gt;''(%s)''&lt;/small&gt;", date)
		end
		self.info = args.info
		if yesno(args.removalnotice) then
			self.removalNotice = cfg.removalNotice
		end
	end

	-- Set the non-collapsible text field. At the moment this is used by all box
	-- types other than ambox, and also by ambox when small=yes.
	if self.isSmall then
		self.text = args.smalltext or args.text
	else
		self.text = args.text
	end

	-- Set the below row.
	self.below = cfg.below and args.below

	-- General image settings.
	self.imageCellDiv = not self.isSmall and cfg.imageCellDiv
	self.imageEmptyCell = cfg.imageEmptyCell
	if cfg.imageEmptyCellStyle then
		self.imageEmptyCellStyle = 'border:none;padding:0px;width:1px'
	end

	-- Left image settings.
	local imageLeft = self.isSmall and args.smallimage or args.image
	if cfg.imageCheckBlank and imageLeft ~= 'blank' and imageLeft ~= 'none'
		or not cfg.imageCheckBlank and imageLeft ~= 'none'
	then
		self.imageLeft = imageLeft
		if not imageLeft then
			local imageSize = self.isSmall
				and (cfg.imageSmallSize or '30x30px')
				or '40x40px'
			self.imageLeft = string.format('[[File:%s|%s|link=|alt=]]', self.typeImage
				or 'Imbox notice.png', imageSize)
		end
	end

	-- Right image settings.
	local imageRight = self.isSmall and args.smallimageright or args.imageright
	if not (cfg.imageRightNone and imageRight == 'none') then
		self.imageRight = imageRight
	end
end

function MessageBox:setMainspaceCategories()
	local args = self.args
	local cfg = self.cfg

	if not cfg.allowMainspaceCategories then
		return nil
	end

	local nums = {}
	for _, prefix in ipairs{'cat', 'category', 'all'} do
		args[prefix .. '1'] = args[prefix]
		nums = union(nums, getArgNums(args, prefix))
	end

	-- The following is roughly equivalent to the old {{Ambox/category}}.
	local date = args.date
	date = type(date) == 'string' and date
	local preposition = 'from'
	for _, num in ipairs(nums) do
		local mainCat = args['cat' .. tostring(num)]
			or args['category' .. tostring(num)]
		local allCat = args['all' .. tostring(num)]
		mainCat = type(mainCat) == 'string' and mainCat
		allCat = type(allCat) == 'string' and allCat
		if mainCat and date and date ~= '' then
			local catTitle = string.format('%s %s %s', mainCat, preposition, date)
			self:addCat(0, catTitle)
			catTitle = getTitleObject('Category:' .. catTitle)
			if not catTitle or not catTitle.exists then
				self:addCat(0, 'Articles with invalid date parameter in template')
			end
		elseif mainCat and (not date or date == '') then
			self:addCat(0, mainCat)
		end
		if allCat then
			self:addCat(0, allCat)
		end
	end
end

function MessageBox:setTemplateCategories()
	local args = self.args
	local cfg = self.cfg

	-- Add template categories.
	if cfg.templateCategory then
		if cfg.templateCategoryRequireName then
			if self.isTemplatePage then
				self:addCat(10, cfg.templateCategory)
			end
		elseif not self.title.isSubpage then
			self:addCat(10, cfg.templateCategory)
		end
	end

	-- Add template error categories.
	if cfg.templateErrorCategory then
		local templateErrorCategory = cfg.templateErrorCategory
		local templateCat, templateSort
		if not self.name and not self.title.isSubpage then
			templateCat = templateErrorCategory
		elseif self.isTemplatePage then
			local paramsToCheck = cfg.templateErrorParamsToCheck or {}
			local count = 0
			for i, param in ipairs(paramsToCheck) do
				if not args[param] then
					count = count + 1
				end
			end
			if count &gt; 0 then
				templateCat = templateErrorCategory
				templateSort = tostring(count)
			end
			if self.categoryNums and #self.categoryNums &gt; 0 then
				templateCat = templateErrorCategory
				templateSort = 'C'
			end
		end
		self:addCat(10, templateCat, templateSort)
	end
end

function MessageBox:setAllNamespaceCategories()
	-- Set categories for all namespaces.
	if self.invalidTypeError then
		local allSort = (self.title.namespace == 0 and 'Main:' or '') .. self.title.prefixedText
		self:addCat('all', 'Wikipedia message box parameter needs fixing', allSort)
	end
	if self.isSubstituted then
		self:addCat('all', 'Pages with incorrectly substituted templates')
	end
end

function MessageBox:setCategories()
	if self.title.namespace == 0 then
		self:setMainspaceCategories()
	elseif self.title.namespace == 10 then
		self:setTemplateCategories()
	end
	self:setAllNamespaceCategories()
end

function MessageBox:renderCategories()
	-- Convert category tables to strings and pass them through
	-- [[Module:Category handler]].
	return categoryHandler{
		main = table.concat(self.categories[0] or {}),
		template = table.concat(self.categories[10] or {}),
		all = table.concat(self.categories.all or {}),
		nocat = self.args.nocat,
		page = self.args.page
	}
end

function MessageBox:export()
	local root = mw.html.create()

	-- Add the subst check error.
	if self.isSubstituted and self.name then
		root:tag('b')
			:addClass('error')
			:wikitext(string.format(
				'Template &lt;code&gt;%s[[Template:%s|%s]]%s&lt;/code&gt; has been incorrectly substituted.',
				mw.text.nowiki('{{'), self.name, self.name, mw.text.nowiki('}}')
			))
	end
	
	root:wikitext(mw.getCurrentFrame():extensionTag('templatestyles', '', { src = 'Module:Message box/styles.css' }))

	-- Create the box table.
	local boxTable = root:tag('table')
	boxTable:attr('id', self.id or nil)
	for i, class in ipairs(self.classes or {}) do
		boxTable:addClass(class or nil)
	end
	boxTable
		:cssText(self.style or nil)
		:attr('role', 'presentation')

	if self.attrs then
		boxTable:attr(self.attrs)
	end

	-- Add the left-hand image.
	local row = boxTable:tag('tr')
	if self.imageLeft then
		local imageLeftCell = row:tag('td'):addClass('mbox-image')
		if self.imageCellDiv then
			-- If we are using a div, redefine imageLeftCell so that the image
			-- is inside it. Divs use style="width: 52px;", which limits the
			-- image width to 52px. If any images in a div are wider than that,
			-- they may overlap with the text or cause other display problems.
			imageLeftCell = imageLeftCell:tag('div'):css('width', '52px')
		end
		imageLeftCell:wikitext(self.imageLeft or nil)
	elseif self.imageEmptyCell then
		-- Some message boxes define an empty cell if no image is specified, and
		-- some don't. The old template code in templates where empty cells are
		-- specified gives the following hint: "No image. Cell with some width
		-- or padding necessary for text cell to have 100% width."
		row:tag('td')
			:addClass('mbox-empty-cell')
			:cssText(self.imageEmptyCellStyle or nil)
	end

	-- Add the text.
	local textCell = row:tag('td'):addClass('mbox-text')
	if self.useCollapsibleTextFields then
		-- The message box uses advanced text parameters that allow things to be
		-- collapsible. At the moment, only ambox uses this.
		textCell:cssText(self.textstyle or nil)
		local textCellDiv = textCell:tag('div')
		textCellDiv
			:addClass('mbox-text-span')
			:wikitext(self.issue or nil)
		if (self.talk or self.fix) and not self.isSmall then
			textCellDiv:tag('span')
				:addClass('hide-when-compact')
				:wikitext(self.talk and (' ' .. self.talk) or nil)
				:wikitext(self.fix and (' ' .. self.fix) or nil)
		end
		textCellDiv:wikitext(self.date and (' ' .. self.date) or nil)
		if self.info and not self.isSmall then
			textCellDiv
				:tag('span')
				:addClass('hide-when-compact')
				:wikitext(self.info and (' ' .. self.info) or nil)
		end
		if self.removalNotice then
			textCellDiv:tag('small')
				:addClass('hide-when-compact')
				:tag('i')
					:wikitext(string.format(" (%s)", self.removalNotice))
		end
	else
		-- Default text formatting - anything goes.
		textCell
			:cssText(self.textstyle or nil)
			:wikitext(self.text or nil)
	end

	-- Add the right-hand image.
	if self.imageRight then
		local imageRightCell = row:tag('td'):addClass('mbox-imageright')
		if self.imageCellDiv then
			-- If we are using a div, redefine imageRightCell so that the image
			-- is inside it.
			imageRightCell = imageRightCell:tag('div'):css('width', '52px')
		end
		imageRightCell
			:wikitext(self.imageRight or nil)
	end

	-- Add the below row.
	if self.below then
		boxTable:tag('tr')
			:tag('td')
				:attr('colspan', self.imageRight and '3' or '2')
				:addClass('mbox-text')
				:cssText(self.textstyle or nil)
				:wikitext(self.below or nil)
	end

	-- Add error message for invalid type parameters.
	if self.invalidTypeError then
		root:tag('div')
			:css('text-align', 'center')
			:wikitext(string.format(
				'This message box is using an invalid "type=%s" parameter and needs fixing.',
				self.type or ''
			))
	end

	-- Add categories.
	root:wikitext(self:renderCategories() or nil)

	return tostring(root)
end

--------------------------------------------------------------------------------
-- Exports
--------------------------------------------------------------------------------

local p, mt = {}, {}

function p._exportClasses()
	-- For testing.
	return {
		MessageBox = MessageBox
	}
end

function p.main(boxType, args, cfgTables)
	local box = MessageBox.new(boxType, args, cfgTables or mw.loadData(CONFIG_MODULE))
	box:setParameters()
	box:setCategories()
	return box:export()
end

function mt.__index(t, k)
	return function (frame)
		if not getArgs then
			getArgs = require('Module:Arguments').getArgs
		end
		return t.main(k, getArgs(frame, {trim = false, removeBlanks = false}))
	end
end

return setmetatable(p, mt)</text>
      <sha1>991azllz9iaki96a7a2lfx1p2x7v6k4</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Message box/configuration</title>
    <ns>828</ns>
    <id>16757123</id>
    <revision>
      <id>686956408</id>
      <parentid>647174187</parentid>
      <timestamp>2018-05-29T19:59:01Z</timestamp>
      <contributor>
        <username>Ladsgroup</username>
        <id>28859</id>
      </contributor>
      <comment>Using WikimediaUI icons for consistency</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="6203">--------------------------------------------------------------------------------
--                          Message box configuration                         --
--                                                                            --
-- This module contains configuration data for [[Module:Message box]].        --
--------------------------------------------------------------------------------

return {
	ambox = {
		types = {
			speedy = {
				class = 'ambox-speedy',
				image = 'Ambox warning pn.svg'
			},
			delete = {
				class = 'ambox-delete',
				image = 'Ambox warning pn.svg'
			},
			content = {
				class = 'ambox-content',
				image = 'Ambox important.svg'
			},
			style = {
				class = 'ambox-style',
				image = 'Edit-clear.svg'
			},
			move = {
				class = 'ambox-move',
				image = 'Merge-split-transwiki default.svg'
			},
			protection = {
				class = 'ambox-protection',
				image = 'Padlock-silver-medium.svg'
			},
			notice = {
				class = 'ambox-notice',
				image = 'OOjs_UI_icon_info_big_progressive.svg'
			}
		},
		default                     = 'notice',
		allowBlankParams            = {'talk', 'sect', 'date', 'issue', 'fix', 'subst', 'hidden'},
		allowSmall                  = true,
		smallParam                  = 'left',
		smallClass                  = 'mbox-small-left',
		substCheck                  = true,
		classes                     = {'metadata', 'ambox'},
		imageEmptyCell              = true,
		imageCheckBlank             = true,
		imageSmallSize              = '20x20px',
		imageCellDiv                = true,
		useCollapsibleTextFields    = true,
		imageRightNone              = true,
		sectionDefault              = 'article',
		allowMainspaceCategories    = true,
		templateCategory            = 'Article message templates',
	        templateCategoryRequireName = true,
		templateErrorCategory       = 'Article message templates with missing parameters',
		templateErrorParamsToCheck  = {'issue', 'fix', 'subst'},
		removalNotice               = '[[Help:Maintenance template removal|Learn how and when to remove this template message]]'
	},
	
	cmbox = {
		types = {
			speedy = {
				class = 'cmbox-speedy',
				image = 'Ambox warning pn.svg'
			},
			delete = {
				class = 'cmbox-delete',
				image = 'Ambox warning pn.svg'
			},
			content = {
				class = 'cmbox-content',
				image = 'Ambox important.svg'
			},
			style = {
				class = 'cmbox-style',
				image = 'Edit-clear.svg'
			},
			move = {
				class = 'cmbox-move',
				image = 'Merge-split-transwiki default.svg'
			},
			protection = {
				class = 'cmbox-protection',
				image = 'Padlock-silver-medium.svg'
			},
			notice = {
				class = 'cmbox-notice',
				image = 'OOjs_UI_icon_info_big_progressive.svg'
			}
		},
		default              = 'notice',
		showInvalidTypeError = true,
		classes              = {'cmbox'},
		imageEmptyCell       = true
	},
	
	fmbox = {
		types = {
			warning = {
				class = 'fmbox-warning',
				image = 'Ambox warning pn.svg'
			},
			editnotice = {
				class = 'fmbox-editnotice',
				image = 'OOjs_UI_icon_info_big_progressive.svg'
			},
			system = {
				class = 'fmbox-system',
				image = 'OOjs_UI_icon_info_big_progressive.svg'
			}
		},
		default              = 'system',
		showInvalidTypeError = true,
		classes              = {'fmbox'},
		imageEmptyCell       = false,
		imageRightNone       = false
	},
	
	imbox = {
		types = {
			speedy = {
				class = 'imbox-speedy',
				image = 'Ambox warning pn.svg'
			},
			delete = {
				class = 'imbox-delete',
				image = 'Ambox warning pn.svg'
			},
			content = {
				class = 'imbox-content',
				image = 'Ambox important.svg'
			},
			style = {
				class = 'imbox-style',
				image = 'Edit-clear.svg'
			},
			move = {
				class = 'imbox-move',
				image = 'Merge-split-transwiki default.svg'
			},
			protection = {
				class = 'imbox-protection',
				image = 'Padlock-silver-medium.svg'
			},
			license = {
				class = 'imbox-license licensetpl',
				image = 'Imbox license.png' -- @todo We need an SVG version of this
			},
			featured = {
				class = 'imbox-featured',
				image = 'Cscr-featured.svg'
			},
			notice = {
				class = 'imbox-notice',
				image = 'OOjs_UI_icon_info_big_progressive.svg'
			}
		},
		default              = 'notice',
		showInvalidTypeError = true,
		classes              = {'imbox'},
		imageEmptyCell       = true,
		below                = true,
		templateCategory     = 'File message boxes'
	},
	
	ombox = {
		types = {
			speedy = {
				class = 'ombox-speedy',
				image = 'Ambox warning pn.svg'
			},
			delete = {
				class = 'ombox-delete',
				image = 'Ambox warning pn.svg'
			},
			content = {
				class = 'ombox-content',
				image = 'Ambox important.svg'
			},
			style = {
				class = 'ombox-style',
				image = 'Edit-clear.svg'
			},
			move = {
				class = 'ombox-move',
				image = 'Merge-split-transwiki default.svg'
			},
			protection = {
				class = 'ombox-protection',
				image = 'Padlock-silver-medium.svg'
			},
			notice = {
				class = 'ombox-notice',
				image = 'OOjs_UI_icon_info_big_progressive.svg'
			}
		},
		default              = 'notice',
		showInvalidTypeError = true,
		classes              = {'ombox'},
		allowSmall           = true,
		imageEmptyCell       = true,
		imageRightNone       = true
	},
	
	tmbox = {
		types = {
			speedy = {
				class = 'tmbox-speedy',
				image = 'Ambox warning pn.svg'
			},
			delete = {
				class = 'tmbox-delete',
				image = 'Ambox warning pn.svg'
			},
			content = {
				class = 'tmbox-content',
				image = 'Ambox important.svg'
			},
			style = {
				class = 'tmbox-style',
				image = 'Edit-clear.svg'
			},
			move = {
				class = 'tmbox-move',
				image = 'Merge-split-transwiki default.svg'
			},
			protection = {
				class = 'tmbox-protection',
				image = 'Padlock-silver-medium.svg'
			},
			notice = {
				class = 'tmbox-notice',
				image = 'OOjs_UI_icon_info_big_progressive.svg'
			}
		},
		default              = 'notice',
		showInvalidTypeError = true,
		classes              = {'tmbox'},
		allowSmall           = true,
		imageRightNone       = true,
		imageEmptyCell       = true,
		imageEmptyCellStyle  = true,
		templateCategory     = 'Talk message boxes'
	}
}</text>
      <sha1>eag3pe1zfalxtbbj2va1l2oex8jxv7a</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Message box/styles.css</title>
    <ns>828</ns>
    <id>64445661</id>
    <revision>
      <id>971093707</id>
      <parentid>967812643</parentid>
      <timestamp>2019-06-29T13:17:49Z</timestamp>
      <contributor>
        <username>Tacsipacsi</username>
        <id>33956</id>
      </contributor>
      <comment>.messagebox doesn’t belong here, remove @noflip’s as flipping based on page language is OK</comment>
      <model>sanitized-css</model>
      <format>text/css</format>
      <text xml:space="preserve" bytes="6193">/**
 * Messagebox templates
 * Imported from [[:en:MediaWiki:Common.css]] on 2012-11-24
 */
/* Cell sizes for ambox/tmbox/imbox/cmbox/ombox/fmbox/dmbox message boxes */
th.mbox-text, td.mbox-text {   /* The message body cell(s) */
	border: none;
	padding: 0.25em 0.9em;     /* 0.9em left/right */
	width: 100%;               /* Make all mboxes the same width regardless of text length */
}
td.mbox-image {                /* The left image cell */
	border: none;
	padding: 2px 3px 2px 0.9em;  /* 0.9em left, 0px right */
	text-align: center;
}
td.mbox-imageright {           /* The right image cell */
	border: none;
	padding: 2px 0.9em 2px 0;  /* 0px left, 0.9em right */
	text-align: center;
}
td.mbox-empty-cell {           /* An empty narrow cell */
	border: none;
	padding: 0;
	width: 1px;
}

/* Article message box styles */
table.ambox {
	margin: 0 10%;                    /* 10% = Will not overlap with other elements */
	border: 1px solid #a2a9b1;
	border-left: 10px solid #1e90ff;  /* Default "notice" blue */
	background: #fbfbfb;
}
table.ambox + table.ambox {      /* Single border between stacked boxes. */
	margin-top: -1px;
}
.ambox th.mbox-text,
.ambox td.mbox-text {            /* The message body cell(s) */
	padding: 0.25em 0.5em;       /* 0.5em left/right */
}
.ambox td.mbox-image {           /* The left image cell */
	padding: 2px 0 2px 0.5em;    /* 0.5em left, 0px right */
}
.ambox td.mbox-imageright {      /* The right image cell */
	padding: 2px 0.5em 2px 0;    /* 0px left, 0.5em right */
}

table.ambox-notice {
	border-left: 10px solid #1e90ff;    /* Blue */
}
table.ambox-speedy {
	border-left: 10px solid #b22222;    /* Red */
	background: #fee;                   /* Pink */
}
table.ambox-delete {
	border-left: 10px solid #b22222;    /* Red */
}
table.ambox-content {
	border-left: 10px solid #f28500;    /* Orange */
}
table.ambox-style {
	border-left: 10px solid #f4c430;    /* Yellow */
}
table.ambox-move {
	border-left: 10px solid #9932cc;    /* Purple */
}
table.ambox-protection {
	border-left: 10px solid #bba;       /* Gray-gold */
}

/* Image message box styles */
table.imbox {
	margin: 4px 10%;
	border-collapse: collapse;
	border: 3px solid #1e90ff;    /* Default "notice" blue */
	background: #fbfbfb;
}
.imbox .mbox-text .imbox {  /* For imboxes inside imbox-text cells. */
	margin: 0 -0.5em;       /* 0.9 - 0.5 = 0.4em left/right.        */
	display: block;         /* Fix for webkit to force 100% width.  */
}
.mbox-inside .imbox {       /* For imboxes inside other templates.  */
	margin: 4px;
}

table.imbox-notice {
	border: 3px solid #1e90ff;    /* Blue */
}
table.imbox-speedy {
	border: 3px solid #b22222;    /* Red */
	background: #fee;             /* Pink */
}
table.imbox-delete {
	border: 3px solid #b22222;    /* Red */
}
table.imbox-content {
	border: 3px solid #f28500;    /* Orange */
}
table.imbox-style {
	border: 3px solid #f4c430;    /* Yellow */
}
table.imbox-move {
	border: 3px solid #9932cc;    /* Purple */
}
table.imbox-protection {
	border: 3px solid #bba;       /* Gray-gold */
}
table.imbox-license {
	border: 3px solid #88a;       /* Dark gray */
	background: #f7f8ff;          /* Light gray */
}
table.imbox-featured {
	border: 3px solid #cba135;    /* Brown-gold */
}

/* Category message box styles */
table.cmbox {
	margin: 3px 10%;
	border-collapse: collapse;
	border: 1px solid #a2a9b1;
	background: #dfe8ff;    /* Default "notice" blue */
}

table.cmbox-notice {
	background: #dfe8ff;    /* Blue */
}
table.cmbox-speedy {
	margin-top: 4px;
	margin-bottom: 4px;
	border: 4px solid #b22222;    /* Red */
	background: #ffdbdb;          /* Pink */
}
table.cmbox-delete {
	background: #ffdbdb;    /* Red */
}
table.cmbox-content {
	background: #ffe7ce;    /* Orange */
}
table.cmbox-style {
	background: #fff9db;    /* Yellow */
}
table.cmbox-move {
	background: #e4d8ff;    /* Purple */
}
table.cmbox-protection {
	background: #efefe1;    /* Gray-gold */
}

/* Other pages message box styles */
table.ombox {
	margin: 4px 10%;
	border-collapse: collapse;
	border: 1px solid #a2a9b1;       /* Default "notice" gray */
	background: #f8f9fa;
}

table.ombox-notice {
	border: 1px solid #a2a9b1;       /* Gray */
}
table.ombox-speedy {
	border: 2px solid #b22222;    /* Red */
	background: #fee;             /* Pink */
}
table.ombox-delete {
	border: 2px solid #b22222;    /* Red */
}
table.ombox-content {
	border: 1px solid #f28500;    /* Orange */
}
table.ombox-style {
	border: 1px solid #f4c430;    /* Yellow */
}
table.ombox-move {
	border: 1px solid #9932cc;    /* Purple */
}
table.ombox-protection {
	border: 2px solid #bba;       /* Gray-gold */
}

/* Talk page message box styles */
table.tmbox {
	margin: 4px 10%;
	border-collapse: collapse;
	border: 1px solid #c0c090;    /* Default "notice" gray-brown */
	background: #f8eaba;
}
.mediawiki .mbox-inside .tmbox { /* For tmboxes inside other templates. The "mediawiki" class ensures that */
	margin: 2px 0;               /* this declaration overrides other styles (including mbox-small above)   */
	width: 100%;                 /* For Safari and Opera */
}
.mbox-inside .tmbox.mbox-small { /* "small" tmboxes should not be small when  */
	line-height: 1.5em;          /* also "nested", so reset styles that are   */
	font-size: 100%;             /* set in "mbox-small" above.                */
}

table.tmbox-speedy {
	border: 2px solid #b22222;    /* Red */
	background: #fee;             /* Pink */
}
table.tmbox-delete {
	border: 2px solid #b22222;    /* Red */
}
table.tmbox-content {
	border: 2px solid #f28500;    /* Orange */
}
table.tmbox-style {
	border: 2px solid #f4c430;    /* Yellow */
}
table.tmbox-move {
	border: 2px solid #9932cc;    /* Purple */
}
table.tmbox-protection,
table.tmbox-notice {
	border: 1px solid #c0c090;    /* Gray-brown */
}

/* Footer and header message box styles */
table.fmbox {
	clear: both;
	margin: 0.2em 0;
	width: 100%;
	border: 1px solid #a2a9b1;
	background: #f8f9fa;     /* Default "system" gray */
}
table.fmbox-system {
	background: #f8f9fa;
}
table.fmbox-warning {
	border: 1px solid #bb7070;  /* Dark pink */
	background: #ffdbdb;        /* Pink */
}
table.fmbox-editnotice {
	background: transparent;
}</text>
      <sha1>7e59qgbxcumlarsrcgxui7rxixk4nvx</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Namespace detect/config</title>
    <ns>828</ns>
    <id>51354327</id>
    <revision>
      <id>647174195</id>
      <parentid>647174194</parentid>
      <timestamp>2018-03-10T10:01:07Z</timestamp>
      <contributor>
        <username>Mbch331</username>
        <id>69441</id>
      </contributor>
      <minor/>
      <comment>7 revisions imported from [[:en:Module:Namespace_detect/config]]: https://www.wikidata.org/w/index.php?title=Wikidata:Administrators%27_noticeboard&amp;oldid=647164909#Request_to_import_template:Cite_Q_from_ENWP</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="3545">--------------------------------------------------------------------------------
--                    Namespace detect configuration data                     --
--                                                                            --
-- This module stores configuration data for Module:Namespace detect. Here    --
-- you can localise the module to your wiki's language.                       --
--                                                                            --
-- To activate a configuration item, you need to uncomment it. This means     --
-- that you need to remove the text "-- " at the start of the line.           --
--------------------------------------------------------------------------------

local cfg = {} -- Don't edit this line.

--------------------------------------------------------------------------------
--                              Parameter names                               --
-- These configuration items specify custom parameter names. Values added     --
-- here will work in addition to the default English parameter names.         --
-- To add one extra name, you can use this format:                            --
--                                                                            --
-- cfg.foo = 'parameter name'                                                 --
--                                                                            --
-- To add multiple names, you can use this format:                            --
--                                                                            --
-- cfg.foo = {'parameter name 1', 'parameter name 2', 'parameter name 3'}     --
--------------------------------------------------------------------------------

---- This parameter displays content for the main namespace:
-- cfg.main = 'main'

---- This parameter displays in talk namespaces:
-- cfg.talk = 'talk'

---- This parameter displays content for "other" namespaces (namespaces for which
---- parameters have not been specified):
-- cfg.other = 'other'

---- This parameter makes talk pages behave as though they are the corresponding
---- subject namespace. Note that this parameter is used with [[Module:Yesno]].
---- Edit that module to change the default values of "yes", "no", etc.
-- cfg.subjectns = 'subjectns'

---- This parameter sets a demonstration namespace:
-- cfg.demospace = 'demospace'

---- This parameter sets a specific page to compare:
cfg.demopage = 'page'

--------------------------------------------------------------------------------
--                           Table configuration                              --
-- These configuration items allow customisation of the "table" function,     --
-- used to generate a table of possible parameters in the module              --
-- documentation.                                                             --
--------------------------------------------------------------------------------

---- The header for the namespace column in the wikitable containing the list of
---- possible subject-space parameters.
-- cfg.wikitableNamespaceHeader = 'Namespace'

---- The header for the wikitable containing the list of possible subject-space
---- parameters.
-- cfg.wikitableAliasesHeader = 'Aliases'

--------------------------------------------------------------------------------
--                        End of configuration data                           --
--------------------------------------------------------------------------------

return cfg -- Don't edit this line.</text>
      <sha1>1o6ozz56i8q0xgyl6xa41n2v7kelhli</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Namespace detect/data</title>
    <ns>828</ns>
    <id>51354328</id>
    <revision>
      <id>647174214</id>
      <parentid>647174213</parentid>
      <timestamp>2018-03-10T10:01:08Z</timestamp>
      <contributor>
        <username>Mbch331</username>
        <id>69441</id>
      </contributor>
      <minor/>
      <comment>15 revisions imported from [[:en:Module:Namespace_detect/data]]: https://www.wikidata.org/w/index.php?title=Wikidata:Administrators%27_noticeboard&amp;oldid=647164909#Request_to_import_template:Cite_Q_from_ENWP</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="2569">--------------------------------------------------------------------------------
--                          Namespace detect data                             --
-- This module holds data for [[Module:Namespace detect]] to be loaded per    --
-- page, rather than per #invoke, for performance reasons.                    --
--------------------------------------------------------------------------------

local cfg = require('Module:Namespace detect/config')

local function addKey(t, key, defaultKey)
	if key ~= defaultKey then
		t[#t + 1] = key
	end
end

-- Get a table of parameters to query for each default parameter name.
-- This allows wikis to customise parameter names in the cfg table while
-- ensuring that default parameter names will always work. The cfg table
-- values can be added as a string, or as an array of strings.

local defaultKeys = {
	'main',
	'talk',
	'other',
	'subjectns',
	'demospace',
	'demopage'
}

local argKeys = {}
for i, defaultKey in ipairs(defaultKeys) do
	argKeys[defaultKey] = {defaultKey}
end

for defaultKey, t in pairs(argKeys) do
	local cfgValue = cfg[defaultKey]
	local cfgValueType = type(cfgValue)
	if cfgValueType == 'string' then
		addKey(t, cfgValue, defaultKey)
	elseif cfgValueType == 'table' then
		for i, key in ipairs(cfgValue) do
			addKey(t, key, defaultKey)
		end
	end
	cfg[defaultKey] = nil -- Free the cfg value as we don't need it any more.
end

local function getParamMappings()
	--[[
	-- Returns a table of how parameter names map to namespace names. The keys
	-- are the actual namespace names, in lower case, and the values are the
	-- possible parameter names for that namespace, also in lower case. The
	-- table entries are structured like this:
	-- {
	--   [''] = {'main'},
	--   ['wikipedia'] = {'wikipedia', 'project', 'wp'},
	--   ...
	-- }
	--]]
	local mappings = {}
	local mainNsName = mw.site.subjectNamespaces[0].name
	mainNsName = mw.ustring.lower(mainNsName)
	mappings[mainNsName] = mw.clone(argKeys.main)
	mappings['talk'] = mw.clone(argKeys.talk)
	for nsid, ns in pairs(mw.site.subjectNamespaces) do
		if nsid ~= 0 then -- Exclude main namespace.
			local nsname = mw.ustring.lower(ns.name)
			local canonicalName = mw.ustring.lower(ns.canonicalName)
			mappings[nsname] = {nsname}
			if canonicalName ~= nsname then
				table.insert(mappings[nsname], canonicalName)
			end
			for _, alias in ipairs(ns.aliases) do
				table.insert(mappings[nsname], mw.ustring.lower(alias))
			end
		end
	end
	return mappings
end

return {
	argKeys = argKeys,
	cfg = cfg,
	mappings = getParamMappings()
}</text>
      <sha1>ojp6d3pc8mql5nufaqdg576c9so3479</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Navbar</title>
    <ns>828</ns>
    <id>20196075</id>
    <revision>
      <id>967839770</id>
      <parentid>831427849</parentid>
      <timestamp>2019-06-23T23:57:08Z</timestamp>
      <contributor>
        <username>Tacsipacsi</username>
        <id>33956</id>
      </contributor>
      <comment>load template styles from [[Module:Navbar/styles.css|subpage]], as they were recently removed from Common.css, breaking all navboxes on Wikidata</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="3191">local p = {}

local getArgs
local ul

function p.addItem (mini, full, link, descrip, args, url)
	local l
	if url then
		l = {'[', '', ']'}
	else
		l = {'[[', '|', ']]'}
	end
	ul:tag('li')
		:addClass('nv-'..full)
		:wikitext(l[1] .. link .. l[2])
		:tag(args.mini and 'abbr' or 'span')
			:attr('title', descrip..' this template')
			:cssText(args.fontstyle)
			:wikitext(args.mini and mini or full)
			:done()
		:wikitext(l[3])
end

function p.brackets (position, c, args, div)
	if args.brackets then
		div
			:tag('span')
				:css('margin-'..position, '-0.125em')
				:cssText(args.fontstyle)
				:wikitext(c)
	end
end

function p._navbar(args)
	local show = {true, true, true, false, false, false}
	local titleArg = 1
	
	if args.collapsible then
		titleArg = 2
		if not args.plain then args.mini = 1 end
		if args.fontcolor then
			args.fontstyle = 'color:' .. args.fontcolor .. ';'
		end
		args.style = 'float:left; text-align:left'
	end
	
	if args.template then
		titleArg = 'template'
		show = {true, false, false, false, false, false}
		local index = {t = 2, d = 2, e = 3, h = 4, m = 5, w = 6, talk = 2, edit = 3, hist = 4, move = 5, watch = 6}
		for k,v in ipairs(require ('Module:TableTools').compressSparseArray(args)) do
			local num = index[v]
			if num then show[num] = true end
		end
	end
	
	if args.noedit then show[3] = false end
	
	local titleText = args[titleArg] or (':' .. mw.getCurrentFrame():getParent():getTitle())
	local title = mw.title.new(mw.text.trim(titleText), 'Template')
	if not title then
		error('Invalid title ' .. titleText)
	end
	local talkpage = title.talkPageTitle and title.talkPageTitle.fullText or ''
	
	local div = mw.html.create():tag('div')
	div
		:addClass('plainlinks')
		:addClass('hlist')
		:addClass('navbar')
		:cssText(args.style)
		:wikitext(mw.getCurrentFrame():extensionTag('templatestyles', '', { src = 'Navbar/styles.css' }))

	if args.mini then div:addClass('mini') end

	if not (args.mini or args.plain) then
		div
			:tag('span')
				:css('word-spacing', 0)
				:cssText(args.fontstyle)
				:wikitext(args.text or 'This box:')
				:wikitext(' ')
	end
	
	p.brackets('right', '&amp;#91; ', args, div)
	
	ul = div:tag('ul')
	if show[1] then p.addItem('v', 'view', title.fullText, 'View', args) end
	if show[2] then p.addItem('t', 'talk', talkpage, 'Discuss', args) end
	if show[3] then p.addItem('e', 'edit', title:fullUrl('action=edit'), 'Edit', args, true) end
	if show[4] then p.addItem('h', 'hist', title:fullUrl('action=history'), 'History of', args, true) end
	if show[5] then
		local move = mw.title.new ('Special:Movepage')
		p.addItem('m', 'move', move:fullUrl('target='..title.fullText), 'Move', args, true) end
	if show[6] then p.addItem('w', 'watch', title:fullUrl('action=watch'), 'Watch', args, true) end
	
	p.brackets('left', ' &amp;#93;', args, div)
	
	if args.collapsible then
		div
			:done()
		:tag('div')
			:css('font-size', '114%')
			:css('margin', args.mini and '0 4em' or '0 7em')
			:cssText(args.fontstyle)
			:wikitext(args[1])
	end

	return tostring(div:done())
end

function p.navbar(frame)
	if not getArgs then
		getArgs = require('Module:Arguments').getArgs
	end
	return p._navbar(getArgs(frame))
end

return p</text>
      <sha1>f2s25zawvyr8krxdids9xt92w2xoh5s</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Navbox</title>
    <ns>828</ns>
    <id>11885519</id>
    <revision>
      <id>1045021672</id>
      <parentid>1044888911</parentid>
      <timestamp>2019-11-04T21:28:24Z</timestamp>
      <contributor>
        <username>Tacsipacsi</username>
        <id>33956</id>
      </contributor>
      <comment>if spacerSidealign2 is “left” by default, then it should be “right” for rtl languages</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="12278">--
-- This module implements {{Navbox}}
--

local p = {}

local navbar = require('Module:Navbar')._navbar
local getArgs -- lazily initialized

local args
local tableRowAdded = false
local border
local listnums = {}

local dir = "ltr"
local spacerSidealign = "right"
local spacerSidealign2 = "left"
local textalign = "left"
local rtltest = mw.getCurrentFrame():preprocess("{{int:rtl}}")
if rtltest == "1" then
	textalign = "right"
	dir = "rtl"
	spacerSidealign = "left"
	spacerSidealign2 = "right"
end

local function trim(s)
    return (mw.ustring.gsub(s, "^%s*(.-)%s*$", "%1"))
end

local function addNewline(s)
    if s:match('^[*:;#]') or s:match('^{|') then
        return '\n' .. s ..'\n'
    else
        return s
    end
end

local function addTableRow(tbl)
    -- If any other rows have already been added, then we add a 2px gutter row.
    if tableRowAdded then
        tbl
            :tag('tr')
                :css('height', '2px')
                :tag('td')
                    :attr('colspan',2)
    end

    tableRowAdded = true

    return tbl:tag('tr')
end

local function renderNavBar(titleCell)
    -- Depending on the presence of the navbar and/or show/hide link, we may need to add a spacer div on the left
    -- or right to keep the title centered.
    local spacerSide = nil

    if args.navbar == 'off' then
        -- No navbar, and client wants no spacer, i.e. wants the title to be shifted to the left. If there's
        -- also no show/hide link, then we need a spacer on the right to achieve the left shift.
        if args.state == 'plain' then spacerSide = spacerSidealign end
    elseif args.navbar == 'plain' or (not args.name and mw.getCurrentFrame():getParent():getTitle():gsub('/sandbox$', '') == 'Template:Navbox') then
        -- No navbar. Need a spacer on the left to balance out the width of the show/hide link.
        if args.state ~= 'plain' then spacerSide = spacerSidealign2 end
    else
        -- Will render navbar (or error message). If there's no show/hide link, need a spacer on the right
        -- to balance out the width of the navbar.
        if args.state == 'plain' then spacerSide = spacerSidealign end

        titleCell:wikitext(navbar{
            args.name,
            mini = 1,
            fontstyle = (args.basestyle or '') .. ';' .. (args.titlestyle or '') ..  ';background:none transparent;border:none;'
        })
    end

    -- Render the spacer div.
    if spacerSide then
        titleCell
            :tag('span')
                :css('float', spacerSide)
                :css('width', '6em')
                :wikitext('&amp;nbsp;')
    end
end

--
--   Title row
--
local function renderTitleRow(tbl)
    if not args.title then return end

    local titleRow = addTableRow(tbl)

    if args.titlegroup then
        titleRow
            :tag('th')
                :attr('scope', 'row')
                :addClass('navbox-group')
                :addClass(args.titlegroupclass)
                :cssText(args.basestyle)
                :cssText(args.groupstyle)
                :cssText(args.titlegroupstyle)
                :wikitext(args.titlegroup)
    end

    local titleCell = titleRow:tag('th'):attr('scope', 'col')

    if args.titlegroup then
        titleCell
            :css('border-left' , '2px solid #fdfdfd')
            :css('width', '100%')
    end

    local titleColspan = 2
    if args.imageleft then titleColspan = titleColspan + 1 end
    if args.image then titleColspan = titleColspan + 1 end
    if args.titlegroup then titleColspan = titleColspan - 1 end

    titleCell
        :cssText(args.basestyle)
        :cssText(args.titlestyle)
        :addClass('navbox-title')
        :attr('colspan', titleColspan)

    renderNavBar(titleCell)

    titleCell
         :tag('div')
             :addClass(args.titleclass)
             :css('font-size', '110%')
             :wikitext(addNewline(args.title))
end

--
--   Above/Below rows
--

local function getAboveBelowColspan()
    local ret = 2
    if args.imageleft then ret = ret + 1 end
    if args.image then ret = ret + 1 end
    return ret
end

local function renderAboveRow(tbl)
    if not args.above then return end

    addTableRow(tbl)
        :tag('td')
            :addClass('navbox-abovebelow')
            :addClass(args.aboveclass)
            :cssText(args.basestyle)
            :cssText(args.abovestyle)
            :attr('colspan', getAboveBelowColspan())
            :tag('div')
                :wikitext(addNewline(args.above))
end

local function renderBelowRow(tbl)
    if not args.below then return end

    addTableRow(tbl)
        :tag('td')
            :addClass('navbox-abovebelow')
            :addClass(args.belowclass)
            :cssText(args.basestyle)
            :cssText(args.belowstyle)
            :attr('colspan', getAboveBelowColspan())
            :tag('div')
                :wikitext(addNewline(args.below))
end

--
--   List rows
--
local function renderListRow(tbl, listnum)
    local row = addTableRow(tbl)

    if listnum == 1 and args.imageleft then
        row
            :tag('td')
                :addClass('navbox-image')
                :addClass(args.imageclass)
                :css('width', '0%')
                :css('padding', '0px 2px 0px 0px')
                :cssText(args.imageleftstyle)
                :attr('rowspan', 2 * #listnums - 1)
                :tag('div')
                    :wikitext(addNewline(args.imageleft))
    end

    if args['group' .. listnum] then
        local groupCell = row:tag('th')

        groupCell
            :attr('scope', 'row')
            :addClass('navbox-group')
            :addClass(args.groupclass)
            :cssText(args.basestyle)

        if args.groupwidth then
            groupCell:css('width', args.groupwidth)
        end

        groupCell
            :cssText(args.groupstyle)
            :cssText(args['group' .. listnum .. 'style'])
            :wikitext(args['group' .. listnum])
    end

    local listCell = row:tag('td')

    if args['group' .. listnum] then
        listCell
            :css('text-align', textalign)
            :css('border-'..textalign..'-width', '2px')
            :css('border-'..textalign..'-style', 'solid')
    else
        listCell:attr('colspan', 2)
    end

    if not args.groupwidth then
        listCell:css('width', '100%')
    end

    local isOdd = (listnum % 2) == 1
    local rowstyle = args.evenstyle
    if isOdd then rowstyle = args.oddstyle end

    local evenOdd
    if args.evenodd == 'swap' then
        if isOdd then evenOdd = 'even' else evenOdd = 'odd' end
    else
        if isOdd then evenOdd = args.evenodd or 'odd' else evenOdd = args.evenodd or 'even' end
    end

    listCell
        :css('padding', '0px')
        :cssText(args.liststyle)
        :cssText(rowstyle)
        :cssText(args['list' .. listnum .. 'style'])
        :addClass('navbox-list')
        :addClass('navbox-' .. evenOdd)
        :addClass(args.listclass)
        :tag('div')
            :css('padding', (listnum == 1 and args.list1padding) or args.listpadding or '0em 0.25em')
            :wikitext(addNewline(args['list' .. listnum]))

    if listnum == 1 and args.image then
        row
            :tag('td')
                :addClass('navbox-image')
                :addClass(args.imageclass)
                :css('width', '0%')
                :css('padding', '0px 0px 0px 2px')
                :cssText(args.imagestyle)
                :attr('rowspan', 2 * #listnums - 1)
                :tag('div')
                    :wikitext(addNewline(args.image))
    end
end


--
--   Tracking categories
--

local function needsHorizontalLists()
    if border == 'child' or border == 'subgroup'  or args.tracking == 'no' then return false end

    local listClasses = {'plainlist', 'hlist', 'hlist hnum', 'hlist hwrap', 'hlist vcard', 'vcard hlist', 'hlist vevent'}
    for i, cls in ipairs(listClasses) do
        if args.listclass == cls or args.bodyclass == cls then
            return false
        end
    end

    return true
end

local function hasBackgroundColors()
    return mw.ustring.match(args.titlestyle or '','background') or mw.ustring.match(args.groupstyle or '','background') or mw.ustring.match(args.basestyle or '','background')
end

local function getTrackingCategories()
    local cats = {}
    if needsHorizontalLists() then table.insert(cats, 'Navigational boxes without horizontal lists') end
    if hasBackgroundColors() then table.insert(cats, 'Navboxes using background colours') end
    return cats
end

local function renderTrackingCategories(builder)
    local title = mw.title.getCurrentTitle()
    if title.namespace ~= 10 then return end -- not in template space
    local subpage = title.subpageText
    if subpage == 'doc' or subpage == 'sandbox' or subpage == 'testcases' then return end

    for i, cat in ipairs(getTrackingCategories()) do
        builder:wikitext('[[Category:' .. cat .. ']]')
    end
end

--
--   Main navbox tables
--
local function renderMainTable()
    local tbl = mw.html.create('table')
        :addClass('nowraplinks')
        :addClass(args.bodyclass)
        :attr('dir', dir)

    if args.title and (args.state ~= 'plain' and args.state ~= 'off') then
        tbl
            :addClass('mw-collapsible mw-collapsed')
            :addClass(args.state or 'autocollapse')
    end

    tbl:css('border-spacing', 0)
    if border == 'subgroup' or border == 'child' or border == 'none' then
        tbl
            :addClass('navbox-subgroup')
            :cssText(args.bodystyle)
            :cssText(args.style)
    else -- regular navobx - bodystyle and style will be applied to the wrapper table
        tbl
            :addClass('navbox-inner')
            :css('background', 'transparent')
            :css('color', 'inherit')
    end
    tbl:cssText(args.innerstyle)

    renderTitleRow(tbl)
    renderAboveRow(tbl)
    for i, listnum in ipairs(listnums) do
        renderListRow(tbl, listnum)
    end
    renderBelowRow(tbl)

    return tbl
end

function p._navbox(navboxArgs)
    args = navboxArgs

    for k, v in pairs(args) do
        local listnum = ('' .. k):match('^list(%d+)$')
        if listnum then table.insert(listnums, tonumber(listnum)) end
    end
    table.sort(listnums)

    border = trim(args.border or args[1] or '')

    -- render the main body of the navbox
    local tbl = renderMainTable()

    -- load CSS
    local css = mw.getCurrentFrame():extensionTag('templatestyles', '', {src = 'Navbox/styles.css'})

    -- render the appropriate wrapper around the navbox, depending on the border param
    local res = mw.html.create()
    if border == 'none' then
        res
            :wikitext(css)
            :node(tbl)
    elseif border == 'subgroup' or border == 'child' then
        -- We assume that this navbox is being rendered in a list cell of a parent navbox, and is
        -- therefore inside a div with padding:0em 0.25em. We start with a &lt;/div&gt; to avoid the
        -- padding being applied, and at the end add a &lt;div&gt; to balance out the parent's &lt;/div&gt;
        res
            :wikitext('&lt;/div&gt;') -- XXX: hack due to lack of unclosed support in mw.html.
            :wikitext(css)
            :node(tbl)
            :wikitext('&lt;div&gt;') -- XXX: hack due to lack of unclosed support in mw.html.
    else
        res
            :tag('table')
                :addClass('navbox')
                :attr('dir', dir)
                :css('border-spacing', 0)
                :cssText(args.bodystyle)
                :cssText(args.style)
                :tag('tr')
                    :tag('td')
                        :wikitext(css)
                        :css('padding', '2px')
                        :node(tbl)
    end

    renderTrackingCategories(res)

    return tostring(res)
end

function p.navbox(frame)
    if not getArgs then
        getArgs = require('Module:Arguments').getArgs
    end
    args = getArgs(frame, {wrappers = 'Template:Navbox'})

    -- Read the arguments in the order they'll be output in, to make references number in the right order.
    local _
    _ = args.title
    _ = args.above
    for i = 1, 20 do
        _ = args["group" .. tostring(i)]
        _ = args["list" .. tostring(i)]
    end
    _ = args.below

    return p._navbox(args)
end

return p</text>
      <sha1>klimz6sr1uky16tmvw6zlqynnwkrah2</sha1>
    </revision>
  </page>
  <page>
    <title>Module:No globals</title>
    <ns>828</ns>
    <id>20196123</id>
    <revision>
      <id>799485932</id>
      <parentid>237941704</parentid>
      <timestamp>2018-11-26T17:23:38Z</timestamp>
      <contributor>
        <username>Jarekt</username>
        <id>1274</id>
      </contributor>
      <minor/>
      <comment>Protected "[[Module:No globals]]": High traffic page ([Edit=Allow only administrators] (indefinite) [Move=Allow only administrators] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="324">-- dummy comment
local mt = getmetatable(_G) or {}
function mt.__index (t, k)
	if k ~= 'arg' then
		error('Tried to read nil global ' .. tostring(k), 2)
	end
	return nil
end
function mt.__newindex(t, k, v)
	if k ~= 'arg' then
		error('Tried to write global ' .. tostring(k), 2)
	end
	rawset(t, k, v)
end
setmetatable(_G, mt)</text>
      <sha1>in8hbwad1hk3fec3gd2yoqbrdxvy845</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Wikidata label</title>
    <ns>828</ns>
    <id>59108317</id>
    <revision>
      <id>806966368</id>
      <parentid>799025560</parentid>
      <timestamp>2018-12-07T18:00:49Z</timestamp>
      <contributor>
        <username>Jarekt</username>
        <id>1274</id>
      </contributor>
      <comment>add "show_id" parameter; add link_type='wikidata talk' option</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="10115">--[[  
  __  __           _       _      __        ___ _    _     _       _          _       _          _ 
 |  \/  | ___   __| |_   _| | ___ \ \      / (_) | _(_) __| | __ _| |_ __ _  | | __ _| |__   ___| |
 | |\/| |/ _ \ / _` | | | | |/ _ (_) \ /\ / /| | |/ / |/ _` |/ _` | __/ _` | | |/ _` | '_ \ / _ \ |
 | |  | | (_) | (_| | |_| | |  __/_ \ V  V / | |   &lt;| | (_| | (_| | || (_| | | | (_| | |_) |  __/ |
 |_|  |_|\___/ \__,_|\__,_|_|\___(_) \_/\_/  |_|_|\_\_|\__,_|\__,_|\__\__,_| |_|\__,_|_.__/ \___|_|
                                                                                                   
This module is intended to be the engine behind "Template:Label".
Thic module was copied from Commons please ask for changes there.

Please do not modify this code without applying the changes first at "Module:Wikidata label/sandbox" and testing 
at "Module:Wikidata label/testcases".

Authors and maintainers:
* User:Jarekt - original version 

Dependencies:
* Module:Yesno - used only if "show_id" parameter present
]]

-- use different sitelink call depending if you already have an entity or not
local function getSitelink(item, entity, lang)
	if entity then -- if we have entity than use it
		return entity:getSitelink(lang .. 'wiki') 
	else -- if no entity than use different function
		return mw.wikibase.sitelink( item, lang .. 'wiki' )
	end
end

local p = {}

--[[
_getLabel

This function returns a label translated to desired language, created based on wikidata

Inputs:
	1: item - wikidata's item's q-code or entity class
	2: lang - desired language of the label
	3: link_type - link style. Possible values: "wikipedia", "Wikidata", "Commons", or "-" (no link)
	4: capitalization - can be "uc" (upper case), "lc" (lower case), "ucfirst" (upper case for the first letter), 
			"lcfirst" (lower case for the first letter)
 
Error Handling:
	Bad q-code will result in displayed error
]]
function p._getLabel(item, lang, link_type, capitalization, show_id)
	local entity, s, link, label, language

	-- clean up the input parameters
	if type(item)~='string' then -- "item" is not a q-code
		entity = item            -- "item" must be the entity
		item   = entity.id       -- look-up q-code
	elseif tonumber(item) then   -- if it is just the number than add "Q" in front
		item = 'Q'..item
	end
	item = string.gsub( string.upper(item), 'PROPERTY:P', 'P') -- make all the properties the same and capitalize
	
	-- build language fallback list
	lang = string.lower(lang) or 'en'
	local langList = mw.language.getFallbacksFor(lang)
	table.insert(langList, 1, lang)
	
	-- get label (visible part of the link)
	for _, language in ipairs(langList) do  -- loop over language fallback list looking for label in the specific language
		if entity then
			label = entity:getLabel(language)
		else
			label = mw.wikibase.getLabelByLang(item, language)
		end
		if label then break end                    -- label found and we are done
	end
	if not label then                              -- no labels found, so just show the q-code
		label = item
	elseif show_id then           -- add id
		local yesno = require('Module:Yesno')
		show_id = yesno(show_id,false)
		if show_id then 
			local id = mw.getCurrentFrame():preprocess( "{{int:parentheses|" .. item .."}}")
			local wordsep  = mw.message.new( "Word-separator" ):inLanguage(lang):plain()
			label = label .. wordsep .. "&lt;small&gt;" .. id .. "&lt;/small&gt;"
		end
	end
	
	-- change capitalization of the label
	if capitalization=='ucfirst' then
		label = mw.language.new(lang):ucfirst(label)
	elseif capitalization=='lcfirst' then
		label = mw.language.new(lang):lcfirst(label)
	elseif capitalization=='uc' then
		label = mw.language.new(lang):uc(label)
	elseif capitalization=='lc' then
		label = mw.language.new(lang):lc(label)
	end

	-- create URL part of the link
	link_type = string.lower(link_type or '')
	local dLink = 'd:'..item; -- create fallback wikidata link
	if string.sub(item, 1, 1) == 'P' then
		dLink = 'd:Property:'.. item
	end
	if link_type=='-' then -- allow different link formats
		link = ''            -- no link
	elseif link_type=='wikidata' then
		link = dLink         -- link to wikidata
	elseif link_type=='wikidata talk' and string.sub(item, 1, 1)=='P' then
		link = 'd:Property talk:'.. item        -- link to wikidata property talk page
	elseif link_type=='wikidata talk' then
		link = 'd:Talk:'..item         -- link to wikidata talk page
	elseif link_type=='commons' then
		link = getSitelink(item, entity, 'commons')  -- look for sitelink to commons
		if link then 
			link = 'c:'..link
		else -- try linking to P373 category
			entity = entity or mw.wikibase.getEntity(item);
			assert(entity, "Item ID " .. item .. " is not valid")
			s = entity:getBestStatements( 'P373' )
			if s[1] and s[1].mainsnak.datavalue.value then 
				 link = 'c:Category:' .. s[1].mainsnak.datavalue.value
			end
		end
		if not link then -- try linking to P935 gallery
			s = entity:getBestStatements( 'P935' )
			if s[1] then 
				 link = s[1].mainsnak.datavalue.value
			end
		end
	end
	if not link then-- apply default "Wikipedia" link type
		for _, language in ipairs(langList) do 
			local sitelink = getSitelink(item, entity, language)
			if sitelink then 
				link = mw.ustring.format('w:%s:%s', language, sitelink)
				break 
			end
		end
	end
	link = link or dLink  -- no wiki sitelink, so link to wikidata
	
	-- return the results
	if link~='' then
		return mw.ustring.format('[[%s|%s]]', link, label) -- return link
	else
		return label -- return just a label
	end
end

--[[
getLabel
 
This function returns a label translated to desired language, created based on wikidata

Usage:
{{#invoke:Wikidata label|getLabel|item=Q...|lang=..|link_style=..|capitalization=..}}

Parameters
	1: wikidata's item's q-code (required)
	2: language (optional; default {{int:lang}} )
	3: link_style: "wikipedia" (default), "Wikidata", "Commons", or "-" (no link)
	4: capitalization - can be "uc", "lc", "ucfirst", "lcfirst"

Error Handling:
	Bad q-code will result in displayed error
]]
function p.getLabel(frame)
	local args = frame.args
	if not (args.lang and mw.language.isSupportedLanguage(args.lang)) then 
		args.lang = frame:callParserFunction( "int", "lang" ) -- get user's chosen language 
	end
	if (not args.link) or (mw.text.trim(args.link) == "") then
		args.link = "wikipedia"
	end
	if (not args.capitalization) or (mw.text.trim(args.capitalization) == "") then
		args.capitalization = "none"
	end
	args.item = mw.text.trim(args.item or '')
	return p._getLabel(args.item, args.lang, args.link, args.capitalization, args.show_id)
end

--[[
_sitelinks

This function returns a table of sitelinks for a single project organized by language

Inputs:
	1: item - wikidata's item's q-code or entity class
	2: project - "wikipedia", "wikisource", "wikiquote", "wikibooks", "wikinews", "wikiversity", 
			"wikivoyage", "wiktionary", "commons", "mediawiki", "wikispecies", "wikidata",  etc.

Output:
	Table with language fields
]]
function p._sitelinks( item, project )
	local entity, sitelink
	-- get entity
	if type(item)=='string' then -- "item" is a q-code
		entity = mw.wikibase.getEntity(item); 
	else
		entity = item            -- "item" is the entity
		item   = entity.id       -- look-up q-code
	end
	
	-- get project code
	local LUT = {wikipedia='wiki', commons='commonswiki', mediawiki='mediawikiwiki', wikispecies='specieswiki', wikidata='wikidatawiki'}
	project = string.lower(project)
	if LUT[project] then -- correct the project name
		project=LUT[project]
	end
	local n = string.len(project);
	local s ={}
	if entity and entity.sitelinks then 					  -- See if entity exists, and that it has sitelinks
		for _, sitelink in pairs(entity.sitelinks) do 				-- loop over all sitelinks
		  local site = sitelink.site
			local lang = mw.ustring.sub( site, 1, mw.ustring.len(site) - n  )  -- language part of the siteID
			local proj = mw.ustring.sub( site, mw.ustring.len(site) - n + 1 )  -- project part of the siteID
			if proj == project then -- proj matches desired "project"
				s[lang] = sitelink.title
			end
		end
	end
	return s
end

--[[
sitelinks

This function returns a comma separated list of sitelinks for a single project organized by language
Its main purpose is to help with testing of _sitelinks function.

Usage:
{{#invoke:Wikidata label|sitelinks|item=Q...|project=..}}

Inputs:
	1: item - wikidata's item's q-code or entity class
	2: project - "wikipedia" (or "wiki"), "wikisource", "wikiquote", "wikibooks", "wikinews", "wikiversity", "wikivoyage", "wiktionary", etc.

Output:
	comma separated list
]]
function p.sitelinks(frame)
	local sitelinks = p._sitelinks(frame.args.item, frame.args.project)
	local s = {}
	for i, j in pairs(sitelinks) do
		table.insert(s, i .. ':' .. j)
	end
	return table.concat(s, ', ')	
end

--[[
_aliases

This function returns a table of aliases for a single language

Inputs:
	1: item - wikidata's item's q-code or entity class
	2: lang - language code, like 'en' or 'de'

Output:
	Table of aliases
]]
function p._aliases( item, lang )
	local entity
	if type(item)=='string' then -- "item" is a q-code
		entity = mw.wikibase.getEntity(item); 
	else
		entity = item            -- "item" is the entity
		item   = entity.id       -- look-up q-code
	end
	local s = {}
	if entity and entity.aliases then						-- See if there is an entity and that is has aliases
		if entity.aliases[lang] then						-- See if it has English Aliases
			for i, j in pairs(entity.aliases[lang]) do		-- Make a loop around the English aliases
				table.insert(s, j.value)					-- Create a table of English aliases
			end
		end
	end
	return s
end

--[[
aliases

This function returns a comma separated list of aliases for a single language
Its main purpose is to help with testing of _aliases function.

Usage:
{{#invoke:Wikidata label|aliases|item=Q...|lang=..}}

Inputs:
	1: item - wikidata's item's q-code or entity class
	2: lang - language code, like 'en' or 'de'

Output:
	Comma separated list of aliases
]]
function p.aliases(frame)
	return table.concat(p._aliases(frame.args.item, frame.args.lang), ', ')	
end

return p</text>
      <sha1>5j9zrgt4upqg2hd9hzuhbartwjoazkg</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Yesno</title>
    <ns>828</ns>
    <id>16757118</id>
    <revision>
      <id>965051543</id>
      <parentid>964943263</parentid>
      <timestamp>2019-06-19T05:49:20Z</timestamp>
      <contributor>
        <username>ديفيد عادل وهبة خليل 2</username>
        <id>88422</id>
      </contributor>
      <minor/>
      <comment>Reverted edits by [[Special:Contributions/14.186.182.149|14.186.182.149]] ([[User talk:14.186.182.149|talk]]) to last revision by [[:User:Mbch331|Mbch331]]</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="745">-- Function allowing for consistent treatment of boolean-like wikitext input.
-- It works similarly to the template {{yesno}}.

return function (val, default)
	-- If your wiki uses non-ascii characters for any of "yes", "no", etc., you
	-- should replace "val:lower()" with "mw.ustring.lower(val)" in the
	-- following line.
	val = type(val) == 'string' and val:lower() or val
	if val == nil then
		return nil
	elseif val == true 
		or val == 'yes'
		or val == 'y'
		or val == 'true'
		or val == 't'
		or val == 'on'
		or tonumber(val) == 1
	then
		return true
	elseif val == false
		or val == 'no'
		or val == 'n'
		or val == 'false'
		or val == 'f'
		or val == 'off'
		or tonumber(val) == 0
	then
		return false
	else
		return default
	end
end</text>
      <sha1>swdskn7svew8i9wuydn9uj5l3r2ghcs</sha1>
    </revision>
  </page>
</mediawiki>
