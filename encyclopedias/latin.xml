<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.10/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.10/ http://www.mediawiki.org/xml/export-0.10.xsd" version="0.10" xml:lang="en">
  <siteinfo>
    <sitename>Wikibooks</sitename>
    <dbname>enwikibooks</dbname>
    <base>https://en.wikibooks.org/wiki/Main_Page</base>
    <generator>MediaWiki 1.35.0-wmf.16</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2" case="first-letter">Media</namespace>
      <namespace key="-1" case="first-letter">Special</namespace>
      <namespace key="0" case="first-letter" />
      <namespace key="1" case="first-letter">Talk</namespace>
      <namespace key="2" case="first-letter">User</namespace>
      <namespace key="3" case="first-letter">User talk</namespace>
      <namespace key="4" case="first-letter">Wikibooks</namespace>
      <namespace key="5" case="first-letter">Wikibooks talk</namespace>
      <namespace key="6" case="first-letter">File</namespace>
      <namespace key="7" case="first-letter">File talk</namespace>
      <namespace key="8" case="first-letter">MediaWiki</namespace>
      <namespace key="9" case="first-letter">MediaWiki talk</namespace>
      <namespace key="10" case="first-letter">Template</namespace>
      <namespace key="11" case="first-letter">Template talk</namespace>
      <namespace key="12" case="first-letter">Help</namespace>
      <namespace key="13" case="first-letter">Help talk</namespace>
      <namespace key="14" case="first-letter">Category</namespace>
      <namespace key="15" case="first-letter">Category talk</namespace>
      <namespace key="102" case="first-letter">Cookbook</namespace>
      <namespace key="103" case="first-letter">Cookbook talk</namespace>
      <namespace key="108" case="first-letter">Transwiki</namespace>
      <namespace key="109" case="first-letter">Transwiki talk</namespace>
      <namespace key="110" case="first-letter">Wikijunior</namespace>
      <namespace key="111" case="first-letter">Wikijunior talk</namespace>
      <namespace key="112" case="first-letter">Subject</namespace>
      <namespace key="113" case="first-letter">Subject talk</namespace>
      <namespace key="828" case="first-letter">Module</namespace>
      <namespace key="829" case="first-letter">Module talk</namespace>
      <namespace key="2300" case="first-letter">Gadget</namespace>
      <namespace key="2301" case="first-letter">Gadget talk</namespace>
      <namespace key="2302" case="case-sensitive">Gadget definition</namespace>
      <namespace key="2303" case="case-sensitive">Gadget definition talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>Latin/Print Version</title>
    <ns>0</ns>
    <id>161310</id>
    <revision>
      <id>2469638</id>
      <parentid>2469327</parentid>
      <timestamp>2012-12-28T20:21:54Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <minor/>
      <comment>[[WB:REVERT|Reverted]] edits by [[Special:Contributions/89.181.209.172|89.181.209.172]] ([[User talk:89.181.209.172|talk]]) to last version by Dirk HÃ¼nniger</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4764" xml:space="preserve">__NOTOC__
__NOEDITSECTION__

{{Print version notice|Latin}}

==A Progressive Latin Grammar and Exercises==

Introduction to the origins and structure of Latin:

{{Print chapter heading|How to study a language on the Internet and in your head}} 
{{:Latin/How to study a language on the Internet and in your head}}

{{Print chapter heading|Special consideration: How to use a Wikibook when progress may mean inaccuracy}}
{{:Latin/Special consideration: How to use a Wikibook when progress may mean inaccuracy}}

{{Print chapter heading|Grammatical Introduction to Latin}} 
{{:Latin/Lesson 1}}

{{Print chapter heading|Basic Grammar}}
{{:Latin/Lesson 2}}

----

==Chapter 1: Basic Sentences==

{{Print chapter heading|The Nominative Case}}
{{:Latin/Lesson 1-Nominative}}

{{Print chapter heading|Present indicative active construct}}  
{{:Latin/Lesson 3-Present Verbs}}

{{Print chapter heading|Adverbs &amp; Prepositions}}
{{:Latin/Lesson 4-Adverbs and Prepositions}}

{{Print chapter heading|The Accusative Case}} 
{{:Latin/Lesson 5-Accusative}}

{{Print chapter heading|Pronouns}}
{{:Latin/Lesson 6-Pronouns}}

{{Print chapter heading|Chapter 1 Verse}}
{{:Latin/Chapter 1 Verse}}

----

==Chapter 2: Complicated Sentences==

{{Print chapter heading|The Imperfect Tense}}
{{:Latin/Lesson 1-Imperfect}}

{{Print chapter heading|The Genitive and Dative Cases}}
{{:Latin/Lesson 2-Genitive and Dative}}

{{Print chapter heading|The Future Tense}}
{{:Latin/Lesson 3-Future}}

{{Print chapter heading|The Ablative and Vocative Case}}
{{:Latin/Lesson 4-Ablative}}

{{Print chapter heading|The 3rd, 4th and 5th declensions}}
{{:Latin/Lesson 5-Declensions}}

{{Print chapter heading|Irregular Verbs &amp; Revision}}
{{:Latin/Lesson 6-Irregular Verbs}}

{{Print chapter heading|Translation Exercise}}
{{:Latin/Lesson 7-Translation}}

{{Print chapter heading|Imperfect and Future indicative active constructs}} 
{{:Latin/Lesson 8-Imperfect and Future}}

{{Print chapter heading|Chapter 2 Verse}}
{{:Latin/Chapter 2 Verse}}

----

==Chapter 3: Advanced Sentences==

{{Print chapter heading|Imperatives}}
{{:Latin/Lesson 1-Imperative}}

{{Print chapter heading|Active v. Passive Verbs}} 
{{:Latin/Lesson 2-Active v Passive}}

{{Print chapter heading|Indicative Passive Verbs}}
{{:Latin/Lesson 3-Passive}}

{{Print chapter heading|Principal Parts}}
{{:Latin/Lesson 4-Principal Parts}}

{{Print chapter heading|The Perfect Indicative Tense}}
#{{:Latin/Lesson 5-Perfect Indicative}}

{{Print chapter heading|The Perfect Indicative Passive Verbs}} 
#{{:Latin/Lesson 6-The Perfect Passive}}

{{Print chapter heading|Future and Past Perfect Indicative Tenses}} 
{{:Latin/Lesson 7-Future and Past Perfect}}

{{Print chapter heading|Ablative Absolute and Accusative Infinitive Constructions}} 
{{:Latin/Lesson 8-Ablative Absolute and Accusative Infinitive}}

{{Print chapter heading|Chapter 3 Verse}}
{{:Latin/Chapter 3 Verse}}

----

==Chapter 4: The Subjunctive Mood and Complex Sentences==

{{Print chapter heading|The Subjunctive Mood}}
{{:Latin/Lesson 1-Subjunctive}}

{{Print chapter heading|The Uses of the Subjunctive}}
{{:Latin/Lesson  2-Subjunctive Use }}

{{Print chapter heading|The Subjunctive Imperfect}}
{{:Latin/Lesson 3-Subjunctive Imperfect}}

{{Print chapter heading|The Subjunctive Passive Verbs}}
{{:Latin/Lesson 4-The Subjunctive Passive}}

{{Print chapter heading|The Subjunctive Perfects}}
{{:Latin/Lesson 5-The Subjunctive Perfect}}

{{Print chapter heading|The Subjunctive Perfect Passive Verbs}}
{{:Latin/Lesson 6-The Subjunctive Perfect Passive}}

{{Print chapter heading|The Gerund and Participles}}
{{:Latin/Lesson 7-The Gerund and Participles}}

{{Print chapter heading|Conditional Clauses}}
{{:Latin/Lesson 8-Conditional Clauses}}

{{Print chapter heading|Revision}}
{{:Latin/Lesson 9-Revision}}

{{Print chapter heading|Idioms}}
{{:Latin/Lesson 10-Idioms}}

{{Print chapter heading|Translation}}
{{:Latin/Lesson 11-Translation}}

{{Print chapter heading|Chapter 4 Verse}}
{{:Latin/Chapter 4 Verse}}

{{Print chapter heading|Verse from the Gospels}}
{{:Latin/Chapter 5 Verse}}

----

==Chapter 5: Review==

{{Print chapter heading|Revision}}
{{:Latin/Lesson 1}}

{{Print chapter heading|Revision}}
{{:Latin/Lesson 2}}

&lt;noinclude&gt;
{{Print chapter heading|Translation}}
{{:Latin/Latin/Lesson 1-Nominative}}
&lt;/noinclude&gt;

{{Print chapter heading|Exercises}} 
{{:Latin/Lesson 5-Accusative}}

{{Print chapter heading|Exercises}} 
{{:Latin/Lesson 2-Genitive and Dative}}

{{Print chapter heading|Translation}}
{{:Latin/Lesson 4-Ablative}}

{{Print chapter heading|Revision}}
{{:Latin/Lesson 6-Pronouns}}

&lt;noinclude&gt;
{{Print chapter heading|Chapter 6 Verse}}
#{{:Latin/Lesson 8-Verse}}
&lt;/noinclude&gt;

{{Print chapter heading|Poem about Latin}}
{{:Latin/Lesson 9-Poem}}</text>
      <sha1>byykt6n5h49r1kait2w6drk6kiroldf</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Chapter 1 Verse</title>
    <ns>0</ns>
    <id>117095</id>
    <revision>
      <id>3257270</id>
      <parentid>2705569</parentid>
      <timestamp>2017-08-04T10:31:17Z</timestamp>
      <contributor>
        <ip>83.21.144.157</ip>
      </contributor>
      <comment>sussurat -&gt; susurrat</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3833" xml:space="preserve">= Latin I prose =
{| class="wikitable" width="50%"
|-
! colspan="2" | &lt;b&gt;Lesson Vocabulary&lt;/b&gt;
|-
| align="center" colspan="2" |
|-
! bgcolor="#CCFFFF" | &lt;font face="Arial" size="4"&gt;Latin&lt;/font&gt;
! bgcolor="#CCFFCC" | &lt;font face="Arial" size="4"&gt;English&lt;/font&gt;
|-
| align="center" colspan="2" |
|-
| align="center" bgcolor="#CCFFFF" | '''fulgeo, -ere'''
| align="center" bgcolor="#CCFFCC" | '''to shine'''
|-
| align="center" bgcolor="#CCFFFF" | '''aperio, -ire'''
| align="center" bgcolor="#CCFFCC" | '''to open'''
|-
| align="center" bgcolor="#CCFFFF" | '''dormio, -ire'''
| align="center" bgcolor="#CCFFCC" | '''to sleep'''
|-
| align="center" bgcolor="#CCFFFF" | '''habeo, -ere'''
| align="center" bgcolor="#CCFFCC" | '''to have'''
|-
| align="center" bgcolor="#CCFFFF" | '''semper'''
| align="center" bgcolor="#CCFFCC" | '''always'''
|-
| align="center" bgcolor="#CCFFFF" | '''tempto, -are'''
| align="center" bgcolor="#CCFFCC" | '''to try'''
|-
| align="center" bgcolor="#CCFFFF" | '''dico, -ere'''
| align="center" bgcolor="#CCFFCC" | '''to speak, say'''
|-
| align="center" bgcolor="#CCFFFF" | '''femina'''
| align="center" bgcolor="#CCFFCC" | '''woman'''
|-
| align="center" bgcolor="#CCFFFF" | '''facio, -ere'''
| align="center" bgcolor="#CCFFCC" | '''to make'''
|-
| align="center" bgcolor="#CCFFFF" | '''ecce!'''
| align="center" bgcolor="#CCFFCC" | '''look!'''
|-
| align="center" bgcolor="#CCFFFF" | '''velle:'''&lt;br&gt;volo&lt;br&gt;vis&lt;br&gt;vult&lt;br&gt;volumus&lt;br&gt;vultis&lt;br&gt;volunt
| align="center" bgcolor="#CCFFCC" | '''to wish, want:'''&lt;br&gt;I want&lt;br&gt;you want&lt;br&gt;he/she wants&lt;br&gt;we want&lt;br&gt;you want&lt;br&gt;they want
|-
| align="center" bgcolor="#CCFFFF" | '''turba'''
| align="center" bgcolor="#CCFFCC" | '''crowd'''
|-
| align="center" bgcolor="#CCFFFF" | '''attonitus'''
| align="center" bgcolor="#CCFFCC" | '''astonished'''
|-
| align="center" bgcolor="#CCFFFF" | '''tantus, -a, -um'''
| align="center" bgcolor="#CCFFCC" | '''so great'''
|-
| align="center" bgcolor="#CCFFFF" | '''susurro, -are'''
| align="center" bgcolor="#CCFFCC" | '''to whisper'''
|-
| align="center" bgcolor="#CCFFFF" | '''patefacio, -ere'''
| align="center" bgcolor="#CCFFCC" | '''to open, disclose'''
|-
| align="center" bgcolor="#CCFFFF" | '''rideo, -ere'''
| align="center" bgcolor="#CCFFCC" | '''to laugh'''
|}

The following is a nice easy short story for the Latin novice:

----

===Lucius ad forum it===

Sol fulget. Lucius oculos aperit. Videt uxorem suam, Octaviam. Octavia dormit. Ergo, Lucius ad forum it. 

Lucius multos amicos habet. Unus ex amicis Claudius est. Claudius semper in foro est. Claudius temptat dicere cum feminis, quod Claudius multas feminas amat. Multae feminae, tamen, Claudium non amant.

Lucius ad forum ambulat. Multos Romanos videt. Unus Romanorum ad cives orationem facit. Est Claudius!

"Ecce! Ecce!" dicit Lucius. Lucius vult dicere cum amico. Claudius, tamen, dicit ad turbam.

"Amicus meus, Lucius" dicit, "hominem necavit."&lt;sup&gt;A&lt;/sup&gt;

Lucius anxius respondet, "Quid dicis, amice?"

Claudius est attonitus. Dicit,
"Te non video, mi Luci..."

Lucius respondet, "hominem non necavi! Cur tanta dicis?"
Claudius susurrat,
"Volo videri&lt;sup&gt;B&lt;/sup&gt; fortissimus, amice. Feminae te amant. Me dolent&lt;sup&gt;C&lt;/sup&gt;."

Lucius omnia&lt;sup&gt;D&lt;/sup&gt; turbae&lt;sup&gt;E&lt;/sup&gt; patefacit.

Multae feminae ad Claudium misserimum rident. Mox, etiam Claudius ad se ridet.


----

*&lt;sup&gt;A&lt;/sup&gt; ''Necavit'' is the perfect form of ''necare'', meaning "he killed." For more, check out the next chapter.

*&lt;sup&gt;B&lt;/sup&gt; ''Videri'' means "to appear," (or more literally, "to be seen") and is the passive infinitive of ''video''. There is more on that in chapters 2-4.
*&lt;sup&gt;C&lt;/sup&gt; ''Me dolet'' means "makes me suffer".
*&lt;sup&gt;D&lt;/sup&gt; ''Omnia'' means "everything".
*&lt;sup&gt;E&lt;/sup&gt; ''turbae'' is the dative case of "turba", meaning "to the crowd".

{{BookCat}}</text>
      <sha1>lpywv8bp0ovewgs1xybh0nkglgxxb6d</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Chapter 2 Verse</title>
    <ns>0</ns>
    <id>19482</id>
    <revision>
      <id>3285679</id>
      <parentid>2061705</parentid>
      <timestamp>2017-08-26T22:02:14Z</timestamp>
      <contributor>
        <username>Strange quark</username>
        <id>3078616</id>
      </contributor>
      <comment>Fix categorization</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2363" xml:space="preserve">==Using a Dictionary==

Foremost, Latin verbs are listed using the '''present indicative first person singular active''' construct of the verb.  For example, to find the meaning of the verb ''amÄre'', you must find ''amÅ'' listed in the dictionary. Some verbs like ''esse'' and ''ferre'' are highly irregular and use different stems to form the perfect tenses.

Nouns are usually much easier. They are always given in the nominative singular. If you see a noun such as ''vÅcem'' and do not know what it is, do not fret. If you look for ''voc-'' in the dictionary, you will not find what you are looking for. The ending ''-em'' typically belongs to the third-declension accusative; thus, be aware that third-declension nouns have radically changing stems. Those that have the consonant ''c'' or ''g'' usually have the consonant ''x'' in the nominative singular. Thus the nominative singular of ''vÅcem'' is ''vÅx'', and ''rÄx'' becomes ''rÄgem'' in the accusative singular. There are plenty of other simple rules which you will learn through experience.

Words that do not conjugate or decline (like prepositions and particles) are listed under their only form.

==Exercise 1==

===Vocabulary===

#''affectus, -Å«s, m.'', goodwill
#''confessiÅ, -Ånis, f.'', confession
#''dÄ'', from, about, concerning
#''liber, librÄ«, m.'', book
#''malus -a -um'', evil, bad
#''placeÅ -Äre'' + dative, to please (''placuÄ«sse'' is a perfect infinitive)
#''filia, -ae f.'', daughter
#''puella, -ae f.'', girl

===Other Difficulties===

#''quod ad mÄ attinet'', as far as I'm concerned
#''cum scriberentur'', when they were written (imperfect passive subjuntive)
#''quid sentiant'', what they think (present subjunctive in indirect question)
#''ipsÄ« viderint'', (loosely) they will see in their own way (future perfect)
#''eÅs placÄre sciÅ'', accusative-infinitive construction for indirect statement: "I know they [the books] please"

===Passage===

Translate the following passage:

''ConfessiÅnum meÄrum librÄ« tredecim et dÄ malÄ«s et dÄ bonÄ«s meÄ«s deum laudant iÅ«stum et bonum atque in eum excitant humÄnum intellectum et affectum. Interim quod ad mÄ attinet, hoc in mÄ ÄgÄrunt cum scriberentur et agunt cum leguntur. quid dÄ illÄ«s aliÄ« sentiant, ipsÄ« viderint; multÄ«s tamen frÄtribus eÅs multum placuÄ«sse et placÄre sciÅ.''

{{BookCat}}</text>
      <sha1>fmnmig2fsp281yfnf4ggt909uesmxk3</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Chapter 3 Verse</title>
    <ns>0</ns>
    <id>36645</id>
    <revision>
      <id>3452587</id>
      <parentid>3285680</parentid>
      <timestamp>2018-08-20T18:28:56Z</timestamp>
      <contributor>
        <username>Leaderboard</username>
        <id>1176064</id>
      </contributor>
      <minor/>
      <comment>/* top */removing double spaces, replaced: â   (2) using [[Project:AWB|AWB]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="599" xml:space="preserve">{{latin}}

The following poem is written in Hendecasyllabic. It is an introductory, dedication poem written by the poet [[Wikipedia:Catullus|Gaius Valerius Catullus]].

it is commonly referred to as "Catullus 1" or by its first line.


:Cui dono lepidum novum libellum
:arida modo pumice expolitum?
:Corneli, tibi: namque tu solebas
:meas esse aliquid putare nugas.
:Iam tum, cum ausus es unus Italorum
:omne aevum tribus explicare cartis...
:Doctis, Iuppiter, et laboriosis!
:Quare habe tibi quidquid hoc libelliâ
:qualecumque, quod, o patrona virgo,
:plus uno maneat perenne saeclo!

{{BookCat}}</text>
      <sha1>mbqwpkmk5vyyi1ynxk1x04h3o1hvd28</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Chapter 4 Verse</title>
    <ns>0</ns>
    <id>222706</id>
    <revision>
      <id>2407297</id>
      <parentid>2407294</parentid>
      <timestamp>2012-09-13T00:44:35Z</timestamp>
      <contributor>
        <ip>90.180.173.128</ip>
      </contributor>
      <comment>Adding a sentence</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2323" xml:space="preserve">Haec est fabula De Faciebus Iani. Ianus, ut dicebatur, erat unus deorum, cui facies duae erant. Altera earum enim in futura et altera in praeterita prospiciebat.

Apollo ei olim sic dixit: "Nonne tibi facies est, qua tempus praesens spectes?" Et paulo post Ianus ita respondit:

"Mundus - orbis terrarum cyclus est similiter ac tempus est cyclicum. Et initium omnium et finem video. Omnia prospicio aeternusque sum, neque opus est porro videre, quae palam iaceant."

Diu cogitavit Apollo de verbis Iani hominesque acutissimÄ mente in omni orbe terrarum conquaesivit eo consilio, ut ipse tam sapiens ut Ianus fieret. Postea cum quibusdam illustrissimis viris collocutus est, quo sapientior esset. Eo facto tamen unus eorum, cui Minervus nomen, Apollinem monuit, ne summam quaereret sapientiam, quam novisse nullum alium quam Ianum oportebat. Revenit autem Apollo ad Ianum eumque, ut veritatem cognosceret, ea summa rogavit.

"Intellegisne omnino quid roges?" inquit Ianus, "Si dis par fueris, omnibus iuribus privari possis."

Itaque Apollo cognovit sapientissimum omnium fuisse, a quo monitus est.


Translation below:









































This is the story of the faces of Janus. Janus, as it used to be said, was one of the gods who had two faces. It was that one spied into the future while the other into the past.

Apollo once had said to him, "Have you not a face with which to see the present?" After a few moments, thus spoke Ianus:

"The world is a circle. Time is a circle. I see both the beginning and end of all living things. I am foreseeing and eternal; therefore, it is not necessary for me to see that which is lying out of sight."

Apollo thought about these words for a very long time, and thus, that he might become wise like Janus, he sought the keenest minds of the land. He then was speaking with some great men that he might become wiser. However, one, whose name was Minervus, warned him not to seek the ultimate/highest truth because it may only be known by Janus. But he returned again to ask Janus that he might obtain the truth.

"Do you even know for what you're asking? If you enter onto the same level (of the Gods), all your rights might be snatched from you," said Janus.

And so Apollo knows now that the same man who had warned him was the wisest of all.

{{BookCat}}</text>
      <sha1>956xvdf3tm6uupkhvthcp2nuybq7ru8</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Chapter 5 Verse</title>
    <ns>0</ns>
    <id>17840</id>
    <revision>
      <id>3440973</id>
      <parentid>3285681</parentid>
      <timestamp>2018-07-07T15:17:07Z</timestamp>
      <contributor>
        <ip>194.168.216.98</ip>
      </contributor>
      <comment>/* A Verse From the Gospel of St. Luke */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="842" xml:space="preserve">&lt; [[Latin]]

== A Verse From the Gospel of St. Luke ==

Respondens Simon dixit: "Aestimo quia is, cui plus donavit". At ille dixit ei: "Recte iudicasti". Et conversus ad mulierem, dixit Simoni: "Vides hanc mulierem? Intravi in domum tuam: aquam pedibus meis non dedisti; haec autem lacrimis rigavit pedes meos et capillis suis tersit. Osculum mihi non dedisti haec autem, ex quo intravi non cessavit osculari pedes meos. Oleo caput meum non unxisti; haec autem unguento unxit pedes meos. Propter quod dico tibi: Remissa sunt peccata eius multa, quoniam dilexit multum: cui autem minus dimittitur, minus diligit." Dixit autem ad illam: "Remissa sunt peccata tua". Et coeperunt, qui simul accumbebant, dicere intra se: "quis est hic, qui etiam peccata dimittit?". Dixit autem ad mulierem: Fides tua te salvam fecit; vade in pace!".

{{BookCat}}</text>
      <sha1>bi9vqecml9g1psj1xz6890ekm7fg6aw</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/How to study a language on the Internet and in your head</title>
    <ns>0</ns>
    <id>20742</id>
    <revision>
      <id>3505210</id>
      <parentid>3505158</parentid>
      <timestamp>2018-12-27T01:28:59Z</timestamp>
      <contributor>
        <username>Atcovi</username>
        <id>1015207</id>
      </contributor>
      <comment>This is already implied... no need for useless repetition</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1776" xml:space="preserve">How do you think about languages as you study them? Typically, you will consider every punctuation mark and letter, all the verbs and nouns, adverbs and adjectives, and study them in order to make connections. Ideally, you will have a teacher to point you in the right direction, and help you make those connections. But when you have no teacher, these connections are left for you to discover. They may be clear or hidden, but either way you will have to make them yourself. As you explore this Wikibook, it will require the skill of critical thinking.

You can never go wrong studying a language if you remember that exposing yourself to a language, even if you stumble in practice, is itself learning it. Looking things up too much can sometimes impede progress. Stretch your memory, read slowly, and re-read. As you will soon discover, you are about to study a language that is rich and full of meaning, an ancestor of many modern languages spoken around the world, including romance languages, like Spanish, French, Italian, Romanian, and even English.

== So do not assume that... ==
...Latin is like any other language. Do not assume ancient Roman culture is entirely unlike other cultures, however. The Romans grappled with issues that are universally dealt with.

We, the authors, endorse memorization, and after that, immersion. You must develop Latin muscles, and a willingness to write or type things out, or drill using software, or with a friend. Note the patterns after you have memorized the forms, not before. Allow yourself to be mesmerized by them. Similarly, seek out explanation only after you have memorized forms. Memorize forms, then make sentences, then use your knowledge to speak the language.

==See also==
*[[How to learn a language]]

{{BookCat}}</text>
      <sha1>bkhhr197qeqe2i2xbj45mf9p4nqp5j4</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 1</title>
    <ns>0</ns>
    <id>960</id>
    <revision>
      <id>3562355</id>
      <parentid>3470784</parentid>
      <timestamp>2019-08-09T20:06:55Z</timestamp>
      <contributor>
        <ip>134.176.146.11</ip>
      </contributor>
      <comment>/* Word Parts */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="12386" xml:space="preserve">{{Latin}}
----
=What is Latin?=
&lt;small&gt;
''Parts of this introduction were taken from [[Wikipedia:en:Latin|The Latin Language]] on the [[en:Main Page|Wikipedia]].''
&lt;/small&gt;

Latin was the language originally spoken in the region around the city of Rome called Latium. It gained great importance as the formal language of the Roman Empire. 

All [[Wikipedia:en:Romance languages|Romance languages]] &amp;mdash; including Italian, French, Spanish, Portuguese, Romanian, and others &amp;mdash; descend from a Latin parent, and many words in English and other languages today are based on Latin roots. Moreover, Latin was a ''lingua franca'', the learned language for scientific and political affairs in Europe, for more than one and a half thousand years, being eventually replaced by French in the 18th century and English by the middle of the 20th. Latin remains the formal language of the Roman Catholic Church to this day and is the official language of the Vatican. 

Romance languages are not derived from Classical Latin, a literary language for writing and oration, but rather from Vulgar Latin, the language spoken by the common people, or '' vulgus, '' of Rome. Classical Latin and Vulgar Latin (Romance) differ (for example) in that Romance had distinctive stress whereas Classical had distinctive length of vowels. In Italian and Sardo logudorese, there is distinctive length of consonants and stress, in Spanish only distinctive stress, and in French even stress is no longer distinctive. Stress refers to the emphasis of pronunciation on syllabic units. Most English nouns not derived from other parts of speech have an emphasis on the first syllable. Foreign loan words in English sometimes retain their original stress, which may be on the second or third syllable, though assimilation into English will usually result in a vowel shift towards emphasis on the first syllable.

Another major distinction between Classical and Romance is that modern Romance languages, excluding Romanian, have lost their case endings (suffixes at the end of the word used in place of prepositions) in most words (some pronouns being exceptions). Romanian is still equipped with several cases though some, notably the ablative, are no longer represented.

Here are some current English words which are Latin derivativesË

* Video is the Latin verb "I see" which in English is a noun referring to a recording and playback device.
* Audio is the Latin verb "I hear" which in English is a noun referring to a sound wave.
* Victoria is the Latin noun "victory" which in English is a proper noun and woman's name.
* Carmen is the Latin noun "song" which in English is a proper noun and a woman's name.

=Introduction to the Latin Language=

== Simple and Compound Words ==

In Latin, words are either:
* ''' simple ''' (words that consist of only one part). For example:

{| class="wikitable" style="width: 300px"
|-
! bgcolor="#CCFFFF" | &lt;font face="Arial" size="4"&gt;Latin&lt;/font&gt;
! bgcolor="#CCFFCC" | &lt;font face="Arial" size="4"&gt;English&lt;/font&gt;
|-
| align="center" colspan="2" |
|-
| align="center" bgcolor="#CCFFFF" | '''eÅ'''
| align="center" bgcolor="#CCFFCC" | '''I go'''
|-
| align="center" bgcolor="#CCFFFF" | '''ferÅ'''
| align="center" bgcolor="#CCFFCC" | '''I carry'''
|-
| align="center" bgcolor="#CCFFFF" | '''dÅ'''
| align="center" bgcolor="#CCFFCC" | '''I give'''
|}
* ''' compound ''' (words that consist of more than one part, for example, a root word combined with a prefix). For example:

{| class="wikitable" style="width: 300px"
|-
! bgcolor="#CCFFFF" | &lt;font face="Arial" size="4"&gt;Latin&lt;/font&gt;
! bgcolor="#CCFFCC" | &lt;font face="Arial" size="4"&gt;English&lt;/font&gt;
|-
| align="center" colspan="2" |
|-
| align="center" bgcolor="#CCFFFF" | '''abeÅ'''
| align="center" bgcolor="#CCFFCC" | '''I go away'''
|-
| align="center" bgcolor="#CCFFFF" | '''trÄnsferÅ'''
| align="center" bgcolor="#CCFFCC" | '''I carry across'''
|-
| align="center" bgcolor="#CCFFFF" | '''reddÅ'''
| align="center" bgcolor="#CCFFCC" | '''I give back'''
|}

==Word Parts==

Inflected words (i.e., words having ending- or spelling-changes according to their grammatical functions in the sentence) have a '''stem''' and a '''root.''' 

&lt;B&gt;The Stem&lt;/B&gt;

The stem is the part of the word to which various suffixes are added. The final suffix determines either the role of the word in the sentence (for example, when a Roman slave wished to address his ''dominus'' (master), he used the vocative form ''domine'' -- equivalent to "O master" in English) or the person/subject involved in the action (for example, "I dominate" may be expressed as "domin-or", and "they dominate" as "domin-antur"). In these cases, ''domin-'' is the stem and ''-us'', ''-e'', ''-or'' and ''-antur'' are suffixes. The addition of such suffixes is called ''inflection''. This is discussed further in the [[#Summary|Summary]].

&lt;B&gt;The Root&lt;/B&gt;

The root is the part of the word that carries the essential meaning. For example the stem of ''agitÅ'' (I drive onward) is ''agit-'', whose root is ''ag'' (do, drive), which is in common to words of similar meaning: ''agÅ'' (I do, drive), ''agmen'' (that which is driven, such as a flock), etc. Notice the essential difference between a root and a stem. To the root "ag" has been added a suffix "(i)tÅ-" which denotes frequency of action (so "agit-" means to do or drive more than once, hence "agit-Å", I agitate, I keep (something) moving, I urge, I impel).

In contrast, English uses word order more than inflection to determine the function of a word within a sentence. English also uses words like pronouns (I, she, etc.) and prepositions (to, at, etc.) where Latin generally prefers inflexions. Thus "dom-Ä«" (noun -- "at home"), "ag-unt" (verb -- "they do/drive").

&lt;B&gt;Primitives&lt;/B&gt;

Primitives occur when both the stem and the root are the same. For example, in the word ''agere'' (to do, drive) both the stem and the root are the same: "ag-".

&lt;B&gt;Derivatives&lt;/B&gt;

Derivatives occur when the root or stem is modified. For example, the stem ''flamm-'' from the noun ''flamma'' has the root "flag" ("blaze"), "nÅscÅ" (I know) from the verb "nÅscere" has the root "gnÅ-" ("know").

&lt;B&gt;Suffixes&lt;/B&gt;

Latin attaches suffixes ("endings") to stems to turn them into words (most stems and roots cannot be used in sentences without an ending). This inflection is essential to forming Latin sentences. The various suffixes and their translations will be learned in the later lessons.

=Types of Words used in Latin=

==Nouns==

A noun (Latin: ''nÅmen'') is "something perceived or conceived by the mind."

There are two kinds of nouns: Substantives and Pronouns. 

1. &lt;B&gt;Substantive&lt;/B&gt; (''nÅmen substantÄ«vum'') is a name simply denoting something perceived or conceived: ''psittacus'' - the parrot, ''nix'' - the snow, ''virtus'' - virtue.

2. &lt;B&gt;Pronoun&lt;/B&gt; (''prÅnÅmen'') is a word used in place of a ''substantivum'', usually when the ''substantivum'' is already known: ''ea'' - she, ''ille'' - that man

Nouns have changing endings on the stem (known as declension) and three incidents: number, gender and case. Number concerns whether the thing referred to is singular or plural (and the ending shows this); gender classifies a substantive as masculine, feminine or neuter (this determines how the endings of adjectives and pronouns behave) and case (where the ending must show how the noun fits in to the sentence). Adjectives and Pronouns must agree in all incidents when they refer to a substantive.

==Verbs==

Verbs (''verba'') express an action or a state of being, e.g., ''agÅ'' (I do), ''dÄ«xit'' (he said), ''venÄ«s'' (you come). Conjugation is the term for adding inflections to verb stems to indicate person (first, second or third), number (singular or plural), tense (present, future, imperfect, perfect, pluperfect or future perfect), voice (active or passive), and mood (indicative, subjunctive or imperative).

A verb can be either ''finite'' or ''infinite'':

1. &lt;B&gt;Finite&lt;/B&gt; verbs (''verba finÄ«ta'') are inflected and have a subject, e.g., I run, you run, he runs, they drive, the computer is turned on.

2. The &lt;B&gt;infinite&lt;/B&gt; verbs (''verba infinÄ«ta'') are not inflected and have no subject, e.g. to run, to drive, to turn on, to have drawn. ''Participles'', which are inflected as substantives rather than as verbs, may also be considered infinite, e.g., the ''running'' boy.

==Modifiers==

1. &lt;B&gt;Adjectives&lt;/B&gt; (''adiectÄ«va'') are used to describe nouns. They indicate a quality perceived or conceived as inherent in, or attributed to, something denoted. E.g., ''vir &lt;U&gt;magnus&lt;/U&gt;'' (the &lt;U&gt;great&lt;/U&gt; man), ''puella &lt;U&gt;pulchra&lt;/U&gt;'' (the &lt;U&gt;fair&lt;/U&gt; girl)

2. &lt;B&gt;Adverbs&lt;/B&gt; (''adverbia'') are similar to adjectives, except that they are used to qualify verbs, adjectives or other adverbs, rather than nouns. In practice, they restrict the meaning of the verb or adjective by specifying how or how much. E.g., ''currÅ &lt;U&gt;celeriter&lt;/U&gt;'' (I run &lt;U&gt;quickly&lt;/U&gt;), ''pugnat &lt;U&gt;fortiter&lt;/U&gt;'' (he fights &lt;U&gt;bravely&lt;/U&gt;), "&lt;U&gt;vÄrÄ&lt;/U&gt; iÅ«cundus est" (he's &lt;U&gt;really&lt;/U&gt; nice"), "&lt;U&gt;incrÄdibile&lt;/U&gt; callida est" (she's &lt;U&gt;incredibly&lt;/U&gt; clever).

==Other==

Particles are uninflected words that provide extra meaning.

1. &lt;B&gt;Prepositions&lt;/B&gt; (''praepositiÅnÄs'') are little words which tell you how one word is behaving in relation to another word ("the &lt;U&gt;duck&lt;/U&gt; was &lt;B&gt;near&lt;/B&gt; the &lt;B&gt;pond&lt;/B&gt;", "&lt;U&gt;she&lt;/U&gt; went &lt;B&gt;towards&lt;/B&gt; the &lt;B&gt;wood&lt;/B&gt;"). In Latin, the noun that follows a preposition takes a particular ending (called a "case"), depending on the nature of the relationship, or on the nature of the preposition itself. E.g., ''ad'' (by), ''in'' (in), ''sub'' (under). What all this means is that a preposition is a sort of adverb, telling you how something is done. For example, "you go" is a simple statement, but "you go in" suggests that you don't just "go", you go so as to enter something, and so you need a noun for the "something". In English, we might say "you go &lt;B&gt;into&lt;/B&gt; the house". In Latin, this would be: "&lt;B&gt;in&lt;/B&gt; domum inÄ«s". Notice the form "in domum", which means "into" the house -- you're going into it, you're not yet exactly inside it (the ending -um of "domum" is called "accusative"). When you are inside the house, what you do is "in" the house, which is "in domÅ" (the ending -Å of "domÅ" is called "ablative").

2. &lt;B&gt;Conjunctions&lt;/B&gt; (''coniunctiÅnÄs'') join together clauses and sentences. E.g., ''et'' (and), ''atque'' (as well as), ''sed'' (but).

3. &lt;B&gt;Interjections&lt;/B&gt; (''interiectiÅnÄs'') are exclamations used to express feeling or to gain attention. E.g., ''Å!'' (oh!) ''Äheu!'' (alas!) ''ecce!'' (behold!)

==Articles==
Latin has no definite article or indefinite article, respectively "the" and "a/an". When translating Latin into English the appropriate article must be added.

=Summary=


{| BORDER
|-
| COLSPAN="2" | &lt;center&gt;&lt;big&gt;&lt;big&gt;'''Parts of Speech'''&lt;/big&gt;&lt;/big&gt;&lt;/center&gt;
|-
| '''Inflected''' || '''Uninflected'''
|-
| ''Substantives:'' things perceived or conceived
| ''Adverbs:'' describe adjectives, verbs, and other adverbs
|-
| ''Adjectives:'' indicate a quality perceived or conceived as inherent of something in the substantive
| ''Prepositions:'' help nouns define their relations to other nouns
|-
| ''Pronouns:'' nouns used in place of substantives and adjectives
| ''Conjunctions:'' Join clauses and sentences
|-
| ''Verbs:'' mark the beginning of an independent [[wikipedia:clause|clause]]. The verb in Latin is inflected so that we know the subject ("I learn"), and its tense (to what general or specific time the clause relates to). We call the inflection of a verb '''conjugation'''
| ''Interjection:'' exclamation
|}
&lt;TR&gt;&lt;TD&gt;

=Exercises=

1. What is the shared root in the following English words? &lt;br/&gt;
* actor, reaction, radioactive
* transfer, fertile, interference
2. In the following English words, what is the stem and what is the ending? &lt;br/&gt;
* knights
* riding
* horses
* jumped
3. What parts of speech are each of the English words in (2), as well as the following:
* with
* and
* because
* hooray
* silently
* never
4. Answer the following questions about the Latin language:
* In what area of Italy was Latin originally spoken?
* Name the two varieties of Latin that existed in antiquity.
* What major organization still uses Latin today?

{{BookCat}}</text>
      <sha1>12obqdosu8lzmc95nfdlm821nd8xcpw</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 1-Imperative</title>
    <ns>0</ns>
    <id>117734</id>
    <revision>
      <id>3244266</id>
      <parentid>3243344</parentid>
      <timestamp>2017-07-15T22:16:20Z</timestamp>
      <contributor>
        <username>Judith M</username>
        <id>3089305</id>
      </contributor>
      <minor/>
      <comment>/* Latin */ I elaborated on the negative imperative. .</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2938" xml:space="preserve">=Imperative=

==Positive Imperative==
===English===
In English (and in Latin), the positive imperative is a command. For example:

* Just '''Do''' it!
* '''Stop''', hammer time!
* '''Take''' me out to the ballgame!

===Latin===

In Latin, the imperative singular is found by taking the last two letters off of the infinitive. The six exceptions to this rule are dicere (dic), ducere (duc), facere (fac), velle, malle (infinitives not used) and nolle (noli). Ferre (fer) and esse (es) are often considered  irregular due to the lack of a vowel at the end but we can see that applying the rule of removing the last two letters forms the imperatives correctly.

====Examples:====

Run, boy!
:'''''Curre''', puer!''&lt;ref&gt;In many cases, the vocative will be used with the imperative, unless the imperative is used in a conversation or at a reader, as in a letter or guide.&lt;/ref&gt; (from ''curro, currere''; to run)


Go!
:'''''I!''''' (from ''eo, ire''; to go)

&lt;references /&gt;

====Questions====
'''Write out: '''

#Love me, Octavia! (to love = ''amo, amare'')
#Come to Rome! (to come = ''venio, venire''; Rome = ''Roma, Romae, f.'')

===Plural===
To form the plural imperative in Latin, take the 2nd person plural present form of the verb (eg. amatis, sedetis, regitis, venitis) and replace the is at the end with e. The only exceptions to the rule are velle, malle (imperatives not used) and nolle (nolite). Ferre (ferte) and esse (este) are often considered irregular but applying the rule (fertis -&gt; ferte, estis -&gt; este) correctly forms the imperatives.

Go home, boys!
: '''''Ite''' domum, pueri.''

Stay, all of you!
: '''''Manete''', omnes!''

====Exercises====

Write out:

#Take them, men! (to take = ''adripio, adripere'')
#Fear me, children! (to fear = ''timeo, timere''; children = ''liberi'')

==Negative Imperative==

===English===
In English, we use the word "don't" for prohibitions, or negative imperatives. For example:

* '''Don't do''' it!

* '''Don't say''' that!

===Latin===
Similarly, in Latin the negative imperative is formed with two words, the imperative of ''nolo, nolle'' and the infinitive.

''Nolo'' by itself means "I do not want," but in its imperative it means "do not...!" Some teachers of Latin point out that literally you are saying "Be unwilling to ..." - a very polite way of giving an order!  

''Nolle'' is irregular, and its imperative forms are ''noli'' and ''nolite''.

====Examples====

Do not fear me!
:'''''Noli''' me '''timere'''!''

Don't build the aqueduct there, soldiers!
:'''''Nolite''' aquaeductum ibi '''aedificare''', milites!''

Don't wash the dog, boys!
:'''''Nolite''', pueri, canem '''lavare'''!''

====Exercises====

Translate:

# Don't cry, daughter! (to cry = ''fleo, flere'')
# Don't hurt me, friends! (to hurt = ''vulnero, vulnerare'')
# Don't go into the water, boys!
# Don't hurt them, soldiers! (them = use ''eos'', masculine accusative plural of ''is, ea, id'')

{{BookCat}}</text>
      <sha1>ramg3xh0rl6ttvo6u1du16m9r8dx6rf</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 1-Imperfect</title>
    <ns>0</ns>
    <id>117735</id>
    <revision>
      <id>3546625</id>
      <parentid>3546624</parentid>
      <timestamp>2019-05-19T14:52:34Z</timestamp>
      <contributor>
        <ip>177.140.236.129</ip>
      </contributor>
      <comment>/* Exercises */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="6489" xml:space="preserve">{{Latin}}

== Imperfect Active Indicative ==

The imperfect is a construct like:
&lt;br&gt;'''I was seeing.'''
&lt;br&gt; In Latin it would look like this:
&lt;br&gt;'''Videbam.'''

English has a similar construct called progressive past. Actions seem incomplete, and so the imperfect label. For example, "I was running," "We were sailing," "They were calling." Note that 'to be' is always there. Latin, however, would sometimes use imperfect like simple past; accordingly, "We were sailing" could be translated as "We sailed." Other translations of imperfect can be used to/kept such as "We used to sail/We kept sailing." 

Regardless of language, the concept of an imperfect is important. Imperfect is called imperfect for a reason - in Latin, the verb "perficere" means to finish/complete, which is what perfect is from. Thus, imperfect, in the grammatical sense, means not finished - that the action could be or could not be completed. Perfect instead means it has been finished - I saw. You have already seen, and it is now completed. I was seeing implies that the action is not yet completed.

The perfect tense, which we will learn later, is a more immediate reference to the past. The name, imperfect, helps you remember its use: in situations where you can't say when an event started or ended or happened, you must use the imperfect.

In situations where you can know when an event started or ended or happened, use the perfect. 

You conjugate the imperfect tense this way:
verb + ba + personal ending

The endings for imperfect are:
{{Latin/verb|-bam|-bas|-bat|-bamus|-batis|-bant}}

Note that the only thing we add are ba + the personal endings (the same as in the present tense) to the infinitive stem. This gives us the imperfect conjugation.

Note that in third and fourth conjugations, you will have to form it differently. There is *no* rule to explain this, it just is, although there are memorization techniques that can help.

ven&lt;U&gt;i&lt;/U&gt;re is 4th conjugation and is formed like:
{{Latin/verb
|veniebam
|veniebas 
|veniebat 
|veniebamus
|veniebatis 
|veniebant}}

For third conjugation, an example used in some textbooks/study guides is: capere (to capture or seize) 
{{Latin/verb
|capiebam
|capiebas
|capiebat
|capiebamus
|capiebatis
|capiebant}}

Note that it is easiest to think of what the endings -ere and &lt;U&gt;i&lt;/U&gt;re lack. The imperfect -ba + the personal ending, which we can call the imperfect conjugation,  must be prefixed by ie.

{| class="wikitable" width="50%"
|-
! colspan="2" | &lt;b&gt;Lesson Vocabulary&lt;/b&gt;
|-
| align="center" colspan="2" |
|-
! bgcolor="#CCFFFF" | &lt;font face="Arial" size="4"&gt;Latin&lt;/font&gt;
! bgcolor="#CCFFCC" | &lt;font face="Arial" size="4"&gt;English&lt;/font&gt;
|-
| align="center" colspan="2" |
|-
| align="center" bgcolor="#CCFFFF" | '''amo, amare'''
| align="center" bgcolor="#CCFFCC" | '''to love'''
|-
| align="center" bgcolor="#CCFFFF" | '''moneo, monere'''
| align="center" bgcolor="#CCFFCC" | '''to warn'''
|-
| align="center" bgcolor="#CCFFFF" | '''vinco, vincere'''
| align="center" bgcolor="#CCFFCC" | '''to win, defeat'''
|-
| align="center" bgcolor="#CCFFFF" | '''capio, capere'''
| align="center" bgcolor="#CCFFCC" | '''to capture, seize'''
|-
| align="center" bgcolor="#CCFFFF" | '''pello, pellere'''
| align="center" bgcolor="#CCFFCC" | '''to drive'''
|-
| align="center" bgcolor="#CCFFFF" | '''sedeo, sedere'''
| align="center" bgcolor="#CCFFCC" | '''to sit'''
|-
| align="center" bgcolor="#CCFFFF" | '''lego, legere'''
| align="center" bgcolor="#CCFFCC" | '''to read'''
|-
|-
| align="center" bgcolor="#CCFFFF" | '''adsum, adesse'''
| align="center" bgcolor="#CCFFCC" | '''to be present'''
|-
| align="center" bgcolor="#CCFFFF" | '''emo, emere'''
| align="center" bgcolor="#CCFFCC" | '''to buy'''
|-
| align="center" bgcolor="#CCFFFF" | '''tristis, triste'''
| align="center" bgcolor="#CCFFCC" | '''sad'''
|-
| align="center" bgcolor="#CCFFFF" | '''redeo, redire'''
| align="center" bgcolor="#CCFFCC" | '''to return, go back'''
|-
| align="center" bgcolor="#CCFFFF" | '''cena, -ae'''
| align="center" bgcolor="#CCFFCC" | '''dinner'''
|-
| align="center" bgcolor="#CCFFFF" | '''paratus, -a, -um'''
| align="center" bgcolor="#CCFFCC" | '''ready'''
|-
| align="center" bgcolor="#CCFFFF" | '''mater, matris'''
| align="center" bgcolor="#CCFFCC" | '''mother'''
|-

| align="center" bgcolor="#CCFFFF" | '''paro, parare'''
| align="center" bgcolor="#CCFFCC" | '''to prepare'''
|-
|}
A few examples:

'''amabam''' - '''I was loving''' (A-conjugation--1st)
&lt;br&gt;'''monebatis''' - '''You were warning [object/personage]''' (of something negative) (Pl.) (2nd Conjugation)
&lt;br&gt;'''vincebamus''' - '''We were defeating''' (long I-conjugation--3rd conjugation)
&lt;br&gt;'''capiebant''' - '''They were catching''' (short I-conjugation--3rd conjugation)
&lt;br&gt;'''pellebat''' - '''She/he/it was propelling''' (drive something (not a vehicle), propel something) (consonantic conjugation)

(Wiki-reading tips: See discussion. Some of the above may be unclear, however the clarifying '--' and '/' indicate verification. We may not know what the original author intended, but we know what conjugations the examples are.)

{| class="wikitable"
| colspan="9" | &lt;b&gt;Conjugation in the Imperfect tense&lt;/b&gt;
|-
| || 1st || 2nd || 3rd || mixed || 4th || colspan="3" | Irregular
|-
| Infinitive: || amare || sedere || legere || capere || venire || ire || velle || esse
|-
| colspan="9" | Singular
|-
| 1st person: || amabam || sedebam || legebam || capiebam || veniebam || ibam || volebam || eram
|-
| 2nd person: || amabas || sedebas || legebas || capiebas || veniebas || ibas || volebas || eras
|-
| 3rd person: || amabat || sedebat || legebat || capiebat || veniebat || ibat || volebat || erat
|-
| colspan="9" | Plural
|-
| 1st person: || amabamus || sedebamus || legebamus || capiebamus || veniebamus || ibamus || volebamus || eramus
|-
| 2nd person: || amabatis || sedebatis || legebatis || capiebatis || veniebatis || ibatis || volebatis || eratis
|-
| 3rd person: || amabant || sedebant || legebant || capiebant || veniebant || ibant || volebant || erant
|-
|}

===Exercises===

Translate from Latin to English

1. dum sol fulgebat, puer ambulabat ad forum&lt;br&gt;
2. in foro multus cibus aderat et femina cibum vendebat&lt;br&gt;
3. puer cibum emere volebat sed satis pecuniae (&lt;i&gt;enough money&lt;/i&gt;) non habebat&lt;br&gt;
4. puer se vertit (&lt;i&gt;turned (lit. himself) around&lt;/i&gt;) et tristis domum redibat&lt;br&gt;
5. sed ubi domum rediit (&lt;i&gt;returned&lt;/i&gt;) cena parata erat quod mater semper cenam parat</text>
      <sha1>71pcjxvwk1aur7uy222ua76x7ifp878</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 1-Nominative</title>
    <ns>0</ns>
    <id>963</id>
    <revision>
      <id>3557831</id>
      <parentid>3557830</parentid>
      <timestamp>2019-07-15T04:01:19Z</timestamp>
      <contributor>
        <username>IPv4 Address</username>
        <id>3229689</id>
      </contributor>
      <minor/>
      <comment>Added a macron I forgot to add</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="15205" xml:space="preserve">{{Latin}}

==The Nominative Case==

The Nominative case refers to the subject of a sentence. For example:

&lt;blockquote&gt;The girl is pretty&lt;/blockquote&gt;

"The girl" is the subject of this sentence. In its simplest form a sentence will have a subject stated as a noun and will give some further information about the subject. The second part of this sentence tells the reader that the girl is pretty. This is called predicating the noun. This sentence consists of a subject and a predicate. As you know from English, an adjective is a word that denotes some quality, which in this sentence is attractiveness. The noun and adjective are joined together by the word "is", which is called the copula. Note that the copula simply connects the words and gives almost no information about the subject. 

The sentence in Latin has the same grammatical elementsË

&lt;blockquote&gt;puella est pulchra&lt;/blockquote&gt;

The noun is followed by the predicate. The only difference is the absence of an article which has to be supplied by the translator. Puella can be translated as "girl", "the girl", or "a girl". Can you tell which word is the copula?

Translate the followingË

* Roma est fÄma
* Roma est magna
* Roma est in Italia

Which region of Europe was the Roman historian Tacitus referring to as Caledonia in his book ''Agricola'', which records the military campaigns of his father-in-law?

Translate the followingË

* Italia est in Europa 
* Germania est in Europa
* Britannia est in Europa

Note the conjunction given in the Vocabulary, and translate the followingË

* Roma est fÄma et magna
* Germania est magna et Britannia est fÄma
* Germania et Britannia sunt in Europa

Give the meaning of the complete word on this inscription fragment from Roman BritainË

[[File:Roman Museum 063.jpg|thumb|none|]]

==Vocabulary==
{| class="wikitable"
|-
! colspan="2" | &lt;b&gt;Lesson Vocabulary&lt;/b&gt;
|-
| align="center" colspan="2" |
|-
! bgcolor="#CCFFFF" | &lt;font face="Arial" size="4"&gt;Latin&lt;/font&gt;
! bgcolor="#CCFFCC" | &lt;font face="Arial" size="4"&gt;English&lt;/font&gt;
|-
| align="center" colspan="2" |
|-
| align="center" bgcolor="#CCFFFF" | '''magna''' (adj.)
| align="center" bgcolor="#CCFFCC" | '''great'''
|-
| align="center" bgcolor="#CCFFFF" | '''bona''' (adj.)
| align="center" bgcolor="#CCFFCC" | '''good'''
|-
| align="center" bgcolor="#CCFFFF" | '''pulchra''' (adj.)
| align="center" bgcolor="#CCFFCC" | '''pretty'''
|-
| align="center" bgcolor="#CCFFFF" | '''fÄma''' (adj.)
| align="center" bgcolor="#CCFFCC" | '''famous'''
|-
| align="center" colspan="2" |
|-
| align="center" bgcolor="#CCFFFF" | '''puella''' (f.)
| align="center" bgcolor="#CCFFCC" | '''girl'''
|-
| align="center" bgcolor="#CCFFFF" | '''puer''' (m.)
| align="center" bgcolor="#CCFFCC" | '''boy'''
|-
| align="center" bgcolor="#CCFFFF" | '''pater''' (m.)
| align="center" bgcolor="#CCFFCC" | '''father'''
|-
| align="center" bgcolor="#CCFFFF" | '''mÄter''' (f.)
| align="center" bgcolor="#CCFFCC" | '''mother'''
|-
| align="center" bgcolor="#CCFFFF" | '''domina''' (f.)
| align="center" bgcolor="#CCFFCC" | '''mistress'''
|-
| align="center" bgcolor="#CCFFFF" | '''dominus''' (m.)
| align="center" bgcolor="#CCFFCC" | '''master'''
|-
| align="center" bgcolor="#CCFFFF" | '''lÅ«dus''' (m.)
| align="center" bgcolor="#CCFFCC" | '''school'''
|-
| align="center" bgcolor="#CCFFFF" | '''Roma''' (f.)
| align="center" bgcolor="#CCFFCC" | '''Rome'''
|-
| align="center" bgcolor="#CCFFFF" | '''Germania''' (f.)
| align="center" bgcolor="#CCFFCC" | '''Germany'''
|-
| align="center" bgcolor="#CCFFFF" | '''trÄ«clÄ«nium''' (n.)
| align="center" bgcolor="#CCFFCC" | '''dining couch (room)'''
|-
| align="center" colspan="2" |
|-
| align="center" bgcolor="#CCFFFF" |'''sum'''&lt;BR&gt;'''es'''&lt;BR&gt;'''est'''&lt;BR&gt;'''sumus'''&lt;BR&gt;'''estis'''&lt;BR&gt;'''sunt'''
| align="center" bgcolor="#CCFFCC" |'''I am'''&lt;BR&gt;'''you are'''&lt;BR&gt;'''he/she/it is'''&lt;BR&gt;'''we are'''&lt;BR&gt;'''you are'''&lt;BR&gt;'''they are'''
|-
| align="center" colspan="2" |
|-
| align="center" bgcolor="#CCFFFF" | '''laborat''', '''laborant'''
| align="center" bgcolor="#CCFFCC" | '''(he/she/it is) working, (they are) working'''
|-
| align="center" bgcolor="#CCFFFF" | '''amat''', '''amant'''
| align="center" bgcolor="#CCFFCC" | '''(he/she/it) loves, (they) love'''
|-
| align="center" colspan="2" |
|-
| align="center" bgcolor="#CCFFFF" | '''et''' (conj.)
| align="center" bgcolor="#CCFFCC" | '''and'''
|-
| align="center" colspan="2" |
|-
| colspan="2" | Some second declension masculine end in ''-r'' instead of ''-us'' in the nominative case â boy is ''puer'', not ''puer-us''. Of the nouns discussed on this page, this rule only applies to ''puer''.
|}

Key to Vocabulary:

*''m.'' = masculine
*''f.'' = feminine
*''n.'' = neuter

*Latin nouns have gender and are formed into five groups of declension. Feminine nouns ending in "-a" in the Nominative Singular and "-ae" in the Genitive Singular are of the 1st declension. Most Latin names for countries and cities are 1st declension feminine nouns, so they end with "-a" in the Nominative Singular.

*''sg.'' = singular
*''pl.'' = plural

==Overview of Adjectives==
An adjective is any word that qualifies a noun. For example:
{| align="center" border="1" width="50%"
!bgcolor="#CCFFCC"|English
!bgcolor="#CCFFFF"|Latin
|-
|align="center" bgcolor="#CCFFCC"|The good master
|align="center" bgcolor="#CCFFFF"|dominus bonus
|}

{| align="center" border="1" width="50%"
!bgcolor="#CCFFCC"|English
!bgcolor="#CCFFFF"|Latin
|-
|align="center" bgcolor="#CCFFCC"|The boy is good
|align="center" bgcolor="#CCFFFF"|puer bonus est
|}

==Adjectives in Latin==
Adjectives must agree with the nouns they describe in gender, number, and case. 

*Adjectives are made to agree with first and second declension nouns by using the -a, -us, -um (feminine, masculine, and neuter) cases. 

*Third declension adjectives are given with the nominative and genitive singular. This, however, is only true for third declension adjectives of one termination. Most third declension adjectives do not have separate masculine and feminine forms. (Neuter adjectives follow the third declension neuter pattern.)

These words will look like the adjective antiquus (old, ancient):
:''antiquus'' (masculine), ''antiqua'' (feminine), ''antiquum'' (neuter). 

Third declension adjectives typically look more like ferox, ferocis (wild, bold). This is because the third declension has no stem assigned to the nominative singular.

Adjectives often come after the word they describe. Since word order is not central to the meaning of a Latin sentence the adjective may appear anywhere in the sentence. 

In the following examples the ''-us'' is masculine (m.), ''-a'' is feminine (f.) and ''-um'' is neuter (n.). 
So magnus is masculine, magna is feminine, and magnum is neuter. 

{| align="center" border="1" width="60%"
!bgcolor="#CCFFCC"|Latin
!bgcolor="#CCFFFF"|English
|-
|align="center" bgcolor="#CCFFCC"|puella bona est
|align="center" bgcolor="#CCFFFF"|The girl is good
|-
|align="center" bgcolor="#CCFFCC"|dominus bonus est
|align="center" bgcolor="#CCFFFF"|The master is good
|-
|align="center" bgcolor="#CCFFCC"|templum magnum est
|align="center" bgcolor="#CCFFFF"|The temple is big
|}

==Basic verbs==
Verbs in Latin work quite differently than those in English. Study the following table then view the examples below.

{| class="wikitable"
! !! English !! Latin
|-
|Number || In English we use pronouns to denote number when using verbs. Compare "I work" and "we work". || In Latin the ending of the verb changes to denote number. Compare "laboro" (I work) and "laboramus" (we work). The two personal endings are "-o" and "-mus". The archaic "laborao" was eventually replaced by "laboro" to simplify pronunciation.
|-
|Tense ||Tense refers to past, present and future. Consider these examples: I walked, I am walking, I will walk. || The stem is used to denote the tense, though this will be covered in a future lesson. In this lesson, only the present tense is being taught.
|-
|Person ||First person refers to the speaker. Second person refers to the person being spoken to. Third person refers to what is being said about someone or something. The vocabulary, starting with sum for I am, clearly illustrates this concept. Note that the 1st person plural is "we". || Latin verbs are conjugated to show person. The verb will undergo changes in the stem and it is these inflections that denote 1st, 2nd or 3rd person singular or plural.
|}

===Personal Endings===

{| align="center" border="1" width="85%"
|-
! bgcolor="#CCFFFF" | Latin
! bgcolor="#CCFFCC" | English
|-
| align="center" bgcolor="#CCFFFF" | am-Å
| align="center" bgcolor="#CCFFCC" | I love 
|-
| align="center" bgcolor="#CCFFFF" | amÄ-s
| align="center" bgcolor="#CCFFCC" | you love (sg.)
|-
| align="center" bgcolor="#CCFFFF" | ama-t
| align="center" bgcolor="#CCFFCC" | he, she, it loves 
|-
| align="center" bgcolor="#CCFFFF" | amÄ-mus
| align="center" bgcolor="#CCFFCC" | we love 
|-
| align="center" bgcolor="#CCFFFF" | amÄ-tis
| align="center" bgcolor="#CCFFCC" | you love (pl.)
|-
| align="center" bgcolor="#CCFFFF" | ama-nt
| align="center" bgcolor="#CCFFCC" | they love 
|}


&lt;u&gt;Archaic&lt;/u&gt;

Latin was spoken and written in Europe for over two thousand years and since all languages change gradually this sometimes makes it difficult for beginners to see patterns of change. English has also had a long development that is now divided into three periods called Old English, Middle English and Modern English. Compare the following English verbsË

* grindan (OE), grinde (ME), grind (Modern English verb)
* climban (OE), climbe (ME), climb (Modern English verb)

The contraction of the archaic "laborao" to "laboro" would have undergone the same gradual process. The archaic "amao" (I love) eventually became "amo". If you look at the Vocabulary you will see that "amat" and "amant" retain the original letter "a" of the stem.

==Further Examples==
===Example 1===
{| align="center" border="1" width="85%"
|-
! bgcolor="#CCFFFF" | Latin
! bgcolor="#CCFFCC" | English
|-
| align="center" bgcolor="#CCFFFF" | templum magnum est
| align="center" bgcolor="#CCFFCC" | The temple is big
|}

;Notes
*The adjective ''magnus -a -um'' must agree with ''templum'' in gender, number, and case, so the correct form is ''magnum'' (neuter nominative singular).
*Note ''templum magnus est'' is incorrect because ''magn-us'' does not agree with ''templ-um''.

===Example 2===
{| align="center" border="1" width="85%"
|-
! bgcolor="#CCFFFF" | Latin
! bgcolor="#CCFFCC" | English
|-
| align="center" bgcolor="#CCFFFF" | puella pulchra est
| align="center" bgcolor="#CCFFCC" | The girl is pretty
|}

'''Notes:''' In the same way, the adjective ''pulcher -ra -rum'' must agree with ''puella'' in gender, number, and case, so the correct form is ''pulchra'' (agreement with the feminine nominative singular noun of the first declension).

===Example 3===
{| align="center" border="1" width="85%"
|-
! bgcolor="#CCFFFF" | Latin
! bgcolor="#CCFFCC" | English
|-
| align="center" bgcolor="#CCFFFF"|puer puellam amat
| align="center" bgcolor="#CCFFCC"|The boy loves the girl
|-
| align="center" bgcolor="#CCFFFF"|puella puerum amat
| align="center" bgcolor="#CCFFCC"|The girl loves the boy
|}

===Example 4===
{| align="center" border="1" width="85%"
|-
! bgcolor="#CCFFFF" | Latin
! bgcolor="#CCFFCC" | English
|-
| align="center" bgcolor="#CCFFFF" | lÅ«dÄ« magnÄ« sunt
| align="center" bgcolor="#CCFFCC" | The schools are big
|}

'''Notes:''' The adjective ''magnus -a -um'' in this case must agree with ''lÅ«dÄ«'' in gender, number, and case, so the correct form is ''magnÄ«'' (masculine nominative plural).

==Third Declension Nouns and Adjectives==
Third declension nouns and adjectives follow a different pattern. The nominative singular stem is not defined, and as such, any letter (or letters) can serve as a third declension stem. For example, ''MÄter'' (mother) is a third declension noun in the nominative case. When pluralized, it becomes ''MÄtrÄs''. "-Äs" is attached to the end of a third declension noun to pluralize it, as opposed to changing the ending completely, because there is no uniform way to do so.

You may have also noticed that that the "e" in "MÄter" was dropped when pluralized. This often happens when a stem is attached to a third declension noun of similar spelling (example, "Pater" (father) becomes "PatrÄs")

Examples:
{| align="center" border="1" width="85%"
|-
! bgcolor="#CCFFFF" | Latin
! bgcolor="#CCFFCC" | English
|-
| align="center" bgcolor="#CCFFFF" | mÄter bona est
| align="center" bgcolor="#CCFFCC" | The mother is good
|-
| align="center" bgcolor="#CCFFFF" | mÄtrÄs bonae sunt
| align="center" bgcolor="#CCFFCC" | The mothers are good
|-
| align="center" bgcolor="#CCFFFF" | pater magnus est
| align="center" bgcolor="#CCFFCC" | The father is large
|-
| align="center" bgcolor="#CCFFFF" | patrÄs magnÄ« sunt
| align="center" bgcolor="#CCFFCC" | The fathers are large
|-
| align="center" bgcolor="#CCFFFF" | amÄ«cus fortis est
| align="center" bgcolor="#CCFFCC" | The friend is strong
|-
| align="center" bgcolor="#CCFFFF" | amÄ«cÄ« fortÄs sunt
| align="center" bgcolor="#CCFFCC" | The friends are strong
|}

Third declension nouns are listed with the nominative case and the genitive case to provide the main stem. For example:
{| class="wikitable" width="50%"
|-
! bgcolor="#CCFFFF" | &lt;font face="Arial" size="4"&gt;Latin&lt;/font&gt;
! bgcolor="#CCFFCC" | &lt;font face="Arial" size="4"&gt;English&lt;/font&gt;
|-
| align="center" colspan="2" |
|-
| align="center" bgcolor="#CCFFFF" | '''pater, patris'''
| align="center" bgcolor="#CCFFCC" | '''father'''
|-
| align="center" bgcolor="#CCFFFF" | '''oratio, orationis'''
| align="center" bgcolor="#CCFFCC" | '''speech'''
|-
| align="center" bgcolor="#CCFFFF" | '''uxor, uxoris'''
| align="center" bgcolor="#CCFFCC" | '''wife'''
|-
| align="center" bgcolor="#CCFFFF" | '''canis, canis'''
| align="center" bgcolor="#CCFFCC" | '''dog'''
|-
| align="center" bgcolor="#CCFFFF" | '''proelium, -Ä«'''
| align="center" bgcolor="#CCFFCC" | '''battle'''
|-
| align="center" bgcolor="#CCFFFF" | '''oculus, -Ä«'''
| align="center" bgcolor="#CCFFCC" | '''eye'''
|-
| align="center" bgcolor="#CCFFFF" | '''amÄ«cus, -Ä«'''
| align="center" bgcolor="#CCFFCC" | '''friend'''
|}

All other types of nouns are also generally listed with the genitive

Adjectives with a nominative ending in -is and the same stem in the nominative and in the other cases (eg. fortis) end in -e in the neuter and -ia in the neuter plural.

For example:
*dies difficilis = the difficult day
*proelium difficile = the difficult battle
*proelia difficilia = the difficult battles

==Exercises==
{{Latin/Exercise|Translation|
#Translate the following Latin words into English.
##dominus bonus 
##lÅ«dus malus 
##puella pulchra
##trÄ«clÄ«nium est magnum 
#Translate into Latin.
##the good boy
##the large master
##The temple is large
##The master is bad
|
#Translate the following Latin words into English.
##The good master
##The bad school
##The pretty girl
##The dining room is large
#Translate into Latin.
##puer bonus
##dominus magnus
##templum magnum est
##dominus malus est
}}</text>
      <sha1>qc27lyyxpq7f9adq7uteengs8cnwpkq</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 1-Subjunctive</title>
    <ns>0</ns>
    <id>9030</id>
    <revision>
      <id>3528184</id>
      <parentid>3435762</parentid>
      <timestamp>2019-03-21T19:55:02Z</timestamp>
      <contributor>
        <username>1234qwer1234qwer4</username>
        <id>1406991</id>
      </contributor>
      <comment>/* Imperfect Subjunctive */ sentence structure</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="7191" xml:space="preserve">{{Latin}}

==Subjunctives==
The Subjunctive is one of the three different moods a Latin verb can take. The two other moods are the Indicative and the Imperative. The subjunctive is perhaps the most common and also most difficult to grasp, and there are a great number of different subjunctive uses.

The subjunctive mainly expresses doubt or potential and what could have been. Whereas the indicative declares "this happened" or "that happened," the imperative is called 'jussive,' which is from 'iubere' - to command, bid.

;Examples
*"Let me go" and "May I go?" are statements of potential; the speaker is not entirely certain his/her command will be followed.
*"Were I a king, I would have a golden throne." -this expresses what could be true, but is not. Speaker is not a king, and so will not get the throne.
*"May the force be with you!" expresses the hope/potential that the force (Star Wars) will be with you. The essential word here is 'may' - "''May'' the force be with you."

"''If'' this ''were'' to happen," or "May this happen!" or "I ask you to make this happen" are all possible uses of the subjunctive.

There are four subjunctives: present, imperfect, perfect, and pluperfect. There are no subjunctives in the future tense, which already incorporates an element of doubt.

===The Present Subjunctive===
The present subjunctive is similar to the present indicative, except marked by a change of the theme vowel.

''present stem'' + ''theme vowel change'' + ''ending''

====Form====
In the present subjunctive, the theme vowel for every conjugation changes; in effect, the first conjugation masquerades as the second conjugation and all the other conjugations take on the appearance of the first.

{|
|1st Conjugation || ''a'' || becomes || ''e''
|-
|2nd Conjugation || ''e'' || becomes || ''ea''
|-
|3rd Conjugation || ''e'' || becomes || ''a''
|-
|3rd -io and 4th || ''i'' || becomes || ''ia''
|}

Some ways to remember this are in the following collapsed table.

{| class="collapsible collapsed"
!Show
|-
|

Sh'''e''' w'''ea'''rs '''a''' g'''ia'''nt d'''ia'''mond

W'''e''' b'''ea'''t '''a''' l'''ia'''r.

W'''e''' b'''ea'''t '''a'''ll l'''ia'''rs.

W'''e''' '''ea'''t '''a''' fr'''ia'''r

W'''e''' '''ea'''t '''a''' F'''ia'''t

N'''e'''ver F'''ea'''r '''a''' L'''ia'''r

L'''e'''t's '''ea'''t '''a''' d'''ia'''per.

L'''e'''t's '''ea'''t c'''a'''v'''ia'''r.

Sh'''e''' w'''ea'''rs '''a''' d'''ia'''mond.

W'''e''' '''ea'''t c'''a'''v'''ia'''r

W'''e''' f'''ea'''r '''a''' l'''ia'''r

Sh'''e''' w'''ea'''rs '''a''' t'''ia'''ra

W'''e''' b'''ea'''t '''a''' g'''ia'''nt.

Sh'''e''' r'''ea'''ds '''a''' d'''ia'''ry.

Sh'''e''' w'''ea'''rs '''a''' d'''ia'''mond t'''ia'''ra.

L'''e'''t's b'''ea'''t th'''a'''t g'''ia'''nt.

F'''e'''w F'''ea'''r F'''a'''t Fr'''ia'''rs.

H'''e'''r br'''ea'''sts '''a'''re g'''ia'''nt.

Cl'''e'''m St'''ea'''ms Cl'''a'''ms in S'''ia'''m
|}

===Example Conjugation===

''porto, port'''a'''re, portavi, portatus'' (1st conjugation - to carry)

====Present Indicative====
This is the present active indicative form of ''portÄre'', which has already been covered.
{{Latin/verb|portÅ|portÄs|portat|portÄmus|portÄtis|portant}}

Remember the join vowels.

====Present Subjunctive====
The present active subjunctive of ''portare'' would be conjugated as follows: 

{{Latin/verb|portem|portÄs|portet|portÄmus|portÄtis|portent}}

Notice:
*The ''-Ä-'' vowel stem has changed to an ''-Ä-''.
*The personal endings ''-m, -s, -t, -mus, -tis, -nt'' are used, as is done for regular indicative verbs.

====Present Subjunctive of Esse====
The present active subjunctive of ''sum, esse'', the verb "to be", is conjugated as follows: 

{{Latin/verb|sim|sÄ«s|sit|sÄ«mus|sÄ«tis|sint}}

Unlike the conjugation of the present active indicative form, the present subjunctive is regular. The same personal endings are affixed to ''si-''.

=====Present Subjunctive of Posse=====
{{Latin/verb|possim|possÄ«s|possit|possÄ«mus|possÄ«tis|possint}}
Translates as "May I/you/he/we/you/they be able"

===Imperfect Subjunctive===
The imperfect subjunctive is formed by adding the personal endings ''-m, -s, -t, -mus, -tis, -nt'' or the passive endings ''-r, -ris, -tur, -mur, -mini, -ntur'' to the present infinitive active (often the second principal part). In other words, for

''vocÅ, vocÄre, vocÄvÄ«, vocÄtum''

The imperfect subjunctives are formed thus:
{{Latin/verb|vocÄrem|vocÄrÄs|vocÄret|vocÄrÄmus|vocÄrÄtis|vocÄrent}}


For deponent verbs, whose second principal part is the passive infinitive (e.g., cÅnÄrÄ«, verÄrÄ«, patÄ«, expedÄ«rÄ«) a pseudo present infinitive is used (e.g, cÅnÄre, verÄre, patere, expedÄ«re; although these forms do not exist as stand-alone infinitives, they actually ARE the singular imperatives for these deponent verbs)

The imperfect subjunctive of the verb to be (sum, esse) is conjugated regularly, as are ALL irregular verbs, e.g.: possem, vellem, nollem, ferrem, irem)
{{Latin/verb|essem|essÄs|esset|essÄmus|essÄtis|essent}}

==Uses of the Subjunctive==
Verbs in the subjunctive mood may assume special meaning in specific constructions.

===Volitive or Optative Clauses===
Subjunctives in independent clauses are often translated as volitive/optative (that is, as a wish). Volitives/optatives show an intention for an action to occur; e.g. "amet" may be translated in volitive/optative context as "may he love"

====Hortatory====
A suggestion or command in first person (most often plural); e.g. "cedamus" as an hortatory subjunctive is "let us depart"

====Jussive====
A suggestion or  command in third person; e.g. "cedat" as a jussive subjunctive is "let her depart"; "deprehendatur"= "Let him be seized"

====Potential====
The potential or possibility of something happening, in any person:  (Fortasse) te amem. "Perhaps I may love you."

'''All  of these Subjunctive types can be used in an independent (main) clause.''' 
Note that all can be translated with "let" or "may"; the differences lie in how English will represent the subjunctive verb:

*Volitive (Wish): May we be friends forever!
*Hortatory (Suggestion): Let us be friends!
*Jussive (Command): Let them be friends!
*Potential (Possibility):  They may be friends; we may be friends; you may be friends.

===Purpose Clauses===
A purpose clause is a dependent clause used, as the name shows, to show purpose. Often initiated by an indicative verb, the clause contains a subjunctive verb in either the present or imperfect tense. Present and imperfect verbs in purpose clauses should be translated with the auxiliary verbs "may" and "might," respectively. For example, "Marcus urbem condidit ut regeret" should be translated as "Marcus built the city so that he would rule." These appear frequently in Latin..

===Relative Clauses===
A relative clause is an independent clause introduced by a relative pronoun.  When the verb of a relative clause is in the subjunctive mood the clause may express result, purpose, or characteristic. 

*Result: The field is so large that he could not plow it in one day.
*Purpose: He sent envoys who would pacify the city.
*Characteristic: Who is so ill-prepared who would fight without a shield?

{{BookCat}}</text>
      <sha1>6bcenwrmpjla7a7on4rdvqu6wn3wrdk</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 10-Idioms</title>
    <ns>0</ns>
    <id>130109</id>
    <revision>
      <id>1838858</id>
      <parentid>1632599</parentid>
      <timestamp>2010-06-10T16:54:56Z</timestamp>
      <contributor>
        <username>Vubb</username>
        <id>352144</id>
      </contributor>
      <minor/>
      <comment>moved [[Latin/Lesson 9-Idioms]] to [[Latin/Lesson 10-Idioms]]: A new lesson has been inserted between lessons 7 and 8</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="320" xml:space="preserve">{{Latin}}
*ad unum-to a man
*aequo animo-contentedly, resignedly, patiently
*aere alieno premi-to be heavily in debt
*agere gratias-to thank
*alius aliam in partem-one in one direction, another in another
*amico aliquo uti-to be on terms of intimacy with some one
*animo tenus commoveri-to be moved to the heart
{{stub}}</text>
      <sha1>0y5j0ntybv5o88stce1dn13bkf9f58i</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 11-Translation</title>
    <ns>0</ns>
    <id>1152</id>
    <revision>
      <id>3285695</id>
      <parentid>3110466</parentid>
      <timestamp>2017-08-26T22:11:00Z</timestamp>
      <contributor>
        <username>Strange quark</username>
        <id>3078616</id>
      </contributor>
      <comment>Fix categorization</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1389" xml:space="preserve">{{Latin}}

Lesson 20, as a bit of a reward is a little translation exercise from the Gospel of Saint Luke.

&lt;B&gt;Exercise 1&lt;/B&gt;

&lt;B&gt;Vocabulary&lt;/B&gt;

&lt;I&gt;coming soon, at the moment consult your dictionary&lt;/I&gt;

Respondens Simon dixit: "Aestimo quia is, cui plus donavit". At ille dixit ei: "Recte iudicasti". Et conversus ad mulierem, dixit Simoni: "Vides hanc mulierem? Intravi in domum tuam: aquam pedibus meis non dedisti; haec autem lacrimis rigavit pedes meos et capillis suis tersit. Osculum mihi non dedisti haec autem, ex quo intravi non cessavit osculari pedes meos. Oleo caput meum non unxisti; haec autem unguento unxit pedes meos. Propter quod dico tibi: Remissa sunt peccata eius multa, quoniam dilexit multrum: cui autem minus dimittitur, minus diligit." Dixit autem ad illam: "Remissa sunt peccata tua". Et coeperunt, qui simul accumbebant, dicere intra se: "quis est hic, qui etiam peccata dimittit?". Dixit autem ad mulierem: Fides tua te salvam fecit; vade in pace!".

Et factum est deinceps, et ipse iter faciebat per civitatem et castellum praedicans et evangelizans regnum Dei, et Duodecim cum illo, et mulieres aliquae, quae erant curatae ab spiritibus malignis et infirmitatibus, Maria, quae vocatur Magdalene, de qua daemonia septem exierant, et Ioanna uxor Chuza procuratoris Herodis, et Sussanna et aliae multae, quae ministrabant eis de facultatibus suis.

{{BookCat}}</text>
      <sha1>126j3fro0muaxrju8fgcx1m7l58yzjy</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 2</title>
    <ns>0</ns>
    <id>961</id>
    <revision>
      <id>3578724</id>
      <parentid>3578722</parentid>
      <timestamp>2019-09-23T16:24:19Z</timestamp>
      <contributor>
        <username>Soumya-8974</username>
        <id>3208344</id>
      </contributor>
      <comment>/* Spelling and Pronunciation */ Oops, I did some faults!</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="21111" xml:space="preserve">{{Latin}}
----
==Spelling and Pronunciation==
The Latin alphabet, on which the English alphabet is based, has mostly the same letters as the English alphabet, except that it has no &amp;lt;k&amp;gt; or &amp;lt;w&amp;gt;, and that in its original form, it lacked &amp;lt;j&amp;gt;, which only some modern texts use, and &amp;lt;u&amp;gt;. Many European languages use the Latin alphabet as the basis for their own alphabet.

Latin pronunciation has varied somewhat over the course of its long history, and there are some differences between Old Latin, spoken in the Roman Republic, Classical Latin, spoken in the Roman Empire, Medieval Latin, spoken in the Middle ages, and Ecclesiastical Latin, spoken in the Catholic Church. This text focuses on the pronunciation of Classical Latin.

{|
|a || /a/, approximately as in English "p'''a'''lm"
|-
|Ä || /aË/, approximately as in English "f'''a'''ther"
|-
|ae || /aiÌ¯~aeÌ¯/, as in English "real'''i'''ze", "b'''uy'''"
|-
|au || /auÌ¯/, as in English "br'''ow'''n", "h'''ow'''"
|-
|b || /b/, as in English "'''b'''it"
|-
|c || always /k/, as in English "s'''c'''an"; never /s/, as in English "sui'''c'''ide"
|-
|ch || always /kÊ°/, as in English "'''k'''ey"; never /tÍ¡Ê/, as in English â'''ch'''ur'''ch'''â
|-
|d || always /d/, as in "'''d'''im"; never /É¾/, as in "me'''d'''al"
|-
|e || usually /É/, as in American English "b'''e'''stâ; /Ã¦/, as in English "f'''a'''ct", before &amp;lt;r&amp;gt;; /e/, approximately as in English "letter '''A'''", "h'''ay'''", before another vowel
|-
|Ä || /eË/, approximately as in English "letter '''A'''", "h'''ay'''"
|-
|f || always /f/, as in English "'''f'''an"; never /v/, as in English "o'''f'''"
|-
|g || always /g/, as in English "'''g'''ood"; never /Ê/, as in English "delu'''g'''e", or /dÍ¡Ê/, as in English "'''g'''el"
|-
|gn || /Ån/, as in English "han'''gn'''ail", "sin'''g n'''ow"; at the beginning of words it may also be pronounced as just /n/, as in English "'''n'''o" or "'''gn'''at"
|-
|gu || /gÊ/, as in English "'''goo'''d", before consonants; /gá¶£/, no English equivalent, before &amp;lt;e/Ä/i/Ä«&amp;gt;; /gÊ·/, as in English "lan'''gu'''age", before all other vowels
|-
|h || /h/, as in English "'''h'''am"
|-
|i || usually /Éª/, as in English "k'''i'''t"; /j/, as in English "'''y'''es", between the start of a word and a vowel; /jË/, as in English "to'''y y'''acht", between two vowels; /i/, as in English "tid'''y'''", between a consonant and a vowel 
|-
|Ä« || /iË/, as in English "letter '''E'''", "fl'''ee'''t"
|-
|j || used by some in place of Latin &amp;lt;i&amp;gt; when it represents /j/; this Wikibook does not follow this convention
|-
|k || not in the Latin alphabet
|-
|l || /l/, as in English "'''l'''eaf" (called ''l exÄ«lis'', "Thin L"); possibly sometimes /É«/, as in English "fu'''ll'''" (called ''l plÄnus/pinguis'', "Thick L"); scholars do not agree on whether ''l plÄnus'' still existed beyond Old Latin, and if so, where it occurred
|-
|ll || always /lË/, as in English "'''l'''eaf", but pronounced longer; never /É«/, as in âfu'''ll'''â
|-
|m || /m/, as in English "'''m'''ap", unless following a vowel and either before &amp;lt;f&amp;gt; or &amp;lt;s&amp;gt;, or at the end of a word, in which case it's silent and the previous vowel is pronounced as its long form (the one with the macron over it), and is nasalized
|-
|n || /n/, as in English "'''n'''o", unless it's preceding &amp;lt;c&amp;gt;, &amp;lt;g&amp;gt;, or &amp;lt;q&amp;gt;, in which case it's /Å/, as in English "ha'''ng'''", or following a vowel and preceding &amp;lt;f&amp;gt; or &amp;lt;s&amp;gt;, or at the end of a word, in which case it's silent and the previous vowel is pronounced as its long form (the one with the macron over it), and is nasalized
|-
|o || /É/, approximately as in English "th'''ou'''ghtâ or "G'''o'''d"
|-
|Å || /oË/, approximately as in English "letter '''O'''", "cl'''o'''ver"
|-
|oe || /oiÌ¯~oeÌ¯/, approximately as in English "p'''oi'''nt", "b'''oy'''"
|-
|p || /p/, as in English "s'''p'''in"
|-
|ph || always /pÊ°/, as in English "'''p'''in"; never /f/, as in English "'''ph'''one"
|-
|q || /k/, only occurs alongside &amp;lt;u&amp;gt;
|-
|qu || /ká¶£/, no English equivalent, before &amp;lt;e/Ä/i/Ä«&amp;gt;; /kÊ·/, as in English "lan'''gu'''ageâ, before all other vowels
|-
|r || /r/, like Spanish &amp;lt;rr&amp;gt;
|-
|s || always /s/, as in English "'''s'''ee"; never /z/, as in English "ea'''s'''e"
|-
|t || always /t/, as in English "s'''t'''eam"; never /É¾/, as in English "bu'''tt'''er", or /Ê/, as in English "si'''t'''"
|-
|th || always /tÊ°/, as in English "'''t'''eam"; never /Î¸/, as in English "'''th'''ree" or /Ã°/, as in English "'''th'''is"
|-
|u || always /Ê/, as in English "f'''oo'''t", "p'''u'''t"; never /Ê/, as in English "s'''u'''n"
|-
|Å« || always /uË/, as in English "f'''oo'''d"; never /ju/, as in English "m'''u'''te", or /Ê/, as in English "f'''oo'''t"
|-
|v || always /w/, as in English "'''w'''e"; never /v/, as in English "fi'''v'''e"
|-
|w || not in the Latin alphabet
|-
|x || always /kÍ¡s/, as in English "wi'''cks'''"; never /gÍ¡z/, as in English "e'''x'''aggerate", or /z/, as in English "'''x'''ylophone"
|-
|y || /Ê/, no English equivalent; generally only present in words borrowed from Greek
|-
|È³ || /yË/, as in German "'''Ã¼'''ber", no English equivalent; generally only present in words borrowed from Greek
|-
|z || /zË/, approximately as in English "hi'''s'''"; generally only present in words borrowed from Greek
|}

Note that Latin, as written by the Romans, did not have &amp;lt;j&amp;gt;, &amp;lt;k&amp;gt;, &amp;lt;u&amp;gt;, &amp;lt;w&amp;gt;, or macrons over vowels (the lines indicating that vowels are long), although they did sometimes mark long vowels with apices (e.g. &amp;lt;Ã³&amp;gt; for /oË/); macrons are used today as pronunciation guides and do not necessarily need to be written. /w/, /Ê/, and /uË/ were all represented with &amp;lt;v&amp;gt;. Modern texts often use &amp;lt;v&amp;gt; for /w/, &amp;lt;u&amp;gt; for /Ê/, and &amp;lt;Å«&amp;gt; for /uË/. In some modern texts (this Wikibook not included), &amp;lt;j&amp;gt; is used for /j/.

==Declension Tables==
The following tables will be both referenced and explained in all of the following sections, and hence are placed here.

{| class="wikitable" align="center"
|+Singular Nouns
!Declension (Gender)
!1st (F) !! 2nd (M/N) !!3rd (M/F/N) !! 4th (M/N) !! 5th (F)
|-
|'''Nominative'''&lt;br/&gt;Subject || puell'''a''' || serv'''us''' || rÄx || grad'''us''' || r'''Äs'''
|-
|'''Genitive'''&lt;br/&gt;Possessive || puell'''ae''' || serv'''Ä«''' || rÄg'''is''' || grad'''Å«s''' || r'''ÄÄ«'''
|-
|'''Dative'''&lt;br/&gt;Indirect Object || puell'''ae''' || serv'''Å''' || rÄg'''Ä«''' || grad'''uÄ«''' || r'''ÄÄ«'''
|-
|'''Accusative'''&lt;br/&gt;Object || puell'''am''' || serv'''um''' || rÄg'''em''' || grad'''um''' || r'''Äm'''
|-
|'''Ablative'''&lt;br/&gt;Modifies or Limits Verb|| puell'''Ä''' || serv'''Å''' || rÄg'''e''' || grad'''Å«''' || r'''Ä'''
|-
|'''Vocative'''&lt;br /&gt;Direct Address || puell'''a''' || serv'''e''' || rÄx || grad'''us''' || r'''Äs'''
|}

Note that nouns in the 3rd declension nominative can have any ending, hence why none is given in bold.

{| class="wikitable" align="center"
|+Plural Nouns
!Declension (Gender) !! 1st (F) !! 2nd (M/N) !! 3rd (M/F/N) !! 4th (M/N) !! 5th (F)
|-
|'''Nominative''' || puell'''ae''' || serv'''Ä«''' || rÄg'''Äs''' || corn'''Å«s''' || r'''Äs'''
|}

==Grammar Part 1: Nouns and Their Role in Sentences==
[[w:Noun|Noun]]s in Latin are [[w:Inflected language|inflected]], which means that endings (also known as [[w:suffix|suffix]]es or ''suffices'') are appended to the end of the [[w:stem|stem]] to denote these things:
#Number (whether the noun is singular or plural)
#[[w:Declension|Case]] of the noun (role of the noun in the sentence)
#[[w:Grammatical gender|Gender]] (the gender of the word - one of masculine, feminine, or neuter)

Most nouns in English can be modified to indicate number (cat versus cats), and many pronouns can be modified to indicate case (who versus whose) or gender (he versus she, his versus hers). Case is especially important in Latin as meaning cannot be determined by word order as it can be in English, but purely by word endings, or "inflection". Indeed, the words in a Latin sentence can appear in almost any order with little change in meaning. Two sentences with the word orders "Sam ate the orange" and "The orange ate Sam" could potentially mean the same thing in Latin, though the spellings of "orange" and "Sam" would have to change slightly to denote which was the subject (the one eating) and which was the object (the one being eaten).

It is important to note here that although the genders of many words make sense (for example, "puella", meaning a girl, is feminine) many are simply assigned and hold no real meaning. Luckily, as you will find, the gender can often be determined by the spelling of the word (words ending in "us" are almost always masculine, and words ending in "a" are almost always feminine). For many words, however, you will simply have to memorize their gender. 

[[w:Adjective|Adjective]]s themselves must match the number, case, and gender of the noun (be it a substantive or a pronoun) they modify. If a noun is nominative singular feminine (see [[#case|case table]] below), then the adjective describing it must also be nominative singular feminine. If the noun is accusative plural masculine, then the adjective must be accusative plural masculine. This will be expanded on in the [[#Adjectives|Adjectives]] section below. The advantage of this system is that adjectives do not need to be adjacent to their respective nouns, as one would be able to tell which noun they modify by which noun they appear to agree with.

===Declension===
'''All substantives''' are part of one of 5 categories, called '''declensions'''.  A substantive is a stem, modified by adding a declension suffix.  Each declension has a set of standard suffixes that indicate case and number. Usually gender is indicated by the suffix, although there are many exceptions. Therefore, you must memorize the gender of every substantive you learn.

By familiarizing yourself with the [[#Declension Tables|above tables]], you could deduce that originally the suffix indicating number, case, and gender was the same for every noun. However, as the language developed, nouns with a common stem formed declensions and sounds changed. Similar processes happen continually over time, even today.

The above tables allow you to familiarize yourself with the existence of each declension, though by no means are you expected to memorize it now. Nonetheless, you will have to memorize it as you are formally introduced to individual cases and declensions in future lessons. Because of its introductory purpose, it is considerably simplified and incomplete, and therefore should not be used as a reference in the future.

Adjectives are also classed into declensions which must match the declension of the noun it describes:
#'''1st/2nd declension adjectives'''...
##...Use 1st declension suffixes from the substantive declension table when describing feminine nouns.
##...Use 2nd declension masculine suffixes from the above table when describing masculine nouns.
##...Use 2nd declension neuter suffixes (''not'' found in the above table) when describing neuter nouns.
#'''3rd declension adjectives''' behave as 'i' stem substantives unless specified.  An 'i' stem substantive is one where the stem word ends in the letter 'i.'   Masculine and Feminine suffixes (which are the same) will be used if describing masculine and feminine nouns, and Neuter suffixes will be used when describing neuter nouns.

Pronouns are not part of any declension, as they are all irregular, and simply have to be memorized.

===Case===
Cases (Latin: ''casus'') determine the role of the noun in the sentence in relation to other parts of the sentence. 

There are six cases, Nominative, Genitive, Dative, Accusative, Ablative, and Vocative.  Vocative case (Lesson 3), can be considered a sort of miniature case, generally not being accepted as a true one. Additionally, some nouns have a vocative case, which will be covered later. As nominative and accusative are the most basic, these will be taught first (the rest will be covered in later lessons).

{| border="1" align="center"
|-
! colspan="4" |'''The Use of the Cases'''&lt;br/&gt;(all words in bold are in the case specified in the first column)
|-
! Case
! Role in sentence
! bgcolor="#CCFFFF" | Example (Latin)
! bgcolor="#CCFFCC" | Example (English)
|-
| Nominative || Subject (performs the verb)
| bgcolor="#CCFFFF" | '''vir''' lupum vult.
| bgcolor="#CCFFCC" | '''The man''' wants a wolf.
|-
| Genitive || Description and possession
| bgcolor="#CCFFFF" | lupus '''virÄ«''' est.
| bgcolor="#CCFFCC" | It is the '''man's''' wolf/It is the wolf ''of'' the '''man'''.
|-
| Dative || Indirect object (receives the direct object)
| bgcolor="#CCFFFF" | '''lupÅ''' dedit vir.
| bgcolor="#CCFFCC" | The man gave to '''the wolf'''.
|-
| Accusative || Direct object (receives the action of the verb)
| bgcolor="#CCFFFF" | vir '''lupum''' videt.
| bgcolor="#CCFFCC" | The man sees '''the wolf'''.
|-
| Ablative || Various (modify or limit nouns by ideas of where, when, how, etc.)
| bgcolor="#CCFFFF" | Ä quÅ datum? '''Ä virÅ'''.
| bgcolor="#CCFFCC" | By whom given? '''By a man'''.
|-
| Vocative || Direct address (speaking to somebody directly)
| bgcolor="#CCFFFF" | salvÄ, '''Brute'''!
| bgcolor="#CCFFCC" | Hello, '''Brutus'''!
|}

===Gender===
'''All substantives''', including inanimate objects, have a particular gender (genera), which is either masculine, feminine, or neuter.

For example, Vir, "a man," is masculine. MarÄ«tus, "a husband," is also masculine. Puella, "a girl," is feminine. MÄter, "a mother," is feminine. Even inanimate objects are assigned gender, including all the moons, stars, trees, tools, and so forth. Logic will give you little help in determining what the genders of inanimate objects are, and with many nouns memorization is required. Luckily, for many nouns, the spelling of the word indicates the gender.

Certain rules may be utilized to determine the gender of an inanimate substantive. Declension is a good indication of gender, especially for 1st and 2nd declension substantives. 1st declension substantives (substantives with an -a suffix) are usually feminine and second declension nouns (substantives with an -us suffix) are usually masculine or neuter. There are a few exceptions, and they will have to be learned. 3rd declension nouns can be either masculine, feminine or neuter (thus the gender will often have to be memorized). 4th declension nouns are usually masculine, sometimes neuter while 5th declension nouns are usually feminine.

1st/2nd declension adjectives alternate the set of endings depending on the gender of noun it describes (see above: Agreement of the Gender of Nouns and the Adjective). If the adjective describes a feminine noun, the adjective must use 1st declension endings, if the adjective describes a masculine noun, the adjective must use 2nd declension masculine endings, if the adjective describes a neuter noun the adjective must use 2nd declension neuter endings.

3rd declension adjectives use the same set of endings for masculine and feminine nouns. However, a slightly different set of endings are used when describing neuter nouns.

==Adjectives==
As stated above, adjectives must match the gender, number, and case of the noun (be the noun a substantive, or a pronoun) they modify.  Similar to the "Sam ate the orange" example above, if the adjective uses the wrong declension it could change the meaning of the sentence.  For example, "The girl loves big trees," versus "the big girl loves trees" have different meanings.  There are many occasions where logic cannot be used to determine the gender of inanimate objects, as genders are generally arbitrary when the noun has no literal gender. Furthermore, the declension of the noun, often determined by the spelling, can in turn be used to determine the gender, especially for the 1st and 2nd. However, this is never the case for the third declension, as the declension itself is not primarily assigned to any gender and the spelling of the nominative ("default") stem is random, leaving you with no hints.

A noun and its adjective must also be in the same case. Otherwise, it is impossible to tell which nouns pair up to their respective adjectives in a sentence, as the words in a Latin sentence can appear in any order. See the examples below.

{| align="center" border="1" width="50%"
|+align="bottom"|Notice how "magna" changes to "magnae" to agree with the pluralized "puellae".
!bgcolor="#CCFFFF"|Latin
!bgcolor="#CCFFCC"|English
|-
|align="center" bgcolor="#CCFFFF"|puella (nominative sing., fem.)
|align="center" bgcolor="#CCFFCC"|Girl
|-
|align="center" bgcolor="#CCFFFF"|puella magna
|align="center" bgcolor="#CCFFCC"|The big girl
|-
|align="center" bgcolor="#CCFFFF"|puellae (nominative '''pl.''', fem.)
|align="center" bgcolor="#CCFFCC"|Girls
|-
|align="center" bgcolor="#CCFFFF"|puellae magnae
|align="center" bgcolor="#CCFFCC"|The big girls
|}

{| align="center" border="1" width="50%"
|+align="bottom"|Notice how "magna" becomes "magnus" to agree with the masculine word "servus". Also notice that "magnus" changes to "magnum" to agree with the noun it's describing in case, though do not concern yourself with the difference between cases for the time being.
!bgcolor="#CCFFFF"|Latin
!bgcolor="#CCFFCC"|English
|-
|align="center" bgcolor="#CCFFFF"|servus (nominative sing, mas.)
|align="center" bgcolor="#CCFFCC"|Slave
|-
|align="center" bgcolor="#CCFFFF"|servus magnus
|align="center" bgcolor="#CCFFCC"|The big slave
|-
|align="center" bgcolor="#CCFFFF"|servum ('''accusative''' sing, mas.)
|align="center" bgcolor="#CCFFCC"|Slave
|-
|align="center" bgcolor="#CCFFFF"|servum magnum
|align="center" bgcolor="#CCFFCC"|The big slave
|}

{| align="center" border="1" width="50%"
|+align="bottom"|Notice that "magna" is feminine because "arbor" is feminine, despite that it does not end in "a" like "puella". The word "arbor" is one of the situations where you will simply have to memorize the gender.
!bgcolor="#CCFFFF"|Latin
!bgcolor="#CCFFCC"|English
|-
|align="center" bgcolor="#CCFFFF"|arbor (nominative sing, fem.)
|align="center" bgcolor="#CCFFCC"|Tree
|-
|align="center" bgcolor="#CCFFFF"|arbor magna
|align="center" bgcolor="#CCFFCC"|The big tree
|}

==Recapitulation==
*Declensions are used to categorize nouns in groups. There are 5 declensions total.
*Each of the five declensions has a distinct set of endings which are appended to nouns of that declension.
*The endings indicate the case and number when appended to the stem of a noun.
*A substantive may use only the endings of the declension of which it is a part.
*Each substantive has a predefined gender which almost never changes and is separate from the suffix.
*Adjectives are a part of the 1st/2nd declension and 3rd declension.
*Adjectives use the gender of the noun that they modify.

'''Therefore:'''
*An adjective of the 1st/2nd declension uses 1st declension endings when describing a feminine noun, a 2nd declension masculine ending when describing masculine noun, and 2nd declension neuter when describing a neuter noun.
*An adjective of the 3rd declension uses the same set of endings when describing masculine and feminine nouns and another set of endings when describing neuter nouns. (Actually, there are 3-termination, 2-termination, and 1-termination 3rd declension adjectives. If the adjective is 3-termination, e.g., acer (f. sing.), acris (m. sing.), acer (n. sing.), acres (f. pl.), acres (m. pl.), or acria (n. pl.), then use the appropriate ending; if the adjective is 2-termination, then one termination will be masculine/feminine and the other neuter; if the adjective is 1-termination, the common form is used.)

Before you proceed to the next lesson, complete the exercises below so you will be able to apply this knowledge to Latin.

==Exercises==
{{Latin/Exercise|Questions|
#What are the three genders?
#What is the number (singular/plural) of the following English words:
##cow
##dogs
##genders
##adjective
##children
##slice
##mice
##geese
#Describe the relationship between an adjective and the noun which it modifies.
#How many declensions are there?
#Determine the declension of each Latin word:
#*puella (''girl'')
#*ianua (''door'')
#*amicus (''friend'')
#*ludus (''game'')
#*casa (''house'')
#*rex (''king'')
#What gender are 1st declension substantives mostly?
#What genders are 2nd declension substantives mostly?
#What grammatical features of a word that can be determined by looking at its ending?
|
#Masculine, Feminine, and Neuter
#What is the number (singular/plural) of the following English words:
##S
##P
##P
##S
##P
##S
##P
##P
#The adjective takes on the number, case and gender (but not always the declension) of the noun it describes
#Five
#Determine the declension of each Latin word:
##1st
##1st
##2nd
##2nd
##1st
##3rd
#Feminine
#Masculine
#It varies slightly from word-to-word; Declension/Case, Number, and sometimes Gender.
}}

{{BookCat}}</text>
      <sha1>qcnqciegakzhr5nko6ywn0szguirwha</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 2-Active v Passive</title>
    <ns>0</ns>
    <id>8450</id>
    <revision>
      <id>3538166</id>
      <parentid>3392266</parentid>
      <timestamp>2019-04-18T19:02:54Z</timestamp>
      <contributor>
        <username>Vincentius.NguyenDinhDuyThien</username>
        <id>3160409</id>
      </contributor>
      <minor/>
      <comment>Urbs is singular, thus it's "oppÅ«gnÄbÄtur" not "oppÅ«gnÄbantur".</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2975" xml:space="preserve">{{Latin}}

A verb's voice shows the relationship between the subject and the action expressed by the verb. Latin has two voices: active and passive.

In the active voice, the subject of the clause performs the verb on something else (the object), e.g., "The girl sees the boy."

In the passive voice, the subject of the sentence receives the action of the verb, e.g., "The boy is seen by the girl."

The personal endings in the active voice are: '''-Å'''/'''-m''', '''-s''', '''-t''', '''-mus''', '''-tis''', '''-nt'''.

The personal endings in the passive voice (present, imperfect, future) are: '''-r''', '''-ris''', '''-tur''', '''-mur''', '''-mini''', '''-ntur'''. 

In the perfect, pluperfect and future perfect, the passive voice is formed by the fourth principal part plus the proper forms of '''sum, esse'''. For the perfect tense, use the present forms of '''esse''', for the pluperfect use the imperfect forms of '''esse''', and for the future perfect use the future forms of '''esse'''. The fourth principal part, when used in a passive construction, acts as a first-second declension adjective and is declined accordingly.

As stated before, when the passive voice is used, the subject receives the action of the verb from another agent. This agent, when it is a person, is expressed by the preposition '''Ä'''/'''ab''' plus the ablative case. This construction is called the ''ablative of personal agent''. The ''ablative of cause'' is used without a preposition when the agent is not a person.

==Examples:==

*Active: ''Puella puerum videt.'' (The girl sees the boy.)

:*Passive: ''Puer Ä puellÄ vidÄtur.'' (The boy is seen by the girl.)
:''Puella'' takes ''Ä'' and the ablative, as it is a personal agent.

*Active: ''Timor virum capit.'' (Fear seizes the man.)

:*Passive: ''Vir timore capitur.'' (The man is seized by fear.)
:''Timore'' is ablative of cause.

*Active: ''HostÄs urbem oppugnÄbant.'' (The enemies were attacking the city.)

:*Passive: ''Urbs ab hostibus oppÅ«gnÄbÄtur.'' (The city was being attacked by the enemies.)

==Deponent verbs==

Some verbs are always passive in form, even though they have an active meaning. For example:

*filius agricolam &lt;b&gt;sequitur&lt;/b&gt; - The son follows the farmer
*sol &lt;b&gt;ortus est&lt;/b&gt; - The sun has risen
*agricolae hostes &lt;b&gt;verentur&lt;/b&gt; - The farmers fear the enemies
*gladio &lt;b&gt;usus sum&lt;/b&gt; - I used a sword

Some, called semi-deponent verbs, take on a passive form on only in the perfect. For example:

*colono &lt;b&gt;confido&lt;/b&gt; - I trust the farmer
*colono &lt;b&gt;confisus sum&lt;/b&gt; - I trusted the farmer

Note that some deponent and semi-deponent verbs take the accusative case (eg. vereor, vereri, veritus sum = I fear), some the ablative (eg. utor, uti, usus sum = I use) and some the dative (eg. confido, confidere, confisus sum = I trust). When you first encounter such a verb in Latin, be sure to remember the case of the object the verb is taking along with its spelling and meaning.

{{BookCat}}</text>
      <sha1>jtu49jc4hjjrs7k9sjnibji34d84cuk</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 2-Genitive and Dative</title>
    <ns>0</ns>
    <id>1102</id>
    <revision>
      <id>3649305</id>
      <parentid>3601330</parentid>
      <timestamp>2020-01-04T00:46:43Z</timestamp>
      <contributor>
        <username>Green Giant</username>
        <id>22365</id>
      </contributor>
      <comment>Rejected the last 11 text changes and restored revision 3370586 by Atcovi</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="10148" xml:space="preserve">{{Latin}}

==Noun Tables==
{| border="1" cellpadding="5" cellspacing="1"
|-
| rowspan="3" |
| colspan="2" class="header" | '''1&lt;sup&gt;st&lt;/sup&gt; declension'''
| colspan="4" class="header" | '''2&lt;sup&gt;nd&lt;/sup&gt; declension'''
|-
| colspan="2" class="header" | '''-a'''
| colspan="2" class="header" | '''-us/er'''
| colspan="2" class="header" | '''-um (neuter)'''
|-
| ''SINGULAR'' || ''PLURAL''
| ''SINGULAR'' || ''PLURAL''
| ''SINGULAR'' || ''PLURAL''
|-
| nominative || puell'''-a''' || puell'''-ae'''
| serv'''-us'''/pu'''er''' || serv'''-Ä«'''
| bell'''-um''' || bell'''-a'''
|-
| genitive || puell'''-ae''' || puell'''-Ärum'''
| serv'''-Ä«''' || serv'''-Årum'''
| bell'''-Ä«''' || bell'''-Årum'''
|-
| accusative || puell'''-am''' || puell'''-Äs'''
| serv'''-um''' || serv'''-Ås'''
| bell'''-um''' || bell'''-a'''
|-
| dative || puell'''-ae''' || puell'''-Ä«s'''
| serv'''-Å''' || serv'''-Ä«s'''
| bell'''-Å''' || bell'''-Ä«s'''
|}

==The Genitive==
The genitive case is a descriptive case. The genitive case describes the following features of the described noun:
*Possession e.g. The dog of Marcus ''or'' Marcus's dog (canis MarcÄ«)
*Origin e.g. Marcus of Rome (Marcus Romae)
*Relation e.g. A thing of beauty (rÄs pulchrae)
*Quantity e.g. A gallon of water
*Quality e.g. Day of wrath (diÄs irae)

Quite simply, a word in the genitive case is translated with the preposition "of". Note that Latin does not have a separate form for the possessive genitive (''Marcus's dog'' vs ''The dog of Marcus''), as English does. A word in the genitive case showing possession can be translated either way. 

===Latin Examples===
{| border="1" cellpadding="5" cellspacing="1" style="text-align: center;"
|- style="font-weight:bold;"
| colspan="4" | Latin || colspan="4" | English
|- style="background:#ccc;"
| canis || puerÄ« malÄ« || est || bonus || The dog
| of the bad boy || is || good
|- style="font-style:italic;"
| nominative noun || genitive || verb || nominative adj. || nominative noun
| genitive || verb || nominative adj.
|}

{| border="1" cellpadding="5" cellspacing="1" style="text-align: center;"
|- style="font-weight:bold;"
| colspan="4" | Latin || colspan="4" | English
|- style="background:#ccc;"
| canis || puerÅrum malÅrum || est || bonus || The dog
| of the bad boys || is || good
|- style="font-style:italic;"
| nominative noun || genitive (plural)
| verb || nominative adj. || nominative noun
| genitive || verb || nominative adj.
|}

===Exercise 1===
Indicate the word in the genitive:
#Flavia's dog is good.
#The man has his mother's good taste.

==Agreeing with the Adjectives==
When adjectives are used to describe nouns in the genitive case, they must have the same case, number, and gender as the noun to which it refers.

===Example===
;A road of beautiful Rome â Via Romae pulchrae.
:If we look at the bare necessities, namely nouns, in this phrase, then we get "road of Rome," which is translated as "via Romae." Now, let's look at the adjective: beautiful (''pulchra''). Its antecedent (the noun it modifies) is Rome. Since Rome is in the genitive case, ''pulchra'' also needs to be in the genitive case. Both are already feminine, so we don't need to change that. 
:To make ''pulchra'' in the genitive singular case, we replace the final "-a" with a "-ae," and we get ''pulchrae''.

It's that simple.

==The Dative==
The dative case, also known as the indirect object case indicates:
*For whom, e.g., I made this car '''for him'''.
*To whom, e.g., I gave this car '''to him'''.

Latin does not distinguish between "to" or "for", though this is sometimes the case in English:
*I made this car '''for him'''. â I made '''him''' this car.
*I gave this car '''to him'''. â I gave '''him''' this car.

===Example 1===
{| border="1" cellpadding="5" cellspacing="1" style="text-align: center;"
|- style="background:#ccc;"
| He || made || the desk || for || his friend
|- style="font-style:italic;"
| nominative noun || verb || accusative || dative prep. || dative
|}

'For' is the preposition indicating a dative. 'For' can be used in some other constructs. To determine whether it is dative, analyse the meaning of the sentence (see Example 3). Practice will enable you to quickly spot the case of a noun in the sentence without much effort.

===Example 2===
''He gave the book '''to John'''''; ''He gave '''to John''' the book''; or ''He gave '''John''' the book''.

This demonstrates how English can use prepositions to change word order and even 'presume' a certain preposition exists that has been left out, giving a dative construct. Also, the dative is used only for a noun

===Latin Examples===
{| border="1" cellpadding="5" cellspacing="1" style="text-align: center;"
|- style="font-weight:bold;"
| colspan="3" | Latin || colspan="3" | English
|- style="background:#ccc;"
| DonÅ || amÄ«cÅ meÅ&lt;ref&gt;Note how the word "meus" become "meo" in order to agree with "amico".&lt;/ref&gt; || donum.
| I gave || my friend || a gift.
|- style="font-style:italic;"
| verb || dative noun/adj. pair || accusative
| verb || dative noun/adj. pair || accusative
|}

{| border="1" cellpadding="5" cellspacing="1" style="text-align: center;"
|- style="font-weight:bold;"
| colspan="3" | Latin || colspan="3" | English
|- style="background:#ccc;"
| Feret || mihi&lt;ref&gt;Note that the pronouns have a dative case as well, which can be reviewed in the chapter on pronouns.&lt;/ref&gt; || stylum.
| He brought || me || a pen.
|- style="font-style:italic;"
| verb || dative pronoun || accusative
| verb || dative pronoun || accusative
|}

{{reflist}}

==Exercise 2: Translate into English==
{| class="wikitable"
|-
| align="center" colspan="1" | &lt;font fae="Arial" size="2"&gt;Latin&lt;/font&gt;
! align="center" colspan="1" | &lt;font face="Arial" size="2"&gt;English&lt;/font&gt;
|-
| align="center" colspan="2" |
|-
| align="center" bgcolor="#CCFFFF" | dÅ, dÄre
| align="center" bgcolor="#CCFFCC" | to give
|-
| align="center" colspan="2" |
|-
| align="center" bgcolor="#CCFFFF" | reddÅ, reddÄre
| align="center" bgcolor="#CCFFCC" | to give back
|-
| align="center" colspan="2" |
|-
| align="center" bgcolor="#CCFFFF" | liber, librÄ« (m.)
| align="center" bgcolor="#CCFFCC" | book
|-
| align="center" colspan="2" |
|-
| align="center" bgcolor="#CCFFFF" | amÄ«cus, -Ä« (m.)
| align="center" bgcolor="#CCFFCC" | friend
|-
| align="center" colspan="2" |
|-
| align="center" bgcolor="#CCFFFF" | scrÄ«bÅ, -Äre
| align="center" bgcolor="#CCFFCC" | to write
|-
| align="center" colspan="2" |
|-
| align="center" bgcolor="#CCFFFF" | epistula, -ae (f.)
| align="center" bgcolor="#CCFFCC" | letter, message
|-
| align="center" colspan="2" |
|-
| align="center" bgcolor="#CCFFFF" | Imperator, Imperatoris (m.)
| align="center" bgcolor="#CCFFCC" | Emperor
|-
| align="center" colspan="2" |
|-
| align="center" bgcolor="#CCFFFF" | placeo, -Äre (+dat.)
| align="center" bgcolor="#CCFFCC" | to please, be pleasing to
|}

Note that ''placeo'' requires the dative case, as opposed to the accusative case. Verbs such as this are denoted with ''(+dat.)'' or similar abbreviations. 

{{Latin/Exercise|Questions|
#Do librum amico.
#Amicus meum librum legit et mihi librum reddit.
#Scribo epistulas Imperatori.
#Meae epistulae Imperatori placent.
|
#I give the book to a friend
#The friend read my book and returned the book to me.
#I am writing letters to the Emperor.
#My letters are pleasing to the Emperor.
}}

==Roman Numerals==
The Romans did not use the Hindu-Arabic numerals we use today. They used their own symbols and own numeric system. We still use Roman Numerals today.

{| border="1" cellpadding="5" cellspacing="1" style="text-align: center;"
!Roman Numeral
!Latin Number
!English Number
!Hindu-Arabic Numeral
!Spanish Number
!French Number
!Italian Number
!Portuguese Number
|-style="background:#ccc;"
|I
|Å«nus -a -um
|one
|1
|uno
|un
|uno
|um
|-
|II
|duo -ae
|two
|2
|dos
|deux
|due
|dois
|-style="background:#ccc;"
|III
|trÄs, tria
|three
|3
|tres
|trois
|tre
|trÃªs
|-
|IV
|quattor
|four
|4
|cuatro
|quatre
|quattro
|quatro
|-style="background:#ccc;"
|V
|quinque
|five
|5
|cinco
|cinq
|cinque
|cinco
|-
|VI
|sÄx
|six
|6
|seis
|six
|sei
|seis
|-style="background:#ccc;"
|VII
|septem
|seven
|7
|siete
|sept
|sette
|sete
|-
|VIII
|octÅ
|eight
|8
|ocho
|huit
|otto
|oito
|-style="background:#ccc;"
|IX
|novem
|nine
|9
|nueve
|neuf
|nove
|nove
|-
|X
|decem
|ten
|10
|diez
|dix
|dieci
|dez
|-style="background:#ccc;"
|XV
|quindecim
|fifteen
|15
|quince
|quinze
|quindici
|quinze
|-
|XX
|viginti
|twenty
|20
|veinte
|vingt
|venti
|vinte
|-style="background:#ccc;"
|XXV
|viginti quinque
|twenty-five
|25
|veinticinco
|vingt-cinq
|venticinque
|vinte e cinco
|-
|L
|quinquaginta
|fifty
|50
|cincuenta
|cinquante
|cinquanta
|cinqÃ¼enta
|-style="background:#ccc;"
|C
|centum
|one hundred
|100
|cien
|cent
|cento
|cem
|-
|D
|quingentÄ«, -ae, -a
|five hundred
|500
|quinientos
|cinq cents
|cinquecento
|quinhentos
|-style="background:#ccc;"
|M
|mille
|one thousand
|1000
|mil
|mille
|mille
|mil
|}

Note the declensions of the first three numbers. ''Nullus'' is the Latin equivalent of zero, for example: ''nullam puellam in agro video'' means ''I see no girl in the field''.

{| border="1" cellpadding="5" cellspacing="1" style="text-align: center;"
!Nominative
!Accusative
!Genitive
!Dative
!Ablative
|-
|nullus
|nullum
|nullius
|nulli
|nullo
|-
|nulla
|nullam
|nullius
|nulli
|nulla
|-
|nullum
|nullum
|nullius
|nulli
|nullo
|-style="background:#ccc;"
|unus
|unum
|unius
|uni
|uno
|-style="background:#ccc;"
|una
|unam
|unius
|uni
|una
|-style="background:#ccc;"
|unum
|unum
|unius
|uni
|uno
|-
|duo
|duos
|duorum
|duobus
|duobus
|-
|duae
|duas
|duarum
|duabus
|duabus
|-
|duo
|duo
|duorum
|duobus
|duobus
|-style="background:#ccc;"
|tres
|tres
|trium
|tribus
|tribus
|-style="background:#ccc;"
|tres
|tres
|trium
|tribus
|tribus
|-style="background:#ccc;"
|tria
|tria
|trium
|tribus
|tribus
|}

===Exercise 3===
Write the word form of the numbers in the following sentences in the correct case.

#'''III''' homines me salutant
#magistro '''II''' libros reddo
#'''D''' senatoribus multa (&lt;i&gt;many things&lt;/i&gt;) dico
#'''III''' horas diligenter laboro

[[Category:Latin]]</text>
      <sha1>rdufze4224k5k3mzfmq4op4m28sy43h</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 2-Subjunctive Use</title>
    <ns>0</ns>
    <id>131947</id>
    <revision>
      <id>3587707</id>
      <parentid>3586359</parentid>
      <timestamp>2019-10-17T16:56:32Z</timestamp>
      <contributor>
        <username>Mrjulesd</username>
        <id>1779740</id>
      </contributor>
      <comment>Rejected the last 2 text changes (by [[Special:Contributions/62.19.140.77|62.19.140.77]]) and restored revision 3206277 by 204.228.23.203</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5751" xml:space="preserve">{{Latin}}
&lt;!-- I am by no means an expert on this topic, having only secondary school Latin, so this is most definitely not a definitive article --&gt;.The subjunctive mood has several uses in Latin, the most notable of which are: &lt;ul type ="square"&gt;
                     &lt;li&gt;First Person Exhortations&lt;/li&gt;
                     &lt;li&gt;Purpose Clauses&lt;/li&gt;
                     &lt;li&gt;Result Clauses&lt;/li&gt;
                     &lt;li&gt;Indirect Commands&lt;/li&gt;
  &lt;/ul&gt;
== First Person Exhortations (Hortatory Subjunctive) ==
=== Definition, Common Usage and Expression in Latin ===
An exhortation is a statement which expresses a wish. In English, the most common exhortation is "let's go". Other possibilities are "would go", "should go" and "may go". In Latin, these statements are equally as often used and are expressed in the present subjunctive active tense.

=== Examples ===
*{{Latin/gloss|Festinemus ad forum|Let's hurry to the forum}}
*{{Latin/gloss|Roma discedamus|Let's leave Rome}}
*{{Latin/gloss|Roma non discedam, nam mea familia ibi vivit.|I should not leave Rome, for my family lives there. (Also, "I will not leave" -- the form is ambiguous.)}}
*{{Latin/gloss|Cenemus!|Let us dine!}}
*{{Latin/gloss|Cenarem tecum si laborem perficerem&lt;ref&gt;Note that in ''si''... (if...) clauses, the future perfect is often used where the present is in English. "I shall dine with you if I finish my work" would be "I shall dine with you if I shall have finished my work": ''Tecum cenam si laborem perfecero''.&lt;/ref&gt;|I would dine with you if I should finish my work.}}

== Purpose Clauses ==
=== Definition, Common Usage and Expression in Latin ===

A purpose clause is a clause which expresses that someone did something in order that something else might happen. In English they usually contain the words '''in order to''' or '''so that'''. In Latin this concept is expressed by the words '''ut''' and '''ne''' followed by a verb in the subjunctive mood. ''Ut'' means "so that" or "in order to" and ''ne'' means "lest." In purpose clauses, only forms of the imperfect (following the secondary sequence of tenses) and present (for the primary sequence) are used.

=== Examples ===
*{{Latin/gloss|Quintus donum Scintillae dedit '''ut se amaret'''|Quintus gave Scintilla a gift so that she would love him. (The imperfect subjunctive is used after a past main clause verb, i.e. imperfect, perfect or pluperfect, while the present subjunctive is used after a main clause verb in the present, future, future perfect, perfect with 'have', or imperative. The reflexive '''se''' is used instead of '''eum''' as it refers back to the subject of the main clause â otherwise it means that Quintus gave Scintilla a gift so that she would love someone else, not Quintus.)}}
*{{Latin/gloss|Fabius equos domum duxit '''ne tempestate timerentur'''|Fabius brought the horses home lest they be frightened by the storm.}}
*{{Latin/gloss|Marcus GraeciÄ fugit '''ut matrem suam Romae inveniret'''|Marcus fled Greece to find his mother in Rome.}}

== Result Clauses ==
=== Definition, Common Usage and Expression in Latin ===
Result clauses state that something occurred as a result of something else happening. For a positive result, use ''ut''. For a negative result, use ''ut... non''.

Result clauses are normally recognisable by a signpost word in the main clause:

tam = so (with adjective or adverb) 
tantus, -a, -um = so big, 
tot (indecl) = so many
talis, -e = such, of such a sort
adeo = so much, to such an extent (with verb)
ita = so, in such a way (with verb) 
totiens = so often, so many times (with verb)

=== Examples ===
*{{Latin/gloss|Sextus tam iratus erat ut fratrem interficere vellet|Sextus was so angry that he wished to kill his brother.}}
*{{Latin/gloss|Horatia tam laeta erat ut lacrimaret|Horatia was so happy that she cried.}}
*{{Latin/gloss|Caesar tam potus erat ut Galliam oppugnare non posset|Caesar was so drunk that he couldn't attack Gaul.}}
*{{Latin/gloss|Milo tam defessus erat ut in via dormiret|Milo was so tired that he slept on the road.}}

== Indirect Commands == 
=== Definition, Common Usage and Expression in Latin ===
An indirect command is a statement like the following: "He ordered her to do x". The English equivalent words are "'''to'''" or "'''that they should'''" It can also take the form of "I am ordering you to do x", as opposed to the imperative "DO X!". Several verbs in Latin take the subjunctive mood with indirect commands: &lt;ol type="1"&gt;
&lt;li&gt;rogo, rogare, rogavi, rogatum - to ask&lt;/li&gt;
&lt;li&gt;persuadeo, persuadere, persuasi, persuasum - to persuade&lt;/li&gt;
&lt;li&gt;impero, imperare, -imperavi, imperatum - to order&lt;/li&gt;
&lt;li&gt;peto, petere petivi, petitum - to seek, ask for&lt;/li&gt;
&lt;/ol&gt;
These verbs use an ut/ne + the subjunctive construction.

=== Examples ===
*{{Latin/gloss|Imperator militibus imperavit ut castra caperent|The general ordered the soldiers to capture the camp.}}
*{{Latin/gloss|Eum rogo ut navem emat|I am asking him to buy the ship.}}
*{{Latin/gloss|Mater liberis imperavit ne in horto currerent|The mother asked her children not to run in the garden.}}

==Indirect questions==
===Definition, Common Usage and Expression in Latin===
The subjunctive is used in indirect questions. For example, the question 'What are you doing?' is direct, while "He asked what I was doing" is indirect. In Latin, the verb in the clause containing the indirect question must be in the subjunctive.

===Examples===
*''Imperator milites rogat si castra ceperent''&lt;br/&gt;The general asks the soldiers if they captured the camp.
*''Eum rogo quid faciat''&lt;br/&gt;I am asking him what he is doing.
*''Magister pueros rogat utrum laborent an ludant''&lt;br/&gt;The teacher asks the boys whether they are working or playing.

==NotÄ bene!==
&lt;references/&gt;</text>
      <sha1>kumi1kiwctrvt9wyg2g8b4kejx83nx4</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 3-Future</title>
    <ns>0</ns>
    <id>117736</id>
    <revision>
      <id>3257531</id>
      <parentid>2654269</parentid>
      <timestamp>2017-08-04T22:27:04Z</timestamp>
      <contributor>
        <ip>83.21.144.157</ip>
      </contributor>
      <comment>Title changed to Future I Active as shown by suffixes, source: http://www.nationalarchives.gov.uk/latin/advanced/popup/grammar-table.htm</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3421" xml:space="preserve">{{latin}}

== Future I, Active ==

Future active is a tense which, unsurprisingly, refers to something which has not yet happened. The endings are fairly basic, and follow fairly regular rules - however, the future endings used in 1st and 2nd conjugation differ from the endings of 3rd, 3rd-io (not a typo!), and 4th.

For example - "amo, amare" (1st conjugation) would be
{{Latin/verb
|{{Latin/gloss|Ama bo&lt;sup&gt;*&lt;/sup&gt;|I will love}}
|{{Latin/gloss|Ama bis|You will love}}
|{{Latin/gloss|Ama bit|He/She/It will love}}
|{{Latin/gloss|Ama bimus|We will love}}
|{{Latin/gloss|Ama bitis|Y'all will love}}
|{{Latin/gloss|Ama bunt&lt;sup&gt;*&lt;/sup&gt;|They will love}}
}}
&lt;sup&gt;*&lt;/sup&gt;1st person singular and 3rd person plural use bo and bunt, not bi.
Note the B and the BIs - the distinguishing feature of future tense in Latin.

With "venio, venire" (4th conjugation--io), however, the endings are different. In future, this is what they look like:
{{Latin/verb
|{{Latin/gloss|Veni am|I will come}}
|{{Latin/gloss|Veni es|You will come}}
|{{Latin/gloss|Veni et|He/She/It will come}}
|{{Latin/gloss|Veni emus|We will come}}
|{{Latin/gloss|Veni etis|Y'all will come}}
|{{Latin/gloss|Veni ent|They will come}}
}}

[deleted paragraphs go here. deleted to maintain rigorous accuracy, which we will go back to striving for.)

To clarify: ven&lt;U&gt;i&lt;/U&gt;re, venio.. we know it is 4th conjugation verb and if we look at its first person singular conjugation, we see that it is an io verb, because the conjugation of the first person singular is "ven'''i'''o". (an io category exists within 3rd and fourth conjugations and is a more general concept which we will briefly introduce here by using venire, venio as an example).

Let's first identify what we know.

We know it is 4th conjugation -io because it ends in &lt;U&gt;i&lt;/U&gt;re, which tells us that it is 4th conjugation, and io because its nominative singular ends in io (venio). Because it is io, we leave the i in. So, when we are asked (as all textbooks should phrase these &lt;B&gt;new&lt;/B&gt; questions):

1. What are the steps to form the future 2nd person conjugation?

We say:

1. It is better to know more than you need: check the infinitive nominative singular, we now know that it is 4th conjugation io.
2. We now know that we can form the stem: the stem is veni and can then add a personal ending--leaving in the i. We leave in the i because it is io. Because it looks weird, we never leave the i in the future perfect. 

What is the form for venire, in the future tense, in the 2nd person?

The answer is venies.

{| class="wikitable"
| colspan="9" | &lt;b&gt;Conjugation in the Future tense&lt;/b&gt;
|-
| || 1st || 2nd || 3rd || mixed || 4th || colspan="3" | Irregular
|-
| Infinitive: || amare || sedere || legere || capere || venire || ire || velle || esse
|-
| colspan="9" | Singular
|-
| 1st person: || amabo || sedebo || legam || capiam || veniam || ibo || volam || ero
|-
| 2nd person: || amabis || sedebis || leges || capies || venies || ibis || voles || eris
|-
| 3rd person: || amabit || sedebit || leget || capiet || veniet || ibit || volet || erit
|-
| colspan="9" | Plural
|-
| 1st person: || amabimus || sedebimus || legemus || capiemus || veniemus || ibimus || volemus || erimus
|-
| 2nd person: || amabitis || sedebitis || legetis || capietis || venietis || ibitis || voletis || eritis
|-
| 3rd person: || amabunt || sedebunt || legent || capient || venient || ibunt || volent || erunt
|-
|}</text>
      <sha1>tvstneathysdsn45efhtzsblspgh379</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 3-Passive</title>
    <ns>0</ns>
    <id>17929</id>
    <revision>
      <id>3285698</id>
      <parentid>2593876</parentid>
      <timestamp>2017-08-26T22:13:56Z</timestamp>
      <contributor>
        <username>Strange quark</username>
        <id>3078616</id>
      </contributor>
      <comment>Fix categorization</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4744" xml:space="preserve">{{Latin}}

See discussion for a tutorial on the passive voice and how to use it in Latin, including external links which explain future, imperfect, and present indicative passive verb forms.

I consider commercial textbooks to be inadequate, so I do not believe that this article can wait.


Here are the conjugations for the imperfect passive tenses. The basic rules for going to passive are:

In the first person, add -r if the active ending is a vowel, otherwise change the final constant to an -r. Examples:

paro (I prepare) -&gt; paror (I am being prepared)&lt;br&gt;
aperiebam (I was opening) -&gt; aperiebar (I was being opened)&lt;br&gt;
defendemus (we will defend) -&gt; defendemur (we will be defended)&lt;br&gt;
tenebimus (we will hold) -&gt; tenebimur (we will be held)&lt;br&gt;

In the third person, add -ur. Examples:

parat (he prepares) -&gt; paratur (he is being prepared)&lt;br&gt;
aperiebat (he was opening) -&gt; aperiebatur (he was being opened)&lt;br&gt;
defendent (they will defend) -&gt; defendentur (they will be defended)&lt;br&gt;
tenebunt (they will hold) -&gt; tenebuntur (they will be held)&lt;br&gt;

In the second person, things get more complicated. For the plural, replace "tis" with "mini". Note the exception in "ferre", where "fertis" becomes "fer&lt;b&gt;i&lt;/b&gt;mini". In the word "ferre", the "rm" letter combination consistently gets separated (ferimus instead of fermus, ferimur instead of fermur and ferimini instead of fermini). For the singular present, take out the active ending, add the thematic vowel (a from -are, e from -ere, i from -ire and nothing from -re, as in ferre) of the verb's infinitive ending and add -ris. Examples:

paras (you prepare) -&gt; par&lt;b&gt;aris&lt;/b&gt; (you are being prepared)&lt;br&gt;
tenes (you are holding) -&gt; ten&lt;b&gt;eris&lt;/b&gt; (you are being held)&lt;br&gt;
defendis (you are defending) -&gt; defend&lt;b&gt;eris&lt;/b&gt; (you are being defended)&lt;br&gt;
audis (you are listening) -&gt; aud&lt;b&gt;iris&lt;/b&gt; (you are being listened to)&lt;br&gt;
defendetis (you will defend) -&gt; defend&lt;b&gt;emini&lt;/b&gt; (you are being defended)&lt;br&gt;
amabis (you will love) -&gt; amab&lt;b&gt;eris&lt;/b&gt; (you will be loved)&lt;br&gt;

Note the -eris ending in the future passive. The future active bo, bis, bit, bimus, bitis, bunt looks like the third conjugation so the passive bor, beris, bitur, bimur, bimini, buntur looks like the third conjugation. The imperfect passive is bar, baris, batur, bamur, bamini, bantur.

{| border="1"
| colspan="9" | &lt;b&gt;Conjugation in the Present Passive&lt;/b&gt;
|-
| || 1st || 2nd || 3rd || mixed || 4th ||  Irregular
|-
| Infinitive: || amare || terrere || legere || capere || audire || ferre
|-
| colspan="9" | Singular
|-
| 1st person: || amor ||terreor || legor || capior || audior || feror
|-
| 2nd person: || amaris || terreris || legeris || caperis || audiris || ferris
|-
| 3rd person: || amatur || terretur || legitur || capitur || auditur || fertur
|-
| colspan="9" | Plural
|-
| 1st person: || amamur || terremur || legimur || capimur || audimur || ferimur
|-
| 2nd person: || amamini || terremini || legimini || capimini || audimini || ferimini
|-
| 3rd person: || amantur || terrentur || leguntur || capiuntur || audiuntur || feruntur
|-
|}
{| border="1"
| colspan="9" | &lt;b&gt;Conjugation in the Imperfect Passive&lt;/b&gt;
|-
| || 1st || 2nd || 3rd || mixed || 4th ||  Irregular
|-
| Infinitive: || amare || terrere || legere || capere || audire || ferre
|-
| colspan="9" | Singular
|-
| 1st person: || amabar ||terrebar || legebar || capiebar || audiebar || ferebar
|-
| 2nd person: || amabaris || terrebaris || legebaris || capibaeris || audiebaris || ferebaris
|-
| 3rd person: || amabatur || terrebatur || legebatur || capiebatur || audiebatur || ferebatur
|-
| colspan="9" | Plural
|-
| 1st person: || amabamur || terrebamur || legebamur || capiebamur || audiebamur || ferebamur
|-
| 2nd person: || amabamini || terrebamini || legebamini || capiebamini || audiebamini || ferebamini
|-
| 3rd person: || amabantur || terrebantur || legebantur || capiebantur || audiebantur || ferebantur
|-
|}
{| border="1"
| colspan="9" | &lt;b&gt;Conjugation in the Future Passive&lt;/b&gt;
|-
| || 1st || 2nd || 3rd || mixed || 4th ||  Irregular
|-
| Infinitive: || amare || terrere || legere || capere || audire || ferre
|-
| colspan="9" | Singular
|-
| 1st person: || amabor ||terrebor || legar || capiar || audiar || ferar
|-
| 2nd person: || amaberis || terreberis || legeris || capieris || audieris || fereris
|-
| 3rd person: || amabitur || terrebitur || legetur || capietur || audietur || feretur
|-
| colspan="9" | Plural
|-
| 1st person: || amabimur || terrebimur || legemur || capiemur || audiemur || feremur
|-
| 2nd person: || amabimini || terrebimini || legemini || capiemini || audiemini || feremini
|-
| 3rd person: || amabuntur || terrebuntur || legentur || capientur || audientur || ferentur
|-
|}

{{BookCat}}</text>
      <sha1>qb8585ppiwdvms1l01a1u2ixzecdyo3</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 3-Present Verbs</title>
    <ns>0</ns>
    <id>1833</id>
    <revision>
      <id>3601173</id>
      <parentid>3523470</parentid>
      <timestamp>2019-11-24T19:47:29Z</timestamp>
      <contributor>
        <username>Jetfrog28</username>
        <id>3261276</id>
      </contributor>
      <comment>/* Exercises */ yo -&gt; you</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="16118" xml:space="preserve">{{Latin}}

= Grammatical Introduction to Verbs =

This introductory section may be a bit overwhelming, but is an overall look at verbs. The majority of this section will be covered in later chapters. Nevertheless, looking over this chapter may help you to familiarize yourself with verbs. 

Verbs are parts of speech which denote action. There are two main forms of verbs in Latin:

â¢ Principal Verbs (the main verb which is found in every sentence. e.g.,: vir &lt;B&gt;ambulat&lt;/B&gt; = the man &lt;B&gt;is walking&lt;/B&gt;)

â¢ Adjectival Verbs (also known as participles, gerunds and gerundives which describe the state of the described noun. e.g.,: vir &lt;B&gt;ambulans&lt;/B&gt; = the &lt;B&gt;walking&lt;/B&gt; man. The verb behaves as an adjective)

Every sentence &lt;B&gt;must&lt;/B&gt; have a verb. In a sense, the principal verb is the sentence and all the nouns, adverbs and participles are only describing the scenario of the verb. Thus in Latin this constitutes a sentence:

 &lt;I&gt;est.&lt;/I&gt;

If you want to explain 'who' is or exists, you add a nominative substantive:

 &lt;I&gt;CornÄlia est.&lt;/I&gt;

We now know Cornelia 'is'. But what is she? So we add an adjective.

 &lt;I&gt;CornÄlia est bona.&lt;/I&gt;

Now we can see that Cornelia is good, but to elaborate further we can add an adverb:

 &lt;I&gt;CornÄlia vix est bona.&lt;/I&gt;

Now we know that Cornelia is 'hardly' (''[[wiktionary:vix#Latin|vix]]'': hardly, scarcely, barely) good.

Thus, in English, the shortest Latin sentence is:

You are.

in Latin:

 &lt;I&gt;es&lt;/I&gt;

==Examples==

These two examples will demonstrate the difference between an adjectival verb and a principal verb.

{| border="1"
|-
| bgcolor="#CCFFFF" | The '''resurrected''' Jesus '''appeared''' to his disciples.
|-
| 'resurrected' is a ''perfect participle'' (Adjectival) describing Jesus, while 'appeared' is the ''principal verb'' in the sentence.
|-
| bgcolor="#CCFFFF" | The '''shocked''' disciples '''see''' Jesus.
|-
| 'shocked' is a ''perfect participle'' (Adjectival) describing the disciples, while 'see' is the ''principal verb'' in the sentence.
|}

===Exercises===
{{Latin/Exercise|Answer|
#What is the difference between a principal and adjectival verb?
#What constitutes a sentence?
#Write a sentence in English, and Latin.
#Conjugate the verb 'to be' in the present tense in English and Latin (I am, You are, He is etc.)
|
#Principal verbs are main verb which is found in every sentence.   Adjectival Verbs are participles, gerunds and gerundives which describe the state of the described noun.
#a verb
#egÅ sum, I am
#sum, es, est, sumus, estis, sunt
  
}}

==Personal Endings==

Verbs in Latin are inflected to reflect the person who performs the action. English does the same to some extent in the verb to be:


{| border="1"
|-
| Latin || English
|-
| sum || I am
|-
| es || You are
|-
| est || (He/she/it) is
|-
| sumus || We are
|-
| estis || You (all) are
|-
| sunt || They are
|}

Latin, however, inflects all verbs, and is much more extensive than English, allowing writers and speakers of Latin to often drop the personal pronoun (as mentioned last lesson), as the performer of the action is understood by the formation of the verb. The Personal pronoun is only usually added for emphasis. In a way, the ending on Latin verbs are a type of pronoun.

===Exercises===

{{Latin/Exercise|Answer|
# What do the personal pronouns indicate?
|
# Personal pronouns (ego, tu, nos, vos, etc.) add emphasis. They are usually omitted (left out) because they are understood.
#: Example: ''[ego] amÅ [[wikt:pater#Latin|patrem]] meum et [[wikt:mater#Latin|matrem]] meam.'' 
#: I love my mother and my father. (you don't have to write ''ego'', it is understood)
}}

== Moods ==

There are several moods. Each has its own uses to convey certain ideas.  The most commons moods are:

â¢ Indicative
â¢ Subjunctive or Conjunctive
â¢ Imperative

The two moods we will first learn are the &lt;B&gt;imperative&lt;/B&gt; (commands and orders) and the &lt;B&gt;indicative&lt;/B&gt; (declarative statements and factual questions).

=== Exercises ===

{{Latin/Exercise|Answer|
# List the most common moods.
# What two moods are we going to learn about in this lesson, and what do they let us construct?
|
# Indicative, subjunctive (or conjunctive) and imperative.
# The moods we are going to learn about first are:
#: '''Imperative''': Which we use when we make orders.
#:: ''Go'' away. ''Fetch'' me the keys. ''Do'' not order me around!
#: '''Indicative''': Statements which are declarative, and questions concerning facts.
#:: John ''plays'' football.
}}

== Voice ==

There are two constructions verbs can have regarding voice.

Verbs can have either an active or passive voice.

E.g.  'I smash the car.' 'smash' is an active verb construct.

The passive is used when the nominative is affected by the verb. 

E.g. 'The car is smashed by me.' 'is smashed' is a passive construct.

=== Exercises ===

{{Latin/Exercise|Translate|
# What is 'voice'?
# What is active voice?
# What is passive voice?
# Construct a sentence in English using each of these voices.
|
# Voice is how a verb is constructed.
# When the subject affects the verb
# When the nominative is affected by the verb
#Ex.- I carried, I am being carried.
}}

== Tense ==

Tense in Latin comprises two parts: TIME and ASPECT.  Time reflects when the action is occurring or did occur: past, present, or future.  Aspect refers to the nature of the action: simple, completed, or repeated.  The "completed" aspect is generally termed "perfective" and repeated aspect "imperfective."  

Theoretically, a verb could have nine tenses (combinations of time and aspect).  However, Latin only has six, since some possible combinations are expressed by the same verb forms.  Latin tenses do not correspond exactly to English ones.

Below is a rough guide to tense in Latin.


{| border="1"
|-
|
| colspan="5" | &lt;CENTER&gt;&lt;B&gt;Time&lt;/B&gt;&lt;/CENTER&gt;
|-
| rowspan="4" | &lt;CENTER&gt;&lt;B&gt;A&lt;BR&gt;S&lt;BR&gt;P&lt;BR&gt;E&lt;BR&gt;C&lt;BR&gt;T&lt;/B&gt;&lt;/CENTER&gt;
|
 || Present || Future || Past
|-
| Simple
&lt;TD&gt;&lt;i&gt;Present Tense&lt;/i&gt;&lt;br&gt;"I walk"
| &lt;i&gt;Future Tense&lt;/i&gt;&lt;br&gt;"I will walk"
| &lt;i&gt;Perfect Tense&lt;/i&gt;&lt;br&gt;"I walked"
|-
| Imperfective
| &lt;i&gt;Present Tense&lt;/i&gt;&lt;br&gt;"I am walking"
| &lt;i&gt;Future Tense&lt;/i&gt;&lt;br&gt;"I will be walking"
| &lt;i&gt;Imperfect Tense&lt;/i&gt;&lt;br&gt;"I was walking"
|-
| Perfective
| &lt;i&gt;Perfect Tense&lt;/i&gt;&lt;br&gt;"I have walked"
| &lt;i&gt;Future Perfect Tense&lt;/i&gt;&lt;br&gt;"I will have walked"
| &lt;i&gt;Pluperfect Tense&lt;/i&gt;&lt;br&gt;"I had walked"
|}

As is evident, some Latin tenses do "double duty."  The Latin Present and Future Tenses can either express simple or progressive aspect.  Particularly difficult to grasp is the Latin Perfect tense, which can either express an action completed from the point of view of the present ("I have just now finished walking"), or a simple action in past time (its "aorist" sense, from the old Indo European aorist tense, which Latin lost but is still present in Greek).

=== Exercises ===
{{Latin/Exercise|Translate|
#Copy out the above table.
#Study the table.
|
Vide (see) the table above.
}}

== Infinitive ==

The infinitive (impersonal) is the form of the verb which simply means 'to (verb)' e.g. 'to do', or 'to be', or 'to love', or 'to hate' etc. All forms which are not in the infinitive are in the finite (personalised) form.

The infinitive has a -re at the end of the stem of the verb. The infinitive of 'to be' is an exception and is 'esse'.

dÄbeÅ curre&lt;B&gt;re&lt;/B&gt; nunc = I ought to run now.

esse, aut nÅn esse = To be, or not to be?

===Exercises===

Answer these two questions about the '''infinitive''' and '''finite'''.

{{Latin/Exercise|Answer|
# What is the '''infinitive'''? Give an example.
# What is the '''finite'''? Give an example.
|
# The '''infinitive''' is the verb-form that simply mean "to (verb)".
#: To ''sing'', to ''dance'', to ''drink'', to ''love''.
# Every verb which is not in the infinitive, is in the '''finite'''.
#: He ''smells'', we ''plot'', she had ''drunk'', he ''pours''.
}}

== Irregularities ==

Verbs which use the passive formation in an active sense are known as deponent. Verbs which don't have a form for every tense and mood are known as defective. You will meet a few words like this soon.

===Exercises===
{{Latin/Exercise|Answer|
#What is a deponent verb?
#What is an irregular verb?
#What is a defective verb?
|
#A verb which uses the passive voice in an active sense.
#A verb that does not follow the normal rules of conjugation.
#A verb missing forms for some tenses or moods.
}}

== Personal Pronouns ==

In case you do ever use a personal pronoun to emphasise the SUBJECT of the verb, you must remember that the personal pronoun must be in the nominative case and the number and person of the verb must match that of the subject. (Review Lesson 7 if unfamiliar with the terms person and subject).

=== Exercises ===
{{Latin/Exercise|Translate|
#What case should the subject (performer) of the verb be in?
#What number should the principal verb be?
#What person and number is 'ego'?
#What person and number is 'I'?
#What person and number is 'we'?
#What person and number is 'thou'?
#What person and number is 'ye'?
#What person and number is 'vÅs'?
#What person and number is 'nÅs'?
#What person and number is 'tÅ«'?
#What person and number is 'boy'?
|
# Nominative case
# First person, singular.
# First person, singular.
# First person, singular.
# First person, plural.
# Second person, singular.
# Second person, plural.
# Second person, plural.
# First person, plural.
# Second person, singular.
# Third person, singular.
}}

== Principal Parts ==

When one looks up a verb in the dictionary, the principal parts are given. From these principal parts you can find the correct form of the verb for every circumstance.


{| border="1"
|-
| Present Indicative Active 1st Person || Present Infinitive
| Perfect Indicative Active 1st Person || Supine
|-
| amÅ || amÄre || amÄvi || amÄtum
|-
| Determines whether the vowel is dropped in the 1st person singular present.
| Gives the imperfect stem and infinitive
| Gives the perfect stem
| Allows you to form adjectival forms of the verb (Participles)
|}

=== Exercises ===
Answer this question about '''principal parts'''.

{{Latin/Exercise|Answer|
# What do the '''principal parts''' allow you to do?
|
# The principal parts are the verb-forms you find when you look in the dictionary. E.g. if you look for the verb ''amÅ'' (love) in a dictionary you would find:
#: amÅ â¢ amÄre â¢ amÄvi â¢ amÄtum 
:: These four forms will help you form every Latin verb you want.
}}

== Using the Dictionary ==

All nouns are given in the nominative, as well as the declension and gender of the noun. Verbs are alphabetized using the 1st person singular  (the first principal part) and the infinitive is given.  Supplementary principal parts are given if the various other principal parts do not follow the standard pattern of formation from the infinitive and 1st person singular.

=Verbs: Conjugation in the Present Imperfect =
 
The present imperfect is the simplest tense. To form the present imperfect all that is required is to place the personal endings at the end of the verb stem.
 
Thus, if you have the stem 'ama' (love), to make it 'I love' you place an Å at the end.

 I love  =  amÅ (amaÅ*)
 we love =  amÄmus

* Latin drops the 'a' in amaÅ forming amÅ.

Latin '''could''' add personal pronouns, however only for added emphasis and in conjunction with the corresponding person ending on the verb. Otherwise the sentence will not make sense. For example:
 
ego amÅ = I (not you) love

nÅs amÄmus = We (not you) love
 
but that would be for special emphasis: It's '''I''', not you, who loves.

Here are the forms of the verb 'porta', carry, in the present imperfect tense:

 portÅ     I carry                     first person singular
 portÄs    thou carriest, you carry    second person singular
 portat    he, she, it carries         third person singular 
 portÄmus  we carry                    first person plural
 portÄtis  you (all) carry             second person plural
 portant   they carry                  third person plural

'porto' can also be translated 'I am carrying' (present imperfect), 'I do carry' (present emphatic).  'I carry' is known as the 'present simple' tense in English.. Again the 'a' gets dropped when the 'Å' is placed on porta. Porta, and ama are known as 1st conjugation verbs; in other words, verbs which have a stem ending in 'a'.

There are three other conjugations, and below are some examples of verbs from each of the four conjugations (present imperfect tense):

 
{| border="1"
|-
| porta, carry (1st. Conj) || mone, warn (2nd Conj)
| rege, rule (3rd Conj.) || audÄ«, hear (4th Conj)
|-
| portÅ, I carry || moneÅ, I warn || regÅ, I rule
| audiÅ, I hear
|-
| portÄs, thou carriest || monÄs, thou warnest
| regis, thou rulest || audis, thou hearest
|-
| portat, he/she/it carries || monet, he/she/it warns
| regit, he/she/it rules || audit, he/she/it hears
|-
| portÄmus, we carry || monÄmus, we warn
| regimus, we rule || audimus, we hear
|-
| portÄtis, ye carry || monÄtis, ye warn
| regitis, ye rule || auditis, ye hear
|-
| portant, they carry || monent, they warn
| regunt, they rule || audiunt, they hear
|}

Each verb uses the same final letter or letters to indicate the 'subject' - I, thou, he/she/it, we, you, they.

Before these final letters, the first conjugation has an 'a' (although when an 'o' is placed, the 'a' is often dropped), the second an 'e', and the third and fourth usually an 'i'. The third person plural forms in the third and fourth conjugations have a 'u'. These verb forms really should be learned by heart.

The most common verb of all is irregular (see next lesson). Here is a table of the verb 'to be' in Latin, English, and four Romantic languages (French, Spanish, Italian and Portuguese)

{| border="1"
|-
| colspan="6" | esto: be
|-
| &lt;B&gt;Latin&lt;/B&gt; || &lt;B&gt;English&lt;/B&gt; || &lt;B&gt;French&lt;/B&gt;
| &lt;B&gt;Spanish&lt;/B&gt;|| &lt;B&gt;Italian&lt;/B&gt; || &lt;B&gt;Portuguese&lt;/B&gt;
|-
| sum || I am || je suis || yo soy || sono || eu sou
|-
| es || thou art || tu es || tÃº eres || sei || tu Ã©s
|-
| est || he/she/it is || il/elle est || Ã©l/ella es || Ã¨ || ele/ela Ã©
|-
| sumus || we are || nous sommes || nosotros/-as somos || siamo || nÃ³s somos
|-
| estis || ye are || vous &amp;ecirc;tes || vosotros/-as sois || siete  || vÃ³s sois
|-
| sunt || they are || ils/elles sont || ellos/-as son || sono  || eles/elas sÃ£o
|}

The personal endings are the same as in the four regular conjugations.

=== Exercises ===
:''Conjugate (find how a verb is in different forms) the verb 'amÃµ'.''

{{Latin/Exercise|Translate|What form of the verb 'amÃµ' (hint: amÃµ is conjugated like portÃµ in the table above) would the following words use to become the suffix:
#ego (I)
#tÅ« (thou)
#puer (the boy)
#nÅs (we)
#vÅs (ye)
#puellae (the girls)
|
#[ego] amÃµ (I love)
#[tu] amÄs (thou lovest ''pl.'', you love ''pl.'')
#puer amat (the boy loves)
#[nos] amÄmus (we love)
#[vos] amÄtis (ye love ''pl.'', you love ''pl.'')
#puellae amant (the girls love)
}}

&lt;br&gt;

== Imperative Mood ==

The imperative mood conveys an order (e.g. Go!, Run!, Away Now!). The imperative mood is formed by simply using the stem of the verb. If the order is to a large group of people, or you are trying to show respect, you must use the -te suffix.

amÅ eum = I love him.

amÄ eum = Love him!.

amÄte eum = Love (respectful, or plural) him!


currÅ casam = I run home.

curre casam = Run home!

currite casam = Run (respectful, or plural) home!


regÅ prudente = I rule wisely.

rege prudente = Rule wisely!

regite prudente = Rule (respectful order) wisely!

=== Exercises ===

* ''Translate Latin verbs:''

{{Latin/Exercise|Translate|Translate the following verbs:
# portÄmus â¢ regunt â¢ monÄs â¢ estis â¢ audÄ«tis â¢ monent â¢ regÅ â¢ portÄs â¢ sunt
|
# we carry â¢ they rule â¢ thou warnest â¢ ye are â¢ye hear â¢ they warn â¢ I rule â¢ you carry â¢ they are
}}

* ''Translate sentences into Latin:''

{{Latin/Exercise|Translate|Translate Into Latin:
# I carry my book.
# You do not kill.
# They hear music.
|
# meum lÄ«brum portÅ.
# interficis nÅn.
# mÅ«sicam audiunt.
}}</text>
      <sha1>1cn9hcd7e1qzie5q9zfd0rearp59uvo</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 3-Subjunctive Imperfect</title>
    <ns>0</ns>
    <id>34958</id>
    <revision>
      <id>3655165</id>
      <parentid>3285699</parentid>
      <timestamp>2020-01-25T10:34:34Z</timestamp>
      <contributor>
        <username>1234qwer1234qwer4</username>
        <id>1406991</id>
      </contributor>
      <minor/>
      <comment>/* Application */ typo, style</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1061" xml:space="preserve">{{Latin}}

The conjugation of the subjunctive imperfect active follows a simple rule.  The verb in its infinitive form, that is, the second principle part, (amare, to love, for example) simply has the subjunctive endings appended onto it as follows:

ego      amarem

tu       amares

is       amaret

nos      amaremus

vos      amaretis

ei       amarent


the passive voice is formed by the addition of passive voice endings onto the infinitive stem


ego      amarer

tu       amareris

is       amaretur

nos      amaremur

vos      amaremini

ei       amarentur

==Application==
The imperfect subjunctive is only used for complex syntactic constructions; cum clauses and indirect questions and the like.  Rarely, if ever, does it stand alone.
===Because/Cum===
One application is in its use with 'cum' in the sense of 'because' as a clause. e.g. 
;Diutius cum sustinere nostrorum impetus non possent, Helvetii se in montem receperunt.:When(Because) the Helvetis could not sustain/resist our attacks for long, they retreated to the mountains. 

{{BookCat}}</text>
      <sha1>01kwe4o996wzr4dh0cd1f3o7hyrgj93</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 4-Ablative</title>
    <ns>0</ns>
    <id>1233</id>
    <revision>
      <id>3538156</id>
      <parentid>2754878</parentid>
      <timestamp>2019-04-18T18:36:22Z</timestamp>
      <contributor>
        <username>Vincentius.NguyenDinhDuyThien</username>
        <id>3160409</id>
      </contributor>
      <minor/>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="7346" xml:space="preserve">{{Latin}}

== The Ablative Case ==

The ablative case in Latin has 4 main uses:

# With certain prepositions, eg. in, cum, sub
# Instrumental ablative, expressing the equivalent of English "by", "with" or "using"
# Locative Ablative, using the ablative by itself to mean "in", locating an action in space or time
# Ablative of separation or origin, expressing the equivalent of English "from"

The different uses of the ablative will be dealt progressively.  For a summary of all forms of the ablative, please consult the Appendix.

== Grammar Part 5: The Power of the Ablative Case ==

Ablative generally indicates position in time and/or space (i.e. when and where). It can also indicate the idea of ways of getting to a location, abstractly or concretely.

===Ablative of Means===
====Exercise====
How would you translate "I made the toga by hand"?

*'''''Hint:''' You would not (and should not) use the genitive. The case you are studying right now can be used &lt;u&gt;by itself&lt;/u&gt; for this goal.''
*'''''Hint:''' Remember that you won't need to use the pronoun "I," since Latin is based not on word order, but on the endings!''
*'''''Glossary:'''''
*: "to make" - ''Facio'' ("I make"), ''facere'' ("to make"), ''feci'' ("I made"), ''factus'' ("made")  
*: "toga" - ''Toga'', ''togae'' feminine
*: "hand" - ''Manus'', ''manus'' feminine (This is fourth declension)

=====Answer=====
Answer: ''Togam manu feci''. 

In this case, the word "manu" is in the ablative (see fourth declension list) and thus means "by hand." 

====Exercise====
I have my wisdom by means of my teacher.

*''''Glossary''':''
*: "wisdom" - ''Sapientia, sapientiae'' feminine 
*: "to have" - ''Habeo'' ("I have"), ''habere'' ("to have"), ''habui'' ("I had"), ''habitus'' ("had")
*: "teacher" - ''Magister, magistri'' masculine (This is a second declension word, despite the 'r' at the end, like puer.)

=====Answer=====
Answer: ''Habeo sapientiam magistro.''

===Ablative of Time ===
How would you say: ''I will arrive at the 5th hour.''

'at the 5th hour' is indicating position of time. Thus, it can be put into the ablative case, giving:

&lt;i&gt;adveniam quinta hora&lt;/i&gt;

In general, therefore, in order to say "In the morning", "At nine O'clock," or "In the tenth year," use ablative. It is generally used to refer to a specific time in which something has, does, or will occur.

Example: I will leave in the night.

Hint: Future tense can be looked up in the appendices of this Wikibook!

Hint: to leave- discedo, discedere; night- nox, noctis(This is a third declension word!)

=====Answer=====

Answer: Discedam nocte.

Note the simplicity in which Latin translates the six words into simply two. The ending based language completely negates the need for the words "I," "will," "in," and "the."

===Ablative of Place===
''Naves navigabant mari.'' The ships were sailing on the sea. 

The ablative is also useful for showing the location of things, in general where you would use the words on, in, or at. There is an exception for the slightly more archaic locative, which is used with the words ''domi'' (from ''domus, domus, f.'', home), ''ruri'' (from ''rus, ruris, n.'', country [as opposed to city]), and ''Romae'' (from ''Roma, Romae, f.'', Rome), as well as with the names of towns, cities and small islands. 

Latin has its own way of handling prepositions depending on the nouns and their cases in the sentence, including the versatile ''in'', which can take many different meanings depending upon the case of the object.

==Ablative with prepositions==

Here are a few prepositions that can take the ablative (for a fuller list, see the lesson on adverbs and prepositions in the previous chapter):

{| border="1"
|-
| &lt;B&gt;Latin&lt;/B&gt; || &lt;B&gt;English&lt;/B&gt;
|-
| ''in''&lt;ref&gt;Means "into" or "against" when used with the accusative&lt;/ref&gt; || in, on
|-
|''a/ab'' || from
|-
|''de'' || down from, concerning
|-
|''e/ex'' || out of, out from
|-
|''cum'' || with
|-
|''sine'' || without
|-
|''pro'' || on behalf of, in front of
|-
|''super''&lt;ref&gt;Has static meaning when used with the ablative but connotes motion when used with the accusative&lt;/ref&gt; || upon, above, beyond
|-
|''sub''&lt;ref&gt;Usually means "up to" or "up to the foot of" when used with the accusative&lt;/ref&gt; || under, beneath
|}


&lt;references/&gt; 

As a general rule, when motion is implied, use the accusative instead.

&lt;!--
A legal metaphor: To accuse a noun is to get into a long process, and stay in the same place. (with the direct object.) If you use the ablative,you are pouncing on them and prepositioning them in a position of guilt.
--&gt;

===Example 3===

''Servus ex agris venit.''
:"The slave came from the fields."

Note: ''Ager'' (''ager, agri, m.'', field) must take an ablative suffix to match the preceding preposition, in this case ''e''/''ex''. 

Incidentally, both ''ager'' and ''campus'' mean "field," but ''ager'', like its English derivative "agriculture", connotes a farming field, while ''campus'' (think "camping" or "college campus") means "open field." The ''Campus Martius'' was a large field in Rome used for military training.
&lt;!-- Updated Oct. 6 2004 after accuracy was confirmed. 

--Um, the original example, "servus est ab agris," is not even Latin. Fixed. 7/3/2008--&gt;

==The Vocative Case==

While you will rarely need to ask Lupus where the bathroom is in Latin, you may find yourself reading either quotes or letters in which a person is being directly addressed. The case it will be in is the vocative.

For example, "Hail, Augustus" will appear in Latin as Ave Auguste, and not Ave Augustus.


Each declension has its own form of the vocative singular and plural. They are listed in the table below.

Furthermore, in all but the second declension, the nominative and vocative are exactly the same!
{|border="1"
|-
| Number || First ||    Second*    || Third || Fourth || Fifth
|-
| Singular || a || us-&gt;e, ius-&gt;i, r-&gt;r|| -- || us || es
|-
| Plural** || ae || i || es || us || es 
|-
|}
* In the second declension singular, there are three separate possibilities for the vocative, depending on its nominative ending. Hence, if it is a us word, it will become an e and so forth.

====Examples for different declensions in the second declension==== 
*'''-us:'''
*: Lupus -&gt;Lupe (given name, wolf)
*'''-ius:''' 
*:Filius -&gt; Fili (son)
*:Horatius-&gt; Horati (given name)
*'''-r:''' 
*:Puer-&gt; Puer (boy)

:''In all cases, the plural vocative is exactly the same as the plural nominative. This extends to those words which are neuter, which always have an 'a' for the nominative and vocative.''
  
====Examples====
#Hello, Sextus.(Hello= ''Salve'')*
#: Salve, Sext'''e'''. 
#Speak, girl! (Speak= ''dico, dicere, dixi'')*
#: Dic, puell'''a'''.
#Knee, run!*(Knee= ''genu''; run= ''curro, currere, cucurri'')*
#: Gen'''u''', curre!
#Oh, heart, why do you lead me? (Oh-o; heart- cor, cordis-f.; lead-duco, ducere; 
#: O, cor! Cur ducis tu me?

*Note that the first three also require use of the imperative. The imperative is used when ordering or telling someone what to do, e.g.- "Stop," or "Get away from me."

The basic form of the imperative is created by dropping the "re" off of the infinitive form of the verb, as in: Amare, which becomes Ama; at least in the singular active form, which is all that these exercises require. More can be found about this subject in the chapter on verbs.</text>
      <sha1>gfzrw2m0r31c662inxv01gbmpc9n0jc</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 4-Adverbs and Prepositions</title>
    <ns>0</ns>
    <id>11285</id>
    <revision>
      <id>3597812</id>
      <parentid>3558146</parentid>
      <timestamp>2019-11-17T07:03:33Z</timestamp>
      <contributor>
        <ip>191.181.241.191</ip>
      </contributor>
      <comment>/* Comparatives and Superlatives of Adjectives (Comparativa et superlativa adjectivorum) */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="17949" xml:space="preserve">{{Latin}}

==Comparatives and Superlatives of Adjectives (Comparativa et superlativa adjectivorum)==

{| class="wikitable" width="50%"
|-
! colspan="2" | &lt;b&gt;Lesson Vocabulary&lt;/b&gt;
|-
| align="center" colspan="2" |
|-
! bgcolor="#CCFFFF" | &lt;font face="Arial" size="4"&gt;Latin&lt;/font&gt;
! bgcolor="#CCFFCC" | &lt;font face="Arial" size="4"&gt;English&lt;/font&gt;
|-
| align="center" colspan="2" |
|-
| align="center" bgcolor="#CCFFFF" | '''fortis, forte'''
| align="center" bgcolor="#CCFFCC" | '''strong, brave'''
|-
| align="center" bgcolor="#CCFFFF" | '''vir'''
| align="center" bgcolor="#CCFFCC" | '''man'''
|-
| align="center" bgcolor="#CCFFFF" | '''long-us, -a, -um'''
| align="center" bgcolor="#CCFFCC" | '''long'''
|-
| align="center" bgcolor="#CCFFFF" | '''ingeniosus, -a, -um'''
| align="center" bgcolor="#CCFFCC" | '''clever, talented'''
|-
| align="center" bgcolor="#CCFFFF" | '''denarius, -i, m.'''
| align="center" bgcolor="#CCFFCC" | '''denarius (unit of currency)'''
|-
| align="center" bgcolor="#CCFFFF" | '''soror, sororis, f.'''
| align="center" bgcolor="#CCFFCC" | '''sister'''
|-
| align="center" bgcolor="#CCFFFF" | '''quam'''
| align="center" bgcolor="#CCFFCC" | '''than'''
|-
| align="center" bgcolor="#CCFFFF" | '''habet'''
| align="center" bgcolor="#CCFFCC" | '''he/she has'''
|}

There are three types of adjectives: Positive (the 'normal' adjective, eg. the &lt;B&gt;brave&lt;/B&gt; man: &lt;B&gt;fortis&lt;/B&gt; vir), Comparative (eg. the &lt;B&gt;braver&lt;/B&gt; man, or the &lt;B&gt;rather brave&lt;/B&gt; man: &lt;B&gt;fortior&lt;/B&gt; vir) and Superlative (eg. the &lt;B&gt;bravest&lt;/B&gt; man, or the &lt;B&gt;very brave&lt;/B&gt; man: &lt;B&gt;fortissimus&lt;/B&gt; vir). Comparatives and superlatives of adjectives are usually formed by appending the suffix -ior for masculine/feminine nouns and -ius for neuter ones (genitive is -ioris) to form the comparative. Append the suffix -issimus to form the superlative. However, the superlatives of adjectives ending in -er (eg. the &lt;B&gt;fair&lt;/B&gt; boy: &lt;B&gt;pulcher&lt;/B&gt; puer) are formed by adding the suffix -rimus to the Nominative, then we will have &lt;B&gt;pulcherrimus&lt;/B&gt; puer (&lt;B&gt;fairest&lt;/B&gt; puer).

All comparatives are declined like third declension nouns while superlatives are declined like second declension nouns, and thus must match the gender of the noun the superlative modifies. Often stem changes occur when appending theses suffixes.

{| border="1"                                                                      
|-
| colspan="3" | &lt;CENTER&gt;&lt;B&gt;Adjective: longus (long)&lt;/B&gt;&lt;/CENTER&gt;
|-
| longus || longior || longissimus
|-
| long || longer || longest
|}


{| border="1"
|-
| colspan="3" | &lt;CENTER&gt;&lt;B&gt;Adjective: pulcher (fair)&lt;/B&gt;&lt;/CENTER&gt;
|-
| pulcher || pulchrior || pulcherrimus
|-
| fair || fairer || fairest
|}

===Irregular Adjectives===

Fortunately, there are only a few irregular adjectives.

{| border="1"
|-
| colspan="4" | &lt;CENTER&gt;&lt;B&gt;Irregular Adjectives&lt;/B&gt;&lt;/CENTER&gt;
|-
| &lt;b&gt;Meaning&lt;/b&gt; || &lt;b&gt;Positive&lt;/b&gt; || &lt;b&gt;Comparative&lt;/b&gt; || &lt;b&gt;Superlative&lt;/b&gt;
|-
| good || bonus || melior (&lt;i&gt;better&lt;/i&gt;)|| optimus (&lt;i&gt;best&lt;/i&gt;)
|-
| bad || malus || peior (&lt;i&gt;worse&lt;/i&gt;)|| pessimus (&lt;i&gt;worst&lt;/i&gt;)
|-
| large, great || magnus || maior || maximus
|-
| small || parvus || minor || minimus
|-
| many || multus || plus || plurimus
|}
&lt;br&gt;
&lt;br&gt;
'''Examples:'''
{| class="wikitable"
|'''Latin'''
|'''English'''
|-
| bgcolor="#CCFFFF" | Marcus est fortior quam Publius
| bgcolor="#CCFFCC" | Marcus is braver than Publius
|-
| bgcolor="#CCFFFF" | Publius ingeniosior est quam Marcus
| bgcolor="#CCFFCC" | Publius is more clever than Marcus
|-
| bgcolor="#CCFFFF" | Marcus plures denarios habet quam Publius
| bgcolor="#CCFFCC" | Marcus has more denariuses&lt;sup&gt;1&lt;/sup&gt; than Publius
|-
| bgcolor="#CCFFFF" | Publius plures sorores habet quam Marcus
| bgcolor="#CCFFCC" | Publius has more sisters than Marcus
|-
|colspan="2" | &lt;small&gt;1: We won't say "Marcus has more money" (''pecunia'') since plus in the singular takes the genitive case, which will not be covered for a few more lessons&lt;/small&gt;
|}

==Adverbs==

Adverbs are formed usually by replacing the suffix appended to the stem with the -e, or -i and sometimes -um. Adverbs modify the verb in the clause that contains the adverb.  The adverb may be placed anywhere with the clause.  Adverbs may be of positive, comparative and superlative form. Unlike adjectives and substantives, adverbs do not have declension or gender. And thus they are referred to as being 'indeclinable.' The following suffixes are appended to form the comparative and superlative forms of adverbs: -ius for comparatives and -issime for superlative.

===Example===

{| border="1"
|-
| colspan="3" | &lt;CENTER&gt;&lt;B&gt;Adverbs&lt;/B&gt;&lt;/CENTER&gt;
|-
| fortiter || fortius || fortissime
|-
| bravely || more bravely || most bravely
|}

Irregular adjectives form adverbs regularly from the adjective forms.

For example:

*melior (better) -&gt; melius
*maximus (greatest) -&gt; maxime

Some adverbs do not come from adjectives but rather exist on their own:

*diu (for a long time) -&gt; diutius, diutissime
*saepe (often) -&gt; saepius, saepissime

===Exercise 1===
{{Latin/Exercise|Answer|
#What is the comparative adverbial form of sol-us, sol-a, sol-um (alone)?
#What is the positive adverbial form of laetus? (happy)
#What is the positive adjectival form of Ä«rÄtior? (angrier)
#What is the positive adverbial form of certus? (certain)
#What is the superlative adjectival form of certus?
#What is the superlative adverbial form of certe?
#What is the superlative adjectival form of male?
#What is the superlative adverbial form of malus?
#What is the comparative adjectival form of dÄsertus? (deserted)
|
#Solius
#Laete
#ÄªrÄtus
#Certe
#Certissimus
#Certissime
#Pessimus
#Pessime
#DÄsertior
}}

==Conjunctions==

Conjunctions are indeclinable particles that join clauses together to form sentences.  Examples of forms of conjunctions in English are: and, but and so. Conjunctions are either coordinating (joining two main clauses) or subordinating (joining a subclause to a main clause).


{| border="1"
|-
| colspan="2" | &lt;B&gt;List of Common Conjunctions&lt;/B&gt;
|-
| colspan="2" | &lt;I&gt;Coordinating Conjunctions&lt;/I&gt;
|-
| atque || and
|-
| aut || or
|-
| aut...aut^^ || either...or
|-
| enim (usually placed second in sentence)
| for
|-
| ergo || and so, therefore
|-
| et || and
|-
| et...et^ || both...and
|-
| igitur || therefore
|-
| itaque || and so
|-
| nam || for
|-
| nec/neque || and not, nor
|-
| nec/neque...nec/neque^ || neither...nor
|-
| -que* || and
|-
| sed || but
|-
| tamen (usually placed second in a sentence
| however
|-
| colspan="2" | &lt;I&gt;Subordinating Conjunctions&lt;/I&gt;
|-
| cum || when
|-
| dum || while, for the time
|-
| nisÄ« || unless, except
|-
| quamquam || however
|-
| quod || because
|-
| sÄ« || if
|-
| ubi || where, when
|-
| ut
| as/with result clauses: in order to, so, to
|}

===Exercise 2===

{| class="wikitable" width="75%"
|-
| align="center" colspan="3" |
|-
! bgcolor="#CCFFFF" | &lt;font face="Arial" size="2"&gt;Latin&lt;/font&gt;
! bgcolor="#CCFFCC" | &lt;font face="Arial" size="2"&gt;English&lt;/font&gt;
! bgcolor="#FFCCCC" | &lt;font face="Arial" size="2"&gt;Notes&lt;/font&gt;
|-
| align="center" bgcolor="#CCFFFF" | '''virtus, virtutis'''
| align="center" bgcolor="#CCFFCC" | '''virtue, courage'''
| align="center" bgcolor="#FFCCCC" | 
|-
| align="center" colspan="3" |
|-
| align="center" bgcolor="#CCFFFF" | '''in animo habeo'''
| align="center" bgcolor="#CCFFCC" | '''I have in mind, I intend'''
| align="center" bgcolor="#FFCCCC" | '''Takes an infinitive'''
|-
| align="center" colspan="3" |
|-
| align="center" bgcolor="#CCFFFF" | '''ire'''
| align="center" bgcolor="#CCFFCC" | '''to go'''
| align="center" bgcolor="#FFCCCC" | '''The indicative forms (I go, you go, etc) are &lt;i&gt;eo, is, it, imus, itis, eunt&lt;/i&gt;'''
|-
| align="center" colspan="3" |
|-
| align="center" bgcolor="#CCFFFF" | '''hodie'''
| align="center" bgcolor="#CCFFCC" | '''today'''
| align="center" bgcolor="#FFCCCC" | '''&lt;i&gt;hodie&lt;/i&gt; is an adverb, don't try to use it as a noun ("Today is a good day")'''
|-
| align="center" colspan="3" |
|-
| align="center" bgcolor="#CCFFFF" | '''domi'''
| align="center" bgcolor="#CCFFCC" | '''at home'''
| align="center" bgcolor="#FFCCCC" | '''An instance of the &lt;i&gt;locative case&lt;/i&gt;, normally used for cities'''
|-
| align="center" colspan="3" |
|-
| align="center" bgcolor="#CCFFFF" | '''ambulat'''
| align="center" bgcolor="#CCFFCC" | '''he/she walks'''
| align="center" bgcolor="#FFCCCC" | ''' '''
|-
| align="center" colspan="3" |
|-
| align="center" bgcolor="#CCFFFF" | '''forum, -i'''
| align="center" bgcolor="#CCFFCC" | '''marketplace'''
| align="center" bgcolor="#FFCCCC" | ''' '''
|-
|}

Based upon your reading of the table of conjunctions, how would one translate these sentences?

#Aut tu es bonus aut tu es malus ergo dÄ«c mihi vÄritÄtem (&lt;i&gt;tell me the truth&lt;/i&gt;).
#CavÄte canem quod nec estis fortes nec cum virtÅ«te.
#Puer Ä forÅ cum canÄ ambulat
#Et canis et cattus sunt laetÄ«.
#In animÅ habeÅ Ä«re ad grammaticum hodiÄ sed habeÅ labÅrem (&lt;i&gt;work&lt;/i&gt;) domÄ«.

==Prepositions==

You have met a few prepositions already.  Prepositions are indeclinable and genderless.  Prepositions are placed before substantives and adjectives.  Most prepositions take only the accusative or ablative case.  Some prepositions may take both, however their meanings differ depending on the case.

{| border="1"
|-
| colspan="2" | &lt;B&gt;List of Common Prepositions&lt;/B&gt;
|-
| colspan="2" | &lt;I&gt;Prepositions Taking the Accusative Case&lt;/I&gt;
|-
| ad || to
|-
| ante || before
|-
| circum || around
|-
| contra || against
|-
| extra || outside
|-
| in* || into
|-
| inter || between, among
|-
| per || through
|-
| post || after
|-
| prope || near
|-
| propter || because of
|-
| super || above
|-
| trans || across
|-
| colspan="2" | &lt;I&gt;Prepositions Taking The Ablative Case&lt;/I&gt;
|-
| a/ab** || from
|-
| cum || with
|-
| de || about, down from
|-
| e/ex** || out of
|-
| in* || in
|-
| pro || for, on behalf of
|-
| sine || without
|-
| sub || under
|-
| colspan="2" | *notice the two different meanings of &lt;i&gt;in&lt;/i&gt; depending on the case
|-
| colspan="2" | ** Similar to a/an in English, the form with the consonant is used when the following word begins with a vowel or 'h'.
|}

{| class="wikitable"
| colspan="5" | Ablative case forms for nouns and adjectives
|-
|Nominative singular
|'''puell-a''' (1st decl.)
|'''domin-us''' (2nd decl. m.)
|'''triclini-um''' (2nd decl. n.)
|'''canis''' (3rd decl.)
|-
|Ablative singular
|'''puell-Ä'''
|'''domin-o'''
|'''tricilini-o'''
|'''can-e'''
|-
|Ablative plural
|'''puell-is'''
|'''domin-is'''
|'''triclini-is'''
|'''can-ibus'''
|}

===Exercise 3===

{| class="wikitable" width="50%"
|-
| align="center" colspan="2" |
|-
! bgcolor="#CCFFFF" | &lt;font face="Arial" size="2"&gt;Latin&lt;/font&gt;
! bgcolor="#CCFFCC" | &lt;font face="Arial" size="2"&gt;English&lt;/font&gt;
|-
| align="center" bgcolor="#CCFFFF" | '''ero&lt;br&gt;eris&lt;br&gt;erit&lt;br&gt;erimus&lt;br&gt;eritis&lt;br&gt;erunt'''
| align="center" bgcolor="#CCFFCC" | '''I will be&lt;br&gt;You will be&lt;br&gt;He/she will be&lt;br&gt;We will be&lt;br&gt;You will be&lt;br&gt;They will be'''
|-
| align="center" bgcolor="#CCFFFF" | '''dives, divitis'''
| align="center" bgcolor="#CCFFCC" | '''wealthy'''
|-
| align="center" bgcolor="#CCFFFF" | '''aedificium, -i'''
| align="center" bgcolor="#CCFFCC" | '''building'''
|-
| align="center" bgcolor="#CCFFFF" | '''anima, -ae'''
| align="center" bgcolor="#CCFFCC" | '''mind, soul'''
|-
| align="center" bgcolor="#CCFFFF" | '''venit'''
| align="center" bgcolor="#CCFFCC" | '''he/she comes'''
|-
|}

Translate the following sentences:

#ero domum (Latin omits 'ad' with 'domus,' specific city names, and small islands; e.g. Eunt Romam = They go [to] Rome.)
#cum bona fortuna ero dives!
#circum agrum est aedificium cum atrio
#tu non es vir sine animis.
#familia venit cum amore.

== List of Frequent Adverbs, Prepositions, and Conjunctions in Latin ==

Taken from http://www.georgetown.edu/faculty/irvinem/classics203/resources/latin.lex

*atque, ac (conj): and [also], and; atque is used before consonants, ac before vowels
*ad modum: adv. very, quite; fully; + neg. = at all
*ad huc/adhuc: thus far, as yet, still, in addition, in the future
*aliquam: in some degree
*aliqui -qua -quod: some, any
*aliquis -qua -quid: someone, something; some, any
*aliquando: at times, sometimes; once, formerly
*aliquotiens: several times, at different times
*at (form of ad = in addition to): but (intro startling transitions)
*atque: and as well, even, together with, in everything;
*atque...atque, both..and
*atqui: rather, however, but at any rate, but for all that (transition in arg.)
*aut: or, at least, or else; aut...aut: either...or
*autem: but, on the other hand, however
*coram: adv. and prep. in the presence of, before
*dehinc: adv. while, from here, from now, henceforth; then, next
*deinde: adv. from there; then, afterwards; secondly, next (in order), in the second (next) place
*demum: adv. at last, finally, not till then; precisely, exactly, just, in fact, certainly, to be sure; modo demum: only now, just now.
*denique: adv. finally
*donec: while, as long as, until
*dum: conj. while, now; so long as, provided that, if only; until
*enim: (conj) namely, indeed, certainly, in fact, for, because
*eo quod: because
*etenim: (conj) and indeed, for, as a matter of fact
*etiam: also, besides; even, actually; (time) still
*etsi: (conj.) though, although, and yet
*fas (est): indecl. (it is) right, proper
*huc: here, to this place; so far, for this purpose
*ibi: there, then, therein, on that occassion
*idcirco: for that reason, on that account, therefore
*ideo: therefore, for this reason
*illuc: (adv.) (to) there; to that; to him/her
*immo: (adv.) or rather; indeed; no, yes (emphasis)
*interdum: occasionally, sometimes, now and then
*inde: from there, from that source, then, after; from then
*iuxta: (adv) near by, alike, equally; (prep) close to, right after, near to, beside.
**iuxta (7th-15th c.): according to
**iuxta aliquid: to some extent
*ita: thus, so, in this way; ita...ut: just as, so...that
**ita...quomodo: just as
*licet: all right; (with dat + inf) it is right for someone to; (conj) although, even if
*modo: only, just now
*necnon: also, moreover, certainly, besides
*nempe: to be sure, of course
*non numquam: sometimes
*nondum: not yet
*nonnullus -a -um: some, several
*nuper: recently, lately
*nusquam: nowhere
*ob: before, in front of; on account of, because of; for the sake of; instead of; in proportion to
**ob rem: to the purpose, usefully
**quam ob rem: wherefore, accordingly
*olim: once; of old; one day
*praeterea: besides, moreover; hereafter
*postea: afterwards
*postmodum: afterwards; presently
*procul: far off
*proinde: adv. consequently, therefore; just as
*propterea: for that reason, therefore
*prorsus/prorsum: (adv.) forwards; absolutely; in short
*prout: (conj) according as
*qua: (adv) where, as far as, how; qua..qua: partly...partly
*qualibit: anywhere, any way, as you please
*qualis -e: what sort of, what kind of, such as, as
*qualiter: adv. how, as, just as
*quam: (adv) how, how much; as, very
*quamdiu: as long as; while; inasmuch as
*quamquam: although
*quamvis: (adv) however; (conj) although
*quando: when (after nisi, ne) ever; (conj) when, since, because
*quandoque: (adv) at some time; (conj) whenever, as often as, since
*quantum: (adv) as much as, as far as, so much as, to what extent
*quantus: how great, how much
**in quantum: to what extent
**quanto: for how much
*quantum ad: in terms of, as far as x is concerned, with respect to
*quapropter: wherefore
*quare: by what means, how; why, wherefore
*quasi: as if, as though
*quatenus: adv.(inter.) how far, how long? (rel.) as far as, in so far as, since
*quemadmodum: (adv) in what way, how; (conj) as, just as
*quicquam: anything
*quicumque quae- quod-: whoever, whatever; all that, any whatever
*quidam quae- quid-: a certain one, someone, a kind of
*quidem: indeed, in fact
*quippe: adv. certainly, of course; conj.(explaining) for in fact, because, since
*quisquam quid-: anyone, anything
*quisque quidque: each, each one, every
*quisquis, quidquid: whoever, whatever; all
*quo: where, what for, to what end
*quoad: as to, with respect to
*quocumque: wither so ever, how so ever
*quod: (conj) because, as far as, in so far as, as for the fact that, in that, that
**quod si: but if
*quodamodo: in a way
*quomodo: how, in what way; (rel) as, just as
*quondam: once, sometimes, formerly
*quoniam: because, since, seeing that, now that
*quoque: also, too
*quot: how many; (conj) as many
*quotiens: how often (rel) as often as
*rursus: again, in turn
*recte: rightly, correctly
*rursum: again
*sane: reasonably, sensibly; certainly, doubtless, truly; of course; c. neg. = really, at all; to be sure, however
*scilicet: adv. evidently, naturally, of course; (as explan. particle:) namely, that is to say, in other words
*semel: once
*seu: and
*simul: at the same time; together; likewise
*sin: but if
*siquidem: if in fact; if only, if indeed; since indeed, since that
*talis -e: adj. such, of such a kind, the following
*taliter: in such a manner, so
*tam: so, so greatly; tam...quam: so...as, much...as well as
*tamen: yet, nevertheless, still
*tamquam: as, just as; (conj) as if, just as if
*tandem: at last, finally
*tantum: (adv) so much, so greatly; to such a degree; so far; only
*tantus -a -um (adj): of such (a size); so great, so much
*tot: as many, so many
*tunc: (avd) then, just the; thereupon, accordingly, consequently
*ubicumque: wherever, everywhere
*unde: whence, from where; wherefore; this being the case
*usque: as far as, all the way, continually, straight on, up to; until
*ut...ita: while...nevertheless
*uterque -raque -rumque: both, each (of two)
*utinam: would that, if only
*utique: anyhow, at least, at any rate
*utpote: as, in as much as
*utrum: (conj) either, whether
*velut: as, just as, as it were, as though
*verumtamen: but yet, nevertheless
*vero (conj): but, truly
*videlicet: clearly, evidently; namely

{{BookCat}}</text>
      <sha1>bfgpp4iye8mhujeby3ezrvguvbsa96l</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 4-Principal Parts</title>
    <ns>0</ns>
    <id>3874</id>
    <revision>
      <id>3627922</id>
      <parentid>3623546</parentid>
      <timestamp>2019-12-19T23:54:22Z</timestamp>
      <contributor>
        <username>Seadowns</username>
        <id>2099986</id>
      </contributor>
      <minor/>
      <comment>/* Principal Parts */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1433" xml:space="preserve">{{Latin}}

== Principal Parts ==

All Latin verbs are identified by four principal parts. By using the four principal parts, one can obtain any and all forms of the verb, including participles, infinitives, gerunds and the like.

Examples of principal parts from verbs of each conjugation:

:1st: ''ambulÅ, ambulÄre, ambulÄvÄ«, ambulÄtum'' (to walk)

:2nd: ''doceÅ, docÄre, docuÄ«, doctum'' (to teach)

:3rd: ''mittÅ, mittere, mÄ«sÄ«, mÄ«ssum'' (to send)

:4th: ''audiÅ, audÄ«re, audÄ«vÄ«, audÄ«tum'' (to hear)

For all regular verbs, the principal parts consist of the first person singular present active indicative, the infinitive, the first person singular perfect active indicative, and the supine (or in some texts, the perfect passive participle).

*Deponent verbs have only three principal parts:

:''patior, patÄ«, passus sum'' (to suffer)

:''Å«tor, Å«tÄ«, Å«sus sum'' (to use)

*Likewise, semi-deponent verbs have only three:

:''audeÅ, audÄre, ausus sum'' (to dare)

:''gaudeÅ, gaudÄre, gavÄ«sus sum'' (to rejoice)

Some verbs lack fourth principal parts (e.g., ''timeÅ, timÄre, timuÄ«, â''; to be afraid); others, less commonly, lack a third in addition (e.g., ''fero, ferre, tuli, latum''; to bring/carry). Others, such as ''sum, esse, fuÄ«, futÅ«rus'', may use the future active participle (''futÅ«rus'') as their fourth principal part; this indicates that the verb cannot be made passive.

{{BookCat}}</text>
      <sha1>16itstijljl5zi5t22dqfrxhhn67lck</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 4-The Subjunctive Passive</title>
    <ns>0</ns>
    <id>57502</id>
    <revision>
      <id>3285704</id>
      <parentid>2239235</parentid>
      <timestamp>2017-08-26T22:17:11Z</timestamp>
      <contributor>
        <username>Strange quark</username>
        <id>3078616</id>
      </contributor>
      <comment>Fix categorization</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1254" xml:space="preserve">{{Latin}}

==Passive Subjunctive System==
Having examined Lessons 15 and 23, forming the passive subjunctive should be quite simple.
===Present===
Modify the verb stem appropriately with a vowel change (as learned in Lesson 15), then add the present passive endings (Lesson 23).

{| style="width:500px" border=0 cellspacing=0 cellpadding=2 
| parer || manear || regar || capiar || audiar
|-
| pareris || manearis || regaris || capiaris || audiares
|-
| paretur || maneatur || regatur || capiatur || audiatur
|-
| paremur || maneamur || regamur || capiamur || audiamur
|-
| paremini || maneamini || regamini || capiamini || audiamini
|-
| parentur || maneantur || regantur || capiantur || audiantur
|}

===Imperfect===
The passive endings added to the present active infinitive.

{| style="width:500px" border=0 cellspacing=0 cellpadding=2 
| pararer || manerer || regerer || caperer || audirer
|-
| parareris || manereris || regereris || capereris || audireris
|-
| pararetur || maneretur || regeretur || caperetur || audiretur
|-
| pararemur || maneremur || regeremur || caperemur || audiremur
|-
| pararemini || maneremini || regeremini || caperemini || audiremini
|-
| pararentur || manerentur || regerentur || caperentur || audirentur
|}

{{BookCat}}</text>
      <sha1>hlg7p8u4kyqb28yuhpjsfdq6owbt7fe</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 5-Accusative</title>
    <ns>0</ns>
    <id>980</id>
    <revision>
      <id>3377061</id>
      <parentid>3312532</parentid>
      <timestamp>2018-02-21T22:27:46Z</timestamp>
      <contributor>
        <username>Anadelph2</username>
        <id>3115141</id>
      </contributor>
      <minor/>
      <comment>/* Exercise 4: Find the Nominative and Accusative */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="11230" xml:space="preserve">{{Latin}}



== Exercises ==
{{Latin/Exercise|Give the accusative singular.|
Give the accusative singular for:

# lud-us
# magn-us
# triclÄ«ni-um
# bell-um
# puell-a
# serv-us
# ager
|
# lud'''um'''
# magn'''um'''
# triclÄ«ni'''um'''
# bell'''um'''
# puell'''am'''
# serv'''um'''
# agr'''um'''
}}

{{Latin/Exercise|Give the accusative plural.|
Give the accusative plural for:

# lud-us
# magn-us
# triclÄ«ni-um
# bell-um
# puell-a
# serv-us
# ager
|
# lud'''os'''
# magn'''os'''
# triclÄ«ni'''a'''
# bell'''a'''
# puell'''as'''
# serv'''os'''
# agr'''os'''
}}

{{Latin/Exercise|Give the nominative singular.|
Give the nominative singular for:

# bon-Ä«
# bell-a
# triclÄ«ni-a
# puell-am
# agr-Ås
# serv-Ås
# puell-ae
|
# bon'''us'''
# bell'''um'''
# triclÄ«ni'''um'''
# puell'''a'''
# ager
# serv'''us'''
# puell'''a'''
}}
{| class="wikitable" width="50%"
|-
! colspan="2" | &lt;b&gt;Lesson Vocabulary&lt;/b&gt;
|-
| align="center" colspan="2" |
|-
! bgcolor="#CCFFFF" | &lt;font face="Arial" size="4"&gt;Latin&lt;/font&gt;
! bgcolor="#CCFFCC" | &lt;font face="Arial" size="4"&gt;English&lt;/font&gt;
|-
| align="center" colspan="2" |
|-
| align="center" bgcolor="#CCFFFF" | '''vendit'''
| align="center" bgcolor="#CCFFCC" | '''he/she sells'''
|-
| align="center" bgcolor="#CCFFFF" | '''videt'''
| align="center" bgcolor="#CCFFCC" | '''he/she sees'''
|-
| align="center" bgcolor="#CCFFFF" | '''amat'''
| align="center" bgcolor="#CCFFCC" | '''he/she loves'''
|-
| align="center" colspan="2" |
|-
| align="center" bgcolor="#CCFFFF" | '''cist-a -ae''' (f.)
| align="center" bgcolor="#CCFFCC" | '''box'''
|-
| align="center" bgcolor="#CCFFFF" | '''ferox, ferocis''' (m/f.)
| align="center" bgcolor="#CCFFCC" | '''wild'''
|-
| align="center" bgcolor="#CCFFFF" | '''ager''' (m.)
| align="center" bgcolor="#CCFFCC" | '''field'''
|-
| align="center" bgcolor="#CCFFFF" | '''bell-um''' (n.)
| align="center" bgcolor="#CCFFCC" | '''war'''
|-
| align="center" bgcolor="#CCFFFF" | '''serv-us''' (m.)
| align="center" bgcolor="#CCFFCC" | '''slave'''
|}

== Grammar: The Accusative ==

As you learned in the last lesson, the verb 'esse' (to be) usually takes the nominative case, because then the word after it is a complement.  Most other verbs take the 'accusative' case. 

In a sentence, the accusative is the "what" - in English grammar, this is known as the direct object.

&lt;b&gt;For example:&lt;/b&gt;
The girl sells the box.

What did the girl sell? The box. Thus, box is the direct object, and when we translate it into Latin:

{| cellpadding="2" border="1"
|-
| colspan="4" | '''Example'''
|-
| ''English:'' || The girl|| sells|| the box.
|-
| ''Latin:'' || Puella|| vendit|| cistam.
|-
| ''Explanation:'' || NOMINATIVE || VERB
| ACCUSATIVE
|}

Cistam, then, is in the accusative, because it is the direct object.

Again, when an adjective describes a noun in the accusative case, the adjective must agree in number, case, and gender.

{| cellpadding="2" border="1"
|-
| colspan="5" | '''Example'''
|-
| ''English:'' || The girl|| sells|| the big || box.
|-
| ''Latin:'' || Puella|| vendit|| magnam || cistam.
|-
| ''Explanation:'' || NOMINATIVE || VERB || ADJECTIVE ACCUSATIVE|| NOUN ACCUSATIVE
|}

Because Latin uses cases to mark the subject and the object of a sentence, word order does not matter. Consider:

{| cellpadding="2" border="1"
|-
| puer puellam videt || The boy sees the girl
|-
| puerum puella videt || The girl sees the boy
|-
| puellam puer videt || The boy sees the girl
|-
| puella puerum videt || The girl sees the boy
|}

== Examples of Adjectives Agreeing with the Nominative and Accusative Case ==

{| cellpadding="2" border="1"
|-
| colspan="6" | '''Explanation'''- The ''good'' boy loves the ''wild'' dog.
|-
| ''Latin:'' || puer || '''bonus''' || amat || canem (acc) || '''ferocem''' (acc).
|-
| ''English:'' || [The] boy || '''good''' || [he] loves || [the] dog || '''wild'''. 
|}

''Bonus'', a first and second declension adjective, is masculine, nominative, and singular to agree with ''puer'', the word it is describing.

''Ferocem'', a third declension adjective, is masculine, accusative, and singular to agree with ''canem''. ''Canem'' is accusative because it is the object of ''amat''.

Here is an example of plural adjectives:

{| cellpadding="2" border="1"
|-
| colspan="6" | '''Explanation'''- The ''good'' boys love the ''wild'' dogs.
|-
| ''Latin:'' || Pueri (plur) || '''boni''' (plur)|| amant (plur) || canes (plur, acc) || '''feroces''' (plur, acc).
|-
| ''English:'' || [The] boys || '''good''' || [they] love || [the] dogs || '''wild'''. 
|}

The words  ''bonus'' and ''ferocem'' become ''boni'' and ''feroces'' to agree with the plurals ''pueri'' and ''canes''.

However, if a girl ([[wiktionary:en:puella#Latin|puella]]) happened to love that boy:

{| cellpadding="2" border="1"
|-
| colspan="6" | '''Explanation'''- The ''good'' girl loves the ''good'' boy.
|-
| ''Latin:'' || Puella || '''bona'''|| amat || puerum (acc) || '''bonum''' (acc).
|-
| ''English:'' || [The] girl|| '''good''' || [she] loves || [the] boy|| '''good'''. 
|}

''Bonus'' must become ''bona'' in order to modify ''puella'', which is feminine.

Finally, if the girl isn't good, but rather wild:

{| cellpadding="2" border="1"
|-
| colspan="6" | '''Explanation'''- The ''wild'' girl loves the ''good'' boy.
|-
| ''Latin:'' || Puella || '''ferox'''|| amat || puerum (acc) || '''bonum''' (acc).
|-
| ''English:'' || [The] girl|| '''wild''' || [she] loves || [the] boy|| '''good'''. 
|}

Even though ''puella'' is first declension, ''ferox'' remains third declension. In the same way, a good lion would be ''bonus leo''.

== Exercise 3 ==

Determine whether the adjective agrees with the substantive in all three categories: case, gender, number.


{| border="1"
|-
! Questions:
! Does it Agree?
|-
| 1. magn-us agr-Ås || True/False
|-
| 2. magn-a puella || True/False
|-
| 3. poet-a* bon-us || True/False
|-
| 4. magn-um serv-um || True/False
|-
| 5. poet-ae* magn-ae || True/False
|-
| 6. bell-a magn-a || True/False
|}

:''* Nota bene: ''Poeta'' (meaning poet) is a masculine noun, even though it ends in '''-a'''.''

{{Latin/Exercise|Answer|
See table above. Determine whether the adjective (magnus, bonus..) agrees with the substantives (ager, puella, poeta) in both case (nominative, accusative...), gender (masculine, female and neuter) and number (singular and plural).
|
# '''False.''' ''Magnus'' doesn't agree with ''agrÅs''; in number and case.
#:''Magnus'': Masculine, singular, nominative.
#:''AgrÅs'': Masculine, plural, accusative.
# '''True.''' ''Magna'' agrees with ''puella''.
#:''Magna'': Feminine, singular, nominative.
#:''Puella'': Feminine, singular, nominative.
# '''True.''' ''Bonus'' agrees with ''poeta''.
#:''Bonus'': Masculine, singular, nominative.
#:''Poeta'': Masculine, singular, nominative.
# '''True.''' ''Magnum'' agrees with ''servum''.
#:''Magnum'': Neuter, singular, nominative.
#:''Servum'': Neuter, singular, nominative.
# '''False.''' ''Magnae'' doesn't agree with ''poetae''; in gender.
#:''Magnae'': Feminine, plural, nominative.
#:''Poetae'': Masculine, plural, nominative.
# '''True.''' ''Bella'' agrees with ''magna''.
#:''Bella'': Neuter, plural, nominative.
#:''Magna'': Neuter, plural, nominative.
}}

==Grammar: The Use of the Accusative ==


{| class="wikitable" width="50%"
|-
! colspan="2" | &lt;b&gt;Lesson Vocabulary&lt;/b&gt;
|-
| align="center" colspan="2" |
|-
! bgcolor="#CCFFFF" | &lt;font face="Arial" size="4"&gt;Latin&lt;/font&gt;
! bgcolor="#CCFFCC" | &lt;font face="Arial" size="4"&gt;English&lt;/font&gt;
|-
| align="center" colspan="2" |
|-
| align="center" bgcolor="#CCFFFF" | '''curri-t'''
| align="center" bgcolor="#CCFFCC" | '''he/she runs'''
|-
| align="center" bgcolor="#CCFFFF" | '''porta-t'''
| align="center" bgcolor="#CCFFCC" | '''he/she carries'''
|-
| align="center" bgcolor="#CCFFFF" | '''specta-t'''
| align="center" bgcolor="#CCFFCC" | '''he/she watches'''
|-
| align="center" bgcolor="#CCFFFF" | '''da-t'''
| align="center" bgcolor="#CCFFCC" | '''he/she gives'''
|-
| align="center" colspan="2" |
|-
| align="center" bgcolor="#CCFFFF" | &lt;B&gt;fuisse&lt;/B&gt;&lt;BR&gt;fuÄ«&lt;BR&gt;fuistÄ«&lt;BR&gt;(puer) fuit&lt;BR&gt;fuimus&lt;BR&gt;fuistis&lt;BR&gt;fuÄrunt
| align="center" bgcolor="#CCFFCC" | &lt;B&gt;to have been&lt;/B&gt;&lt;BR&gt;I have been&lt;BR&gt;you have been&lt;BR&gt;(the boy) has been&lt;BR&gt;we have been&lt;BR&gt;you (pl.) have been&lt;BR&gt;they have been
|-
| align="center" colspan="2" |
|-
| colspan="2" | Nota Bene: 'fuisse' and all the forms of it, the past tense of 'esse', behaves exactly like the present tense.
|}


The newly introduced verbs, ama-t, curri-t, and porta-t take the accusative as the 'object'.  Unless specified, any verb you look up in the dictionary will take the accusative, not the nominative. This means that they are '''transitive verbs''', verbs that happen to someone or something, e.g.:

 I heal '''you'''. (''acc.'')
 You make '''my day'''. (''acc.'')
 She hit '''your arm'''. (''acc.'')

In the examples above, the '''bold''' words are the subject of the sentence clause. Because something happens "to" them, they can't be in nominative.

==Grammatical Explanation Using English Sentences==


{| cellpadding="2" border="1"
|-
| colspan="4" | '''Grammatical Explanation 1'''
|-
| ''English:'' || The boy || hits || the car.
|-
| ''Explanation:'' || NOMINATIVE || VERB
| ACCUSATIVE
|}


{| cellpadding="2" border="1"
|-
| colspan="4" | '''Grammatical Explanation 2'''
|-
| ''English:'' || The girl || hugs || the boy.
|-
| ''Explanation:'' || NOMINATIVE || VERB
| ACCUSATIVE
|}


{| cellpadding="2" border="1"
|-
| colspan="5" | '''Grammatical Explanation 3'''
|-
| ''English:'' || He who || flees, || deserves || the guillotine.
|-
| ''Explanation:'' || NOMINATIVE || VERB
| VERB || ACCUSATIVE
|}

=== Exercise 4: Find the Nominative and Accusative ===
{{Latin/Exercise|Find the Nominative and Accusative (if present) in each the sentence.|
Find the Nominative and Accusative (if present) in each the sentence.

# The boy is good.
# The girl kisses the boy.
# The boy gives the book.
# The child watches the TV.
# Whom it concerns.
# To the kitchen I run
# I eat the pizza.
|
# The boy {nom} is good {nom}.
#: ''Puer {nom} est bonus {nom}''.
# The girl {nom} kisses the boy {acc}.
#: ''Puella {nom} puerum {acc} basiat.''
# The boy {nom} gives the book {acc}.
#: ''Puer {nom} librum {acc} dat.''
# The child {nom} watches the TV {acc}.
#: ''Infans {nom} televisorium {acc} videt.''
# Whom {acc} it {nom} concerns.
#: ''???''
# To the kitchen {acc} I {nom} run.
#: ''Ad culinam {acc} [ego {nom}] curro.
# I {nom} eat the pizza {acc}.
#:''Pittam {acc} [ego {nom}] edo.''
}}

{{Latin/Exercise|In the following sentences, identify the accusative and nominative. Then translate.|
In the following sentences, identify the accusative and nominative. Then translate.

# Puer est bonus.
# Puella puerum amat.
# Puer cistam portat.
# FÄ«lius virum spectat.
# Ad culÄ«nam currit.
|
# Puer {nom} est bonus {nom}.
#: The boy {nom} is good {nom}.
# Puella {nom} puerum {acc} amat.
#: The girl {nom} loves the boy {acc}.
# Puer {nom} cistam {acc} portat.
#: The boy {nom} carries the box {acc}.
# FÄ«lius {nom} virum {acc} spectat.
#: The son {nom} watches the husband {acc}.
# Ad culÄ«nam {acc} currit.
#: To the kitchen {acc} [he {nom}] runs.
}}

{{BookCat}}</text>
      <sha1>lbwern3c9y8es4qysb9k47pkt753uim</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 5-Declensions</title>
    <ns>0</ns>
    <id>210988</id>
    <revision>
      <id>3538159</id>
      <parentid>3538158</parentid>
      <timestamp>2019-04-18T18:43:04Z</timestamp>
      <contributor>
        <username>Vincentius.NguyenDinhDuyThien</username>
        <id>3160409</id>
      </contributor>
      <minor/>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="9840" xml:space="preserve">{{Latin}}

== 3rd, 4th, and 5th Declension Nouns ==
We have already seen the first two declensions:
{| border="1" cellpadding="5" cellspacing="1"
|-
| rowspan="3" |
| colspan="2" class="header" | '''1&lt;sup&gt;st&lt;/sup&gt; declension'''
| colspan="4" class="header" | '''2&lt;sup&gt;nd&lt;/sup&gt; declension'''
|-
| colspan="2" class="header" | '''-a'''
| colspan="2" class="header" | '''-us'''
| colspan="2" class="header" | '''-um (neuter)'''
|-
| ''SINGULAR'' || ''PLURAL''
| ''SINGULAR'' || ''PLURAL''
| ''SINGULAR'' || ''PLURAL''
|-
| nominative
| puell'''-a''' || puell'''-ae'''
| serv'''-us'''/ pu'''er''' || serv'''-Ä«'''
| bell'''-um''' || bell'''-a'''
|-
| accusative
| puell'''-am''' || puell'''-Äs'''
| serv'''-um''' || serv'''-Ås'''
| bell'''-um''' || bell'''-a'''
|-
| genitive
| puell'''-ae''' || puell'''-Ärum'''
| serv'''-Ä«''' || serv'''-Årum'''
| bell'''-Ä«''' || bell'''-Årum'''
|-
| dative
| puell'''-ae''' || puell'''-Ä«s'''
| serv'''-Å''' || serv'''-Ä«s'''
| bell'''-Å''' || bell'''-Ä«s'''
|-
| ablative
| puell'''-Ä''' || puell'''-Ä«s'''
| serv'''-Å''' || serv'''-Ä«s'''
| bell'''-Å''' || bell'''-Ä«s'''
|}
----
We will now complete the table of nouns with the 3rd, 4th, and 5th declensions. These declensions are more difficult to work with because their nominative and accusative plural forms are identical, as are their dative and ablative plural forms. To distinguish the cases, you must use a very simple key: context. Context will tell you the meaning.

=== 3rd Declension Nouns ===

3rd declension nouns &lt;!--(like the 2nd declension noun ''ager'') [not analogous at all -hieronymous85]--&gt; have two stems&lt;!-- debatable. I'll research and clarify if necessary --&gt;: The nominative and vocative singular stem and the stem used for all other cases. Both stems have to be memorized for each noun. Feminine and masculine forms are indistinguishable.


==== 3rd Declension Masculine or Feminine, no ''i''-stem: (each word has a set gender): ''rÄx'', m. ====

{| align="center" border="1"
|-
! 3rd Declension
! Singular
! Plural
|-
| nominative || ''rÄx'' || ''rÄg-Äs''
|-
| accusative || ''rÄg-em'' || ''rÄg-Äs''
|-
| genitive || ''rÄg-is'' || ''rÄg-um''
|-
| dative || ''rÄg-Ä«'' || ''rÄg-ibus''
|-
| ablative || ''rÄg-e'' || ''rÄg-ibus''
|}



==== 3rd Declension Neuter, no ''i''-stem: ''litus'' ====


{| align="center" border="1"
|-
! 3rd Declension Neuter
! Singular
! Plural
|-
| &lt;I&gt;nominative*&lt;/I&gt; || ''litus'' || ''litor-a''
|-
| accusative || ''litus'' || ''litor-a''
|-
| genitive || ''litor-is'' || ''litor-um''
|-
| dative || ''litor-Ä«'' || ''litor-ibus''
|-
| ablative || ''litor-Ä«'' || ''litor-ibus''
|}

==== 3rd Declension Masculine or Feminine, 2-consonant base ''i''-stem: (each word has a set gender): ''ars, artis'', f. ====

''i''-stem nouns differ from other 3rd declension nouns in that some of the forms have endings changed to include ''i''s.

There are two main kinds of masculine/feminine ''i''-stem nouns. The first kind has its usual stem end in two consonants; the example here, for instance, has its base ''art-'' end in ''-rt-''. The last consonant of the nominative singular form always ends in either ''-s'' or ''-x''.

{| align="center" border="1"
|-
! 3rd Declension
! Singular
! Plural
|-
| nominative || ''ars'' || ''art-Äs''
|-
| accusative || ''art-em'' || ''art-Äs''
|-
| genitive || ''art-is'' || ''art-ium''
|-
| dative || ''art-Ä«'' || ''art-ibus''
|-
| ablative || ''art-e'' || ''art-ibus''
|}

==== 3rd Declension Masculine or Feminine, parisyllabic ''i''-stem: (each word has a set gender): ''nÅ«bÄs'', f. ====

The other kind of masculine/feminine ''i''-stem noun has the property that its nominative and genitive singular forms have the same number of syllables. They are therefore called parisyllabic. All nouns of this form have their nominative singular form end in either ''-Äs'' or ''-is''.

{| align="center" border="1"
|-
! 3rd Declension
! Singular
! Plural
|-
| nominative || ''nÅ«bÄs'' || ''nÅ«b-Äs''
|-
| genetive || ''nÅ«b-is'' || ''nÅ«b-ium''
|-
| dative || ''nÅ«b-es'' || ''nÅ«b-es''
|-
| accusative || ''nÅ«b-Ä«'' || ''nÅ«b-ibus''
|-
| ablative || ''nÅ«b-e'' || ''nÅ«b-ibus''
|}

==== 3rd Declension Neuter ''i''-stem: ''mare'' ====

Neuter ''i''-stem nouns have their nominative singular forms end with ''-al'', ''-ar'', or ''-e''.

{| align="center" border="1"
|-
! 3rd Declension Neuter
! Singular
! Plural
|-
| &lt;I&gt;nominative*&lt;/I&gt; || ''mare'' || ''mar-ia''
|-
| accusative || ''mare'' || ''mar-ia''
|-
| genitive || ''mar-is'' || ''mar-ium''
|-
| dative || ''mar-Ä«'' || ''mar-ibus''
|-
| ablative || ''mar-Ä«'' || ''mar-ibus''
|}

==== List of common 3rd declension stem change patterns ====
{| align="center" border="1"
|-
! Singular Nominative
! Main stem
! Main gender
! Examples
|-
| -is || -is || masc/fem || canis, navis, hostis
|-
| -s || -is || masc/fem || urbs, rex*, matrix*
|-
| -s || -tis || masc/fem || nox*, mons, pons
|-
| -o || -onis || masc/fem || legio, auditio, statio
|-
| -en || -inis || neuter || carmen, flumen, examen
|-
| -or || -oris || masc/fem || amor, timor
|-
| -us || -oris || neuter || litus, corpus
|-
| -us || -eris || neuter || genus, vulnus
|}
*regs and matrics, respectively, but the gs and cs both compound into x. The c and g stay in the other cases, hence regis and matricis as their genitives. Nox (gen. noctis) works similarly.


=== 4th Declension Nouns ===


==== 4th Declension Masculine/Feminine (each word has a set gender) ''gradus'', m. ====


{| align="center" border="1"
|-
! &lt;B&gt;4th Declension&lt;/B&gt;
! Singular
! Plural
|-
| nominative || ''grad-us'' || ''grad-Å«s''
|-
| accusative || ''grad-um'' || ''grad-Å«s''
|-
| genitive || ''grad-Å«s'' || ''grad-uum''
|-
| dative || ''grad-uÄ«'' || ''grad-ibus''
|-
| ablative || ''grad-Å«'' || ''grad-ibus''
|}

==== 4th Declension Neuter: ''cornÅ«'' ====


{| align="center" border="1"
|-
! 4th Declension Neuter
! Singular
! Plural
|-
| nominative || ''corn-Å«'' || ''corn-ua''
|-
| vocative || ''corn-Å«'' || ''corn-ua''
|-
| accusative || ''corn-Å«'' || ''corn-ua''
|-
| genitive || ''corn-Å«s'' || ''corn-uum''
|-
| dative || ''corn-Å«'' || ''corn-ibus''
|-
| ablative || ''corn-Å«'' || ''corn-ibus''
|}

=== 5th Declension Nouns ===


The 5th declension has no neuter nouns. The masculine and feminine forms are again indistinguishable.

==== 5th Declension Masculine/Feminine (each word has a set gender; most are feminine): ''rÄs'', f. ====


{| align="center" border="1"
|-
! 5th Declension Feminine/Masculine
! Singular
! Plural
|-
| nominative || ''r-Äs'' || ''r-Äs''
|-
| vocative || ''r-Äs'' || ''r-Äs''
|-
| accusative || ''r-Äm'' || ''r-Äs''
|-
| genitive || ''r-ÄÄ«'' || ''r-Ärum''
|-
| dative || ''r-ÄÄ«'' || ''r-Äbus''
|-
| ablative || ''r-Ä'' || ''r-Äbus''
|}

== Exercises ==

=== Exercise 1 ===

{| class="wikitable"
|-
| align="center" colspan="3" |
|-
! bgcolor="#CCFFFF" | &lt;font face="Arial" size="2"&gt;Latin&lt;/font&gt;
! bgcolor="#CCFFCC" | &lt;font face="Arial" size="2"&gt;English&lt;/font&gt;
! bgcolor="#FFCCCC" | &lt;font face="Arial" size="2"&gt;Notes&lt;/font&gt;
|-
| align="center" colspan="3" |
|-
| align="center" bgcolor="#CCFFFF" | '''villa, -ae'''
| align="center" bgcolor="#CCFFCC" | '''farmhouse'''
| align="center" bgcolor="#FFCCCC" | '''1st declension feminine'''
|-
| align="center" colspan="3" |
|-
| align="center" bgcolor="#CCFFFF" | '''mittÅ, -ere, mÄ«sÄ«, missum'''
| align="center" bgcolor="#CCFFCC" | '''send'''
| align="center" bgcolor="#FFCCCC" | '''3rd conjugation'''
|-
| align="center" colspan="3" |
|-
| align="center" bgcolor="#CCFFFF" | '''nomen, nominis'''
| align="center" bgcolor="#CCFFCC" | '''name'''
| align="center" bgcolor="#FFCCCC" | '''3rd declension neuter'''
|-
| align="center" colspan="3" |
|-
| align="center" bgcolor="#CCFFFF" | '''maledicÅ, -dicere, -dÄ«xÄ«, -dictum'''
| align="center" bgcolor="#CCFFCC" | '''insult'''
| align="center" bgcolor="#FFCCCC" | '''3rd conjugation'''
|-
| align="center" colspan="3" |
|-
| align="center" bgcolor="#CCFFFF" | '''placeÅ, -ere, placui, placitum + dat'''
| align="center" bgcolor="#CCFFCC" | '''please'''
| align="center" bgcolor="#FFCCCC" | '''Can be used as an impersonal verb, eg. &lt;i&gt;mihi placet&lt;/i&gt; + inf = it pleases me to...'''
|-
| align="center" colspan="3" |
|-
| align="center" bgcolor="#CCFFFF" | '''quÄ rÄ'''
| align="center" bgcolor="#CCFFCC" | '''on account of which'''
| align="center" bgcolor="#FFCCCC" | ''' '''
|-
| align="center" colspan="3" |
|-
| align="center" bgcolor="#CCFFFF" | '''iste, ista, istud'''
| align="center" bgcolor="#CCFFCC" | '''that man/woman/thing'''
| align="center" bgcolor="#FFCCCC" | '''Declines like &lt;i&gt;ille, illa, illud&lt;/i&gt; (that)'''
|-
| align="center" colspan="3" |
|-
| align="center" bgcolor="#CCFFFF" | '''interficiÅ, -ficere, -fÄci, -fectum'''
| align="center" bgcolor="#CCFFCC" | '''kill'''
| align="center" bgcolor="#FFCCCC" | '''Mixed conjugation'''
|-
| align="center" colspan="3" |
|-
| align="center" bgcolor="#CCFFFF" | '''volÅ, velle, voluÄ«'''
| align="center" bgcolor="#CCFFCC" | '''want, be willing'''
| align="center" bgcolor="#FFCCCC" | '''The present forms are: &lt;i&gt;volo, vis, vult, volumus, vultis, volunt&lt;/i&gt;'''
|-
| align="center" colspan="3" |
|-
| align="center" bgcolor="#CCFFFF" | '''mandÅ, mandere, mansÄ«, mansum'''
| align="center" bgcolor="#CCFFCC" | '''chew on'''
| align="center" bgcolor="#FFCCCC" | '''3rd conjugation'''
|}
Translate the following: &lt;br&gt;&lt;br&gt;
''HodiÄ militÄs ad villam meÄ« amÄ«cÄ« mittÅ. MeÅ amicÅ, MarcÅ TulliÅ nomine, mÄ in SenatÅ« maledicere placet, quÄ rÄ istum interficere volÅ.''
:For extra credit, who in the late Republic might have said such a thing?

(The answer should be: Catiline?)



=== Exercise 2 ===

Translate the following: &lt;br&gt;&lt;br&gt;
''Eheu! MÅ«s meum pÄnem mandit. Nunc nihil habeÅ. Me miserum!''

{{BookCat}}</text>
      <sha1>mfdc5m2s1sm5h071lvg3o24mdfb4yxz</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 5-Perfect Indicative</title>
    <ns>0</ns>
    <id>5045</id>
    <revision>
      <id>3652447</id>
      <parentid>3584554</parentid>
      <timestamp>2020-01-10T17:48:28Z</timestamp>
      <contributor>
        <username>Rfreed314</username>
        <id>1128369</id>
      </contributor>
      <minor/>
      <comment>/* Latin Perfect Active Tense */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4501" xml:space="preserve">{{Latin}}
&lt;!-- Eds. -- I believe I have fixed the problems that caused this note. --Hieronymous85
&lt;BR&gt;
&lt;B&gt;Wiki-reading tip:&lt;/B&gt;
This page is short, and it has grammatical errors in the native language that are not due to regional differences. This page should be avoided.
--&gt;
==Latin Perfect Active Tense==

The perfect tense is used for action that has already been completed. English has two corresponding constructions: present perfect and simple past. The '''present perfect''' uses the present of "to have" plus the past participle. ("I have sailed to Athens twice." "These women have spoken the truth.") The '''simple past''' is a separate verb form that indicates a completed action. ("I came, I saw, I conquered.") Another related form, which uses "did" as an auxiliary, is used for emphasis, negation or interrogation. ("I did see you at the Forum, didn't I?")

In Latin, the perfect indicative is equivalent to all of these.

The perfect endings:

{| border = "1" cellpadding = "2"
|-
! Person
! Singular
! Plural
|-
| 1st || '''''-Ä«''''' (''egÅ'') || '''''-Ä«mus''''' (''nÅs'')
|-
| 2nd || '''''-istÄ«''''' (''tÅ«'') || '''''-istis''''' (''vÅs'')
|-
| 3rd || '''''-it''''' (''is/ea/id'') || '''''-Ärunt''''' &lt;sup&gt;(1)&lt;/sup&gt; (''eÄ«/eae/ea'')
|}

&lt;sup&gt;(1)&lt;/sup&gt; There is an alternative third person plural ending, ''-Äre'', used mainly in poetry. For example, ''amÄvÄre'' = ''amÄvÄrunt''.

Although these endings apply to all Latin verbs, each verb's stem changes differently in the perfect tense. To find the stem, use the third principal part, which is the first person singular perfect active indicative form of that verb.

*To conjugate the perfect present, attach the personal ending to the perfect stem.

===Example===
*''amÅ, amÄre, '''amÄvÄ«''', amÄtum''; to love, like
:Note that ''amÄvÄ«'' is the first person singular perfect active indicative. Drop the ''-Ä«'' to get the stem, which is ''amÄv-'', then add personal endings. 

'''Singular:'''
:''amÄv''- + -''Ä«'' = ''amÄvÄ« '' (I have loved.)
:''amÄv''- + -''istÄ«'' = ''amÄvistÄ«'' (You have loved.)
:''amÄv''- + -''it'' = ''amÄvit''   (He/She/It has loved.)

'''Plural:'''
:''amÄv''- + -''Ä«mus''  = ''amÄvÄ«mus''  (We have loved.)
:''amÄv''- + -''istis'' = ''amÄvistis'' (You have loved.)
:''amÄv''- + -''Ärunt'' = ''amÄvÄrunt'' (They have loved.)

Basically, the Perfect indicative active is the perfect tense under a flash name.

==Rules for Finding the Perfect Stem==

The perfect stem can often be guessed by knowing the verb's first person singular and infinitive. Here are some rules that perfect stems often follow.
{| border="1"
| colspan="9" | &lt;b&gt;Conjugation in the Perfect tense&lt;/b&gt;
|-
| Conjugation || colspan="3"|Perfect First Person Singular || Notes
|-
| 1st (-are) || -avi || -i || -edi || -avi is used for the overwhelming majority of verbs. Exceptions include iuvare and lavare (iuvi, lavi) and dare (dedi).
|-
| 2nd (-eo, -ere): || -ui || -i || -si || -ui is the most common but much less so than -avi in the first conjugation. Some verbs, like videre and sedere, become vidi and sedi. . For the -si rule, the letter d at the end of the stem, if present, is dropped and cs and gs compound into x (eg. rideo -&gt; ridsi -&gt; risi).
|-
| 3rd (-o, -ere): || -i || -si || -idi || Many verbs, like defendere, keep the same perfect stem, so the first person perfect singular becomes defendi. This can create tense ambiguity in the third person singular and first person plural (defendit, defendimus). The -si rule follows the same conventions as the 2nd conjugation(eg. ludere -&gt; ludsi -&gt; lusi, regere -&gt; regsi -&gt; rexi). The -idi rule is used with compounds of dare, which are all third conjugation (eg. reddere -&gt; reddidi, credere -&gt; credidi)
|-
| mixed (-io, -ere): || -i || -ivi || -si || For the -i rule, the last vowel in the stem is often changed to e (eg. capere -&gt; cepi, facere -&gt; feci). For the ivi rule, the stem is unchanged (eg. cupere -&gt; cupivi). For the -si rule, just like in the 3rd conjugation, cs and gs compound into x and the changing vowel rule also applies (eg. conspicere -&gt; conspexi).
|-
| 4th (-io, ire) || -ivi || -ui || || Fairly straightforward. eg. audire -&gt; audivi, aperire -&gt; aperui
|-
| ire (irreg.) || -ii || || || All ire compounds (eg. transire, redire, inire) follow this rule.
|-
| esse (irreg.) || fui || || || The perfect of esse is fui, some verbs in the esse family change the perfect slightly (eg. abesse -&gt; afui, posse -&gt; potui)
|-
|}

{{BookCat}}</text>
      <sha1>oum12s3bdd6fz3xw6bdfzix16pbg9gt</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 5-The Subjunctive Perfect</title>
    <ns>0</ns>
    <id>44847</id>
    <revision>
      <id>3285710</id>
      <parentid>2448701</parentid>
      <timestamp>2017-08-26T22:20:04Z</timestamp>
      <contributor>
        <username>Strange quark</username>
        <id>3078616</id>
      </contributor>
      <comment>Fix categorization</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="750" xml:space="preserve">{{Latin}}

The conjugation of the perfect subjunctive active consists of: the perfect stem + "eri" + the standard active endings (-m, -s, -t, -mus, -tis, -nt). An example conjugation of the first conjugation verb paro, par&amp;#257;re is as follows:&lt;br&gt;
par&amp;#257;verim&lt;br&gt;
par&amp;#257;ver&amp;#299;s&lt;br&gt;
par&amp;#257;verit&lt;br&gt;
par&amp;#257;ver&amp;#299;mus&lt;br&gt;
par&amp;#257;ver&amp;#299;tis&lt;br&gt;
par&amp;#257;verint&lt;br&gt;

The conjugation of the pluperfect subjunctive active consists of: the perfect stem + "isse" + the standard active endings. An example conjugation of the first conjugation verb paro, par&amp;#257;re is as follows:&lt;br&gt;
par&amp;#257;vissem&lt;br&gt;
par&amp;#257;viss&amp;#275;s&lt;br&gt;
par&amp;#257;visset&lt;br&gt;
par&amp;#257;viss&amp;#275;mus&lt;br&gt;
par&amp;#257;viss&amp;#275;tis&lt;br&gt;
par&amp;#257;vissent&lt;br&gt;

{{BookCat}}</text>
      <sha1>dz26t7j9xurn7e66nox54q75z2z0zli</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 6-Irregular Verbs</title>
    <ns>0</ns>
    <id>11283</id>
    <revision>
      <id>3285712</id>
      <parentid>3133052</parentid>
      <timestamp>2017-08-26T22:21:05Z</timestamp>
      <contributor>
        <username>Strange quark</username>
        <id>3078616</id>
      </contributor>
      <comment>Fix categorization</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4936" xml:space="preserve">{{Latin}}

== Irregular Verbs ==

Irregular verbs do not fit in any particular conjugation.  Irregular verbs conjugate but not in a predictable manner. An example of an irregular verb that you have met is 'esse'.  There are a few others which will be listed in the present indicate active tense below for you to memorise and refer to.


{| border="1"
|-
| Verb || Meaning || ego || tu || is/ea || nos || vos || ei/eae || Imperative sing. || Imp. pl
|-
| ire || to go || eo || is || it || imus || itis || eunt || i || ite
|-
| esse || to be || sum || es || est || sumus || estis || sunt || es || este
|-
| fieri || to become || fio || fis || fit || fimus || fitis || fiunt || fi || fite
|-
| velle || to wish || volo || vis || vult || volumus || vultis || volunt || (none) || (none)
|-
| malle || to prefer || malo || mavis || mavult || malumus || mavultis || malunt || (none) || (none)
|-
| nolle || to be unwilling || nolo || non vis || non vult || nolumus || non vultis || nolunt || noli* || nolite
|-
| ferre* || to carry || fero || fers || fert || ferimus || fertis || ferunt || fer || ferte
|-
| colspan="10" | &lt;I&gt;The imperatives noli and nolite are used to mean "don't", eg. "nolite ire" = "don't go!"&lt;/I&gt;&lt;br&gt;&lt;I&gt;Sometimes ferre is considered to be an 'o' stem 3rd conjugation verb.  For practical purposes ferre is irregular.&lt;/I&gt;
|}

== Exercise 1 ==

1. Copy out this table and translate.

Translate the following sentences:

1. fero portam.
2. fers portam
3. fert portam
4. ferimus portam
5. fertis portam
6. ferunt portam
7. sum bonus
8. es bonus
9. est bonus
10. sumus bonÄ«
11. estis bonÄ«
12. sunt bonÄ«
13. este bonÄ«!
14. nolÄ« currÄre!

Answer the following questions:

15. What do the irregular verbs have in common with regular verbs?
16. Why do we use 'boni' in question 10, 11, and 12 but 'bonus' in question 7, 8 and 9?

== Exercise 2 ==

Exercises:

1. Decline the following five nouns in both singular and plural number in the five common cases (nominative, accusative, genitive, dative, ablative):


{| border="1"
|-
| colspan="8" | &lt;B&gt;Singular&lt;/B&gt;
|-
| Nominative || nauta || Ätrium || servus || dictÄtor
| rÄx || cornÅ« || diÄs
|-
| Accusative || ||  ||
 || 
|
 ||  ||
|-
| Genitive || ||  ||
 || 
|
 ||  ||
|-
| Dative || ||  ||
 || 
|
 ||  ||
|-
| Ablative || ||  ||
 || 
|
 ||  ||
|-
| colspan="8" | &lt;B&gt;Plural&lt;/B&gt;
|-
| Nominative || ||  ||
 || 
|
 ||  ||
|-
| Accusative || ||  ||
 || 
|
 ||  ||
|-
| Genitive || ||  ||
 || 
|
 ||  ||
|-
| Dative || ||  ||
 || 
|
 ||  ||
|-
| Ablative || ||  ||
 || 
|
 ||  ||
|}

2. Conjugate the verb 'servÄre' in both singular and plural number and all three persons.

3. Conjugate the verb 'esse', in both singular and plural number and all three persons.

4. Translate:

Nota Bene: Often Latin uses the present to indicate a 'vivid past'. It would be suitable to translate the following passage in the past tense.

{| class="wikitable"
|-
| align="center" colspan="3" |
|-
! bgcolor="#CCFFFF" | &lt;font face="Arial" size="2"&gt;Latin&lt;/font&gt;
! bgcolor="#CCFFCC" | &lt;font face="Arial" size="2"&gt;English&lt;/font&gt;
! bgcolor="#FFCCCC" | &lt;font face="Arial" size="2"&gt;Notes&lt;/font&gt;
|-
| align="center" colspan="3" |
|-
| align="center" bgcolor="#CCFFFF" | '''heri'''
| align="center" bgcolor="#CCFFCC" | '''yesterday'''
| align="center" bgcolor="#FFCCCC" | '''&lt;i&gt;heri&lt;/i&gt; is an adverb. Don't try to use it as a noun ("Yesterday was a good day")'''
|-
| align="center" colspan="3" |
|-
| align="center" bgcolor="#CCFFFF" | '''taberna, -ae'''
| align="center" bgcolor="#CCFFCC" | '''shop'''
| align="center" bgcolor="#FFCCCC" | '''1st declension feminine'''
|-
| align="center" colspan="3" |
|-
| align="center" bgcolor="#CCFFFF" | '''solea, -ae'''
| align="center" bgcolor="#CCFFCC" | '''sandle'''
| align="center" bgcolor="#FFCCCC" | '''1st declension feminine'''
|-
| align="center" colspan="3" |
|-
| align="center" bgcolor="#CCFFFF" | '''sic'''
| align="center" bgcolor="#CCFFCC" | '''so, and so, thus'''
| align="center" bgcolor="#FFCCCC" | ''' '''
|-
| align="center" colspan="3" |
|-
| align="center" bgcolor="#CCFFFF" | '''solus, -a, -um'''
| align="center" bgcolor="#CCFFCC" | '''alone'''
| align="center" bgcolor="#FFCCCC" | '''The adverb form (only) is &lt;i&gt;solum&lt;/i&gt;'''
|-
| align="center" colspan="3" |
|-
| align="center" bgcolor="#CCFFFF" | '''casa, -ae'''
| align="center" bgcolor="#CCFFCC" | '''house, hut'''
| align="center" bgcolor="#FFCCCC" | '''1st declension feminine'''
|-
| align="center" colspan="3" |
|-
| align="center" bgcolor="#CCFFFF" | '''sto, stare, steti, statum'''
| align="center" bgcolor="#CCFFCC" | '''stand'''
| align="center" bgcolor="#FFCCCC" | '''One of the few irregular first conjugation verbs'''
|}

Heri, ad tabernam eÅ. In tabernÄ sunt trÄs rÄs quÄrum amÅ duas sÅleÄs et unam mensam. HabeÅ trÄs denariÅs, sÄ«c ego emeÅ mensam sÅlum quod sum nÅn dÄ«vÄ«nitÄs. HodiÄ, mensa est in casÄ meÄ. In triclÄ«nio stat.

{{BookCat}}</text>
      <sha1>gnmgvm2yhad8xvhurdg3gq25gpdy9lp</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 6-Pronouns</title>
    <ns>0</ns>
    <id>1384</id>
    <revision>
      <id>3544937</id>
      <parentid>3462531</parentid>
      <timestamp>2019-05-12T03:54:52Z</timestamp>
      <contributor>
        <ip>177.140.236.129</ip>
      </contributor>
      <comment>/* Declension of Is, ea, id: (personal pronouns w/ translations) */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="9790" xml:space="preserve">{{Latin}}

==Personal Pronouns in English ==
{| class="wikitable" width="50%"
|-
! colspan="2" | &lt;b&gt;Lesson Vocabulary&lt;/b&gt;
|-
| align="center" colspan="2" |
|-
! bgcolor="#CCFFFF" | &lt;font face="Arial" size="4"&gt;Latin&lt;/font&gt;
! bgcolor="#CCFFCC" | &lt;font face="Arial" size="4"&gt;English&lt;/font&gt;
|-
| align="center" colspan="2" |
|-
| align="center" bgcolor="#CCFFFF" | '''cibus'''
| align="center" bgcolor="#CCFFCC" | '''food'''
|-
| align="center" bgcolor="#CCFFFF" | '''laborat'''
| align="center" bgcolor="#CCFFCC" | '''he/she works'''
|}

Pronouns are nouns which are used instead of another noun ('pro', in place of 'noun', noun.)

There are three categories of pronouns which are divided up into persons: 1st, 2nd, and 3rd. In addition, pronouns can be singular or plural. They are declined like all other nouns.

{| class="wikitable"
!Person
!Singular
!Plural
|-
|1st
|I
|we
|-
|2nd
|you, thou
|you (all)
|-
|3rd
|he/she/it
|they
|}

==Personal Pronouns in Latin==
===1st/2nd Person Pronouns===
====Table of Personal Pronouns in all of their cases: I, thou, we, ye====
Note: ''{{wt|thou}}'' is the archaic singular of the archaic plural ''{{wt|ye}}'' - useful for distinguishing ''you'' (singular) from ''you'' (plural)

{| class="wikitable"
|-
|
! colspan="4" | Singular
! colspan="4" | Plural
|-
! Case
| colspan="2" | 1st Person
| colspan="2" | 2nd Person
| colspan="2" | 1st Person || colspan="2" | 2nd Person 
|-
! Nominative
| ego || I || tÅ« || you
| nÅs || we || vÅs || you
|-
! Genitive 
| meÄ« || of me || tuÄ« || of you
| nostrÄ«(nostrum) || of us || vestrÄ« (vestrum)
| of you
|-
! Dative 
| mihi || to me || tibi || to/for you
| nÅbÄ«s || to us || vÅbÄ«s || to/for you
|-
! Accusative 
| mÄ || me || tÄ || you
| nÅs || us || vÅs || you
|-
! Ablative 
| mÄ || from me || tÄ || from you
| nÅbÄ«s || from us || vÅbÄ«s || from you
|}  

Nota Bene: the genitive is used in certain phrases like:
#memor nostrÄ«, mindful of us
#paucÄ« vestrum, a few of you.

For the possessive uses (my sister, your bicycle) sometimes uses the possessive adjectives:

{| class="wikitable" 
!bgcolor="#CCFFFF"|Latin
!bgcolor="#CCFFCC"|English
|-
|bgcolor="#CCFFFF"|meus, mea, meum ||bgcolor="#CCFFCC"| my
|-
|bgcolor="#CCFFFF"|tuus, tua, tuum ||bgcolor="#CCFFCC"| thy
|-
|bgcolor="#CCFFFF"|suus, sua, suum ||bgcolor="#CCFFCC"| his/hers, its, their
|-
|bgcolor="#CCFFFF"|noster, nostra, nostrum ||bgcolor="#CCFFCC"| our
|-
|bgcolor="#CCFFFF"|vester, vestra, vestrum  ||bgcolor="#CCFFCC"| your
|-
|bgcolor="#CCFFFF"|Pater noster ||bgcolor="#CCFFCC"| Our father
|}

===3rd Person Pronouns===
Technically, 3rd person pronouns do not exist in Latin as they do in English. However, they do have equivalents.

Adjectives modify nouns and take the gender of the noun which they modify. However, adjectives do not necessarily need a substantive present in the sentence to modify. The substantive can be presumed. In this way, '3rd person' pronouns are formed. 

====Example 1====
Take the masculine form of the adjective 'ille'. Literally it means 'That (masculine) thing.' However one could take it for simply meaning 'he', depending on the context. Similarly, the pronoun 'iste' means 'this (masc.) thing'. Iste and ille are declined in exactly the same way.

If no substantive is provided assume words like these: 'man', 'woman', 'thing', 'idea', 'concept', 'reason' etc. Let context be your guide.

===Common Adjectives Used as 3rd Person Pronouns In Latin===
====Declension of Ille (that)====

{| class="wikitable"
|+ Declension of ''ille'' (that): Singular
|-
| rowspan="2" | 
! colspan="3" | Latin
! colspan="3" | English
|-
! Masculine 
! Feminine
! Neuter
! Masculine
! Feminine
! Neuter
|-
! Nominative 
| ille  || illa || illud || he || she || it 
|-
! Genitive 
| illius  || illius || illius || his || her, hers || its 
|-
! Dative 
| illÄ«  || illÄ« || illÄ« || to him || to her || to it 
|-
! Accusative 
| illum  || illam || illud || him || her || it 
|-
! Ablative 
| illÅ  || illÄ || illÅ || by, with, from him || her || it 
|-
|}

{| class="wikitable"
|+ Declension of ''ille'' (that): Plural
|-
| rowspan="2" | 
! colspan="3" | Latin
! colspan="3" rowspan="2" | English
|-
! Masculine 
! Feminine
! Neuter
|-
! Nominative 
| illÄ« || illae || illa || they, those
|-
! Genitive 
| illÅrum || illÄrum || illÅrum || their, theirs, of those
|-
! Dative 
| illÄ«s || illÄ«s || illÄ«s || to them, to those
|-
! Accusative 
| illÅs || illÄs || illa || them, those
|-
! '''Ablative'''
| illÄ«s || illis || illÄ«s || by, with, from them, those  
|-
|}

Ille is often used as a kind of pronoun. In situations with multiple phrases or sentences, however, it is syntactically different from is, ea, id (see below).

For example: "Canis puero cibum dat. Is laborat in agro." means "The dog gives food to the boy. The dog works in the field".

However: "Canis puero cibum dat. Ille laborat in agro." means "The dog gives food to the boy. The boy works in the field".

Thus, ille, unlike the other pronouns makes a previous object into the subject (and vice versa).

====Examples of the Usage of Ille:====
{| class="wikitable"
!bgcolor="#CCFFFF"|Latin
!bgcolor="#CCFFCC"|English
|-
|bgcolor="#CCFFFF"|Ille est dominus. ||bgcolor="#CCFFCC"| He is the master. (ille as pronoun)
|-
|bgcolor="#CCFFFF"|Ille dominus est malus. ||bgcolor="#CCFFCC"| That master is bad. (ille as adjective) 
|-
|bgcolor="#CCFFFF"|Illam videt ||bgcolor="#CCFFCC"| He sees her. (or 'she sees her' - illam as pronoun)
|-
|bgcolor="#CCFFFF"|Illam puellam videt ||bgcolor="#CCFFCC"| He (or she) sees that girl (illam as adjective).
|}

====Declension of Is, ea, id: (personal pronouns w/ translations)====
{| class="wikitable"
|+ Singular
!Case
!colspan="3"|Latin
!colspan="3"|English
|-
!
!M
!F
!N
!M
!F
!N
|-
|Nominative || is || ea || id || he || she || it
|-
|Genitive ||colspan="3"| Äius || his || her, hers || its
|-
|Dative ||colspan="3"| eÄ« || to him || to her || to it
|-
|Accusative || eum || eam || id || him || her || it
|-
|Ablative || eÅ || eÄ || eÅ || by/with him || by/with her || by/with it
|}

{| class="wikitable"
|+ Plural
!Case
!colspan="3"|Latin
!colspan="3"|English
|-
!
!M
!F
!N
!M
!F
!N
|-
|Nominative || ii || eae || ea ||colspan="3"| they, those
|-
|Genitive || eÅrum || eÄrum || eÅrum ||colspan="3"| their, theirs, of those
|-
|Dative ||colspan="3"| eÄ«s, iÄ«s ||colspan="3"| to them, to those
|-
|Accusative || eÅs || eÄs || ea ||colspan="3"| them, those
|-
|Ablative ||colspan="3"| eÄ«s, iÄ«s ||colspan="3"| by, with, from them, those
|}

Like ille, is can be used as a form of a pronoun.

====Examples of the Usage of Is====
{| class="wikitable"
!bgcolor="#CCFFFF"|Latin
!bgcolor="#CCFFCC"|English
|-
|bgcolor="#CCFFFF"|Is est dominus. ||bgcolor="#CCFFCC"| He is the master. ("is" as pronoun)
|-
|bgcolor="#CCFFFF"|Is dominus est malus. ||bgcolor="#CCFFCC"| The master is bad. ("is" as adjective)
|-
|bgcolor="#CCFFFF"|Eam videt. ||bgcolor="#CCFFCC"| He sees her. (or 'she sees her', "eam" as pronoun)
|-
|bgcolor="#CCFFFF"|Eam puellam videt. ||bgcolor="#CCFFCC"| He (or she) sees the girl. ("eam" as adjective)
|}

====Declension of the Relative pronoun qui, quae, quod: (meaning who, which)====
{| class="wikitable"
|+Singular
!
!M
!F
!N
!M
!F
!N
|-
|Nominative || quÄ« || quae || quod ||colspan="2"|who || which
|-
|Genitive ||colspan="3"| cÅ«ius ||colspan="2"| whose || of which
|-
|Dative ||colspan="3"| cuÄ« ||colspan="2"| to whom || to which
|-
|Accusative || quem || quam || quod ||colspan="2"|whom || which
|-
|Ablative || quÅ || quÄ || quÅ ||colspan="3"| by, with, from whom, which
|}

{| class="wikitable"
|+ Plural
!
!M
!F
!N
!M
!F
!N
|-
|Nominative || quÄ« || quae || quae ||colspan="2"|who || which
|-
|Genitive || quÅrum || quÄrum || quÅrum ||colspan="2"| whose || of which
|-
|Dative || quibus || quibus || quibus || colspan="2" | to which
|-
|Accusative || quÅs || quÄs || quae||colspan = "2" | which
|-
|Ablative || quibus || quibus || quibus || colspan="2"| by which, in which, etc
|}

====Uses of the Relative Pronoun====
The relative pronoun takes on the case depending on the function it serves in the relative clause.  For example, in the sentence "He sees the man who has a slave," "who" is translated as nominative because it is the subject of the clause "who has a slave."  The antecedent (noun to which the pronoun refers) is usually before the relative clause.

====Examples of the Usage of the Relative Pronoun====
# ''Virum [[wiktionary:videre#Latin|videt]] (he/she sees) '''qui''' [[wiktionary:servus#Latin|servum]] (servant) [[wiktionary:habere#Latin|habet]] (he/she has).''
#: He sees the man '''who''' has a slave
# '''''Ille''' est [[wiktionary:vir#Latin|vir]] cujus servus est [[wiktionary:malus#Latin|malus]].''
#: '''That''''s the man whose slave is bad.
# ''Quis '''[[wiktionary:is#Latin|eum]]''' videt?''
#: Who sees '''him'''?

====Declension of hic, haec, hoc (meaning "this")====
{| class="wikitable"
|+ Singular
!
!Masculine
!Femine
!Neuter
!
|-
|Nominative || hic || haec || hoc ||rowspan="5"| this
|-
|Genitive ||colspan="3"|huius
|-
|Dative ||colspan="3"|huic
|-
|Accusative || hunc || hanc || hoc
|-
|Ablative || hÅc || hÄc || hÅc
|}

{| class="wikitable"
|+ Plural
!
!Masculine
!Femine
!Neuter
!
|-
|Nominative || hÄ« || hae || haec ||rowspan="5"| these
|-
|Genitive || hÅrum || hÄrum || hÅrum
|-
|Dative ||colspan="3"|hÄ«s
|-
|Accusative || hÅs || hÄs || haec
|-
|Ablative ||colspan="3"|hÄ«s
|}
  
N.B. Hic as an adverb that means 'here'.
N.B. Hic can also be used as a pronoun.

====Example of the Usage of Hic====
{| class="wikitable"
!bgcolor="#CCFFFF"|Latin
!bgcolor="#CCFFCC"|English
|-
|bgcolor="#CCFFFF"|''''Hic'''' servus, non ille, est malus. ||bgcolor="#CCFFCC"| This slave, not that one, is bad.
|}</text>
      <sha1>7ybpn6a6nas1vixyxdj6eig8bwr1nae</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 6-The Perfect Passive</title>
    <ns>0</ns>
    <id>131945</id>
    <revision>
      <id>3084777</id>
      <parentid>3081948</parentid>
      <timestamp>2016-05-24T07:54:50Z</timestamp>
      <contributor>
        <username>~riley</username>
        <id>552420</id>
      </contributor>
      <minor/>
      <comment>Reverted 2 edits by [[Special:Contributions/74.96.178.205|74.96.178.205]] ([[User talk:74.96.178.205|talk]]) to last revision by Syum90. ([[w:WP:TW|TW]])</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3921" xml:space="preserve">{{Latin}}
The perfect passive is an easy tense to form in Latin, and it is also one of the most useful. The verb "to love" in the perfect passive would translate into English as "I was loved".


== Forming the Perfect Passive in Latin ==
In order to form the perfect passive you must be familiar with the principal parts of the verb with which you are working, e.g., ''amo, amÄre, amÄvÄ«, amÄtum''. The fourth principal part is the '''perfect passive participle'''.
*In its neuter nominative form, the perfect passive participle is identical to the nominative supine (a fourth-declension noun whose morphology and usage are very restricted). Be careful not to confuse the two.

To use the perfect passive, first determine the gender and number of the subject of the sentence. For example, in the sentence "The queen was killed by the soldier," ''queen'' is the subject. In Latin, ''queen'' will be feminine nominative singular (''regÄ«na'').

Now make the participle agree with the subject in gender and number (and case), just as you would with any adjective. As a review, the singular endings for the participle, a first/second declension adjective, are:

   Masculine: '''''-us''''' â (''amÄtus'')
   Feminine: ''''' -a''''' â (''amÄta'')
   Neuter: '''''-um''''' â (''amÄtum'')

The endings for plural nouns are:

   Masculine: '''''-Ä«''''' â (''amÄtÄ«'')
   Feminine:  '''''-ae''''' â (''amÄtae'')
   Neuter: '''''-a''''' â (''amÄta'')

These participles by themselves can be translated with "having been", eg. &lt;i&gt;amatus&lt;/i&gt; = having been loved. Add a present form of ''sum'', and you have the perfect passive, eg. &lt;i&gt;amatus sum&lt;/i&gt; = I am having been loved = I have been loved.

== Conjugation of Verbs in the Perfect Passive ==

=== First Conjugation (''amÅ'', to love) ===
{| border="1" cellspacing="0" cellpadding="5" align="center"
! Person
! Singular
! Plural
|- 
| 1st
| amÄtus(/-a) sum
| amÄtÄ«(/-ae) sumus
|-
| 2nd
| amÄtus(/-a) es
| amÄtÄ«(/-ae) estis
|-
| 3rd
| amÄtus(/-a/-um) est
| amÄtÄ«(/-ae/-a) sunt
|}

=== Second Conjugation (''moneÅ'', to warn) ===
{| border="1" cellspacing="0" cellpadding="5" align="center"
! Person
! Singular
! Plural
|- 
| 1st
| monitus sum
| monitÄ« sumus
|-
| 2nd
| monitus es
| monitÄ« estis
|-
| 3rd
| monitus est
| monitÄ« sunt
|}


=== Third Conjugation (''regÅ'', to rule) ===
{| border="1" cellspacing="0" cellpadding="5" align="center"
! Person
! Singular
! Plural
|- 
| 1st
| rectus sum
| recti sumus
|-
| 2nd
| rectus es
| rectÄ« estis
|-
| 3rd
| rectus est
| rectÄ« sunt
|}


=== Fourth Conjugation (''audiÅ,'' to hear) ===
{| border="1" cellspacing="0" cellpadding="5" align="center"
! Person
! Singular
! Plural 
|- 
| 1st
| audÄ«tus sum
| audÄ«tÄ« sumus
|-
| 2nd
| audÄ«tus es
| audÄ«tÄ« estis
|-
| 3rd
| audÄ«tus est
| audÄ«tÄ« sunt
|}

=== Notes ===

#Remember that the subject '''must''' agree with the passive participle.
#Passive verbs do not take an object. Instead they have an agent or instrument, indicated by the ablative case.

== Examples ==
''Regina Ä milite '''interfecta est'''.''.
:"The queen was killed by the soldier."
''Rex ad proelium '''est''' Ä servÄ«s '''portÄtus'''.''
:"The king was carried to the battle by his slaves."
''Numquam enim Ä PomponiÄ nostrÄ certior '''sum factus''' esse cuÄ« dare litterÄs possem.'' (Cicero, ''Ad Atticum'' 1.5)
:"For I was never made aware by our Pomponia that there was someone to whom I could give a letter."

==Exercises==

Convert the following sentences with relative clauses into sentences with the same meaning but using past participles.

eg. &lt;i&gt;Aemilianus vidit urbem quam deleverat&lt;/i&gt; -&gt; &lt;i&gt;Aemilianus vidit urbem a se deletam&lt;/i&gt;

#colonus exit casam quam vendidit
#colonus videt nuntium (&lt;i&gt;messenger&lt;/i&gt;) quam Romam misit
#nuntius colono dedit epistolam quam coloni pater scripserat
#colonus gratias egit (&lt;i&gt;gave thanks&lt;/i&gt;) nuntio quem saepe viderat</text>
      <sha1>oqc3dfhpek76rzsthyi3jdt6vj87zi2</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 6-The Subjunctive Perfect Passive</title>
    <ns>0</ns>
    <id>53427</id>
    <revision>
      <id>3559757</id>
      <parentid>3285713</parentid>
      <timestamp>2019-07-25T05:12:19Z</timestamp>
      <contributor>
        <ip>103.81.54.25</ip>
      </contributor>
      <comment>/* Subjunctive Passive Pluperfect */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2993" xml:space="preserve">{{Latin}}
=Subjunctive Passive Verbs=

==Subjunctive Passive Perfect==
Subjunctive passive verbs form from the 4th principle part as shown in the example below.

The verb's third principle part, e.g. in the word impedire(to obstruct): impedio, impedire, '''impedivi''',  impeditus; gains the passive ending for the appropriate person. 


This is an example of the Subjunctive Passive in the perfect tense.
muto, mutare, mutavi, mutatum -- to change

To make the verb into a perfect passive, take the fourth principle part, make it agree with the subject in gender, number, and case, and then add in the appropriate form of esse. In the perfect, we use the present form of esse, and specifically the subjunctive present(sim, sis, sit, simus, sitis, sint.)

For example, Do you know ''what has been done to him?'' would be made into: scis quid eum factum sit?

             ''Singular''

            mutatus sim      '''I have been changed.'''
            mutatus sis      '''You have been changed.'''
            mutatus sit      '''He has been changed.'''

              ''Plural*''

            mutati simus     '''We have been changed.'''
            mutati sitis     '''You have been changed.'''
            mutati sint      '''They have been changed.'''


*Note well that in the plural, the word "mutatus" becomes "mutati," thus taking on the plural nominative. Remember that the perfect passive verbs require the fourth participle to agree in gender and number!


===Exercises===

'''In this section, it is only truly necessary to translate the italicized portion. The rest exists in order to make the subjunctive necessary.'''

the children were so bad that they ''have been scolded.'' (Children- Liberi; To scold- vitupero, vituperare, vituperavi)



He asked how ''I was tricked.''(trick-ludo, ludere, lusi, lusus)


My parents drove to town so that now ''I have been born in a hospital.''(born- cresco, crescere, crevi, cretus; Hospital- valetudinarium, valetudinarii-n.)



==Subjunctive Passive Pluperfect==

The subjunctive passive pluperfect is very similar to the perfect, with the major difference being the way esse is conjugated. In specific, the word esse is simply given the active endings(m,s,t,mus,tis, nt)




mutavi + '''isse''' --&gt; 
                       ''Singular''

            mutatus essem    '''I had been changed. '''
            mutatus esses    '''You had been changed.'''
            mutatus esset    '''He had been changed.'''

              ''Plural*''

            mutati essemus   '''We had been changed.'''
            mutati essetis   '''You had been changed.'''
            mutati essent    '''They had been changed.'''

===Exercises===

In these exercises, only the italicized parts require translation. The rest exist to make the subjunctive necessary. Remember, the subjunctive is not used in any but complex sentences or other rare circumstances.

Ovid wrote so much in the Metamorphoses that ''his hand had been changed into stone.''

{{BookCat}}</text>
      <sha1>efs3ed9mpcc1o6w9u6o2rbfnoj038ts</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 7-Future and Past Perfect</title>
    <ns>0</ns>
    <id>29633</id>
    <revision>
      <id>3285715</id>
      <parentid>1223268</parentid>
      <timestamp>2017-08-26T22:23:05Z</timestamp>
      <contributor>
        <username>Strange quark</username>
        <id>3078616</id>
      </contributor>
      <comment>Fix categorization</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2080" xml:space="preserve">{{Latin}}

==Future perfect==
The future perfect tense is used for an action that will have been completed in the future by the time something else has happened. 

English example: "I '''will have seen''' the movie by the time it comes out."

To form the future perfect, take the perfect stem and add the future perfect endings:

&lt;table border="1" cellpadding="5"&gt;
&lt;tr&gt;&lt;td&gt;''-er&amp;#333;''&lt;/td&gt;&lt;td&gt;''-erimus''&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;''-eris''&lt;/td&gt;&lt;td&gt;''-eritis''&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;''-erit''&lt;/td&gt;&lt;td&gt;''-erint''&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

Note the similarities to the future tense of ''sum'', except for the third person plural ending ''-erint''&lt;ref&gt;''-int'' as an ending is rare; ''-erint'' and ''sint'' are two of the most common&lt;/ref&gt; in place of ''-erunt'', which serves as the perfect ending instead.

Hence: '''amÄver&amp;#333;''', I will have loved; '''vÄ«deritis''', you (pl.) will have seen


&lt;references/&gt;

==Pluperfect==
The pluperfect tense is used to describe something in the past that happened before another event in the past.

English example: "I '''had graduated''' by the time I applied for a job."

To form the pluperfect, take the perfect stem and add the pluperfect endings:

&lt;table border="1" cellpadding="5"&gt;
&lt;tr&gt;&lt;td&gt;''-eram''&lt;/td&gt;&lt;td&gt;''-erÄmus''&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;''-erÄs''&lt;/td&gt;&lt;td&gt;''-erÄtis''&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;''-erat''&lt;/td&gt;&lt;td&gt;''-erant''&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

Hence: '''amÄveram''', I had loved; '''vÄ«derÄtis''', you (pl.) had seen



==Examples==
''De Acutiliano autem negotio quod mihi '''mandaras''' ('''mandaveras'''), ut primum a tuo digressu Romam veni, '''confeceram'''.'' (Cicero, ''Ad Atticum'' 1.5)

:"But as to the business of Acutilius that you had entrusted with me, I had already taken care of it when I came to Rome first thing after your departure." Note the relationship of the pluperfect verbs ''mandaras'' (''-aras'' is a common contraction for ''-averas'') and ''confeceram'' to the perfect verb ''veni''.

''Ego certe meum officium '''praestitero'''.'' (Caesar, ''De Bello Gallico'' IV)

:"I certainly will have prevailed in my duty."

{{BookCat}}</text>
      <sha1>niksenn1gx5s6doqqz28po639nab3re</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 7-The Gerund and Participles</title>
    <ns>0</ns>
    <id>8538</id>
    <revision>
      <id>3285716</id>
      <parentid>2720362</parentid>
      <timestamp>2017-08-26T22:23:32Z</timestamp>
      <contributor>
        <username>Strange quark</username>
        <id>3078616</id>
      </contributor>
      <comment>Fix categorization</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4985" xml:space="preserve">{{Latin}}

= Participles =

'''Participles''' are verbs which function grammatically like adjectives.  English, aided by auxiliary participles, is able have participle phrases in many tenses. Latin has participles that do not have auxiliary supplementary participles. This limits the usage of the participle in Latin, according to some wiki-scholars of Classical Studies. 

{| border="1"
|-
| colspan="3" | &lt;B&gt;&lt;I&gt;Example 1&lt;/I&gt;&lt;/B&gt;
|-
| &lt;B&gt;English&lt;/B&gt; || (the) walking || man
|-
| &lt;B&gt;Latin&lt;/B&gt; || ambulans || vir
|-
|
 || &lt;B&gt;Present Participle&lt;/I&gt; || &lt;B&gt;Substantive&lt;/B&gt;
|}

== Present Active Participles ==

Present participles are formed by adding -ns to the stem of the verb.

{| border="1"
|-
| colspan="2" | &lt;B&gt;Forming the Present Imperfect Participle&lt;/B&gt;
|-
| 1st Conjugation
| &lt;B&gt;Infinitive:&lt;/B&gt; amare&lt;BR&gt;&lt;B&gt;Stem:&lt;/B&gt; ama&lt;BR&gt;&lt;B&gt;Present Imperfect Participle:&lt;/B&gt; amans
|-
| 2nd Conjugation
| &lt;B&gt;Infitive:&lt;/B&gt; monere&lt;BR&gt;&lt;B&gt;Stem:&lt;/B&gt; mone&lt;BR&gt;&lt;B&gt;Present Imperfect Participle:&lt;/B&gt; monens
|-
| 3rd Conjugation
| &lt;B&gt;Infinitive:&lt;/B&gt; regere&lt;BR&gt;&lt;B&gt;Stem:&lt;/B&gt; rege&lt;BR&gt;&lt;B&gt;Present Imperfect Participle:&lt;/B&gt; regens
|-
| 4th Conjugation
| &lt;B&gt;Infinitive:&lt;/B&gt; audire&lt;BR&gt;&lt;B&gt;Stem:&lt;/B&gt;audi&lt;BR&gt;&lt;B&gt;Present Imperfect Participle:&lt;/B&gt;audiens
|}

Present Participles are declined like 3rd declension adjectives.  In cases besides the nominative, the -s becomes -t.

Examples:

1. ferens, ferentis
2. capiens, capientis
3. ens, entis

=== Exercises ===

Form the Present Participle and translate of the following Latin verbs:

* meto, messui, messum, ere
* metuo, metum, ui, ere
* milito, avi, atum, are
* postulo, avi, atum, are
* sulco, avi, sulcum, are
* iacio, ieci, iactum, ere

=== Uses ===


The examples will show participles of the verb ''amo, amare, amavi, amatum'' (to love). 

* '''present active''': base + 'ns.' This forms a two-termination 3rd declension adjective. In the case of ''amare'', the participle is ''amans, amantis'' (loving).
* '''perfect passive''': fourth principle part, with appropriate first or second declension endings: ''amatus, -a, -um''.
* '''future active''': fourth principle part, minus 'm', add 'rus, -a, -um' This forms a 1st-2nd declension adjective: ''amaturus, -a, -um'' (about to love).

In deponent verbs, the perfect passive participle is formed in the same way as in regular verbs.  However, since the nature of the deponent verb is passive in form and active in meaning, the participle is translated actively.

Remember that participles are adjectives, and therefore must be declined to agree with the noun which they modify in case, number and gender.

== Gerund ==

The gerund is a verbal noun which is used to refer to the '''action''' of a verb. For example: ars '''scribendi''' = the art of '''writing'''. The gerund is declined as a second declension neuter noun. It is formed by taking the present stem and adding -ndum.

{| border="1"
|-
| '''Verb'''
| amo, amare
| video, videre
| rego, regere
| capio, capere
| audio, audire
|-
| '''Gerund'''
| amandum
| videndum
| regendum
| capiendum
| audiendum
|}
&lt;br/&gt;
==== Meanings of the gerund ====

* Genitive: ars legendi - The art of reading / to read
* Accusative: ad puniendum - to punish, for punishing
* Ablative: saepe canendo - through frequently singing; in legendo: while reading
* Genitive with ''causa'': puniendi causa - in order to punish

==Gerundive==

The gerundive is a 1st/2nd declension adjective formed the same way as the gerund, and its function overlaps somewhat with the gerund, but otherwise differs. The literal translation of the gerundive is with "to be", eg. defendendus, -a, -um = "to be defended".

* Accusative: ad ludos fruendos - to the games to be enjoyed - to enjoy the games (Note that if this were a gerund construction, it would be ad lud'''is''' fruend'''um''' since ''fruor, -i'' takes the ablative case. In the gerundive construction, both noun and gerundive are governed by the preposition ''ad'')
* Gerundive of obligation: Carthago delenda est - Carthage is to be destroyed - Carthage must be destroyed. Note that if there is an object (eg. Carthage is to be destroyed '''by us'''), it goes into the dative case.

=Exercises=

1. Convert the following subjunctive purpose clauses into gerund or gerundive clauses with the same meaning. For example: militabat ut patriam defenderet -&gt; militabat ad patriam defendendum ''or'' militabat patriam defendendi causa ''or'' militabat ad patriam defendendam. Try to use each construction twice.
* casam exit ut patrem adiuvet
* mater in casam rediit ut cenam pararet
* hostes vincebant ergo scutum abieci (''I threw away my shield'') ut celerius fugerem
* in silvas currimus ut nos celemus
* hostes in silvas ineunt ut nos invenirent
* Brutus Iulium Caesarem occidit ut Romam liberaret

2. Translate into Latin. For example: I must see the temple -&gt; templum mihi videndum est
* We must build a large city.
* Julius Caesar must lead an army into Greece.
* Scipio (''Scipio, -ionis'') must defeat Hannibal.

{{BookCat}}</text>
      <sha1>ibd9v7neosxhn92i2diybji9b7ryr9n</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 7-Translation</title>
    <ns>0</ns>
    <id>11284</id>
    <revision>
      <id>3285717</id>
      <parentid>1821860</parentid>
      <timestamp>2017-08-26T22:24:00Z</timestamp>
      <contributor>
        <username>Strange quark</username>
        <id>3078616</id>
      </contributor>
      <comment>Fix categorization</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2942" xml:space="preserve">{{Latin}}
==Using a Dictionary==

To find a Latin word in the dictionary can be difficult.  Foremost, Latin verbs are listed using their the 'present indicative 1st person singular active' construct of the verb.  Thus, to find the meaning of the verb 'amÄre', one must find 'amÅ' listed in the dictionary. Thus, one must use their wits to determine what the stem and what is the ending of the verb. A bit of searching around in the dictionary may be required.  There are a few verbs which are highly irregular which must be learnt such as 'ferÅ', I carry.

Nouns are usually much easier.  They are always given in the nominative singular case.   If you see a noun such as 'vÅcem', and do not know what it is, do not fret.  If you look for 'vÅc' in the dictionary, you will not find what you are looking for.  'em' is typically a third declension accusative ending, thus you should be aware that third declension nouns have radically changing stems.  Those which have the consonent 'c' usually have the consonent 'x' replacing it in the nominative singular. Thus the nominative singular of vÅcem, is vÅx.  Likewise, 'g' is also often used when shifting from nominative singular cases to other cases.  For example, rÄx becomes 'rÄgem' in the accusative. There are plenty of other simple rules which one learns through experience.

Unconjugatable and indeclinable words are listed 'as is'.

==Exercise 1==

===Vocabulary===
{| class="wikitable"
|-
| align="center" colspan="3" |
|-
! bgcolor="#CCFFFF" | &lt;font face="Arial" size="2"&gt;Latin&lt;/font&gt;
! bgcolor="#CCFFCC" | &lt;font face="Arial" size="2"&gt;English&lt;/font&gt;
! bgcolor="#FFCCCC" | &lt;font face="Arial" size="2"&gt;Notes&lt;/font&gt;
|-
| align="center" colspan="3" |
|-
| align="center" bgcolor="#CCFFFF" | '''confessio, -Ånis'''
| align="center" bgcolor="#CCFFCC" | '''confession'''
| align="center" bgcolor="#FFCCCC" | '''3rd declension feminine'''
|-
| align="center" colspan="3" |
|-
| align="center" bgcolor="#CCFFFF" | '''liber, libri'''
| align="center" bgcolor="#CCFFCC" | '''book'''
| align="center" bgcolor="#FFCCCC" | '''2nd declension masculine'''
|-
| align="center" colspan="3" |
|-
| align="center" bgcolor="#CCFFFF" | '''malus, -a, -um'''
| align="center" bgcolor="#CCFFCC" | '''bad'''
| align="center" bgcolor="#FFCCCC" | ''' '''
|-
| align="center" colspan="3" |
|-
| align="center" bgcolor="#CCFFFF" | '''de + abl.'''
| align="center" bgcolor="#CCFFCC" | '''from, down from, aside; about, concerning'''
| align="center" bgcolor="#FFCCCC" | ''' '''

|}

===Passage===

Translate the following passage:

ConfessiÅnum meÄrum librÄ« tredecim et dÄ malÄ«s et dÄ bonÄ«s meÄ«s deum laudant iÅ«stum et bonum atque in eum excitant hÅ«mÄnum intellectum et affectum. Interim quod ad mÄ attinet, hoc in mÄ egÄrunt cum scriberentur et agunt cum leguntur. Quid dÄ illÄ«s aliÄ« sentiant, ipsÄ« viderint; multÄ«s tamen frÄtribus eÅs multum placuisse et placÄre sciÅ.

{{BookCat}}</text>
      <sha1>9fqu3khft4idbhlbs9rf1mp6tfvqix4</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 8-Ablative Absolute and Accusative Infinitive</title>
    <ns>0</ns>
    <id>228689</id>
    <revision>
      <id>2757724</id>
      <parentid>1854389</parentid>
      <timestamp>2015-01-22T13:57:21Z</timestamp>
      <contributor>
        <ip>72.37.140.38</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4090" xml:space="preserve">{{Latin}}
==Ablative Absolute==

The ablative absolute construction is used in a sentence to provide a background for the main action in the sentence. An ablative absolute is formed with a noun and an adjective or participle in the ablative case.

&lt;i&gt;&lt;b&gt;convivis ingressis&lt;/b&gt; ille cenam parat&lt;/i&gt;

&lt;b&gt;With the guests having entered&lt;/b&gt;, he prepares dinner.

&lt;i&gt;&lt;b&gt;domino convivanti&lt;/b&gt; servi diligenter laborabant&lt;/i&gt;

&lt;b&gt;With the master feasting&lt;/b&gt;, the slaves were working diligently.

&lt;i&gt;&lt;b&gt;omnibus ieiunis&lt;/b&gt; multos panes parare debuit&lt;/i&gt;

&lt;b&gt;With everyone (being) hungry&lt;/b&gt;, he had to prepare lots of bread.

==Accusative Infinitive==

The accusative infinitive construction is used to indirectly report speech or thoughts. An accusative infinitive construction is formed by taking the indirect clause and putting the subject in the accusative and the verb in the infinitive.

&lt;i&gt;ille credit &lt;b&gt;pueros stultos esse&lt;/b&gt;&lt;/i&gt;

He believes the boys to be fools = He believes &lt;b&gt;that the boys are fools&lt;/b&gt;.

&lt;i&gt;magister parentibus dicit &lt;b&gt;pueros stultos esse&lt;/b&gt;&lt;/i&gt;

The teacher says to the parents &lt;b&gt;that the boys are fools&lt;/b&gt;.

&lt;i&gt;colonus uxori dicit &lt;b&gt;se confectum esse&lt;/b&gt;&lt;/i&gt;

The farmer says to his wife &lt;b&gt;that he is exhausted&lt;/b&gt;.

In this sentence, note how the reflexive &lt;i&gt;se&lt;/i&gt; refers to the main subject of the sentence.

&lt;i&gt;colonus uxori &lt;b&gt;dixit&lt;/b&gt; se confectum esse&lt;/i&gt;

The farmer said to his wife that he &lt;b&gt;was&lt;/b&gt; tired.

Note how esse, despite being a present infinitive, is translated into the past tense. This is because the infinitive uses the action of the main verb, in this case &lt;i&gt;dixit&lt;/i&gt; as a reference point instead of the present.

But what about sentences such as "the farmer &lt;b&gt;says&lt;/b&gt; to his wife that he &lt;b&gt;worked&lt;/b&gt; diligently"? For those, you need to use the &lt;b&gt;past infinitive&lt;/b&gt;.

===Overview of infinitives in all tenses===
{| border="1" cellspacing="0" cellpadding="5"
!Tense
!Active
!Passive
!Active
!Passive
!Active
!Passive
!Active
!Passive
|-
|Present
|amare
|amari
|monere
|moneri
|regere
|regi
|audire
|audiri
|-
|Past
|amavisse
|amatus, -a, -um esse
|monuisse
|monitus, -a, -um esse
|rexisse
|rectus, -a, -um esse
|audivisse
|auditus, -a, -um esse
|-
|Future
|amaturus, -a, -um esse
|amatum iri
|moniturus, -a, -um esse
|monitum iri
|recturus, -a, -um esse
|rectum iri
|auditurus, -a, -um esse
|auditum iri
|}

The sentence "The farmer says to his wife that he worked diligently" would thus translate as:

&lt;i&gt;colonus uxori dicit se diligenter laboravisse&lt;/i&gt;

The following examples show how different infinitives with the main verb in the past and present would appear in English:

*colonus uxori dixit se diligenter laboravisse = The farmer said to his wife that he &lt;b&gt;had worked&lt;/b&gt; diligently.
*colonus uxori dixit se diligenter laborare = The farmer said to his wife that he &lt;b&gt;was working&lt;/b&gt; diligently.
*colonus uxori dixit se diligenter laboraturum esse = The farmer said to his wife that he &lt;b&gt;would work&lt;/b&gt; (or &lt;i&gt;was going to work&lt;/i&gt;) diligently.
*colonus uxori dicit se diligenter laboraturum esse = The farmer said to his wife that he &lt;b&gt;will work&lt;/b&gt; (or &lt;i&gt;is going to work&lt;/i&gt;) diligently.
*nuntius mihi dixit urbem deletam esse = The messenger told me that the city &lt;b&gt;had been destroyed&lt;/b&gt;
*nuntius mihi dixit urbem deleri = The messenger told me that the city &lt;b&gt;was being destroyed&lt;/b&gt;
*nuntius mihi dixit urbem deletum iri = The messenger told me that the city &lt;b&gt;would be destroyed&lt;/b&gt; (or &lt;i&gt;was going to be destroyed&lt;/i&gt;)
*nuntius mihi dicit urbem deletum iri = The messenger told me that the city &lt;b&gt;will be destroyed&lt;/b&gt; (or &lt;i&gt;is going to be destroyed&lt;/i&gt;)

===Translation Exercises===

#parentis absentibus pueri ludunt
#multis hominibus audientibus consul orationem (&lt;i&gt;speech&lt;/i&gt;) habet
#consule loquente multi homines audiunt
#agro vendito colonus Romam ingressus est
#Antonius civibus dixit Brutum victum iri
#Bruti fautores (&lt;i&gt;supporters&lt;/i&gt;) crediderunt eum victurum esse
#illi gaudebant Brutum multas legiones habere
#sed paucis post mensibus nuntius venit et dixit Brutum victum esse</text>
      <sha1>t6nf4mgfy5x2ss6e394b7zajct5zlil</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 8-Conditional Clauses</title>
    <ns>0</ns>
    <id>229173</id>
    <revision>
      <id>1896163</id>
      <parentid>1838873</parentid>
      <timestamp>2010-07-20T20:59:31Z</timestamp>
      <contributor>
        <username>J36miles</username>
        <id>346873</id>
      </contributor>
      <comment>added BookCat</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2921" xml:space="preserve">==Conditional Clauses==

Conditional clauses in English and Latin have the general form:

&lt;b&gt;if&lt;/b&gt; (condition clause) (result clause)

Or:

(result clause) &lt;b&gt;if&lt;/b&gt; (condition clause)

For example:

#If I see anyone, I'll tell you.
#If he was sleeping, you should not have knocked.
#I cannot hear you if I'm sleeping.
#I would have been sad if I had not won.

There are 3 types of conditional clauses in Latin:

#Simple Fact (Present or Past)
#Contrary to Fact (Present or Past)
#Future (More or Less Vivid)

===Simple Fact Conditionals===

Simple fact conditionals in Latin have the general form:

si (condition clause in the present indicative) (result clause in the present indicative)

Or:

si (condition clause in the imperfect/perfect indicative) (result clause in the imperfect/perfect indicative)

=====For example:=====

&lt;i&gt;si diligenter laboras, bonus puer es&lt;/i&gt;

If you are working diligently, you are a good boy.

&lt;i&gt;si dominum adiuvabas, bonus servus eras&lt;/i&gt;

If you were helping your master, you were a good slave.

===Contrary to Fact Conditionals===

Contrary to fact conditionals are used if the condition clause is known to be false. For example:

If you weren't playing during class, you would be a good boy (but you were playing, so you aren't a good boy).

Contrary to fact conditionals have the general form:

si (condition clause in the imperfect subjunctive) (result clause in the imperfect subjunctive)

Or:

si (condition clause in the pluperfect subjunctive) (result clause in the pluperfect subjunctive)

=====For example:=====

&lt;i&gt;si matrem adiuvaret, cena parata esset&lt;/i&gt;

If he were helping his mother, the dinner would be ready.

&lt;i&gt;si patrem adiuvisset, pater matrem adiuvare potuisset&lt;/i&gt;

If he had helped his father, his father would have been able to help his mother.

Note how English uses &lt;b&gt;would&lt;/b&gt; and &lt;b&gt;would have&lt;/b&gt; for result clauses, while Latin uses the same tense as in the condition clauses.

===Future Conditionals===

Future conditionals are, of course, used to express conditions in the future. For example:

If you help me, I will be done faster.

Future conditionals take the following general form:

si (condition clause in the future or future perfect) (result clause in the future)

Or:

si (condition clause in the present subjunctive) (result clause in the present subjunctive)

=====For example:=====

&lt;i&gt;si fortiter pugnaveritis, urbs non delebitur&lt;/i&gt;

If you fight bravely, the city will not be destroyed.

Note how English uses the present tense for the condition clause, while Latin uses the future or future perfect.

&lt;i&gt;si diligenter laboretis, vobis meridie domum dimittam&lt;/i&gt;

If you were to work diligently, I would dismiss you at noon.

This type of clause, known as the future less vivid (as opposed to the future more vivid which uses the future and future perfect), is used to express more improbable conditions in the future.

{{BookCat}}</text>
      <sha1>lvbjhhf756e1bul2o8w0wpi67k3uuk7</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 8-Imperfect and Future</title>
    <ns>0</ns>
    <id>6528</id>
    <revision>
      <id>3650288</id>
      <parentid>3611561</parentid>
      <timestamp>2020-01-06T12:31:00Z</timestamp>
      <contributor>
        <username>Bellowhead678</username>
        <id>2162366</id>
      </contributor>
      <minor/>
      <comment>imersion-&gt;immersion - [[Wikibooks:Correct typos in one click|Fix a typo in one click]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="8061" xml:space="preserve">{{Latin}}
&lt;center&gt;&lt;H1&gt;Imperfect and Future constructs&lt;/H1&gt;&lt;/center&gt;

Warning: Beyond the imperfect, this page is not entirely clear. Do not use it beyond the basic imperfect if you are a first time Latin student. See discussion for my thoughts on this.

== Imperfect Active Indicative ==

The imperfect is a construct like:
&lt;br&gt;'''I was seeing.'''
&lt;br&gt; In Latin it would look like this:
&lt;br&gt;'''VidÄbam.'''

English has a similar construct called progressive past. Actions seem incomplete, and so the imperfect label. For example, "I was running," "We were sailing," "They were calling." Note that 'to be' is always there. Latin, however, would sometimes use imperfect like simple past; accordingly, "We were sailing" could be translated as "We sailed." Other translations of imperfect can be used to/kept such as "We used to sail/We kept sailing." 

Regardless of language, the concept of an imperfect is important. Imperfect is called imperfect for a reason - in Latin, the verb "perficere" means to finish/complete, which is what perfect is from. Thus, imperfect, in the grammatical sense, means not finished - that the action could be or could not be completed. Perfect instead means it has been finished - I saw. You have already seen, and it is now completed. I was seeing implies that the action is not yet completed.

The perfect tense, which we will learn later, is a more immediate reference to the past. The name, imperfect, helps you remember its use: in situations where you can't say when an event started or ended or happened, you must use the imperfect.

In situations where you can know when an event started or ended or happened, use the perfect. 

You conjugate the imperfect tense this way:
verb + -bÄ- + personal ending

The endings for imperfect are:

Sg.
&lt;br&gt;1. '''-bam'''
&lt;br&gt;2. '''-bÄs'''
&lt;br&gt;3. '''-bat'''
&lt;br&gt;Pl.
&lt;br&gt;1. '''-bÄmus'''
&lt;br&gt;2. '''-bÄtis'''
&lt;br&gt;3. '''-bant'''

Note that the only thing we add are ba + the personal endings (the same as in the present tense) to the infinitive stem. This gives us the imperfect conjugation.

Note that in third and fourth conjugations, you will have to form it differently. There is *no* rule to explain this, it just is, although there are memorization techniques that can help.

ven&lt;U&gt;i&lt;/U&gt;re is 4th conjugation and is formed like:
veniÄbam
veniÄbÄs
veniÄbat 
veniÄbÄmus
veniÄbÄtis 
veniÄbant

For third conjugation -iÅ stem verbs, the imperfect is like so: capere (to capture or seize) 

capiÄbam
capiÄbÄs
capiÄbat
capiÄbÄmus
capiÄbÄtis
capiÄbant

Note that it is easiest to think of what the endings -ere and &lt;U&gt;i&lt;/U&gt;re lack. The imperfect -bÄ- + the personal ending, which we can call the imperfect conjugation,  must be prefixed by -iÄ-.

A few examples:

'''amÄbam''' - '''I was loving''' (A-conjugation--1st)
&lt;br&gt;'''monÄbÄtis''' - '''You were warning [object/personage]''' (of something negative) (Pl.) (2nd Conjugation)
&lt;br&gt;'''vincÄbÄmus''' - '''We were defeating'' (3rd conjugation)
&lt;br&gt;'''capiÄbant''' - '''They were catching''' (short I-conjugation--3rd conjugation)
&lt;br&gt;'''pellÄbat''' - '''She/he/it was propelling''' (drive something (not a vehicle), propel something) (consonantic conjugation)

(Wiki-reading tips: See discussion. Some of the above may be unclear, however the clarifying '--' and '/' indicate verification. We may not know what the original author intended, but we know what conjugations the examples are.)

== Future I, Active ==

Future active is a tense which, unsurprisingly, refers to something which has not yet happened. The endings are fairly basic, and follow fairly regular rules - however, the future endings used in 1st and 2nd conjugation differ from the endings of 3rd, 3rd-iÅ, and 4th.

For example - "amÅ, amÄre" (1st conjugation) would be

AmÄbÅ - I will love&lt;br&gt;
AmÄbis - You will love&lt;br&gt;
AmÄbit - He/She/It will love&lt;br&gt;
AmaÄbimus - We will love&lt;br&gt;
AmÄbitis - Y'all will love&lt;br&gt;
AmÄbunt - They will love&lt;br&gt;
* 1st person singular and 3rd person plural use -bÅ and -bunt, not -bi-.
Note the B and the BIs - the distinguishing feature of future tense in Latin.

With "veniÅ, venÄ«re" (4th conjugation), however, the endings are different. In future, this is what they look like:

Veniam - I will come &lt;br&gt;
VeniÄs - You will come&lt;br&gt;
Veniet - He/She/It will come&lt;br&gt;
VeniÄmus - We will come&lt;br&gt;
VeniÄtis - Y'all will come&lt;br&gt;
Venient - They will come &lt;br&gt;

[deleted paragraphs go here. deleted to maintain rigorous accuracy, which we will go back to striving for.)

To clarify: ven&lt;U&gt;Ä«&lt;/U&gt;re, veniÅ.. we know it is 4th conjugation verb and if we look at its first person singular conjugation, we see that it is an -iÅ verb, because the conjugation of the first person singular is "ven'''i'''o". (an io category exists within 3rd and fourth conjugations and is a more general concept which we will briefly introduce here by using venire, venio as an example).

Let's first identify what we know.

We know it is 4th conjugation -io because it ends in &lt;U&gt;Ä«&lt;/U&gt;re, which tells us that it is 4th conjugation, and io because its first person singular ends in io (venio). Because it is -iÅ, we leave the -i- in. So, when we are asked (as all textbooks should phrase these &lt;B&gt;new&lt;/B&gt; questions):

1. What are the steps to form the future 2nd person conjugation?

We say:

1. It is better to know more than you need: check the infinitive nominative singular, we now know that it is 4th conjugation io.
2. We now know that we can form the stem: the stem is veni and can then add a personal ending--leaving in the i. We leave in the i because it is io. Because it looks weird, we never leave the i in the future perfect. 

What is the form for venÄ«re, in the future tense, in the 2nd person?

The answer is veniÄs.

==Future conjugation==

Example: '''I will love''':
&lt;br&gt;'''amÄ''b''Å'''


The table at the end of this page tries to summarize the future tense, with both sets of personal endings. As the warning notes, this summary may confu panda

As an aid to your understanding, this table only applies to the future tense. Do not assume the table is displaying a pattern that is somehow applicable to all of Latin.

(Wiki-reading-tip: This is why they are in the future section, and were not discussed before.)

The A- and the E- conjugation are (relatively) straight-forward. The others are more advanced, and as the warning notes, could confuse a first-time student. Commercial textbooks probably explain it better at this point, although laying their explanation in a table like the one below is well-advised. Leave items marked with a ? in until issues are resolved.

Take a look at the following table:


{|
|-
| '''A''' || '''E''' || '''long I (vincere/3rd conj.)
| '''short I''' || '''Consonantic'''
|-
| amÄ-'''b'''o || monÄ-'''b'''o || vinc-'''a'''m
| capi-'''a'''m || pell-'''a'''m
|-
| ama-'''b'''''i''s || mone-'''b'''''i''s
| vinc-'''e'''s || capi-'''e'''s || pell-'''e'''s
|-
| ama-'''b'''''i''t || mone-'''b'''''i''t
| vinc-'''e'''t || capi-'''e'''t || pell-'''e'''t
|-
| ama-'''b'''''i''mus || mone-'''b'''''i''mus
| vinc-'''e'''mus || capi-'''e'''mus || pell-'''e'''mus
|-
| ama-'''b'''''i''tis || mone-'''b'''''i''tis
| vinc-'''e'''tis || capi-'''e'''tis || pell-'''e'''tis
|-
| ama-'''b'''''u''nt || mone-'''b'''''u''nt
| vinc-'''e'''nt || capi-'''e'''nt || pell-'''e'''nt
|}

The vocabulary mostly consists of verbs, and can easily be looked up in a dictionary. We will give a limited translation below, and the rest, for those who are particularly adept at language learning, can be learned through immersion.

capere (3rd conjugation--short ere): to seize, metaphorically or literally [see dictionary for full explanation]

amare (first conjugation -are): to love

EXERCISE: Can you be your own editor?

monere (what conjugation? 2nd Conjugation Does it change based on the macron over the first vowel on the ending? Yes long ere = 2nd short =3rd[long ere vs. short ere?]

It means to warn like in admonish (an English word that means to scold lightly.)

{{BookCat}}</text>
      <sha1>kecudt5bata5rag3vz9cygm3ifxqln5</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 8-Verse</title>
    <ns>0</ns>
    <id>296775</id>
    <revision>
      <id>3285719</id>
      <parentid>2631292</parentid>
      <timestamp>2017-08-26T22:25:03Z</timestamp>
      <contributor>
        <username>Strange quark</username>
        <id>3078616</id>
      </contributor>
      <comment>Fix categorization</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="93" xml:space="preserve">{{Latin}}

Verses are very important. They are exactly like they are in English.

{{BookCat}}</text>
      <sha1>fpg4thuxxlquo6zh7iaexpnoof70va7</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 9-Poem</title>
    <ns>0</ns>
    <id>33246</id>
    <revision>
      <id>3538182</id>
      <parentid>3285720</parentid>
      <timestamp>2019-04-18T20:18:36Z</timestamp>
      <contributor>
        <username>Vincentius.NguyenDinhDuyThien</username>
        <id>3160409</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1614" xml:space="preserve">{{Latin}}

'''&lt;u&gt;A Poem by Catullus&lt;/u&gt;'''

I. ad Cornelium 
&lt;poem&gt;
cui dono lepidum nouum libellum 
arida modo pumice expolitum. 
Corneli tibi namque tu solebas 
meas esse aliquid putare nugas 
iam tum cum ausus es unus Italorum 
omne aeuum tribus explicare cartis 
doctis Iuppiter et laboriosis. 
quare habe tibi quidquid hoc libelli 
qualecumque quidem est. patroni et ergo 
plus uno maneat perenne saeclo. 
&lt;/poem&gt; 
1. to Cornelius
&lt;poem&gt;
To whom do I send this fresh little book
of wit, lately polished dry with pumice stone?
To you, Cornelius: since you were accustomed
to consider my trifles worth something
even then, when you alone of Italians
dared to explain all the ages, in three learned
works, by Jupiter, and with the greatest labour.
Then take this little book for your own: whatever 
it is, and is worth: virgin Muse, patroness, 
let it last, for more lives than one.
&lt;/poem&gt; 

'''&lt;u&gt;Notes&lt;/u&gt;'''

Title: ad Cornelium

Ad is a Preposition meaning "to" and therefore never changes case. The name Cornelius is a second declension masculine noun. Names are declined the same as any other noun. You need only decline the singular since there is only one Cornelius.&lt;br /&gt;

Nom. Cornelius&lt;br /&gt;
Voc. Corneli&lt;br /&gt;
Acc. Cornelium&lt;br /&gt;
Gen. Cornelii&lt;br /&gt;
Dat. Cornelio&lt;br /&gt;
Abl. Cornelio&lt;br /&gt;

The translation is "To Cornelius". The Preposition "ad" is only used with the Accusative Case. The Accusative Case is the same as the English Object Case. 

Second declension male names ending âiusâ have the double âiiâ form in the genitive. 

Line One: Cui dono lepidum nouum libellum?

{{BookCat}}</text>
      <sha1>sxyunmdutk5nhwh1nmhi5dfzz009ikv</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Lesson 9-Revision</title>
    <ns>0</ns>
    <id>41524</id>
    <revision>
      <id>3285721</id>
      <parentid>1838860</parentid>
      <timestamp>2017-08-26T22:26:02Z</timestamp>
      <contributor>
        <username>Strange quark</username>
        <id>3078616</id>
      </contributor>
      <comment>Fix categorization</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2041" xml:space="preserve">{{Latin}}

&lt;b&gt;Passive/Subjunctive Tenses&lt;/b&gt;&lt;br /&gt;
Passive is used to describe something like an indirect action affects you - an example is "I was being held". In Latin, it is conjugated through six parts - the present set (present, imperfect, future), and the perfect set (perfect, pluperfect, future perfect). Below is a chart you can use for endings and such.

The present tense through future tenses use the present stem. I'm using the word amo, amare, amavi, amatus - to love, so the present stem is "am".

{| border="1" cellpadding="2" cellspacing="0"
|
! colspan="2" | Present
|-
! 1st person
| amo'''r'''
| amÄ'''mur'''
|-
! 2nd person
| amÄ'''ris'''
| amÄ'''minÄ«'''
|-
! 3rd person
| amÄ'''tur'''
| ama'''ntur'''
|-
| colspan="3" | &amp;nbsp;
|-
| 
! colspan="2" | Imperfect
|-
! 1st person
| amÄ'''bar'''
| amÄ'''bÄmur'''
|-
! 2nd person
| amÄ'''bÄris'''
| amÄ'''bÄminÄ«'''
|-
! 3rd person
| amÄ'''bÄtur'''
| amÄ'''bantur'''
|-
| colspan="3" | &amp;nbsp;
|-
| 
! colspan="2" | Future
|-
! 1st person
| amÄ'''bor'''
| amÄ'''bimur'''
|-
! 2nd person
| amÄ'''beris'''
| amÄ'''biminÄ«'''
|-
! 3rd person
| amÄ'''bitur'''
| amÄ'''buntur'''
|-
| colspan="3" | &amp;nbsp;
|-
| 
! colspan="2" | Perfect
|-
! 1st person
| amÄt'''us''', '''a''', '''um sum'''
| amÄt'''Ä«''', '''ae''', '''a sumus'''
|-
! 2nd person
| amÄt'''us es'''
| amÄt'''Ä« estis'''
|-
! 3rd person
| amÄt'''us est'''
| amÄt'''Ä« sunt'''
|-
| colspan="3" | &amp;nbsp;
|-
|
! colspan="2" | Pluperfect
|-
! 1st person
| amÄt'''us''', '''a''', '''um eram'''
| amÄt'''Ä«''', '''ae''', '''a erÄmus'''
|-
! 2nd person
| amÄt'''us erÄs'''
| amÄt'''Ä« erÄtis'''
|-
! 3rd person
| amÄt'''us erat'''
| amÄt'''Ä« erant'''
|-
| colspan="3" | &amp;nbsp;
|-
|
! colspan="2" | Future Perfect
|-
! 1st person
| amÄt'''us''', '''a''', '''um erÅ'''
| amÄt'''Ä«''', '''ae''', '''a erimus'''
|-
! 2nd person
| amÄt'''us eris'''
| amÄt'''Ä« eritis'''
|-
! 3rd person
| amÄt'''us erit'''
| amÄt'''Ä« erunt'''
|}


Hope this is all correct and helps!&lt;br /&gt;

{{BookCat}}</text>
      <sha1>5h8o9qj9wank027khzimgvqyith6ahj</sha1>
    </revision>
  </page>
  <page>
    <title>Latin/Special consideration: How to use a Wikibook when progress may mean inaccuracy</title>
    <ns>0</ns>
    <id>30739</id>
    <revision>
      <id>3285723</id>
      <parentid>2765106</parentid>
      <timestamp>2017-08-26T22:28:28Z</timestamp>
      <contributor>
        <username>Strange quark</username>
        <id>3078616</id>
      </contributor>
      <comment>Fix categorization</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="305" xml:space="preserve">The current rule for dealing with inaccuracy in this book is to simply delete what you don't understand and to note your level of schooling and your country of origin and that you were confused in the summary box. Try to use the "revert?" keyword.

In other words, do not tolerate inaccuracy!

{{BookCat}}</text>
      <sha1>6a0263hbhlbyqcvf82no333a7gqwchd</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Ambox</title>
    <ns>10</ns>
    <id>384875</id>
    <redirect title="Template:Bmbox" />
    <revision>
      <id>3228920</id>
      <timestamp>2017-06-12T23:26:41Z</timestamp>
      <contributor>
        <username>JackPotte</username>
        <id>99248</id>
      </contributor>
      <comment>JackPotte moved page [[Template:Ambox]] to [[Template:Bmbox]] over redirect: per discussion</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="28" xml:space="preserve">#REDIRECT [[Template:Bmbox]]</text>
      <sha1>dxps9o5us57jnv4ru2ijugfl7l7m3fr</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Ambox/core</title>
    <ns>10</ns>
    <id>384876</id>
    <redirect title="Template:Bmbox/core" />
    <revision>
      <id>3228922</id>
      <timestamp>2017-06-12T23:26:42Z</timestamp>
      <contributor>
        <username>JackPotte</username>
        <id>99248</id>
      </contributor>
      <comment>JackPotte moved page [[Template:Ambox/core]] to [[Template:Bmbox/core]]: per discussion</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="33" xml:space="preserve">#REDIRECT [[Template:Bmbox/core]]</text>
      <sha1>h9ijn3lsvc1xiywalc32i94xf9ujsdf</sha1>
    </revision>
  </page>
  <page>
    <title>Template:BOOKCATEGORY</title>
    <ns>10</ns>
    <id>378612</id>
    <revision>
      <id>3365859</id>
      <parentid>3318591</parentid>
      <timestamp>2018-01-24T02:52:43Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>BOOKNAME (new-style)</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="131" xml:space="preserve">&lt;includeonly&gt;Category:Book:{{{book|{{BOOKNAME|{{{1|{{FULLPAGENAME}}}}}}}}}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>lloy4fm1jzvf8hvj4tiuynvt6q10c3o</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Bmbox</title>
    <ns>10</ns>
    <id>151630</id>
    <revision>
      <id>3228919</id>
      <parentid>1764517</parentid>
      <timestamp>2017-06-12T23:26:41Z</timestamp>
      <contributor>
        <username>JackPotte</username>
        <id>99248</id>
      </contributor>
      <minor/>
      <comment>JackPotte moved page [[Template:Ambox]] to [[Template:Bmbox]] over redirect: per discussion</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="944" xml:space="preserve">&lt;!--{{Ambox}} begin--&gt;{{#switch:{{{small|}}}
| left = 
  {{Ambox/core
  | small      = left
  | type       = {{{type|}}}
  | image      = {{#if:{{{smallimage|}}}
                 | {{{smallimage}}}
                 | {{{image|}}}
                 }}
  | imageright = {{#if:{{{smallimageright|}}}
                 | {{{smallimageright}}}
                 | {{{imageright|}}}
                 }}
  | style      = {{{style|}}}
  | textstyle  = {{{textstyle|}}}
  | text       = {{#if:{{{smalltext|}}}
                 | {{{smalltext}}} 
                 | {{{text}}} 
                 }}
  }}
| #default = 
  {{Ambox/core
  | type       = {{{type|}}}
  | image      = {{{image|}}}
  | imageright = {{{imageright|}}}
  | style      = {{{style|}}}
  | textstyle  = {{{textstyle|}}}
  | text       = {{{text}}}
  }}
}}&lt;!--{{Ambox}} end--&gt;&lt;noinclude&gt;
{{Documentation}}
&lt;!-- Add categories and interwikis to the /doc subpage, not here! --&gt;
&lt;/noinclude&gt;</text>
      <sha1>71dedvqsi5zx5gybeme7bvom2cuhqki</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Bmbox/core</title>
    <ns>10</ns>
    <id>224716</id>
    <revision>
      <id>3228921</id>
      <parentid>2054530</parentid>
      <timestamp>2017-06-12T23:26:42Z</timestamp>
      <contributor>
        <username>JackPotte</username>
        <id>99248</id>
      </contributor>
      <minor/>
      <comment>JackPotte moved page [[Template:Ambox/core]] to [[Template:Bmbox/core]]: per discussion</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2195" xml:space="preserve">&lt;table class="metadata plainlinks ambox {{#switch:{{{small|}}}
| left = mbox-small-left
}} {{#switch:{{{type|}}}
| speedy     = ambox-speedy
| delete     = ambox-delete
| content    = ambox-content
| style      = ambox-style
| move       = ambox-move
| protection = ambox-protection
| notice     &lt;!-- notice = default --&gt;
| #default   = ambox-notice
}}" style="{{{style|}}}"&gt;
&lt;tr&gt;
{{#switch:{{{image|}}}
| blank    &lt;!-- Fall back to "none", since deprecated. --&gt;
| none = &lt;td class="mbox-empty-cell"&gt;&lt;/td&gt;   &lt;!-- No image. Cell with some width or padding necessary for text cell to have 100% width. --&gt;
| #default = 
  &lt;td class="mbox-image"&gt;{{
  #switch:{{{small|}}}
  | left = &lt;!-- Don't use the DIV --&gt; 
  | #default = &lt;div style="width: 52px;"&gt; 
  }}
  {{#if:{{{image|}}}
  | {{{image}}}
  | [[File:{{#switch:{{{type|}}}
    | speedy     = Ambox warning pn.svg
    | delete     = Ambox warning pn.svg
    | content    = Book important2.svg
    | style      = Edit-clear.svg
    | move       = Merge-split-transwiki default.svg
    | protection = Padlock-silver-medium.svg
    | notice          &lt;!-- notice = default --&gt;
    | #default   = Information icon4.svg
    }} | {{#switch:{{{small|}}} 
      | left = 20x20px 
      | #default = 40x40px 
      }} |link=|alt=]]
  }}{{#switch:{{{small|}}}
  | left = &lt;!-- Don't use the /DIV --&gt;
  | #default = &lt;/div&gt; 
  }}&lt;/td&gt;
}}
&lt;td class="mbox-text" style="{{{textstyle|}}}"&gt; {{{text}}} &lt;/td&gt;
{{#if:{{{imageright|}}}
| {{#ifeq:{{{imageright|}}}|none
  | &lt;!-- No image. --&gt;
  | &lt;td class="mbox-imageright"&gt;{{#switch:{{{small|}}}
    | left = {{{imageright}}}
    | #default = &lt;div style="width: 52px;"&gt; {{{imageright}}} &lt;/div&gt;
    }}&lt;/td&gt;
  }}
}}
&lt;/tr&gt;
&lt;/table&gt;&lt;!-- 
Detect and report usage with faulty "type" parameter:
--&gt;{{#switch:{{{type|}}}
|   &lt;!-- No type fed, is also valid input --&gt;
| speedy
| delete
| content
| style
| move
| protection
| notice     = &lt;!-- Do nothing, valid "type" --&gt;
| #default   = &lt;div style="text-align: center;"&gt;This message box is using an invalid "type={{{type|}}}" parameter and needs fixing.&lt;/div&gt;
}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Add categories and interwikis to the /doc subpage, not here! --&gt;
&lt;/noinclude&gt;</text>
      <sha1>tb1vy56jqr2f8rxcta3c3zxkitwyn88</sha1>
    </revision>
  </page>
  <page>
    <title>Template:BookCat</title>
    <ns>10</ns>
    <id>133076</id>
    <revision>
      <id>3369509</id>
      <parentid>3369369</parentid>
      <timestamp>2018-01-30T00:44:35Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>fix</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="511" xml:space="preserve">&lt;includeonly&gt;{{#invoke:TScope|shiftLeft|BookCat/core|1
|namespace   ={{#if:{{{1|}}}|{{NAMESPACE:{{{1}}}}}|{{NAMESPACE}}}}
|pagename    ={{#if:{{{1|}}}|{{PAGENAME:{{{1}}}}}|{{PAGENAME}}}}
|fullpagename={{#if:{{{1|}}}|{{{1}}}|{{FULLPAGENAME}}}}
|sortkey     ={{{sort|{{{sortkey|}}}}}}
}}{{#if:{{{1|}}}                  |[[Category:Pages passing page name to BookCat]]}}&lt;!--
--&gt;{{#if:{{{sort|{{{sortkey|}}}}}}|[[Category:Pages passing sort key to BookCat]]}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>nw1barqxaok3ax2jtswg2fq40n07xkm</sha1>
    </revision>
  </page>
  <page>
    <title>Template:BookCat/core</title>
    <ns>10</ns>
    <id>395128</id>
    <revision>
      <id>3415301</id>
      <parentid>3369280</parentid>
      <timestamp>2018-04-22T20:06:41Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>department, shelf</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="550" xml:space="preserve">&lt;includeonly&gt;{{#invoke:TScope|override|BookCat/{{#switch:{{{namespace}}}
|{{TALKSPACE:{{{namespace}}}:{{{pagename}}}}}=talk
|Category =category
|Subject  =subject
|Template =template
|User     =user
|Wikibooks=category
|={{evalx|
    (let (x (get-arg 2))
      (if (equal? (get-substring x 1 11) "Department:")
          "department"
          (if (equal? (get-substring x 1 6) "Shelf:")
              "shelf"
              "default")))
    |{{ucfirst:{{{pagename}}}}}}}
|#default =default
}}}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>8tn25ac4mqo1m1z6kwtwsnkadjnnq8d</sha1>
    </revision>
  </page>
  <page>
    <title>Template:BookCat/default</title>
    <ns>10</ns>
    <id>377931</id>
    <revision>
      <id>3369433</id>
      <parentid>3364961</parentid>
      <timestamp>2018-01-29T21:02:08Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="563" xml:space="preserve">&lt;includeonly&gt;{{#ifeq: {{{filing|}}} | deep
|[[{{BOOKCATEGORY|{{{fullpagename}}}|book={{#if:{{#titleparts:{{{fullpagename}}}||2}}|{{#titleparts:{{{fullpagename}}}|-1}}|{{{fullpagename}}}}}}}|{{#if:{{{sortkey|}}}|{{{sortkey}}}|{{#if:{{#titleparts:{{{fullpagename}}}||2}}|{{#titleparts:{{{pagename}}}||-1}}}}}} ]][[Category:Pages with deep filing]]
|[[{{BOOKCATEGORY|{{{fullpagename}}}|book={{NAIVEBOOKNAME|{{{fullpagename}}}}}}}|{{#if:{{{sortkey|}}}|{{{sortkey}}}|{{#titleparts:{{{fullpagename}}}||2}}}} ]]
}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>19zdiuubcgqk688r91b773tk23n2n05</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Evalx</title>
    <ns>10</ns>
    <id>377857</id>
    <revision>
      <id>3149922</id>
      <parentid>3140393</parentid>
      <timestamp>2016-11-18T23:55:55Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <minor/>
      <comment>Protected "[[Template:Evalx]]": high-impact page ([Edit=Allow only administrators] (indefinite) [Move=Allow only administrators] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="116" xml:space="preserve">{{#invoke:{{#if:{{{test-eval|}}}|{{{test-eval}}}|Wikilisp}}|trep|{{{1|}}}}}&lt;noinclude&gt;
{{Documentation}}&lt;/noinclude&gt;</text>
      <sha1>gi5tdyhnger0muaubi6cl480g1rg8rt</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Existlist</title>
    <ns>10</ns>
    <id>122484</id>
    <revision>
      <id>1618516</id>
      <parentid>988019</parentid>
      <timestamp>2009-08-29T03:34:35Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor/>
      <comment>+category</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1663" xml:space="preserve">&lt;includeonly&gt;&lt;!--
--&gt;{{#ifeq:{{{1|}}}|{{{1|+}}}|{{#ifexist:{{#rel2abs:{{{1}}}}}|{{#rel2abs:{{{1}}}}}|&lt;!--
--&gt;{{#ifeq:{{{2|}}}|{{{2|+}}}|{{#ifexist:{{#rel2abs:{{{2}}}}}|{{#rel2abs:{{{2}}}}}|&lt;!--
--&gt;{{#ifeq:{{{3|}}}|{{{3|+}}}|{{#ifexist:{{#rel2abs:{{{3}}}}}|{{#rel2abs:{{{3}}}}}|&lt;!--
--&gt;{{#ifeq:{{{4|}}}|{{{4|+}}}|{{#ifexist:{{#rel2abs:{{{4}}}}}|{{#rel2abs:{{{4}}}}}|&lt;!--
--&gt;{{#ifeq:{{{5|}}}|{{{5|+}}}|{{#ifexist:{{#rel2abs:{{{5}}}}}|{{#rel2abs:{{{5}}}}}|&lt;!--
--&gt;{{#ifeq:{{{6|}}}|{{{6|+}}}|{{#ifexist:{{#rel2abs:{{{6}}}}}|{{#rel2abs:{{{6}}}}}|&lt;!--
--&gt;{{#ifeq:{{{7|}}}|{{{7|+}}}|{{#ifexist:{{#rel2abs:{{{7}}}}}|{{#rel2abs:{{{7}}}}}|&lt;!--
--&gt;{{#ifeq:{{{8|}}}|{{{8|+}}}|{{#ifexist:{{#rel2abs:{{{8}}}}}|{{#rel2abs:{{{8}}}}}|&lt;!--
--&gt;{{#ifeq:{{{9|}}}|{{{9|+}}}|{{#ifexist:{{#rel2abs:{{{9}}}}}|{{#rel2abs:{{{9}}}}}|&lt;!--
--&gt;{{#ifeq:{{{10|}}}|{{{10|+}}}|{{#ifexist:{{#rel2abs:{{{10}}}}}|{{#rel2abs:{{{10}}}}}|&lt;!--
--&gt;{{{else|}}}}}|{{{else|}}}}}|{{{else|}}}}}|{{{else|}}}}}|{{{else|}}}}}|{{{else|}}}}}|&lt;!--
--&gt;{{{else|}}}}}|{{{else|}}}}}|{{{else|}}}}}|{{{else|}}}}}|{{{else|}}}}}|{{{else|}}}}}|&lt;!--
--&gt;{{{else|}}}}}|{{{else|}}}}}|{{{else|}}}}}|{{{else|}}}}}|{{{else|}}}}}|{{{else|}}}}}|&lt;!--
--&gt;{{{else|}}}}}|{{{else|}}}}}&lt;!--
--&gt;&lt;/includeonly&gt;&lt;noinclude&gt;
{{esoteric}}

;Example Usage: [[{{tlx|existlist|A|B|C|Wikibooks:Sandbox|E|F|G}}]]
;Result: [[{{existlist|A|B|C|Wikibooks:Sandbox|E|F|G}}]]

;Example Usage: [[{{tlx|existlist|A|B|C|Wikibooks:Sandbox|E|F|G}}|click here]]
;Result: [[{{existlist|A|B|C|Wikibooks:Sandbox|E|F|G}}|click here]]

;What it does: returns the name of the first page which exists up to 10 max.
[[Category:Utility templates|{{PAGENAME}}]]
&lt;/noinclude&gt;</text>
      <sha1>ky5n5d7c3w6km147ef9nw9iawcrdar3</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Is book</title>
    <ns>10</ns>
    <id>193965</id>
    <revision>
      <id>1618508</id>
      <parentid>1496623</parentid>
      <timestamp>2009-08-29T03:26:28Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>+category</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="238" xml:space="preserve">&lt;includeonly&gt;{{#ifeq:{{#titleparts:{{FULLPAGENAME}}}}|{{#titleparts:{{FULLPAGENAME}}|1}}|{{{book|{{{1|}}}}}}|{{{page|{{{2|}}}}}}}}&lt;/includeonly&gt;&lt;noinclude&gt;
Is this a book or a page?
[[Category:Utility templates|{{PAGENAME}}]]
&lt;/noinclude&gt;</text>
      <sha1>55ye9l44xuxo6jp80uqjxqst8yozdo2</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Latin</title>
    <ns>10</ns>
    <id>7349</id>
    <revision>
      <id>1566907</id>
      <parentid>859495</parentid>
      <timestamp>2009-07-12T19:16:12Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor/>
      <comment>+category</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1984" xml:space="preserve">{| class="infobox" style="float:right; font-size:80%;"
 |style="font-size:150%; width:60px;"| ''' [[Latin]] '''
 |-
 | Intro: || [[Latin/Lesson 1|1]] &amp;bull; [[Latin/Lesson 2|2]]
 |-
 | Chapter 1 || [[Latin/Lesson 1-Nominative |1]] &amp;bull; [[Latin/Lesson 2-Adjectives|2]] &amp;bull; [[Latin/Lesson 3-Present Verbs|3]] &amp;bull; [[Latin/Lesson 4-Adverbs and Prepositions|4]] &amp;bull; [[Latin/Lesson 5-Accusative|5]] &amp;bull; [[Latin/Lesson 6-Pronouns|6]]
 |-
 | Chapter 2 || [[Latin/Lesson 1-Imperfect|1]] &amp;bull; [[Latin/Lesson 2-Genitive and Dative|2]] &amp;bull; [[Latin/Lesson 3-Future|3]] &amp;bull; [[Latin/Lesson 4-Ablative|4]] &amp;bull; [[Latin/Lesson 5-Vocative|5]] &amp;bull; [[Latin/Lesson 6-Irregular Verbs|6]] &amp;bull; [[Latin/Lesson 7-Translation|7]] &amp;bull; [[Latin/Lesson 8-Imperfect and Future|8]]
 |-
 | Chapter 3 || [[Latin/Lesson 1-Imperatives|1]] &amp;bull; [[Latin/Lesson 2-Active v Passive|2]] &amp;bull; [[Latin/Lesson 3-Passive|3]] &amp;bull; [[Latin/Lesson 4-Principal Parts|4]] &amp;bull; [[Latin/Lesson 5-Perfect Indicative|5]] &amp;bull; [[Latin/Lesson 6-The Perfect Passive|6]] &amp;bull; [[Latin/Lesson 7-Future and Past Perfect|7]] &amp;bull; [[Latin/Chapter 3 Verse|8]]
 |-
 | Chapter 4 || [[Latin/Lesson 1-Subjunctive|1]] &amp;bull; [[Latin/Lesson 2-Subjunctive Use|2]] &amp;bull; [[Latin/Lesson 3-Subjunctive Imperfect|3]] &amp;bull; [[Latin/Lesson 4-The Subjunctive Passive|4]] &amp;bull; [[Latin/Lesson 5-The Subjunctive Perfect|5]] &amp;bull; [[Latin/Lesson 6-The Subjunctive Perfect Passive|6]] &amp;bull; [[Latin/Lesson 7-The Gerund and Participles|7]] &amp;bull; [[Latin/Lesson 8-Revision|8]] &amp;bull; [[Latin/Lesson 9-Idioms|9]] &amp;bull; [[Latin/Lesson 10-Translation|10]]
 |-
 | Chapter 5 || [[Latin/Lesson 1-Revision|1]] &amp;bull; [[Latin/Lesson 2-Revision|2]] &amp;bull; [[Latin/Lesson 3-Translation|3]] &amp;bull; [[Latin/Lesson 4-Exercises|4]] &amp;bull; [[Latin/Lesson 5-Exercises|5]] &amp;bull; [[Latin/Lesson 6-Translation|6]] &amp;bull; [[Latin/Lesson 7-Revision|7]] &amp;bull; [[Latin/Lesson 8-Verse|8]] &amp;bull; [[Latin/Lesson 9-Poem|9]]
 |}
{{BookCat}}</text>
      <sha1>niw983v8xj55451vhufmz53s8k3499j</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Latin/Exercise</title>
    <ns>10</ns>
    <id>120659</id>
    <revision>
      <id>2010952</id>
      <parentid>1566918</parentid>
      <timestamp>2011-01-02T03:56:07Z</timestamp>
      <contributor>
        <username>Darklama</username>
        <id>7662</id>
      </contributor>
      <minor/>
      <comment>fixed collapsing</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="945" xml:space="preserve">&lt;div class="collapsible" style="clear:both;"&gt;
&lt;div class="title" style="background:#CCCCFF; border:2px solid #4169E1"&gt;EXERCISE â¢ {{SUBPAGENAME}} â¢ {{{1}}}&lt;/div&gt;
&lt;div class="body" style="text-align:{{{align|left}}};"&gt;
{{{2}}}
&lt;div class="collapsible" style="clear:both;"&gt;
&lt;div class="title" style="background:#F0F8FF; border:2px solid #CCCCFF"&gt;SOLUTION â¢ {{PAGENAME}} â¢ {{{1}}}&lt;/div&gt;
&lt;div class="body" style="text-align:{{{align|left}}};"&gt;
{{{3}}}
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;noinclude&gt;

==To use==
&lt;pre&gt;
{{Latin/Exercise|[Name of Excersize]|
[the exercise text]
|
[the exercise solution text]
}}
&lt;/pre&gt;
*Example:
&lt;pre&gt;
{{Latin/Exercise|The Cyrillic Alphabet|
* Read the following: ÐºÐ°Ðº ÑÐ°Ð¼ Ð°ÑÐ° Ð¼Ð°Ñ ÐºÐ°Ñ Ð¼Ð°Ñ ÑÐ°Ð¼Ð° Ð°Ð¼Ð°Ñ Ð¼Ð°ÑÐ°Ð¼ ÑÐ°Ð¼Ð°Ñ Ð°ÑÐ°Ð¼Ð° ÑÐ°Ð¼Ð°Ð¼Ð° Ð°Ð¼Ð°ÐºÐ° ÑÐ°ÐºÐ°Ð¼Ð°
|
* Romanizations: ''kak tam ata mat kat mat tama amat matam tamat atama tamama amaka takama
}}
&lt;/pre&gt;&lt;/noinclude&gt;
{{BookCat}}</text>
      <sha1>ksw8md3nrij2i2nu96uxh8dfukpfhrt</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Latin/gloss</title>
    <ns>10</ns>
    <id>299895</id>
    <revision>
      <id>2654261</id>
      <timestamp>2014-05-13T15:09:48Z</timestamp>
      <contributor>
        <username>Dancxjo</username>
        <id>6370</id>
      </contributor>
      <comment>Created page with "''{{{1}}}''&lt;br/&gt;{{{2}}}"</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="23" xml:space="preserve">''{{{1}}}''&lt;br/&gt;{{{2}}}</text>
      <sha1>6szkk0f4471w7hb9k12l253isgqrmzp</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Latin/verb</title>
    <ns>10</ns>
    <id>299893</id>
    <revision>
      <id>2746473</id>
      <parentid>2654251</parentid>
      <timestamp>2014-12-11T02:45:01Z</timestamp>
      <contributor>
        <ip>189.122.7.151</ip>
      </contributor>
      <comment>/* Show third person singular correctly, instead of substituting it for second singular */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="162" xml:space="preserve">{|class="wikitable"
|-
!
!singular
!plural
|-
!1&lt;sup&gt;st&lt;/sup&gt;
||{{{1}}}||{{{4}}}
|-
!2&lt;sup&gt;nd&lt;/sup&gt;
||{{{2}}}||{{{5}}}
|-
!3&lt;sup&gt;rd&lt;/sup&gt;
||{{{3}}}||{{{6}}}
|-
|}</text>
      <sha1>tdu1w6pir1a4h4c0v7onnxk3l0ci9g6</sha1>
    </revision>
  </page>
  <page>
    <title>Template:NAIVEBOOKNAME</title>
    <ns>10</ns>
    <id>153997</id>
    <revision>
      <id>3364930</id>
      <parentid>1767387</parentid>
      <timestamp>2018-01-22T17:55:27Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <minor/>
      <comment>Pi zero moved page [[Template:FULLBOOKNAME]] to [[Template:NAIVEBOOKNAME]]: description</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="109" xml:space="preserve">&lt;includeonly&gt;{{#titleparts:{{{1|{{FULLPAGENAME}}}}}|1}}&lt;/includeonly&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>p6elrbww9zt8w5vven8h68v7asswoj9</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Print chapter heading</title>
    <ns>10</ns>
    <id>88740</id>
    <revision>
      <id>1661449</id>
      <parentid>695739</parentid>
      <timestamp>2009-11-19T21:59:43Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor/>
      <comment>recat</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="174" xml:space="preserve">&lt;br style="clear: all; page-break-after: always;"&gt;
= {{{1}}} =&lt;noinclude&gt;

[[Category:Heading templates|{{PAGENAME}}]][[Category:Print templates|Chapter heading]]&lt;/noinclude&gt;</text>
      <sha1>i93iym8lcwpvqh2uh09kdmvn6zvpbqr</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Print version notice</title>
    <ns>10</ns>
    <id>27932</id>
    <revision>
      <id>3366073</id>
      <parentid>3364335</parentid>
      <timestamp>2018-01-24T16:58:41Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>BOOKNAME (new-style)</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="402" xml:space="preserve">{{ambox|type=notice|image=[[File:Printer.svg|40x40px]]|text='''This is the [[Help:Print versions|print version]] of [[{{{1|{{BOOKNAME}}}}}]]'''&lt;br/&gt;You won't see this message or any elements not part of the book's content when you print or [{{fullurl:{{existlist|{{{2|{{{1|{{BOOKNAME}}}}}/Print version}}}|{{FULLPAGENAME}}}}|printable=yes}} preview] this page.}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>0t02h1isu1ka7z7xxb4wk9np5o5d7xn</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Reflist</title>
    <ns>10</ns>
    <id>102914</id>
    <revision>
      <id>2017696</id>
      <parentid>2017608</parentid>
      <timestamp>2011-01-14T20:30:40Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>fix class</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="591" xml:space="preserve">&lt;div class="reflist references &lt;!--
 --&gt;{{#if: {{{1|}}}
    | {{#iferror: {{#ifexpr: {{{1|1}}} &gt; 1 }}
      | references-column-width 
      | references-column-count references-column-count-{{{1}}} }}
    | {{#if: {{{colwidth|}}}
      | references-column-width }} }}" style="&lt;!--
 --&gt;{{#if: {{{1|}}}
    | {{#iferror: {{#ifexpr: {{{1|1}}} &gt; 1 }}
      | {{column-width|{{{1}}}}}
      | {{column-count|{{{1}}}}} }}
    | {{#if: {{{colwidth|}}}
      | {{column-width|{{{colwidth}}}}} }} }}"&gt;
{{#tag:references|{{{refs|}}}|group={{{group|}}}}}&lt;/div&gt;&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>2ym9hjf4imgqkgn1igzsgqk5gkfii5z</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Stub</title>
    <ns>10</ns>
    <id>6669</id>
    <revision>
      <id>3508126</id>
      <parentid>3508080</parentid>
      <timestamp>2019-01-07T18:27:13Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <minor/>
      <comment>Protected "[[Template:Stub]]": Counter-productive edit warring ([Edit=Allow only autoconfirmed users] (expires 18:27, 14 January 2019 (UTC)) [Move=Allow only autoconfirmed users] (expires 18:27, 14 January 2019 (UTC)))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="483" xml:space="preserve">{{ambox|type=content|text='''This {{is book|book|page or section}} is an undeveloped draft or outline.'''&lt;br/&gt;You can help to [{{fullurl:{{FULLPAGENAME}}|action=edit}} develop the work], or you can ask for assistance in the [[WB:PROJECTS|project room]].}}&lt;includeonly&gt;{{#ifeq:{{{example|no}}}|no|[[Category:{{#ifeq:{{ARTICLESPACE}}|Wikijunior|Wikijunior Stubs|Stubs}}|{{#ifeq:{{ARTICLESPACE}}|Wikijunior|{{PAGENAME}}|{{FULLPAGENAME}}}}]]}}&lt;/includeonly&gt;&lt;noinclude&gt;{{doc}}&lt;/noinclude&gt;</text>
      <sha1>rz3ytw8bp2n0buwobep5ke7do7hitbo</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Wt</title>
    <ns>10</ns>
    <id>367855</id>
    <revision>
      <id>3036435</id>
      <timestamp>2016-01-09T12:53:00Z</timestamp>
      <contributor>
        <username>JackPotte</username>
        <id>99248</id>
      </contributor>
      <comment>Created page with "&lt;includeonly&gt;[[wikt:{{{1|}}}|{{{2|{{{1}}}}}}]]&lt;/includeonly&gt;&lt;noinclude&gt; {{documentation}} This template can be used to shortly place an hyperlink to Wiktionary.  &lt;nowiki&gt;{{wt|..."</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="263" xml:space="preserve">&lt;includeonly&gt;[[wikt:{{{1|}}}|{{{2|{{{1}}}}}}]]&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
This template can be used to shortly place an hyperlink to Wiktionary.

&lt;nowiki&gt;{{wt|HTTP}}&lt;/nowiki&gt; gives: {{wt|HTTP}}.

[[Category:Wiktionary link templates]]
&lt;/noinclude&gt;</text>
      <sha1>8pzbxy84iwq66sx5i7bknz600xi6gk5</sha1>
    </revision>
  </page>
  <page>
    <title>Module:TScope</title>
    <ns>828</ns>
    <id>378746</id>
    <revision>
      <id>3149555</id>
      <parentid>3149438</parentid>
      <timestamp>2016-11-18T20:02:41Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <minor/>
      <comment>Protected "[[Module:TScope]]": high-impact page ([Edit=Allow only administrators] (indefinite) [Move=Allow only administrators] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text bytes="3756" xml:space="preserve">local export = {}

export.override = function( frame )
	local title = frame.args[1]
	local args = {}
	for v, k in pairs( frame:getParent().args ) do
		args[v] = k
	end
	for v, k in pairs( frame.args ) do
		if type( v ) == "number" then
			if v ~= 1 then
				args[ v - 1 ] = k
			end
		else
			args[v] = k
		end
	end
	return frame:expandTemplate{ title = title, args = args }
end

export.prepend = function( frame )
	local title = frame.args[1]
	local args = {}
	local displace = 0;
	for v, k in pairs( frame.args ) do
		if (type( v ) == "number") and (v ~= 1) then
			args[ v - 1 ] = k
			displace = math.max( displace, (v - 1) )
		end
	end
	for v, k in pairs( frame:getParent().args ) do
		if type( v ) == "number" then
			args[ displace + v ] = k
		else
			args[v] = k
		end
	end
	for v, k in pairs( frame.args ) do
		if type( v ) ~= "number" then
			args[v] = k
		end
	end
	return frame:expandTemplate{ title = title, args = args }
end

export.append = function( frame )
	local title = frame.args[1]
	local args = {}
	local displace = 0;
	for v, k in pairs( frame:getParent().args ) do
		if type( v ) == "number" then
			displace = math.max( displace, v )
		end
		args[v] = k
	end
	for v, k in pairs( frame.args ) do
		if type( v ) == "number" then
			if v ~= 1 then
				args[ displace + v - 1 ] = k
			end
		else
			args[v] = k
		end
	end
	return frame:expandTemplate{ title = title, args = args }
end

export.drop = function( frame )
	local title = frame.args[1]
	local args = {}
	for v, k in pairs( frame:getParent().args ) do
		if type( v ) ~= "number" then
			args[v] = k
		end
	end
	for v, k in pairs( frame.args ) do
		if type( v ) == "number" then
			if v ~= 1 then
				args[ v - 1 ] = k
			end
		else
			args[v] = k
		end
	end
	return frame:expandTemplate{ title = title, args = args }
end

export.shiftLeft = function( frame )
	local title = frame.args[1]
	local args = {}
	local displace = tonumber( frame.args[2] )
	if displace == nil then displace = 0 end
	for v, k in pairs( frame:getParent().args ) do
		if type( v ) == "number" then
			if v &gt;= displace then
				args[ v - displace ] = k
			end
		else
			args[v] = k
		end
	end
	for v, k in pairs( frame.args ) do
		if type( v ) == "number" then
			if v &gt; 2 then
				args[ v - 2 ] = k
			end
		else
			args[v] = k
		end
	end
	return frame:expandTemplate{ title = title, args = args }
end

export.map = function( frame )
	local title = frame.args[1]
	local displace = frame.args[2]
	if displace == nil then
		displace = 0
	else
		displace = tonumber( displace )
	end
	local args = {}
	local data = {}
	local maxv = 0
	for v, k in pairs( frame:getParent().args ) do
		if (type( v ) ~= "number") then
			args[v] = k
		elseif v &lt;= displace then
			args[v + 1] = k
		else
			data[v] = k
			maxv = math.max( v, maxv )
		end
	end
	for v, k in pairs( frame.args ) do
		if type( v ) ~= "number" then
			args[v] = k
		elseif v &gt; 2 then
			args[v - 1] = k
		end
	end
	local result = ""
	for v = 1, maxv do
		if data[v] ~= nil then
			args[1] = data[v]
			result = result .. frame:expandTemplate{ title = title, args = args }
		end
	end
	return result
end

export.static = function( frame )
	return frame:getParent():getTitle()
end

local function tabulate( args )
	local s = ''
	for k, v in pairs( args ) do
		s = s .. '|-\n| ' .. k .. '\n| &lt;code&gt;' .. v .. '&lt;/code&gt;\n'
	end
	if s ~= '' then
		s = '{| class="wikitable"\n|-\n! key\n! value\n' .. s .. '|}'
	end
	return s
end

export.echo = function( frame )
	local mp = tabulate( frame.args )
	local cp = tabulate( frame:getParent().args )
	if mp ~= '' then
		mp = 'module parameters:\n' .. mp .. '\n'
	end
	if cp ~= '' then
		cp = 'context parameters:\n' .. cp .. '\n'
	else
		cp = 'no context parameters.\n'
	end
	return mp .. cp
end

return export</text>
      <sha1>n3blx1g9jcetmcolf1n2fiuhyaql9nh</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Wikilisp</title>
    <ns>828</ns>
    <id>377838</id>
    <revision>
      <id>3182515</id>
      <parentid>3182514</parentid>
      <timestamp>2017-02-14T18:13:35Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <minor/>
      <comment>1 revision imported from [[:n:Module:Wikilisp]]: update</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text bytes="47989" xml:space="preserve">local export = {}

local wikilispversion = "0.18 (February 14, 2017)"

--[[ some basic abstractions ]]

local function stype( x ) -- type of sexpr
	local t = type( x )
	if t == "table" then t = x.type end
	return t
end

local function seterr( x, ... )
	if type(x) ~= "table" then
		return seterr( {}, x, ... )
	else
		x.type = "error"
		x.msg = mw.ustring.format( ... )
		return x
	end
end

--[[ parse text to a sequence of sexprs ]]

local function tok3( ls, t )
	-- tokenize lua string t, with no string literals comments or parens;
	--   append to ls
	local p1,p2 = mw.ustring.find( t, "[^%s]+" )
	while p1 ~= nil do
		local t1 = mw.ustring.sub(t, p1, p2)
		local n1 = tonumber(t1)
		if n1 ~= nil then
			ls[1 + #ls] = n1
		elseif t1 == "true" then
			ls[1 + #ls] = true
		elseif t1 == "false" then
			ls[1 + #ls] = false
		else
			ls[1 + #ls] = {
				type = "symbol",
				name = t1
			}
		end
		t = mw.ustring.sub(t, (p2 + 1))
		p1,p2 = mw.ustring.find( t, "[^%s]+" )
	end
end

local function tok2( ls, t )
	-- tokenize lua string t, with no string literals or comments; append to ls
	local p1 = mw.ustring.find( t, "[()\\]" )
	while p1 ~= nil do
		tok3( ls, mw.ustring.sub(t, 1, (p1 - 1)) )
		ls[1 + #ls] = { type = mw.ustring.sub(t, p1, p1) }
		if ls[#ls].type == "\\" then
			ls[#ls].name = ls[#ls].type
			ls[#ls].type = "symbol"
		end
		t = mw.ustring.sub(t, (p1 + 1))
		p1 = mw.ustring.find( t, "[()\\]" )
	end
	tok3( ls, t )
end

local function tok1( ls, t )
	-- tokenize lua string t, thru first string literal or comment; append to ls
	-- if not finished, append untokenized remainder string and return true
	local p0 = mw.ustring.find( t, ';' )
	local p1 = mw.ustring.find( t, '"' )
	local p2 = mw.ustring.find( t, "'" )
	if (p0 ~= nil) and (((p1 == nil) or (p0 &lt; p1)) and
						((p2 == nil) or (p0 &lt; p2))) then
		tok2( ls, mw.ustring.sub( t, 1, (p0 - 1) ) )
		p1 = mw.ustring.find( t, '\n', (p0 + 1) )
		if p1 == nil then
			return false
		else
			ls[1 + #ls] = mw.ustring.sub( t, (p1 + 1) )
			return true
		end
	elseif (p1 ~= nil) and ((p2 == nil) or (p1 &lt; p2)) then
		p2 = p1 + 1
		while true do
			p2 = mw.ustring.find( t, '"', p2 )
			if p2 == nil then
				seterr(ls, 'mismatched string-literal delimiter (")')
				return false
			elseif (p2 &lt; mw.ustring.len( t )) and
				(mw.ustring.codepoint( t, (p2 + 1) ) == 34)
			then
				p2 = (p2 + 2)
			else
				tok2( ls, mw.ustring.sub( t, 1, (p1 - 1) ) )
				ls[1 + #ls] = mw.ustring.gsub(
					mw.ustring.sub( t, (p1 + 1), (p2 - 1) ),
					'""', '"')
				ls[1 + #ls] = mw.ustring.sub( t, (p2 + 1) )
				return true
			end
		end
	elseif p2 ~= nil then
		-- side benefit: precludes Lisp shorthand for "suppress eval"
		p1 = p2
		p2 = mw.ustring.find( t, "'", (p1 + 1) )
		if p2 == nil then
			seterr(ls, "mismatched string-literal delimiter (')")
			return false
		else
			tok2( ls, mw.ustring.sub( t, 1, (p1 - 1) ) )
			ls[1 + #ls] = mw.ustring.sub( t, (p1 + 1), (p2 - 1) )
			ls[1 + #ls] = mw.ustring.sub( t, (p2 + 1) )
			return true
		end
	else
		tok2( ls, t )
		return false
	end
end

local function parse_next( x1, p1, x2 )
	-- parse one sexpr from token list x1 position p1, append sexpr to p2
	-- return new value for p1
	if stype(x1[p1]) == ")" then
		seterr(x2, "unmatched right-paren")
		return 1 + #x1
	elseif stype(x1[p1]) ~= "(" then
		x2[1 + #x2] = x1[p1]
		return p1 + 1
	else
		p1 = p1 + 1
		local x3 = { type = "list" }
		x2[1 + #x2] = x3
		while p1 &lt;= #x1 do
			if stype(x1[p1]) == ")" then
				return p1 + 1
			end
			p1 = parse_next( x1, p1, x3 )
		end
		seterr(x2, "unmatched left-paren")
		return p1
	end
end

local function parse_sexpr( x1 )
	-- x1 is an error or a list of tokens
	if x1.type ~= "list" then
		return x1
	else
		local p1 = 1 --next item to read from x1
		local x2 = { type = "list" }
		while p1 &lt;= #x1 do
			p1 = parse_next( x1, p1, x2 )
		end
		return x2
	end
end

local function text_to_sexpr( t )
	local ls = { type = "list" }
	while tok1( ls, t ) do
		t = ls[#ls]
		ls[#ls] = nil
	end
	ls = parse_sexpr( ls )
	return ls
end

--[[ write/display a sexpr ]]

local function write_sexpr( x )
	if type(x) == "number" then
		return tostring( x )
	elseif type(x) == "string" then
		return mw.ustring.format('"%s"', mw.ustring.gsub( x, '"', '""' ))
	elseif type(x) == "boolean" then
		if x then return "true" else return "false" end
	elseif type(x) ~= "table" then
		return mw.ustring.format("&amp;lt;unrecognized internal type: %s&amp;gt;", type(x))
	elseif x.type == "symbol" then
		return x.name
	elseif x.type == "fn" then
		return mw.ustring.format("&amp;lt;%s&amp;gt;", write_sexpr( x.comb ))
	elseif x.type == "op" then
		if x.name ~= nil then
			return mw.ustring.format("[op: %s]", x.name)
		else
			return "[op]"
		end
	elseif x.type == "list" then
		local r = {}
		r[1] = "("
		for k = 1, #x do
			r[k+1] = write_sexpr( x[k] )
		end
		r[#r + 1] = ")"
		return table.concat(r, " ")
	elseif x.type == "error" then
		return mw.ustring.format("&amp;lt;error: %s&amp;gt;", x.msg)
	elseif x.type == "pattern" then
		return mw.ustring.format('&amp;lt;pattern: "%s"&amp;gt;', x.pat)
	elseif x.type ~= nil then
		return mw.ustring.format("&amp;lt;unrecognized type: %s&amp;gt;", x.type)
	else
		return "&amp;lt;missing type&amp;gt;"
	end
end

local function display_sexpr( x )
	if stype(x) == "string" then
		return x
	else
		return write_sexpr( x )
	end
end

--[[ evaluation tools ]]

local maxdepth = 4 -- maximum call-nesting depth

local combine

local function eval( x, env, depth )
	if type(x) ~= "table" then -- literal
		return x
	elseif x.type == "symbol" then
		local v = env[x.name]
		if v == nil then
			return seterr("undefined symbol: %s", x.name)
		else
			return v
		end
	elseif x.type ~= "list" then -- literal
		return x
	elseif #x == 0 then -- empty list
		return x
	else -- combination
		local c = eval( x[1], env, depth )
		if stype(c) == "error" then return c end
		local ls = { type = "list" }
		for k = 2, #x do
			ls[k - 1] = x[k]
		end
		return combine( c, ls, env, depth )
	end
end

combine = function( c, ls, env, depth )
	while stype(c) == "fn" do
		local ls2 = { type = "list" }
		for k = 1, #ls do
			ls2[k] = eval( ls[k], env, depth )
			if stype(ls2[k]) == "error" then return ls2[k] end
		end
		c = c.comb
		ls = ls2
	end
	if stype(c) ~= "op" then
		return seterr("called object is not a combiner: %s", write_sexpr(c))
	elseif (c.shallow ~= nil) then
		return c.op(ls, env, depth)
	elseif (depth == nil) or (depth &lt; 1) then
		if maxdepth &gt; 1 then
			return seterr(
				"exceeded maximum call-nesting depth (%i)",
				maxdepth)
		else
			return seterr("exceeded maximum call-nesting depth")
		end
	else
		return c.op(ls, env, (depth - 1))
	end
end

local function eval_seq( ls, env, depth )
	-- ls must be an error or a list
	if ls.type == "error" then return ls end
	if #ls == 0 then return ls end
	for k = 1, (#ls - 1) do
		local x = eval( ls[k], env, depth )
		if stype(x) == "error" then return x end
	end
	return eval( ls[#ls], env, depth )
end

local function eval_all( ls, env, depth, cutoff )
	-- ls must be an error or a list
	if ls.type == "error" then return ls end
	local ls2 = { type="list" }
	for k = 1, #ls do
		ls2[k] = eval( ls[k], env, depth )
		if stype(ls2[k]) == "error" then return ls2[k] end
		if (cutoff ~= nil) and cutoff(ls2[k]) then return ls2 end
	end
	return ls2
end

local function combine_all( ops, args, env, depth, cutoff )
	-- ops must be a list; args must be an error or a list
	if args.type == "error" then return args end
	local ls2 = { type="list" }
	for k = 1, #ops do
		ls2[k] = combine( ops[k], args, env, depth )
		if stype(ls2[k]) == "error" then return ls2[k] end
		if (cutoff ~= nil) and cutoff(ls2[k]) then return ls2 end
	end
	return ls2
end

--[[ generic combiner constructors ]]

local function make_op( f, nm, sh )
	return {
		type = "op",
		op = f,
		name = nm,
		shallow = sh
	}
end

local function checktype( t, o, k ) -- types list, operands list, index
	if #t == 0 then return "" end
	o = o[k] -- particular operand
	if k &gt; #t then k = #t end
	t = t[k] -- particular type
	-- t should now be a string or internal function
	if type(t) == "string" then
		if stype(o) == t then t = "" end -- clear if no error
	else
		t = t(o) -- assume internal function works correctly
	end
	-- t should now be type name if error, empty string if okay
	return t
end

local function type_err( cname, tname, x )
	-- combiner name, type name(s), operand
	-- type name may be a string or an array of strings
	local where = ""
	if cname ~= nil then where = " to [op: " .. cname .. "]" end
	if type(tname) == "table" then
		if #tname == 0 then tname = "[unknown]"
		else
			for k = 1, #tname do
				while tname[k] == "" do
					for j = (k + 1), #tname do tname[j - 1] = tname[j] end
					tname[#tname] = nil
				end
				if tname[k] ~= nil then
					for j = (k + 1), #tname do
						if tname[k] == tname[j] then tname[j] = "" end
					end
				end
			end
			if #tname == 1 then tname = tname[1]
			else
				tname[#tname] = "or " .. tname[#tname]
				if #tname == 2
				then tname = table.concat( tname, " " )
				else tname = table.concat( tname, ", " )
				end
			end
		end
	end
	local what = write_sexpr(x)
	if #what &gt; 64 then what = stype(x) end
	return seterr(
		"bad operand%s: expected %s, got %s", where, tname, what)
end

local function typed_op( ... )
	-- alternating type (string or function) and op (table or function)
	-- strong recommendation: first op should be a table
	local ls0 = { ... }
	local n0 = select( '#', ... )
	local opname, shallow
	if type(ls0[2]) == "table" then
		opname = ls0[2].name
		shallow = ls0[2].shallow
	end
	local f = function(ls, env, depth)
		if #ls == 0 then
			local op = ls0[2]
			if type(op) == "table" then op = op.op end
			return op( ls, env, depth )
		end
		local ek = 1 -- operand number of accumulated error type names
		local enames = {} -- list of failed types for ls[ek]
		for j = 1, n0, 2 do
			local types = ls0[j]
			local op = ls0[j + 1]
			if type(op) == "table" then op = op.op end
			local t = ""
			for k = 1, #ls do
				if #t == 0 then
					t = checktype( types, ls, k )
					if #t &gt; 0 then
						if k &gt; ek then
							ek = k
							enames = { t }
						elseif k == ek then
							enames[1 + #enames] = t
						end
					end
				end
			end
			if #t == 0 then return op( ls, env, depth ) end
		end
		return type_err( opname, enames, ls[ek] )
	end
	return make_op( f, opname, shallow )
end

local function nary_op( c, n, m )
	local f = function(ls, env, depth)
		if n &lt; 0 then
			if #ls &lt; -n then
				local where = ""
				if c.name ~= nil then where = " to [op: " .. c.name .. "]" end
				return seterr(
					"too few operands%s: expected at least %i, got %i",
					where, -n, #ls)
			end
		elseif m == nil then
			if #ls ~= n then
				local where = ""
				if c.name ~= nil then where = " to [op: " .. c.name .. "]" end
				return seterr(
					"wrong number of operands%s: expected %i, got %i",
					where, n, #ls)
			end
		else
			if #ls &lt; n then
				local where = ""
				if c.name ~= nil then where = " to [op: " .. c.name .. "]" end
				return seterr(
					"too few operands%s: expected at least %i, got %i",
					where, n, #ls)
			elseif #ls &gt; m then
				local where = ""
				if c.name ~= nil then where = " to [op: " .. c.name .. "]" end
				return seterr(
					"too many operands%s: expected at most %i, got %i",
					where, m, #ls)
			end
		end
		return c.op( ls, env, depth )
	end
	return make_op( f, c.name, c.shallow )
end

local function binary_pred( test, nm )
	return make_op(function (ls)
			for k = 2, #ls do
				if not test(ls[k - 1], ls[k]) then
					return false
				end
			end
			return true
		end, nm, true)
end

local function unary_pred( test, nm )
	return make_op(function (ls)
			for k = 1, #ls do
				if not test(ls[k]) then
					return false
				end
			end
			return true
		end, nm, true)
end

local function wrap( c )
	return {
		type = "fn",
		comb = c
	}
end

--[[ wiki parsing stuff
	entry:  (char-code  (first-pos  last-pos  left-index))
	        (descriptor  (first-pos  last-pos  left-index)  entry  entry  ...)
	item entries contain part entries, part entries contain item entries
	left-index is removed at end of parse
]]

local lsquare,rsquare, lcurly,rcurly, pipe = 91,93, 123,125, 124

local function wikileft(e) -- is entry a left-delimiter?
	return ((e[1] == lsquare) or (e[1] == lcurly)) and (e[2][1] ~= e[2][2])
end

local function wikilen(e) -- how long is this entry?
	return 1 + e[2][2] - e[2][1]
end

local function wikisub( m, d ) -- parse, descriptor
	local k2 = #m          -- index of right delimiter
	local k1 = m[k2][2][3] -- index of left delimiter
	local p = { type = "list", "part", { type = "list" } } -- first part
	p[2][1] = (m[k1][2][2] + 1) -- start of first part
	local e = { -- entry containing parts
		type = "list",
		d,
		{ type = "list",
		  (m[k1][2][2] - (m[k2][2][2] - m[k2][2][1])),
		  m[k2][2][2],
		  k1
		},
		p
	}
	for k = (k1 + 1), (k2 - 1) do
		if type(m[k][1]) ~= "number" then
			m[k][2][3] = nil
			p[1 + #p] = m[k]
		elseif m[k][1] == pipe then
			p[2][2] = (m[k][2][1] - 1) -- end of current part
			p = { type = "list", "part", { type = "list" } } -- next part
			p[2][1] = (m[k][2][2] + 1) -- start of this part
			e[1 + #e] = p -- add to list of parts
		end
		m[k] = nil
	end
	p[2][2] = (m[k2][2][1] - 1) -- end of last part
	m[k2] = nil
	m[k1][2][2] = (e[2][1] - 1)
	if (m[k1][2][1] &gt; m[k1][2][2]) then
		e[2][3] = m[k1][2][3]
		m[k1] = nil
	end
	m[1 + #m] = e
end

local function parse_wiki( ls )
	local s = ls[1]                             -- string to parse
	local m = { type = "list" }                 -- result of parse
	local k = mw.ustring.find( s, "[%[%]{}|]" ) -- position in string
	while k ~= nil do
		local c = mw.ustring.codepoint(s,k)
		if #m == 0 then
			if (c == lsquare) or (c == lcurly) then
				m[1] = {type="list", c, {type="list", k, k, 0}}
			end
		elseif (k == (m[#m][2][2] + 1)) and (c == m[#m][1]) and (c ~= pipe) then
			m[#m][2][2] = k
			if m[#m][2][3] &gt; 0 then
				local e2 = m[#m]
				local e1 = m[e2[2][3]]
				if (e2[1] == rcurly) and (e1[1] == lcurly) and
					(wikilen(e2) == 3) and (wikilen(e1) &gt; 2)
				then
					wikisub( m, "param" )
				elseif (e2[1] == rsquare) and (e1[1] == lsquare) and
					(wikilen(e2) == 2) and (wikilen(e1) &gt; 1)
				then
					wikisub( m, "link" )
				end
			end
		else
			if m[#m][2][3] &gt; 0 then
				local e2 = m[#m]
				local e1 = m[e2[2][3]]
				if (e2[1] == rcurly) and (e1[1] == lcurly) and
					(wikilen(e2) == 2) and (wikilen(e1) &gt; 1)
				then
					wikisub( m, "call" )
				end
			end
			m[1 + #m] = {type="list", c, {type="list", k, k}}
			if wikileft(m[#m - 1]) then
				m[#m][2][3] = (#m - 1)
			else
				m[#m][2][3] = m[#m - 1][2][3]
			end
		end
		k = mw.ustring.find( s, "[%[%]{}|]", (k + 1) )
	end
	if #m == 0 then return m end
	if m[#m][2][3] &gt; 0 then
		local e2 = m[#m]
		local e1 = m[e2[2][3]]
		if (e2[1] == rcurly) and (e1[1] == lcurly) and
			(wikilen(e2) == 2) and (wikilen(e1) &gt; 1)
		then
			wikisub( m, "call" )
		end
	end
	local m2 = { type = "list" }
	for j = 1, #m do
		if type(m[j][1]) ~= "number" then
			m[j][2][3] = nil
			m2[1 + #m2] = m[j]
		end
	end
	return m2
end

--[[ miscellaneous ]]

local function int_tc(x)
	if (type(x) ~= "number") or (x ~= math.floor(x)) then
		return "integer"
	else
		return ""
	end
end

local function posint_tc(x)
	if (type(x) ~= "number") or (x ~= math.floor(x)) or (x &lt; 1) then
		return "positive integer"
	else
		return ""
	end
end

local function logical_and( ls ) -- for and?
	for k = 1, #ls do
		if stype(ls[k]) ~= "boolean" then
			return seterr(
				"bad operand to [op: and?]: expected boolean, got %s",
				write_sexpr(ls[k]))
		end
	end
	for k = 1, #ls do if not ls[k] then return false end end
	return true
end

local function logical_or( ls ) -- for or?
	for k = 1, #ls do
		if stype(ls[k]) ~= "boolean" then
			return seterr(
				"bad operand to [op: or?]: expected boolean, got %s",
				write_sexpr(ls[k]))
		end
	end
	for k = 1, #ls do if ls[k] then return true end end
	return false
end

local function and_fn(ls, env, depth)
	ls = eval_all( ls, env, depth,
		function (x)
			return (stype(x) == "boolean") and not x
		end)
	if stype(ls) == "error" then return ls end
	if (#ls == 0) or (stype(ls[1]) == "boolean") then
		return logical_and(ls)
	end
	local ops = { type="list" }
	for k = 1, #ls do
		if stype(ls[k]) == "fn" then ops[k] = ls[k].comb
		elseif stype(ls[k]) == "op" then ops[k] = ls[k]
		elseif k == 1 then
			return seterr(
				"bad operand to [op: and?]: expected boolean or combiner, got %s",
				write_sexpr(ls[k]))
		else
			return seterr(
				"bad operand to [op: and?]: expected combiner, got %s",
				write_sexpr(ls[k]))
		end
	end
	return wrap(make_op(function (ls, env, depth)
			ls = combine_all(ops, ls, env, depth,
				function (x)
					return (stype(x) ~= "boolean") or not x
				end)
			if ls.type == "error" then return ls end
			return logical_and(ls)
		end, "and?", true))
end

local function or_fn(ls, env, depth)
	ls = eval_all(ls, env, depth,
		function (x)
			return (stype(x) == "boolean") and x
		end)
	if stype(ls) == "error" then return ls end
	if (#ls == 0) or (stype(ls[1]) == "boolean") then
		return logical_or(ls)
	end
	local ops = { type="list" }
	for k = 1, #ls do
		if stype(ls[k]) == "fn" then ops[k] = ls[k].comb
		elseif stype(ls[k]) == "op" then ops[k] = ls[k]
		elseif k == 1 then
			return seterr(
				"bad operand to [op: or?]: expected boolean or combiner, got %s",
				write_sexpr(ls[k]))
		else
			return seterr(
				"bad operand to [op: or?]: expected combiner, got %s",
				write_sexpr(ls[k]))
		end
	end
	return wrap(make_op(function (ls, env, depth)
			ls = combine_all(ops, ls, env, depth,
				function (x)
					return (stype(x) ~= "boolean") or x
				end)
			if ls.type == "error" then return ls end
			return logical_or(ls)
		end, "or?", true))
end

local function valid_parmlist( ls ) -- for \
	if stype(ls) ~= "list" then return false end
	for k = 1, #ls do
		if stype(ls[k]) ~= "symbol" then return false end
	end
	return true
end

local function match_parmlist( parms, ls ) -- for \
	local env = {}
	for k = 1, #parms do env[parms[k].name] = ls[k] end
	return env
end

local function lambda_fn(ls, senv)
	local parms = ls[1]
	if stype(parms) == "symbol" then
		parms = { type="list", parms }
	elseif not valid_parmlist(parms) then
		return seterr(
			"bad parameter-list operand to [op: \\]: %s",
			write_sexpr(parms))
	end
	local body = { type = "list" }
	for k = 2, #ls do body[k - 1] = ls[k] end
	return wrap(nary_op(make_op(function (ls, denv, depth)
		-- denv is ignored
		local env = match_parmlist( parms, ls )
		setmetatable(env, { __index = senv })
		return eval_seq(body, env, depth)
	end), #parms))
end

local relevantFrame = mw.getCurrentFrame()

local function getarg_fn(ls)
	local args = relevantFrame.args
	local t = nil
	if stype(ls[1]) == "number" then
		t = ls[1]
	else -- must be number or string
		t = ls[1]
	end
	t = args[t]
	if t == nil then return { type = "list" } end
	return t
end

local function getargexpr_fn(ls)
	local args = relevantFrame.args
	local t = nil
	if stype(ls[1]) == "number" then
		t = ls[1]
	else -- must be number or string
		t = ls[1]
	end
	t = args[t]
	if t == nil then return { type = "list" } end
	t = text_to_sexpr(t)
	if stype(t) == "error" then return { type = "list" } end
	if #t ~= 1 then return { type = "list" } end
	return t[1]
end

local function filter_fn(ls, env, depth)
	local preds = { type = "list" }
	for k = 2, #ls do preds[k - 1] = ls[k].comb end -- predicates
	local function hof(ls, n, f, app)
		-- copy first n elements of ls, apply f to later elements
		-- if app, instead skip first n, and return result,app
		if app == nil then app = false end
		local ls2 = { type = "list" }
		if #ls &lt;= n then
			if app then return ls2,app else return ls end
		end
		if not app then for k = 1, n do ls2[k] = ls[k] end end
		for k = (n + 1), #ls do
			local x,app2 = f(ls[k])
			if stype(x) == "error" then return x end
			if app2 == nil then app2 = false end
			if app2 then
				for j = 1, #x do ls2[1 + #ls2] = x[j] end
			else
				ls2[1 + #ls2] = x
			end
		end
		return ls2,app
	end
	local function filter_entry(entry)
		local b = combine_all(preds, {type="list", entry}, env, depth,
			function (x)
				return (stype(x) ~= "boolean") or not x
			end)
		if stype(b) == "error" then return b end
		b = logical_and(b)
		if stype(b) == "error" then return b end
		if b then
			if stype(entry) == "list" then
				return hof(entry, 2, function (part)
						return hof(part, 2, filter_entry)
					end)
			else
				return entry
			end
		else
			if stype(entry) == "list" then
				return hof(entry, 2, function (part)
						return hof(part, 2, filter_entry, true)
					end, true)
			else
				return { type = "list" }, true
			end
		end
	end
	return hof(ls[1], 0, filter_entry)
end

local function item_tc(x)
	if (stype(x) == "list") and (#x &gt; 1) and
		(stype(x[1]) == "string") and (x[1] ~= "part") and
		(stype(x[2]) == "list") and (#x[2] == 2) and
		(int_tc(x[2][1]) == "") and (int_tc(x[2][2]) == "")
	then
		return ""
	else
		return "item"
	end
end

local function part_tc(x)
	if (stype(x) == "list") and (#x &gt; 1) and (x[1] == "part") and
		(stype(x[2]) == "list") and (#x[2] == 2) and
		(int_tc(x[2][1]) == "") and (int_tc(x[2][2]) == "")
	then
		return ""
	else
		return "part"
	end
end

local function cd_tc(x)
	if (stype(x) == "list") and (#x &gt; 0) then
		if stype(x[1]) == "string" then x = x[2] end
		if (x ~= nil) and (stype(x) == "list") and (#x == 2) and
			(int_tc(x[1]) == "") and (int_tc(x[2]) == "")
		then
			return ""
		end
	end
	return "coordinates descriptor"
end

local function cd_ls_tc(x)
	local ok = true
	if stype(x) ~= "list" then ok = false
	else for k = 1, #x do if cd_tc(x[k]) ~= "" then ok = false end end
	end
	if ok then return ""
	else return "list of coordinates descriptors"
	end
end

local function getsubstr_ntv(s, k1, k2) -- k1, k2 ints if provided
	if k1 == nil then return s end
	if k1 &lt; 1 then k1 = 1 end
	if k2 ~= nil then
		if k2 &gt;= mw.ustring.len(s) then k2 = nil end
	end
	return mw.ustring.sub( s, k1, k2 )
end

local function cd_norm(x) -- assumes cd_tc
	if stype(x[1]) == "number" then return x else return x[2] end
end

local function getsubstr_int_fn(ls)
	local s = ls[1]
	return getsubstr_ntv(s, ls[2], ls[3])
end

local function getsubstr_cd_fn(ls)
	local s = ls[1]
	local c = cd_norm(ls[2])
	return getsubstr_ntv(s, c[1], c[2])
end

local function getsubstr_ls_fn(ls)
	local s = ls[1]
	local r = { type = "list" }
	for k = 1, #ls[2] do
		r[k] = cd_norm(ls[2][k])
	end
	for k = 1, #r do r[k] = getsubstr_ntv(s, r[k][1], r[k][2]) end
	return r
end

local function setsubstr_ls(s, lsc, lss)
	-- string, array of cds, array of strings
	local n = math.min(#lsc, #lss) -- just ignore extras of either
	if n == 0 then return s end
	local function berr(...)
		return seterr("bounds violation in [op: set-substring]: %s",
			mw.ustring.format( ... ))
	end
	if lsc[1][1] &lt; 1 then
		return berr("segment starts left of string start (%i)", lsc[1][1])
	end
	if lsc[n][2] &gt; mw.ustring.len(s) then
		return berr("segment ends right of string end (%i, %i)",
			lsc[n][2], mw.ustring.len(s))
	end
	local r = {}
	for k = 1, n do
		if lsc[k][1] &gt; (lsc[k][2] + 1) then
			return berr("segment starts right of its own end (%i, %i)",
				lsc[k][1], lsc[k][2])
		end
		r[2 * k] = lss[k]
	end
	r[1] = mw.ustring.sub(s, 1, (lsc[1][1] - 1))
	r[1 + (2 * n)] = mw.ustring.sub(s, (lsc[n][2] + 1))
	for k = 2, n do
		if lsc[k - 1][2] &gt;= lsc[k][1] then
			return berr("segment ends right of next segment start (%i, %i)",
				lsc[k - 1][2], lsc[k][1])
		end
		r[(2 * k) - 1] = mw.ustring.sub(s,
			(lsc[k - 1][2] + 1),
			(lsc[k][1] - 1))
	end
	return table.concat(r)
end

local function str_ls_tc(x)
	local ok = true
	if stype(x) ~= "list" then ok = false
	else for k = 1, #x do if stype(x[k]) ~= "string" then ok = false end end
	end
	if ok then return ""
	else return "list of strings"
	end
end

local function getsublist_fn(ls)
	local n1 = ls[2]
	local n2 = ls[3]
	local ls = ls[1]
	local x = { type = "list" }
	if n1 &lt; 1 then n1 = 1 end
	if n2 == nil then n2 = #ls elseif n2 &gt; #ls then ns = #ls end
	for k = n1, n2 do x[1 + #x] = ls[k] end
	return x
end

local function setsublist_fn(ls)
	local base = ls[1]
	local n1 = ls[2] - 1
	local n2 = ls[3] + 1
	local seg = ls[4]
	if n1 &lt; 0 then n1 = 0 end
	if n2 &lt;= n1 then n2 = n1 + 1 end
	local r = { type = "list" }
	for k = 1, n1 do r[k] = base[k] end
	for k = 1, #seg do r[1 + #r] = seg[k] end
	for k = n2, #base do r[1 + #r] = base[k] end
	return r
end

local function findprd_fn(ls, env, depth)
	local x = ls[1]
	local p = ls[2].comb
	local x2 = { type = "list" }
	for k = 1, #x do
		local q = combine( p, { type="list", x[k] }, env, depth )
		if stype(q) == "error" then return q end
		if stype(q) ~= "boolean" then
			return seterr(
				"bad predicate result type to [op: find]: got %s",
				stype(q))
		end
		if q then x2[1 + #x2] = k end
	end
	return x2
end

local function findstr_fn(ls)
	local s = ls[1]
	local p = ls[2]
	local x2 = { type = "list" }
	if #p == 0 then return x2 end
	local k = 1
	repeat
		local x3 = { mw.ustring.find( s, p, k, true ) }
		if #x3 == 0 then return x2 end
		x2[1 + #x2] = { type = "list", x3[1], x3[2] }
		k = 1 + x3[2]
	until false
end

local function findpat_fn(ls)
	local s = ls[1]
	local p = ls[2].pat
	local x2 = { type = "list" }
	local k = 1
	repeat
		local x3 = { mw.ustring.find( s, p, k ) }
		if #x3 == 0 then return x2 end
		x2[1 + #x2] = { type = "list", x3[1], x3[2] }
		k = 1 + x3[2]
	until false
end

local function any_tc(x) return "" end
local function none_tc(x) return "no operand here" end

local function member_fn(ls) -- 1 or 2 operands, second must be a list
	local t = write_sexpr(ls[1])
	if ls[2] ~= nil then
		ls = ls[2]
		for k = 1, #ls do
			if write_sexpr(ls[k]) == t then return true end
		end
		return false
	else
		return wrap(nary_op(typed_op({ "list" }, make_op(function(ls)
			ls = ls[1]
			for k = 1, #ls do
				if write_sexpr(ls[k]) == t then return true end
			end
			return false
		end, nil, true)), 1))
	end
end

local lang = mw.language.getContentLanguage()

local function let_tc(x)
	if (stype(x) == "list") and (#x == 2) and (stype(x[1]) == "symbol")
	then return ""
	else return "symbol-value binding"
	end
end

local function sorp_tc(x)
	if (stype(x) == "string") or (stype(x) == "pattern")
	then return ""
	else return "string or pattern"
	end
end

local function split_tc(x)
	if (stype(x) == "list") and (#x &gt;= 1) and (sorp_tc(x[1]) == "") and
		((#x == 1) or
		 ((#x == 2) and ((sorp_tc(x[2]) == "") or (split_tc(x[2]) == ""))) or
		 ((#x == 3) and (sorp_tc(x[2]) == "") and (split_tc(x[3]) == "")))
	then
		return ""
	else
		return "valid string-split descriptor"
	end
end

local function strnest_tc(x)
	if stype(x) == "string" then return ""
	elseif stype(x) == "list" then
		for k = 1, #x do
			local msg = strnest_tc(x[k])
			if msg ~= "" then return msg end
		end
		return ""
	end
	return "string or tree of strings"
end

local function splitsep_fn(s, p)
	local x
	if (stype(p) == "string")
	then x = mw.text.split( s, p, true )
	else x = mw.text.split( s, p.pat )
	end
	x.type = "list"
	return x
end

local function splitdelim_fn(s, lt, rt)
	local lp = (stype(lt) == "string")
	local rp = (stype(rt) == "string")
	if not lp then lt = lt.pat end
	if not rp then rt = rt.pat end
	local snarf -- find next unmatched right-delimiter
	snarf = function (k)
		repeat
			local xl = { mw.ustring.find( s, lt, k, lp ) }
			local xr = { mw.ustring.find( s, rt, k, rp ) }
			if #xr == 0 then return xr end
			if #xl == 0 then return xr end
			if xr[1] &lt;= xl[1] then return xr end
			xr = snarf(xl[2] + 1)
			if #xr == 0 then return xr end
			k = (xr[2] + 1)
		until false
	end
	local results = { type = "list" }
	local k = 1 -- leftmost character of interest
	repeat
		local xl = { mw.ustring.find( s, lt, k, lp ) }
		if #xl == 0 then return results end
		k = xl[2] + 1
		local xr = snarf(k)
		if #xr &gt; 0 then
			results[1 + #results] = mw.ustring.sub( s, k, (xr[1] - 1) )
			k = xr[2] + 1
		end
	until false
end

local function splitrec_fn(s, rc)
	local ls
	if (#rc &gt; 1) and (stype(rc[2]) ~= "list") then
		ls = splitdelim_fn(s, rc[1], rc[2])
	else
		ls = splitsep_fn(s, rc[1])
	end
	ls.type = "list"
	rc = rc[#rc]
	if (stype(rc) == "list") then
		for k = 1, #ls do
			ls[k] = splitrec_fn(ls[k], rc)
		end
	end
	return ls
end

local function splitnest_fn(s, rc)
	if stype(s) == "string" then return splitrec_fn(s, rc) end
	local result = { type="list" }
	for k = 1, #s do
		result[k] = splitnest_fn(s[k], rc)
		if stype(result[k]) == "error" then return result[k] end
	end
	return result
end

local function split_fn(ls)
	local rc = { type = "list" }
	for k = 2, #ls do rc[k - 1] = ls[k] end
	return splitnest_fn(ls[1], rc)
end

local function join_tc(x)
	if (stype(x) == "list") and (#x &gt;= 1) and (stype(x[1]) == "string") and
		((#x == 1) or
		 ((#x == 2) and ((stype(x[2]) == "string") or (join_tc(x[2]) == ""))) or
		 ((#x == 3) and (stype(x[2]) == "string") and (join_tc(x[3]) == "")))
	then
		return ""
	else
		return "valid string-join descriptor"
	end
end

local function neststr_tc(x)
	if stype(x) == "list" then
		for k = 1, #x do
			if stype(x[k]) ~= "string" then
				local msg = neststr_tc(x[k])
				if msg ~= "" then return msg end
			end
		end
		return ""
	end
	return "tree of strings"
end

local function joinsep_fn(t, s)
	if #t == 0 then return "" end
	if stype(t[1]) == "string" then
		for k = 2, #t do if stype(t[k]) ~= "string" then
			return seterr("bad target for [op: join]: uneven tree depth")
		end end
		return table.concat( t, s )
	end
	for k = 2, #t do if stype(t[k]) == "string" then
		return seterr("bad target for [op: join]: uneven tree depth")
	end end
	local result = { type = "list" }
	for k = 1, #t do
		result[k] = joinsep_fn(t[k], s)
		if stype(result[k]) == "error" then return result[k] end
	end
	return result
end

local function joindelim_fn(t, lf, rg)
	if #t == 0 then return "" end
	if stype(t[1]) == "string" then
		for k = 2, #t do if stype(t[k]) ~= "string" then
			return seterr("bad target for [op: join]: uneven tree depth")
		end end
		return lf .. table.concat( t, (rg .. lf) ) .. rg
	end
	for k = 2, #t do if stype(t[k]) == "string" then
		return seterr("bad target for [op: join]: uneven tree depth")
	end end
	local result = { type = "list" }
	for k = 1, #t do
		result[k] = joindelim_fn(t[k], lf, rg)
		if stype(result[k]) == "error" then return result[k] end
	end
	return result
end

local function joinnest_fn(t, rc)
	if stype(t) == "error" then return t end
	if stype(t) == "string" then
		return seterr("bad target for [op: join]: tree not deep enough")
	end
	if #rc == 1 then
		return joinsep_fn(t, rc[1])
	elseif #rc == 3 then
		return joinnest_fn(joindelim_fn(t, rc[1], rc[2]), rc[3])
	elseif stype(rc[2]) == "string" then
		return joindelim_fn(t, rc[1], rc[2])
	else
		return joinnest_fn(joinsep_fn(t, rc[1]), rc[2])
	end
end

local function join_fn(ls)
	local rc = { type = "list" }
	for k = 2, #ls do rc[k - 1] = ls[k] end
	return joinnest_fn(ls[1], rc)
end

local function xformer_fn(pred, basis, succ, n)
	return wrap(nary_op(typed_op({ "fn", "fn", any_tc },
		make_op(function (ls, denv, depth)
			local leaf = ls[1]
			local parent = ls[2]
			local data = ls[3]
			local function xform(basis, data)
				local recurse = false
				if stype(data) == "list" then
					if stype(pred) ~= "fn" then
						recurse = true
					else
						recurse = combine( pred.comb, { type="list", data }, env, depth )
						if stype(recurse) ~= "boolean" then
							if stype(recurse) == "error" then return recurse end
							return seterr(
								"bad predicate result type to [op transform]: %s",
								stype(recurse))
						end
					end
				end
				local comb
				if recurse then
					local b2
					if stype(succ) == "fn"
					then b2 = combine( succ.comb, { type="list", basis }, env, depth )
					else b2 = basis
					end
					local d2 = { type="list" }
					for k = 1, #data do
						if k &lt;= n then
							d2[k] = data[k]
						else
							d2[k] = xform(b2, data[k])
							if stype(d2[k]) == "error" then return d2[k] end
						end
					end
					data = d2
					comb = parent.comb
				else
					comb = leaf.comb
				end
				if stype(succ) == "fn"
				then data = { type="list", basis, data }
				else data = { type="list",        data }
				end
				return combine( comb, data, env, depth )
			end
			return xform(basis, data)
		end, "transform", true)), 3))
end

--[[ standard environment ]]

local ground_env = {
	list = wrap(make_op(function (ls) return ls end, "list", true)),
	["+"] = wrap(typed_op(
		{ "number" }, make_op(function (ls)
			local sum = 0
			for k = 1, #ls do sum = sum + ls[k] end
			return sum
		end, "add", true),
		{ "string" }, function (ls)
			local s = {}
			for k = 1, #ls do s[k] = ls[k] end
			return table.concat(s)
		end,
		{ "boolean" }, function (ls)
			local sum = true
			for k = 1, #ls do sum = sum and ls[k] end
			return sum
		end,
		{ "list" }, function (ls)
			local x = { type = "list" }
			for j = 1, #ls do
				for k = 1, #ls[j] do
					x[1 + #x] = ls[j][k]
				end
			end
			return x
		end)),
	["*"] = wrap(typed_op({ "number" }, make_op(function (ls)
			local product = 1
			for k = 1, #ls do product = product * ls[k] end
			return product
		end, "multiply", true))),
	["-"] = wrap(nary_op(typed_op({ "number" }, make_op(function (ls)
			local result = ls[1]
			for k = 2, #ls do result = result - ls[k] end
			return result
		end, "subtract", true)), -2)),
	["/"] = wrap(nary_op(typed_op({ "number" }, make_op(function (ls)
			local result = ls[1]
			for k = 2, #ls do result = result / ls[k] end
			return result
		end, "divide", true)), -2)),
	["^"] = wrap(nary_op(typed_op({ "number" }, make_op(function  (ls)
			return ls[1] ^ ls[2]
		end, "exponentiation", true)), 2)),
	["\\"] = nary_op(make_op(lambda_fn, "\\", true), -1),
	abs = wrap(nary_op(typed_op({ "number" }, make_op(function (ls)
			return math.abs(ls[1])
		end, "abs", true)), 1)),
	anchorencode = wrap(nary_op(typed_op(
		{ "string" }, make_op(function (ls)
			return mw.uri.anchorEncode( ls[1] )
		end, "anchorencode", true)), 1)),
	["and?"] = make_op(and_fn, "and?", true),
	apply = wrap(nary_op(typed_op(
		{ "fn", "list" }, make_op(function (ls, env, depth)
			return combine(ls[1].comb, ls[2], env, depth)
		end, "apply", "true")), 2)),
	["boolean?"] = wrap(unary_pred(function (x)
			return stype(x) == "boolean"
		end, "boolean?")),
	["call?"] = wrap(unary_pred(function (x)
			return (stype(x) == "list") and (#x &gt; 0) and
				(stype(x[1]) == "string") and (x[1] == "call")
		end, "call?")),
	canonicalurl = wrap(nary_op(typed_op(
		{ "string" }, make_op(function (ls)
			if #ls == 1
			then return tostring( mw.uri.canonicalUrl( ls[1] ) )
			else return tostring( mw.uri.canonicalUrl( ls[1], ls[2] ) )
			end
		end, "canonicalurl", true)), 1, 2)),
	ceil = wrap(nary_op(typed_op({ "number" }, make_op(function (ls)
			return math.ceil(ls[1])
		end, "ceil", true)), 1)),
	define = nary_op(make_op(function (ls, env, depth)
			if stype(ls[1]) ~= "symbol" then
				return seterr(
					"bad definiend to [op: define]: expected symbol, got %s",
					write_sexpr(ls[1]))
			end
			local x = eval(ls[2], env, depth)
			if stype(x) == "error" then return x end
			env[ls[1].name] = x
			while stype(x) == "fn" do x = x.comb end
			if stype(x) == "op" and x.name == nil then x.name = ls[1].name end
			return { type = "list" }
		end, "define", true), 2),
	["equal?"] = wrap(make_op(function (ls)
			if #ls &gt;= 2 then
				local t = write_sexpr(ls[1])
				for k = 2, #ls do
					if write_sexpr(ls[k]) ~= t then
						return false
					end
				end
			end
			return true
		end, "equal?", true)),
	filter = wrap(nary_op(typed_op({ "list", "fn" }, make_op(filter_fn,
		"filter", true)), -1)),
	find = wrap(nary_op(typed_op(
		{ "list", "fn" }, make_op(findprd_fn, "find", true),
		{ "string", "string" }, findstr_fn,
		{ "string", "pattern" }, findpat_fn
		), 2)),
	floor = wrap(nary_op(typed_op({ "number" }, make_op(function (ls)
			return math.floor(ls[1])
		end, "floor", true)), 1)),
	["fn?"] = wrap(unary_pred(function (x)
			return stype(x) == "fn"
		end, "fn?")),
	fullurl = wrap(nary_op(typed_op(
		{ "string" }, make_op(function (ls)
			if #ls == 1
			then return tostring( mw.uri.fullUrl( ls[1] ) )
			else return tostring( mw.uri.fullUrl( ls[1], ls[2] ) )
			end
		end, "fullurl", true)), 1, 2)),
	["ge?"] = wrap(typed_op(
		{ "number" }, binary_pred(function (x1, x2) return x1 &gt;= x2 end, "ge?"),
		{ "string" }, binary_pred(function (x1, x2) return x1 &gt;= x2 end))),
	['get-arg'] = wrap(nary_op(typed_op(
		{ "number" }, make_op(getarg_fn, "get-arg", true),
		{ "string" }, getarg_fn), 1)),
	['get-arg-expr'] = wrap(nary_op(typed_op(
		{ "number" }, make_op(getargexpr_fn, "get-arg-expr", true),
		{ "string" }, getargexpr_fn), 1)),
	['get-args'] = nary_op(make_op(function ()
			local ls = { type = "list" }
			for v, k in pairs( relevantFrame.args ) do
				ls[1 + #ls] = v
			end
			return ls
		end, "get-args"), 0),
	['get-coords'] = wrap(nary_op(typed_op({ cd_tc },make_op(function (ls)
			ls = ls[1]
			if stype(ls[1]) == "string" then ls = ls[2] end
			return { type="list", ls[1], ls[2] }
		end, "get-coords", true)), 1)),
	["get-items"] = wrap(nary_op(typed_op({ part_tc }, make_op(function (ls)
			ls = ls[1]
			local ls2 = { type="list" }
			for k = 3, #ls do ls2[k - 2] = ls[k] end
			return ls2
		end, "get-items", true)), 1)),
	["get-parts"] = wrap(nary_op(typed_op({ item_tc }, make_op(function (ls)
			ls = ls[1]
			local ls2 = { type="list" }
			for k = 3, #ls do ls2[k - 2] = ls[k] end
			return ls2
		end, "get-parts", true)), 1)),
	["get-sublist"] = wrap(nary_op(typed_op(
		{ "list", int_tc },
		make_op(getsublist_fn, "get-sublist", true)), 2, 3)),
	["get-substring"] = wrap(typed_op(
		{ "string", int_tc },
		nary_op(make_op(getsubstr_int_fn, "get-substring", true), 2, 3),
		{ "string", cd_tc },
		nary_op(make_op(getsubstr_cd_fn, "get-substring", true), 2),
		{ "string", cd_ls_tc },
		nary_op(make_op(getsubstr_ls_fn, "get-substring", true), 2))),
	["gt?"] = wrap(typed_op(
		{ "number" }, binary_pred(function (x1, x2) return x1 &gt; x2 end, "gt?"),
		{ "string" }, binary_pred(function (x1, x2) return x1 &gt; x2 end))),
	["if"] = nary_op(make_op(function (ls, env, depth)
			local test = eval(ls[1], env, depth)
			if stype(test) == "error" then return test end
			if stype(test) ~= "boolean" then
				return seterr(
					"bad test-result in [op: if]: %s",
					write_sexpr(test))
			elseif test then
				return eval(ls[2], env, depth)
			else
				return eval(ls[3], env, depth)
			end
		end, "if", true), 3),
	join = wrap(typed_op(
		{ neststr_tc, "string", join_tc },
		nary_op(make_op(join_fn, "join", true), 2, 3),
		{ neststr_tc, "string", "string", join_tc },
		nary_op(make_op(join_fn, "split", true), 3, 4))),
	lc = wrap(nary_op(typed_op(
		{ "string" }, make_op(function (ls)
			return lang:lc(ls[1])
		end, "lc", true),
		{ str_ls_tc }, function (ls)
			ls = ls[1]
			local r = { type = "list" }
			for k = 1, #ls do r[k] = lang:lc(ls[k]) end
			return r
		end), 1)),
	lcfirst = wrap(nary_op(typed_op(
		{ "string" }, make_op(function (ls)
			return lang:lcfirst(ls[1])
		end, "lcfirst", true),
		{ str_ls_tc }, function (ls)
			ls = ls[1]
			local r = { type = "list" }
			for k = 1, #ls do r[k] = lang:lcfirst(ls[k]) end
			return r
		end), 1)),
	["le?"] = wrap(typed_op(
		{ "number" }, binary_pred(function (x1, x2) return x1 &lt;= x2 end, "le?"),
		{ "string" }, binary_pred(function (x1, x2) return x1 &lt;= x2 end))),
	length = wrap(nary_op(typed_op(
		{ "list" }, make_op(function (ls)
			return #ls[1]
		end, "length", true),
		{ "string" }, function (ls)
			return mw.ustring.len( ls[1] )
		end), 1)),
	let = nary_op(typed_op({ let_tc, any_tc }, make_op(function (ls, env, depth)
			local p = ls[1][1]
			local v = eval( ls[1][2], env, depth )
			if stype(v) == "error" then return v end
			local body = { type = "list" }
			for k = 2, #ls do body[k - 1] = ls[k] end
			local e = {}
			e[p.name] = v
			setmetatable(e, { __index = env})
			return eval_seq(body, e, depth)
		end, "let", true)), -1),
	["link?"] = wrap(unary_pred(function (x)
			return (stype(x) == "list") and (#x &gt; 0) and
				(stype(x[1]) == "string") and (x[1] == "link")
		end, "link?")),
	["list?"] = wrap(unary_pred(function (x)
			return stype(x) == "list"
		end, "list?")),
	["lt?"] = wrap(typed_op(
		{ "number" }, binary_pred(function (x1, x2) return x1 &lt; x2 end, "lt?"),
		{ "string" }, binary_pred(function (x1, x2) return x1 &lt; x2 end))),
	map = wrap(nary_op(typed_op({ "fn", "list" }, make_op(
		function (ls, env, depth)
			local n = #ls[2]
			for k = 3, #ls do if #ls[k] &lt; n then n = #ls[k] end end
			local x = { type = "list" }
			for j = 1, n do
				local x2 = { type = "list" }
				for k = 2, #ls do x2[k - 1] = ls[k][j] end
				x[j] = combine( ls[1].comb, x2, env, depth )
				if stype(x[j]) == "error" then return x[j] end
			end
			return x
		end, "map", true)), -2)),
	["member?"] = wrap(nary_op(typed_op(
		{ any_tc, "list" }, make_op(member_fn, "member?", true)), 1, 2)),
	merge = wrap(nary_op(typed_op({ "fn", "list" }, make_op(
		function (ls, env, depth)
			local ks = {}
			for k = 2, #ls do ks[k] = 1 end
			local result = { type = "list" }
			while true do
				local j = nil
				for k = 2, #ls do
					if ks[k] &lt;= #ls[k] then
						if j == nil then j = k else
							local x = combine( ls[1].comb,
								{ ls[k][ks[k]], ls[j][ks[j]] }, env, depth )
							if stype(x) == "error" then return x end
							if x then j = k end
						end
					end
				end
				if j == nil then return result else
					result[#result + 1] = ls[j][ks[j]]
					ks[j] = ks[j] + 1
				end
			end
		end, "merge", true)), -2)),
	["not?"] = wrap(nary_op(typed_op({ "boolean" }, make_op(function (ls)
			return not ls[1]
		end, "not?", true)), 1)),
	nth = wrap(nary_op(typed_op({ "list", posint_tc }, make_op(function (ls)
			local x = ls[1]
			for k = 2, #ls do
				local n = ls[k]
				if #x &lt; n then
					return seterr(
						"bad index to [op: nth]: asked for %i, list length is %i",
						n, #x)
				end
				x = x[n]
				if (k &lt; #ls) and (stype(x) ~= "list") then
					return seterr("bad multi-index to [op: nth]: tree too shallow")
				end
			end
			return x
		end, "nth", true)), -2)),
	["number?"] = wrap(unary_pred(function (x)
			return stype(x) == "number"
		end, "number?")),
	["op?"] = wrap(unary_pred(function (x)
			return stype(x) == "op"
		end, "op?")),
	["or?"] = make_op(or_fn, "or?", true),
	["param?"] = wrap(unary_pred(function (x)
			return (stype(x) == "list") and (#x &gt; 0) and
				(stype(x[1]) == "string") and (x[1] == "param")
		end, "param?")),
	parse = wrap(nary_op(typed_op({ "string" }, make_op(parse_wiki,
		"parse", true)), 1)),
	pattern = wrap(nary_op(typed_op({ "string" }, make_op(function (ls)
			local p = ls[1]
			if #p == 0 then p = "[^%z%Z]" end -- disable null pattern
			return { type="pattern", pat=p }
		end, "pattern", true)), 1)),
	sequence = make_op(function (ls, env, depth)
			return eval_seq(ls, env, depth)
		end, "sequence", true),
	["set-sublist"] = wrap(nary_op(typed_op(
		{ "list", int_tc, int_tc, "list" },
		make_op(setsublist_fn, "set-sublist", true)), 4)),
	["set-substring"] = wrap(typed_op(
		{ "string", int_tc, int_tc, "string" },
		nary_op(make_op(function (ls)
				return setsubstr_ls(ls[1], { { ls[2], ls[3] } }, { ls[4] })
			end, "set-substring", true), 4),
		{ "string", cd_tc, "string" },
		nary_op(make_op(function (ls)
				return setsubstr_ls(ls[1], { cd_norm(ls[2]) }, { ls[3] })
			end, "set-substring", true), 3),
		{ "string", cd_ls_tc, str_ls_tc },
		nary_op(make_op(function (ls)
				local lsc = {}
				for k = 1, #ls[2] do lsc[k] = cd_norm(ls[2][k]) end
				return setsubstr_ls(ls[1], lsc, ls[3])
			end, "set-substring", true), 3)
		)),
	split = wrap(typed_op(
		{ strnest_tc, sorp_tc, split_tc },
		nary_op(make_op(split_fn, "split", true), 2, 3),
		{ strnest_tc, sorp_tc, sorp_tc, split_tc },
		nary_op(make_op(split_fn, "split", true), 3, 4))),
	["string?"] = wrap(unary_pred(function (x)
			return stype(x) == "string"
		end, "string?")),
	["symbol?"] = wrap(unary_pred(function (x)
			return stype(x) == "symbol"
		end, "symbol?")),
	["to-entity"] = wrap(nary_op(typed_op(
		{ "string" }, make_op(function (ls)
			local s = ls[1]
			if #s == 0 then return s end
			return "&amp;#" .. mw.ustring.codepoint(s, 1) .. ";"
		end, "to-entity", true),
		{ str_ls_tc }, function (ls)
			ls = ls[1]
			local r = { type = "list" }
			for k = 1, #ls do
				local s = ls[k]
				if #s == 0 then r[k] = s
				else r[k] = "&amp;#" .. mw.ustring.codepoint(s, 1) .. ";"
				end
			end
			return r
		end), 1)),
	["to-number"] = wrap(nary_op(typed_op(
		{ "string" }, make_op(function (ls)
			local n = tonumber(ls[1])
			if n == nil then return { type="list" } else return n end
		end, "to-number", true)), 1)),
	["to-string"] = wrap(nary_op(typed_op(
		{ "number" }, make_op(function (ls)
			return write_sexpr(ls[1])
		end, "to-string", true)),1)),
	transformer = wrap(typed_op(
		{ none_tc },
		make_op(function (ls, env, depth)
				return xformer_fn(    0,     0,     0,     0)
			end, "transformer", true),
		{ "fn", none_tc },
		make_op(function (ls, env, depth)
				return xformer_fn(ls[1],     0,     0,     0)
			end, "transformer", true),
		{ posint_tc, none_tc },
		make_op(function (ls, env, depth)
				return xformer_fn(    0,     0,     0, ls[1])
			end, "transformer", true),
		{ any_tc, "fn", none_tc },
		nary_op(make_op(function (ls, env, depth)
				return xformer_fn(    0, ls[1], ls[2],     0)
			end, "transformer", true), -2),
		{ "fn", posint_tc, none_tc },
		make_op(function (ls, env, depth)
				return xformer_fn(ls[1],     0,     0, ls[2])
			end, "transformer", true),
		{ "fn", any_tc, "fn", none_tc },
		nary_op(make_op(function (ls, env, depth)
				return xformer_fn(ls[1], ls[2], ls[3],     0)
			end, "transformer", true), -3),
		{ any_tc, "fn", posint_tc, none_tc },
		make_op(function (ls, env, depth)
				return xformer_fn(    0, ls[1], ls[2], ls[3])
			end, "transformer", true),
		{ "fn", any_tc, "fn", posint_tc, none_tc },
		make_op(function (ls, env, depth)
				return xformer_fn(ls[1], ls[2], ls[3], ls[4])
			end, "transformer", true)
		)),
	trim = wrap(nary_op(typed_op(
		{ "string" }, make_op(function (ls)
			return mw.text.trim(ls[1])
		end, "trim", true),
		{ str_ls_tc }, function (ls)
			ls = ls[1]
			local r = { type = "list" }
			for k = 1, #ls do r[k] = mw.text.trim(ls[k]) end
			return r
		end), 1)),
	uc = wrap(nary_op(typed_op(
		{ "string" }, make_op(function (ls)
			return lang:uc(ls[1])
		end, "uc", true),
		{ str_ls_tc }, function (ls)
			ls = ls[1]
			local r = { type = "list" }
			for k = 1, #ls do r[k] = lang:uc(ls[k]) end
			return r
		end), 1)),
	ucfirst = wrap(nary_op(typed_op(
		{ "string" }, make_op(function (ls)
			return lang:ucfirst(ls[1])
		end, "ucfirst", true),
		{ str_ls_tc }, function (ls)
			ls = ls[1]
			local r = { type = "list" }
			for k = 1, #ls do r[k] = lang:ucfirst(ls[k]) end
			return r
		end), 1)),
	urlencode = wrap(nary_op(typed_op(
		{ "string" }, make_op(function (ls)
			if #ls == 1 then ls[2] = 'QUERY' end
			return mw.uri.encode( ls[1], ls[2] )
		end, "urlencode", true)), 1, 2)),
	["wikilisp-version"] = wrap(nary_op(make_op(function (ls)
			return wikilispversion
		end, "wikilisp-version", true), 0)),
	write = wrap(nary_op(make_op(function (ls)
			return write_sexpr(ls[1])
		end, "write", true), 1))
}

local function make_standard_env()
	local standard_env = {}
	setmetatable(standard_env, { __index = ground_env})
	return standard_env
end

--[[ read-eval-print]]

function export.rep( frame )
	local t = frame.args[1]
	if t == nil then t = "" end
	return display_sexpr(
		eval_seq(
			text_to_sexpr(t),
			make_standard_env(),
			maxdepth))
end

function export.trep( frame )
	relevantFrame = frame:getParent()
	return export.rep(frame)
end

return export</text>
      <sha1>pj4vm8qb5jh0xuqywm926aeq903pofc</sha1>
    </revision>
  </page>
</mediawiki>
